!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A16	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	54;"	d
A16	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	70;"	d
A16	src/atomic_ops/ia32/sys/asm_linkage.h	54;"	d
A16	src/atomic_ops/ia32/sys/asm_linkage.h	70;"	d
A16	src/atomic_ops/intel/ia32/sys/asm_linkage.h	54;"	d
A16	src/atomic_ops/intel/ia32/sys/asm_linkage.h	70;"	d
ABORT_ME	src/sm/log_core.cpp	/^} const WAITING = {{0,1,0}}, ABORT_ME = {{0,1,1}};$/;"	v	file:
ABS	src/fc/nbox.cpp	59;"	d	file:
ABS	src/sm/rtree.cpp	81;"	d	file:
ACLOCAL	Makefile	/^ACLOCAL = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing aclocal-1.14$/;"	m
ACLOCAL	config/Makefile	/^ACLOCAL = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing aclocal-1.14$/;"	m
ACLOCAL	src/Makefile	/^ACLOCAL = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing aclocal-1.14$/;"	m
ACLOCAL	src/atomic_ops/Makefile	/^ACLOCAL = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing aclocal-1.14$/;"	m
ACLOCAL	src/atomic_ops/asm_linkage/Makefile	/^ACLOCAL = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing aclocal-1.14$/;"	m
ACLOCAL	src/atomic_ops/asm_linkage/usr/Makefile	/^ACLOCAL = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing aclocal-1.14$/;"	m
ACLOCAL	src/atomic_ops/asm_linkage/usr/src/Makefile	/^ACLOCAL = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing aclocal-1.14$/;"	m
ACLOCAL	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^ACLOCAL = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing aclocal-1.14$/;"	m
ACLOCAL	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^ACLOCAL = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing aclocal-1.14$/;"	m
ACLOCAL	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^ACLOCAL = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing aclocal-1.14$/;"	m
ACLOCAL	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^ACLOCAL = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing aclocal-1.14$/;"	m
ACLOCAL	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^ACLOCAL = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing aclocal-1.14$/;"	m
ACLOCAL	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^ACLOCAL = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing aclocal-1.14$/;"	m
ACLOCAL	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^ACLOCAL = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing aclocal-1.14$/;"	m
ACLOCAL	src/atomic_ops/atomic_ops/Makefile	/^ACLOCAL = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing aclocal-1.14$/;"	m
ACLOCAL	src/atomic_ops/atomic_ops/amd64/Makefile	/^ACLOCAL = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing aclocal-1.14$/;"	m
ACLOCAL	src/atomic_ops/atomic_ops/i386/Makefile	/^ACLOCAL = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing aclocal-1.14$/;"	m
ACLOCAL	src/atomic_ops/atomic_ops/sparc/Makefile	/^ACLOCAL = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing aclocal-1.14$/;"	m
ACLOCAL	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^ACLOCAL = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing aclocal-1.14$/;"	m
ACLOCAL	src/atomic_ops/ia32/Makefile	/^ACLOCAL = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing aclocal-1.14$/;"	m
ACLOCAL	src/atomic_ops/ia32/sys/Makefile	/^ACLOCAL = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing aclocal-1.14$/;"	m
ACLOCAL	src/atomic_ops/intel/Makefile	/^ACLOCAL = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing aclocal-1.14$/;"	m
ACLOCAL	src/atomic_ops/intel/ia32/Makefile	/^ACLOCAL = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing aclocal-1.14$/;"	m
ACLOCAL	src/atomic_ops/intel/ia32/sys/Makefile	/^ACLOCAL = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing aclocal-1.14$/;"	m
ACLOCAL	src/atomic_ops/intel/sys/Makefile	/^ACLOCAL = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing aclocal-1.14$/;"	m
ACLOCAL	src/atomic_ops/sparc/Makefile	/^ACLOCAL = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing aclocal-1.14$/;"	m
ACLOCAL	src/atomic_ops/sparc/sys/Makefile	/^ACLOCAL = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing aclocal-1.14$/;"	m
ACLOCAL	src/common/Makefile	/^ACLOCAL = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing aclocal-1.14$/;"	m
ACLOCAL	src/common/tests/Makefile	/^ACLOCAL = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing aclocal-1.14$/;"	m
ACLOCAL	src/fc/Makefile	/^ACLOCAL = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing aclocal-1.14$/;"	m
ACLOCAL	src/fc/tests/Makefile	/^ACLOCAL = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing aclocal-1.14$/;"	m
ACLOCAL	src/sm/Makefile	/^ACLOCAL = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing aclocal-1.14$/;"	m
ACLOCAL	src/sm/smsh/Makefile	/^ACLOCAL = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing aclocal-1.14$/;"	m
ACLOCAL	src/sm/smsh/lib/Makefile	/^ACLOCAL = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing aclocal-1.14$/;"	m
ACLOCAL	src/sm/smsh/scripts/Makefile	/^ACLOCAL = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing aclocal-1.14$/;"	m
ACLOCAL	src/sm/tests/Makefile	/^ACLOCAL = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing aclocal-1.14$/;"	m
ACLOCAL	src/sthread/Makefile	/^ACLOCAL = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing aclocal-1.14$/;"	m
ACLOCAL	src/sthread/tests/Makefile	/^ACLOCAL = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing aclocal-1.14$/;"	m
ACLOCAL	tools/Makefile	/^ACLOCAL = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing aclocal-1.14$/;"	m
ACLOCAL_M4	Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	config/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/atomic_ops/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/atomic_ops/asm_linkage/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/atomic_ops/asm_linkage/usr/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/atomic_ops/asm_linkage/usr/src/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/atomic_ops/atomic_ops/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/atomic_ops/atomic_ops/amd64/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/atomic_ops/atomic_ops/i386/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/atomic_ops/atomic_ops/sparc/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/atomic_ops/ia32/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/atomic_ops/ia32/sys/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/atomic_ops/intel/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/atomic_ops/intel/ia32/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/atomic_ops/intel/ia32/sys/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/atomic_ops/intel/sys/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/atomic_ops/sparc/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/atomic_ops/sparc/sys/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/common/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/common/tests/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/fc/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/fc/tests/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/sm/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/sm/smsh/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/sm/smsh/lib/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/sm/smsh/scripts/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/sm/tests/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/sthread/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/sthread/tests/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	tools/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACQUIRE	src/sm/log.h	60;"	d
ACQUIRE_BUCKET_MUTEX	src/sm/lock_core.h	192;"	d
ADD_BFSTAT	src/sm/bf_htab.h	154;"	d
ADD_LOG_COMMENT_SIG	src/sm/xct.h	73;"	d
ADD_LOG_COMMENT_SIG	src/sm/xct.h	80;"	d
ADD_LOG_COMMENT_USE	src/sm/xct.h	81;"	d
ADD_LOaG_COMMENT_USE	src/sm/xct.h	74;"	d
ADD_TSTAT	src/sm/smthread.h	535;"	d
ADD_TSTAT_SORT	src/sm/newsort.cpp	173;"	d	file:
ADD_TSTAT_SORT	src/sm/newsort.cpp	180;"	d	file:
ADD_TSTAT_SORT	src/sm/sort.cpp	102;"	d	file:
ADD_TSTAT_SORT	src/sm/sort.cpp	95;"	d	file:
AHEAD	src/common/regcomp.cpp	139;"	d	file:
ALIGNON	src/fc/w_defines.h	185;"	d
ALIGN_MASK_F4	src/sm/lexify.cpp	157;"	d	file:
ALIGN_MASK_F8	src/sm/lexify.cpp	156;"	d	file:
ALIGN_MASK_F8	src/sm/newsort.cpp	116;"	d	file:
ALIGN_MASK_IU2	src/sm/lexify.cpp	161;"	d	file:
ALIGN_MASK_IU4	src/sm/lexify.cpp	160;"	d	file:
ALIGN_MASK_IU8	src/sm/lexify.cpp	159;"	d	file:
ALIGN_MASK_IU8	src/sm/newsort.cpp	117;"	d	file:
ALLCLEANFILES	Makefile	/^ALLCLEANFILES = $(DISTCLEANFILES) \\$/;"	m
ALLCLEANFILES	config/Makefile	/^ALLCLEANFILES = $(DISTCLEANFILES) \\$/;"	m
ALLCLEANFILES	src/Makefile	/^ALLCLEANFILES = $(DISTCLEANFILES) \\$/;"	m
ALLCLEANFILES	src/atomic_ops/Makefile	/^ALLCLEANFILES = $(DISTCLEANFILES) \\$/;"	m
ALLCLEANFILES	src/atomic_ops/asm_linkage/Makefile	/^ALLCLEANFILES = $(DISTCLEANFILES) \\$/;"	m
ALLCLEANFILES	src/atomic_ops/asm_linkage/usr/Makefile	/^ALLCLEANFILES = $(DISTCLEANFILES) \\$/;"	m
ALLCLEANFILES	src/atomic_ops/asm_linkage/usr/src/Makefile	/^ALLCLEANFILES = $(DISTCLEANFILES) \\$/;"	m
ALLCLEANFILES	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^ALLCLEANFILES = $(DISTCLEANFILES) \\$/;"	m
ALLCLEANFILES	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^ALLCLEANFILES = $(DISTCLEANFILES) \\$/;"	m
ALLCLEANFILES	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^ALLCLEANFILES = $(DISTCLEANFILES) \\$/;"	m
ALLCLEANFILES	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^ALLCLEANFILES = $(DISTCLEANFILES) \\$/;"	m
ALLCLEANFILES	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^ALLCLEANFILES = $(DISTCLEANFILES) \\$/;"	m
ALLCLEANFILES	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^ALLCLEANFILES = $(DISTCLEANFILES) \\$/;"	m
ALLCLEANFILES	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^ALLCLEANFILES = $(DISTCLEANFILES) \\$/;"	m
ALLCLEANFILES	src/atomic_ops/atomic_ops/Makefile	/^ALLCLEANFILES = $(DISTCLEANFILES) \\$/;"	m
ALLCLEANFILES	src/atomic_ops/atomic_ops/amd64/Makefile	/^ALLCLEANFILES = $(DISTCLEANFILES) \\$/;"	m
ALLCLEANFILES	src/atomic_ops/atomic_ops/i386/Makefile	/^ALLCLEANFILES = $(DISTCLEANFILES) \\$/;"	m
ALLCLEANFILES	src/atomic_ops/atomic_ops/sparc/Makefile	/^ALLCLEANFILES = $(DISTCLEANFILES) \\$/;"	m
ALLCLEANFILES	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^ALLCLEANFILES = $(DISTCLEANFILES) \\$/;"	m
ALLCLEANFILES	src/atomic_ops/ia32/Makefile	/^ALLCLEANFILES = $(DISTCLEANFILES) \\$/;"	m
ALLCLEANFILES	src/atomic_ops/ia32/sys/Makefile	/^ALLCLEANFILES = $(DISTCLEANFILES) \\$/;"	m
ALLCLEANFILES	src/atomic_ops/intel/Makefile	/^ALLCLEANFILES = $(DISTCLEANFILES) \\$/;"	m
ALLCLEANFILES	src/atomic_ops/intel/ia32/Makefile	/^ALLCLEANFILES = $(DISTCLEANFILES) \\$/;"	m
ALLCLEANFILES	src/atomic_ops/intel/ia32/sys/Makefile	/^ALLCLEANFILES = $(DISTCLEANFILES) \\$/;"	m
ALLCLEANFILES	src/atomic_ops/intel/sys/Makefile	/^ALLCLEANFILES = $(DISTCLEANFILES) \\$/;"	m
ALLCLEANFILES	src/atomic_ops/sparc/Makefile	/^ALLCLEANFILES = $(DISTCLEANFILES) \\$/;"	m
ALLCLEANFILES	src/atomic_ops/sparc/sys/Makefile	/^ALLCLEANFILES = $(DISTCLEANFILES) \\$/;"	m
ALLCLEANFILES	src/common/Makefile	/^ALLCLEANFILES = $(DISTCLEANFILES) \\$/;"	m
ALLCLEANFILES	src/common/tests/Makefile	/^ALLCLEANFILES = $(DISTCLEANFILES) \\$/;"	m
ALLCLEANFILES	src/fc/Makefile	/^ALLCLEANFILES = $(DISTCLEANFILES) \\$/;"	m
ALLCLEANFILES	src/fc/tests/Makefile	/^ALLCLEANFILES = $(DISTCLEANFILES) \\$/;"	m
ALLCLEANFILES	src/sm/Makefile	/^ALLCLEANFILES = $(DISTCLEANFILES) \\$/;"	m
ALLCLEANFILES	src/sm/smsh/Makefile	/^ALLCLEANFILES = $(DISTCLEANFILES) \\$/;"	m
ALLCLEANFILES	src/sm/smsh/lib/Makefile	/^ALLCLEANFILES = $(DISTCLEANFILES) \\$/;"	m
ALLCLEANFILES	src/sm/smsh/scripts/Makefile	/^ALLCLEANFILES = $(DISTCLEANFILES) \\$/;"	m
ALLCLEANFILES	src/sm/tests/Makefile	/^ALLCLEANFILES = $(DISTCLEANFILES) \\$/;"	m
ALLCLEANFILES	src/sthread/Makefile	/^ALLCLEANFILES = $(DISTCLEANFILES) \\$/;"	m
ALLCLEANFILES	src/sthread/tests/Makefile	/^ALLCLEANFILES = $(DISTCLEANFILES) \\$/;"	m
ALLCLEANFILES	tools/Makefile	/^ALLCLEANFILES = $(DISTCLEANFILES) \\$/;"	m
ALLOCA	src/fc/cpu_info.cpp	112;"	d	file:
ALTENTRY	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	251;"	d
ALTENTRY	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/asm_linkage.h	205;"	d
ALTENTRY	src/atomic_ops/ia32/sys/asm_linkage.h	251;"	d
ALTENTRY	src/atomic_ops/intel/ia32/sys/asm_linkage.h	251;"	d
ALTENTRY	src/atomic_ops/sparc/sys/asm_linkage.h	205;"	d
ALWAYS_FLAGS	Makefile	/^ALWAYS_FLAGS = -DNO_FASTNEW $(am__append_1) $(am__append_2) \\$/;"	m
ALWAYS_FLAGS	config/Makefile	/^ALWAYS_FLAGS = -DNO_FASTNEW $(am__append_1) $(am__append_2) \\$/;"	m
ALWAYS_FLAGS	src/Makefile	/^ALWAYS_FLAGS = -DNO_FASTNEW $(am__append_1) $(am__append_2) \\$/;"	m
ALWAYS_FLAGS	src/atomic_ops/Makefile	/^ALWAYS_FLAGS = -DNO_FASTNEW $(am__append_1) $(am__append_2) \\$/;"	m
ALWAYS_FLAGS	src/atomic_ops/asm_linkage/Makefile	/^ALWAYS_FLAGS = -DNO_FASTNEW $(am__append_1) $(am__append_2) \\$/;"	m
ALWAYS_FLAGS	src/atomic_ops/asm_linkage/usr/Makefile	/^ALWAYS_FLAGS = -DNO_FASTNEW $(am__append_1) $(am__append_2) \\$/;"	m
ALWAYS_FLAGS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^ALWAYS_FLAGS = -DNO_FASTNEW $(am__append_1) $(am__append_2) \\$/;"	m
ALWAYS_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^ALWAYS_FLAGS = -DNO_FASTNEW $(am__append_1) $(am__append_2) \\$/;"	m
ALWAYS_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^ALWAYS_FLAGS = -DNO_FASTNEW $(am__append_1) $(am__append_2) \\$/;"	m
ALWAYS_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^ALWAYS_FLAGS = -DNO_FASTNEW $(am__append_1) $(am__append_2) \\$/;"	m
ALWAYS_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^ALWAYS_FLAGS = -DNO_FASTNEW $(am__append_1) $(am__append_2) \\$/;"	m
ALWAYS_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^ALWAYS_FLAGS = -DNO_FASTNEW $(am__append_1) $(am__append_2) \\$/;"	m
ALWAYS_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^ALWAYS_FLAGS = -DNO_FASTNEW $(am__append_1) $(am__append_2) \\$/;"	m
ALWAYS_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^ALWAYS_FLAGS = -DNO_FASTNEW $(am__append_1) $(am__append_2) \\$/;"	m
ALWAYS_FLAGS	src/atomic_ops/atomic_ops/Makefile	/^ALWAYS_FLAGS = -DNO_FASTNEW $(am__append_1) $(am__append_2) \\$/;"	m
ALWAYS_FLAGS	src/atomic_ops/atomic_ops/amd64/Makefile	/^ALWAYS_FLAGS = -DNO_FASTNEW $(am__append_1) $(am__append_2) \\$/;"	m
ALWAYS_FLAGS	src/atomic_ops/atomic_ops/i386/Makefile	/^ALWAYS_FLAGS = -DNO_FASTNEW $(am__append_1) $(am__append_2) \\$/;"	m
ALWAYS_FLAGS	src/atomic_ops/atomic_ops/sparc/Makefile	/^ALWAYS_FLAGS = -DNO_FASTNEW $(am__append_1) $(am__append_2) \\$/;"	m
ALWAYS_FLAGS	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^ALWAYS_FLAGS = -DNO_FASTNEW $(am__append_1) $(am__append_2) \\$/;"	m
ALWAYS_FLAGS	src/atomic_ops/ia32/Makefile	/^ALWAYS_FLAGS = -DNO_FASTNEW $(am__append_1) $(am__append_2) \\$/;"	m
ALWAYS_FLAGS	src/atomic_ops/ia32/sys/Makefile	/^ALWAYS_FLAGS = -DNO_FASTNEW $(am__append_1) $(am__append_2) \\$/;"	m
ALWAYS_FLAGS	src/atomic_ops/intel/Makefile	/^ALWAYS_FLAGS = -DNO_FASTNEW $(am__append_1) $(am__append_2) \\$/;"	m
ALWAYS_FLAGS	src/atomic_ops/intel/ia32/Makefile	/^ALWAYS_FLAGS = -DNO_FASTNEW $(am__append_1) $(am__append_2) \\$/;"	m
ALWAYS_FLAGS	src/atomic_ops/intel/ia32/sys/Makefile	/^ALWAYS_FLAGS = -DNO_FASTNEW $(am__append_1) $(am__append_2) \\$/;"	m
ALWAYS_FLAGS	src/atomic_ops/intel/sys/Makefile	/^ALWAYS_FLAGS = -DNO_FASTNEW $(am__append_1) $(am__append_2) \\$/;"	m
ALWAYS_FLAGS	src/atomic_ops/sparc/Makefile	/^ALWAYS_FLAGS = -DNO_FASTNEW $(am__append_1) $(am__append_2) \\$/;"	m
ALWAYS_FLAGS	src/atomic_ops/sparc/sys/Makefile	/^ALWAYS_FLAGS = -DNO_FASTNEW $(am__append_1) $(am__append_2) \\$/;"	m
ALWAYS_FLAGS	src/common/Makefile	/^ALWAYS_FLAGS = -DNO_FASTNEW $(am__append_1) $(am__append_2) \\$/;"	m
ALWAYS_FLAGS	src/common/tests/Makefile	/^ALWAYS_FLAGS = -DNO_FASTNEW $(am__append_1) $(am__append_2) \\$/;"	m
ALWAYS_FLAGS	src/fc/Makefile	/^ALWAYS_FLAGS = -DNO_FASTNEW $(am__append_1) $(am__append_2) \\$/;"	m
ALWAYS_FLAGS	src/fc/tests/Makefile	/^ALWAYS_FLAGS = -DNO_FASTNEW $(am__append_1) $(am__append_2) \\$/;"	m
ALWAYS_FLAGS	src/sm/Makefile	/^ALWAYS_FLAGS = -DNO_FASTNEW $(am__append_1) $(am__append_2) \\$/;"	m
ALWAYS_FLAGS	src/sm/smsh/Makefile	/^ALWAYS_FLAGS = -DNO_FASTNEW $(am__append_1) $(am__append_2) \\$/;"	m
ALWAYS_FLAGS	src/sm/smsh/lib/Makefile	/^ALWAYS_FLAGS = -DNO_FASTNEW $(am__append_1) $(am__append_2) \\$/;"	m
ALWAYS_FLAGS	src/sm/smsh/scripts/Makefile	/^ALWAYS_FLAGS = -DNO_FASTNEW $(am__append_1) $(am__append_2) \\$/;"	m
ALWAYS_FLAGS	src/sm/tests/Makefile	/^ALWAYS_FLAGS = -DNO_FASTNEW $(am__append_1) $(am__append_2) \\$/;"	m
ALWAYS_FLAGS	src/sthread/Makefile	/^ALWAYS_FLAGS = -DNO_FASTNEW $(am__append_1) $(am__append_2) \\$/;"	m
ALWAYS_FLAGS	src/sthread/tests/Makefile	/^ALWAYS_FLAGS = -DNO_FASTNEW $(am__append_1) $(am__append_2) \\$/;"	m
ALWAYS_FLAGS	tools/Makefile	/^ALWAYS_FLAGS = -DNO_FASTNEW $(am__append_1) $(am__append_2) \\$/;"	m
AMTAR	Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	config/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/atomic_ops/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/atomic_ops/asm_linkage/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/atomic_ops/asm_linkage/usr/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/atomic_ops/asm_linkage/usr/src/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/atomic_ops/atomic_ops/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/atomic_ops/atomic_ops/amd64/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/atomic_ops/atomic_ops/i386/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/atomic_ops/atomic_ops/sparc/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/atomic_ops/ia32/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/atomic_ops/ia32/sys/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/atomic_ops/intel/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/atomic_ops/intel/ia32/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/atomic_ops/intel/ia32/sys/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/atomic_ops/intel/sys/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/atomic_ops/sparc/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/atomic_ops/sparc/sys/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/common/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/common/tests/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/fc/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/fc/tests/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/sm/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/sm/smsh/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/sm/smsh/lib/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/sm/smsh/scripts/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/sm/tests/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/sthread/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/sthread/tests/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	tools/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AM_CCASFLAGS	Makefile	/^AM_CCASFLAGS = -I$(top_srcdir)\/config -I$(top_srcdir)\/src\/atomic_ops \\$/;"	m
AM_CCASFLAGS	config/Makefile	/^AM_CCASFLAGS = -I$(top_srcdir)\/config -I$(top_srcdir)\/src\/atomic_ops \\$/;"	m
AM_CCASFLAGS	src/Makefile	/^AM_CCASFLAGS = -I$(top_srcdir)\/config -I$(top_srcdir)\/src\/atomic_ops \\$/;"	m
AM_CCASFLAGS	src/atomic_ops/Makefile	/^AM_CCASFLAGS = -I$(top_srcdir)\/config -I$(top_srcdir)\/src\/atomic_ops \\$/;"	m
AM_CCASFLAGS	src/atomic_ops/asm_linkage/Makefile	/^AM_CCASFLAGS = -I$(top_srcdir)\/config -I$(top_srcdir)\/src\/atomic_ops \\$/;"	m
AM_CCASFLAGS	src/atomic_ops/asm_linkage/usr/Makefile	/^AM_CCASFLAGS = -I$(top_srcdir)\/config -I$(top_srcdir)\/src\/atomic_ops \\$/;"	m
AM_CCASFLAGS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^AM_CCASFLAGS = -I$(top_srcdir)\/config -I$(top_srcdir)\/src\/atomic_ops \\$/;"	m
AM_CCASFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^AM_CCASFLAGS = -I$(top_srcdir)\/config -I$(top_srcdir)\/src\/atomic_ops \\$/;"	m
AM_CCASFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^AM_CCASFLAGS = -I$(top_srcdir)\/config -I$(top_srcdir)\/src\/atomic_ops \\$/;"	m
AM_CCASFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^AM_CCASFLAGS = -I$(top_srcdir)\/config -I$(top_srcdir)\/src\/atomic_ops \\$/;"	m
AM_CCASFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^AM_CCASFLAGS = -I$(top_srcdir)\/config -I$(top_srcdir)\/src\/atomic_ops \\$/;"	m
AM_CCASFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^AM_CCASFLAGS = -I$(top_srcdir)\/config -I$(top_srcdir)\/src\/atomic_ops \\$/;"	m
AM_CCASFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^AM_CCASFLAGS = -I$(top_srcdir)\/config -I$(top_srcdir)\/src\/atomic_ops \\$/;"	m
AM_CCASFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^AM_CCASFLAGS = -I$(top_srcdir)\/config -I$(top_srcdir)\/src\/atomic_ops \\$/;"	m
AM_CCASFLAGS	src/atomic_ops/atomic_ops/Makefile	/^AM_CCASFLAGS = -I$(top_srcdir)\/config -I$(top_srcdir)\/src\/atomic_ops \\$/;"	m
AM_CCASFLAGS	src/atomic_ops/atomic_ops/amd64/Makefile	/^AM_CCASFLAGS = -I$(top_srcdir)\/config -I$(top_srcdir)\/src\/atomic_ops \\$/;"	m
AM_CCASFLAGS	src/atomic_ops/atomic_ops/i386/Makefile	/^AM_CCASFLAGS = -I$(top_srcdir)\/config -I$(top_srcdir)\/src\/atomic_ops \\$/;"	m
AM_CCASFLAGS	src/atomic_ops/atomic_ops/sparc/Makefile	/^AM_CCASFLAGS = -I$(top_srcdir)\/config -I$(top_srcdir)\/src\/atomic_ops \\$/;"	m
AM_CCASFLAGS	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^AM_CCASFLAGS = -I$(top_srcdir)\/config -I$(top_srcdir)\/src\/atomic_ops \\$/;"	m
AM_CCASFLAGS	src/atomic_ops/ia32/Makefile	/^AM_CCASFLAGS = -I$(top_srcdir)\/config -I$(top_srcdir)\/src\/atomic_ops \\$/;"	m
AM_CCASFLAGS	src/atomic_ops/ia32/sys/Makefile	/^AM_CCASFLAGS = -I$(top_srcdir)\/config -I$(top_srcdir)\/src\/atomic_ops \\$/;"	m
AM_CCASFLAGS	src/atomic_ops/intel/Makefile	/^AM_CCASFLAGS = -I$(top_srcdir)\/config -I$(top_srcdir)\/src\/atomic_ops \\$/;"	m
AM_CCASFLAGS	src/atomic_ops/intel/ia32/Makefile	/^AM_CCASFLAGS = -I$(top_srcdir)\/config -I$(top_srcdir)\/src\/atomic_ops \\$/;"	m
AM_CCASFLAGS	src/atomic_ops/intel/ia32/sys/Makefile	/^AM_CCASFLAGS = -I$(top_srcdir)\/config -I$(top_srcdir)\/src\/atomic_ops \\$/;"	m
AM_CCASFLAGS	src/atomic_ops/intel/sys/Makefile	/^AM_CCASFLAGS = -I$(top_srcdir)\/config -I$(top_srcdir)\/src\/atomic_ops \\$/;"	m
AM_CCASFLAGS	src/atomic_ops/sparc/Makefile	/^AM_CCASFLAGS = -I$(top_srcdir)\/config -I$(top_srcdir)\/src\/atomic_ops \\$/;"	m
AM_CCASFLAGS	src/atomic_ops/sparc/sys/Makefile	/^AM_CCASFLAGS = -I$(top_srcdir)\/config -I$(top_srcdir)\/src\/atomic_ops \\$/;"	m
AM_CCASFLAGS	src/common/Makefile	/^AM_CCASFLAGS = -I$(top_srcdir)\/config -I$(top_srcdir)\/src\/atomic_ops \\$/;"	m
AM_CCASFLAGS	src/common/tests/Makefile	/^AM_CCASFLAGS = -I$(top_srcdir)\/config -I$(top_srcdir)\/src\/atomic_ops \\$/;"	m
AM_CCASFLAGS	src/fc/Makefile	/^AM_CCASFLAGS = -I$(top_srcdir)\/config -I$(top_srcdir)\/src\/atomic_ops \\$/;"	m
AM_CCASFLAGS	src/fc/tests/Makefile	/^AM_CCASFLAGS = -I$(top_srcdir)\/config -I$(top_srcdir)\/src\/atomic_ops \\$/;"	m
AM_CCASFLAGS	src/sm/Makefile	/^AM_CCASFLAGS = -I$(top_srcdir)\/config -I$(top_srcdir)\/src\/atomic_ops \\$/;"	m
AM_CCASFLAGS	src/sm/smsh/Makefile	/^AM_CCASFLAGS = -I$(top_srcdir)\/config -I$(top_srcdir)\/src\/atomic_ops \\$/;"	m
AM_CCASFLAGS	src/sm/smsh/lib/Makefile	/^AM_CCASFLAGS = -I$(top_srcdir)\/config -I$(top_srcdir)\/src\/atomic_ops \\$/;"	m
AM_CCASFLAGS	src/sm/smsh/scripts/Makefile	/^AM_CCASFLAGS = -I$(top_srcdir)\/config -I$(top_srcdir)\/src\/atomic_ops \\$/;"	m
AM_CCASFLAGS	src/sm/tests/Makefile	/^AM_CCASFLAGS = -I$(top_srcdir)\/config -I$(top_srcdir)\/src\/atomic_ops \\$/;"	m
AM_CCASFLAGS	src/sthread/Makefile	/^AM_CCASFLAGS = -I$(top_srcdir)\/config -I$(top_srcdir)\/src\/atomic_ops \\$/;"	m
AM_CCASFLAGS	src/sthread/tests/Makefile	/^AM_CCASFLAGS = -I$(top_srcdir)\/config -I$(top_srcdir)\/src\/atomic_ops \\$/;"	m
AM_CCASFLAGS	tools/Makefile	/^AM_CCASFLAGS = -I$(top_srcdir)\/config -I$(top_srcdir)\/src\/atomic_ops \\$/;"	m
AM_CFLAGS	Makefile	/^AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)$/;"	m
AM_CFLAGS	config/Makefile	/^AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)$/;"	m
AM_CFLAGS	src/Makefile	/^AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)$/;"	m
AM_CFLAGS	src/atomic_ops/Makefile	/^AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)$/;"	m
AM_CFLAGS	src/atomic_ops/asm_linkage/Makefile	/^AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)$/;"	m
AM_CFLAGS	src/atomic_ops/asm_linkage/usr/Makefile	/^AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)$/;"	m
AM_CFLAGS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)$/;"	m
AM_CFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)$/;"	m
AM_CFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)$/;"	m
AM_CFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)$/;"	m
AM_CFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)$/;"	m
AM_CFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)$/;"	m
AM_CFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)$/;"	m
AM_CFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)$/;"	m
AM_CFLAGS	src/atomic_ops/atomic_ops/Makefile	/^AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)$/;"	m
AM_CFLAGS	src/atomic_ops/atomic_ops/amd64/Makefile	/^AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)$/;"	m
AM_CFLAGS	src/atomic_ops/atomic_ops/i386/Makefile	/^AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)$/;"	m
AM_CFLAGS	src/atomic_ops/atomic_ops/sparc/Makefile	/^AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)$/;"	m
AM_CFLAGS	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)$/;"	m
AM_CFLAGS	src/atomic_ops/ia32/Makefile	/^AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)$/;"	m
AM_CFLAGS	src/atomic_ops/ia32/sys/Makefile	/^AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)$/;"	m
AM_CFLAGS	src/atomic_ops/intel/Makefile	/^AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)$/;"	m
AM_CFLAGS	src/atomic_ops/intel/ia32/Makefile	/^AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)$/;"	m
AM_CFLAGS	src/atomic_ops/intel/ia32/sys/Makefile	/^AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)$/;"	m
AM_CFLAGS	src/atomic_ops/intel/sys/Makefile	/^AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)$/;"	m
AM_CFLAGS	src/atomic_ops/sparc/Makefile	/^AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)$/;"	m
AM_CFLAGS	src/atomic_ops/sparc/sys/Makefile	/^AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)$/;"	m
AM_CFLAGS	src/common/Makefile	/^AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)$/;"	m
AM_CFLAGS	src/common/tests/Makefile	/^AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)$/;"	m
AM_CFLAGS	src/fc/Makefile	/^AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)$/;"	m
AM_CFLAGS	src/fc/tests/Makefile	/^AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)$/;"	m
AM_CFLAGS	src/sm/Makefile	/^AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)$/;"	m
AM_CFLAGS	src/sm/smsh/Makefile	/^AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)$/;"	m
AM_CFLAGS	src/sm/smsh/lib/Makefile	/^AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)$/;"	m
AM_CFLAGS	src/sm/smsh/scripts/Makefile	/^AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)$/;"	m
AM_CFLAGS	src/sm/tests/Makefile	/^AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)$/;"	m
AM_CFLAGS	src/sthread/Makefile	/^AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)$/;"	m
AM_CFLAGS	src/sthread/tests/Makefile	/^AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)$/;"	m
AM_CFLAGS	tools/Makefile	/^AM_CFLAGS = $(PEDANTIC) $(ALWAYS_FLAGS) $(DEBUG_FLAGS) $(OPTFLAGS)$/;"	m
AM_CXXFLAGS	Makefile	/^AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \\$/;"	m
AM_CXXFLAGS	config/Makefile	/^AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \\$/;"	m
AM_CXXFLAGS	src/Makefile	/^AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \\$/;"	m
AM_CXXFLAGS	src/atomic_ops/Makefile	/^AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \\$/;"	m
AM_CXXFLAGS	src/atomic_ops/asm_linkage/Makefile	/^AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \\$/;"	m
AM_CXXFLAGS	src/atomic_ops/asm_linkage/usr/Makefile	/^AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \\$/;"	m
AM_CXXFLAGS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \\$/;"	m
AM_CXXFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \\$/;"	m
AM_CXXFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \\$/;"	m
AM_CXXFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \\$/;"	m
AM_CXXFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \\$/;"	m
AM_CXXFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \\$/;"	m
AM_CXXFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \\$/;"	m
AM_CXXFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \\$/;"	m
AM_CXXFLAGS	src/atomic_ops/atomic_ops/Makefile	/^AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \\$/;"	m
AM_CXXFLAGS	src/atomic_ops/atomic_ops/amd64/Makefile	/^AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \\$/;"	m
AM_CXXFLAGS	src/atomic_ops/atomic_ops/i386/Makefile	/^AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \\$/;"	m
AM_CXXFLAGS	src/atomic_ops/atomic_ops/sparc/Makefile	/^AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \\$/;"	m
AM_CXXFLAGS	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \\$/;"	m
AM_CXXFLAGS	src/atomic_ops/ia32/Makefile	/^AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \\$/;"	m
AM_CXXFLAGS	src/atomic_ops/ia32/sys/Makefile	/^AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \\$/;"	m
AM_CXXFLAGS	src/atomic_ops/intel/Makefile	/^AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \\$/;"	m
AM_CXXFLAGS	src/atomic_ops/intel/ia32/Makefile	/^AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \\$/;"	m
AM_CXXFLAGS	src/atomic_ops/intel/ia32/sys/Makefile	/^AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \\$/;"	m
AM_CXXFLAGS	src/atomic_ops/intel/sys/Makefile	/^AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \\$/;"	m
AM_CXXFLAGS	src/atomic_ops/sparc/Makefile	/^AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \\$/;"	m
AM_CXXFLAGS	src/atomic_ops/sparc/sys/Makefile	/^AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \\$/;"	m
AM_CXXFLAGS	src/common/Makefile	/^AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \\$/;"	m
AM_CXXFLAGS	src/common/tests/Makefile	/^AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \\$/;"	m
AM_CXXFLAGS	src/fc/Makefile	/^AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \\$/;"	m
AM_CXXFLAGS	src/fc/tests/Makefile	/^AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \\$/;"	m
AM_CXXFLAGS	src/sm/Makefile	/^AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \\$/;"	m
AM_CXXFLAGS	src/sm/smsh/Makefile	/^AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \\$/;"	m
AM_CXXFLAGS	src/sm/smsh/lib/Makefile	/^AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \\$/;"	m
AM_CXXFLAGS	src/sm/smsh/scripts/Makefile	/^AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \\$/;"	m
AM_CXXFLAGS	src/sm/tests/Makefile	/^AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \\$/;"	m
AM_CXXFLAGS	src/sthread/Makefile	/^AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \\$/;"	m
AM_CXXFLAGS	src/sthread/tests/Makefile	/^AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \\$/;"	m
AM_CXXFLAGS	tools/Makefile	/^AM_CXXFLAGS = $(PEDANTIC) $(TUNE_FLAGS) $(DEBUGFLAGS) $(W_WARNINGS) \\$/;"	m
AM_DEFAULT_VERBOSITY	Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	config/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	src/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	src/atomic_ops/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	src/atomic_ops/asm_linkage/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	src/atomic_ops/asm_linkage/usr/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	src/atomic_ops/asm_linkage/usr/src/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	src/atomic_ops/atomic_ops/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	src/atomic_ops/atomic_ops/amd64/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	src/atomic_ops/atomic_ops/i386/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	src/atomic_ops/atomic_ops/sparc/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	src/atomic_ops/ia32/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	src/atomic_ops/ia32/sys/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	src/atomic_ops/intel/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	src/atomic_ops/intel/ia32/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	src/atomic_ops/intel/ia32/sys/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	src/atomic_ops/intel/sys/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	src/atomic_ops/sparc/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	src/atomic_ops/sparc/sys/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	src/common/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	src/common/tests/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	src/fc/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	src/fc/tests/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	src/sm/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	src/sm/smsh/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	src/sm/smsh/lib/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	src/sm/smsh/scripts/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	src/sm/tests/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	src/sthread/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	src/sthread/tests/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	tools/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_LDFLAGS	Makefile	/^AM_LDFLAGS = -m64$/;"	m
AM_LDFLAGS	config/Makefile	/^AM_LDFLAGS = -m64$/;"	m
AM_LDFLAGS	src/Makefile	/^AM_LDFLAGS = -m64$/;"	m
AM_LDFLAGS	src/atomic_ops/Makefile	/^AM_LDFLAGS = -m64$/;"	m
AM_LDFLAGS	src/atomic_ops/asm_linkage/Makefile	/^AM_LDFLAGS = -m64$/;"	m
AM_LDFLAGS	src/atomic_ops/asm_linkage/usr/Makefile	/^AM_LDFLAGS = -m64$/;"	m
AM_LDFLAGS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^AM_LDFLAGS = -m64$/;"	m
AM_LDFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^AM_LDFLAGS = -m64$/;"	m
AM_LDFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^AM_LDFLAGS = -m64$/;"	m
AM_LDFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^AM_LDFLAGS = -m64$/;"	m
AM_LDFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^AM_LDFLAGS = -m64$/;"	m
AM_LDFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^AM_LDFLAGS = -m64$/;"	m
AM_LDFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^AM_LDFLAGS = -m64$/;"	m
AM_LDFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^AM_LDFLAGS = -m64$/;"	m
AM_LDFLAGS	src/atomic_ops/atomic_ops/Makefile	/^AM_LDFLAGS = -m64$/;"	m
AM_LDFLAGS	src/atomic_ops/atomic_ops/amd64/Makefile	/^AM_LDFLAGS = -m64$/;"	m
AM_LDFLAGS	src/atomic_ops/atomic_ops/i386/Makefile	/^AM_LDFLAGS = -m64$/;"	m
AM_LDFLAGS	src/atomic_ops/atomic_ops/sparc/Makefile	/^AM_LDFLAGS = -m64$/;"	m
AM_LDFLAGS	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^AM_LDFLAGS = -m64$/;"	m
AM_LDFLAGS	src/atomic_ops/ia32/Makefile	/^AM_LDFLAGS = -m64$/;"	m
AM_LDFLAGS	src/atomic_ops/ia32/sys/Makefile	/^AM_LDFLAGS = -m64$/;"	m
AM_LDFLAGS	src/atomic_ops/intel/Makefile	/^AM_LDFLAGS = -m64$/;"	m
AM_LDFLAGS	src/atomic_ops/intel/ia32/Makefile	/^AM_LDFLAGS = -m64$/;"	m
AM_LDFLAGS	src/atomic_ops/intel/ia32/sys/Makefile	/^AM_LDFLAGS = -m64$/;"	m
AM_LDFLAGS	src/atomic_ops/intel/sys/Makefile	/^AM_LDFLAGS = -m64$/;"	m
AM_LDFLAGS	src/atomic_ops/sparc/Makefile	/^AM_LDFLAGS = -m64$/;"	m
AM_LDFLAGS	src/atomic_ops/sparc/sys/Makefile	/^AM_LDFLAGS = -m64$/;"	m
AM_LDFLAGS	src/common/Makefile	/^AM_LDFLAGS = -m64$/;"	m
AM_LDFLAGS	src/common/tests/Makefile	/^AM_LDFLAGS = -m64$/;"	m
AM_LDFLAGS	src/fc/Makefile	/^AM_LDFLAGS = -m64$/;"	m
AM_LDFLAGS	src/fc/tests/Makefile	/^AM_LDFLAGS = -m64$/;"	m
AM_LDFLAGS	src/sm/Makefile	/^AM_LDFLAGS = -m64$/;"	m
AM_LDFLAGS	src/sm/smsh/Makefile	/^AM_LDFLAGS = -m64$/;"	m
AM_LDFLAGS	src/sm/smsh/lib/Makefile	/^AM_LDFLAGS = -m64$/;"	m
AM_LDFLAGS	src/sm/smsh/scripts/Makefile	/^AM_LDFLAGS = -m64$/;"	m
AM_LDFLAGS	src/sm/tests/Makefile	/^AM_LDFLAGS = -m64$/;"	m
AM_LDFLAGS	src/sthread/Makefile	/^AM_LDFLAGS = -m64$/;"	m
AM_LDFLAGS	src/sthread/tests/Makefile	/^AM_LDFLAGS = -m64$/;"	m
AM_LDFLAGS	tools/Makefile	/^AM_LDFLAGS = -m64$/;"	m
AM_RECURSIVE_TARGETS	Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_RECURSIVE_TARGETS	src/Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_RECURSIVE_TARGETS	src/atomic_ops/Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_RECURSIVE_TARGETS	src/atomic_ops/asm_linkage/Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_RECURSIVE_TARGETS	src/atomic_ops/asm_linkage/usr/Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_RECURSIVE_TARGETS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_RECURSIVE_TARGETS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_RECURSIVE_TARGETS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_RECURSIVE_TARGETS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_RECURSIVE_TARGETS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_RECURSIVE_TARGETS	src/atomic_ops/atomic_ops/Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_RECURSIVE_TARGETS	src/atomic_ops/ia32/Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_RECURSIVE_TARGETS	src/atomic_ops/intel/Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_RECURSIVE_TARGETS	src/atomic_ops/intel/ia32/Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_RECURSIVE_TARGETS	src/atomic_ops/sparc/Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_RECURSIVE_TARGETS	src/common/Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_RECURSIVE_TARGETS	src/common/tests/Makefile	/^AM_RECURSIVE_TARGETS = check recheck$/;"	m
AM_RECURSIVE_TARGETS	src/fc/Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_RECURSIVE_TARGETS	src/fc/tests/Makefile	/^AM_RECURSIVE_TARGETS = check recheck$/;"	m
AM_RECURSIVE_TARGETS	src/sm/Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_RECURSIVE_TARGETS	src/sm/smsh/Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_RECURSIVE_TARGETS	src/sm/smsh/lib/Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_RECURSIVE_TARGETS	src/sm/smsh/scripts/Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_RECURSIVE_TARGETS	src/sm/tests/Makefile	/^AM_RECURSIVE_TARGETS = check recheck$/;"	m
AM_RECURSIVE_TARGETS	src/sthread/Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_RECURSIVE_TARGETS	src/sthread/tests/Makefile	/^AM_RECURSIVE_TARGETS = check recheck$/;"	m
AM_V_AR	src/atomic_ops/Makefile	/^AM_V_AR = $(am__v_AR_$(V))$/;"	m
AM_V_AR	src/common/Makefile	/^AM_V_AR = $(am__v_AR_$(V))$/;"	m
AM_V_AR	src/fc/Makefile	/^AM_V_AR = $(am__v_AR_$(V))$/;"	m
AM_V_AR	src/sm/Makefile	/^AM_V_AR = $(am__v_AR_$(V))$/;"	m
AM_V_AR	src/sthread/Makefile	/^AM_V_AR = $(am__v_AR_$(V))$/;"	m
AM_V_CC	src/atomic_ops/Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CCLD	src/atomic_ops/Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CPPAS	src/atomic_ops/Makefile	/^AM_V_CPPAS = $(am__v_CPPAS_$(V))$/;"	m
AM_V_CXX	src/atomic_ops/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXX	src/common/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXX	src/common/tests/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXX	src/fc/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXX	src/fc/tests/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXX	src/sm/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXX	src/sm/smsh/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXX	src/sm/tests/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXX	src/sthread/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXX	src/sthread/tests/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXXLD	src/atomic_ops/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_CXXLD	src/common/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_CXXLD	src/common/tests/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_CXXLD	src/fc/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_CXXLD	src/fc/tests/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_CXXLD	src/sm/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_CXXLD	src/sm/smsh/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_CXXLD	src/sm/tests/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_CXXLD	src/sthread/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_CXXLD	src/sthread/tests/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_GEN	Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	config/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/atomic_ops/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/atomic_ops/asm_linkage/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/atomic_ops/asm_linkage/usr/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/atomic_ops/asm_linkage/usr/src/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/atomic_ops/atomic_ops/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/atomic_ops/atomic_ops/amd64/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/atomic_ops/atomic_ops/i386/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/atomic_ops/atomic_ops/sparc/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/atomic_ops/ia32/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/atomic_ops/ia32/sys/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/atomic_ops/intel/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/atomic_ops/intel/ia32/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/atomic_ops/intel/ia32/sys/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/atomic_ops/intel/sys/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/atomic_ops/sparc/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/atomic_ops/sparc/sys/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/common/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/common/tests/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/fc/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/fc/tests/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/sm/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/sm/smsh/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/sm/smsh/lib/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/sm/smsh/scripts/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/sm/tests/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/sthread/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/sthread/tests/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	tools/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_P	Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	config/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/atomic_ops/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/atomic_ops/asm_linkage/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/atomic_ops/asm_linkage/usr/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/atomic_ops/asm_linkage/usr/src/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/atomic_ops/atomic_ops/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/atomic_ops/atomic_ops/amd64/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/atomic_ops/atomic_ops/i386/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/atomic_ops/atomic_ops/sparc/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/atomic_ops/ia32/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/atomic_ops/ia32/sys/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/atomic_ops/intel/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/atomic_ops/intel/ia32/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/atomic_ops/intel/ia32/sys/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/atomic_ops/intel/sys/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/atomic_ops/sparc/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/atomic_ops/sparc/sys/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/common/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/common/tests/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/fc/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/fc/tests/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/sm/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/sm/smsh/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/sm/smsh/lib/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/sm/smsh/scripts/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/sm/tests/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/sthread/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/sthread/tests/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	tools/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_at	Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	config/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/atomic_ops/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/atomic_ops/asm_linkage/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/atomic_ops/asm_linkage/usr/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/atomic_ops/asm_linkage/usr/src/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/atomic_ops/atomic_ops/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/atomic_ops/atomic_ops/amd64/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/atomic_ops/atomic_ops/i386/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/atomic_ops/atomic_ops/sparc/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/atomic_ops/ia32/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/atomic_ops/ia32/sys/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/atomic_ops/intel/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/atomic_ops/intel/ia32/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/atomic_ops/intel/ia32/sys/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/atomic_ops/intel/sys/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/atomic_ops/sparc/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/atomic_ops/sparc/sys/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/common/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/common/tests/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/fc/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/fc/tests/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/sm/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/sm/smsh/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/sm/smsh/lib/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/sm/smsh/scripts/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/sm/tests/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/sthread/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/sthread/tests/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	tools/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
ANSI_PRAGMA_WEAK	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	181;"	d
ANSI_PRAGMA_WEAK	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/asm_linkage.h	133;"	d
ANSI_PRAGMA_WEAK	src/atomic_ops/ia32/sys/asm_linkage.h	181;"	d
ANSI_PRAGMA_WEAK	src/atomic_ops/intel/ia32/sys/asm_linkage.h	181;"	d
ANSI_PRAGMA_WEAK	src/atomic_ops/sparc/sys/asm_linkage.h	133;"	d
ANSI_PRAGMA_WEAK2	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	193;"	d
ANSI_PRAGMA_WEAK2	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/asm_linkage.h	145;"	d
ANSI_PRAGMA_WEAK2	src/atomic_ops/ia32/sys/asm_linkage.h	193;"	d
ANSI_PRAGMA_WEAK2	src/atomic_ops/intel/ia32/sys/asm_linkage.h	193;"	d
ANSI_PRAGMA_WEAK2	src/atomic_ops/sparc/sys/asm_linkage.h	145;"	d
APP_SUPPORT_H	src/sm/app_support.h	31;"	d
AR	Makefile	/^AR = ar$/;"	m
AR	config/Makefile	/^AR = ar$/;"	m
AR	src/Makefile	/^AR = ar$/;"	m
AR	src/atomic_ops/Makefile	/^AR = ar$/;"	m
AR	src/atomic_ops/asm_linkage/Makefile	/^AR = ar$/;"	m
AR	src/atomic_ops/asm_linkage/usr/Makefile	/^AR = ar$/;"	m
AR	src/atomic_ops/asm_linkage/usr/src/Makefile	/^AR = ar$/;"	m
AR	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^AR = ar$/;"	m
AR	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^AR = ar$/;"	m
AR	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^AR = ar$/;"	m
AR	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^AR = ar$/;"	m
AR	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^AR = ar$/;"	m
AR	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^AR = ar$/;"	m
AR	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^AR = ar$/;"	m
AR	src/atomic_ops/atomic_ops/Makefile	/^AR = ar$/;"	m
AR	src/atomic_ops/atomic_ops/amd64/Makefile	/^AR = ar$/;"	m
AR	src/atomic_ops/atomic_ops/i386/Makefile	/^AR = ar$/;"	m
AR	src/atomic_ops/atomic_ops/sparc/Makefile	/^AR = ar$/;"	m
AR	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^AR = ar$/;"	m
AR	src/atomic_ops/ia32/Makefile	/^AR = ar$/;"	m
AR	src/atomic_ops/ia32/sys/Makefile	/^AR = ar$/;"	m
AR	src/atomic_ops/intel/Makefile	/^AR = ar$/;"	m
AR	src/atomic_ops/intel/ia32/Makefile	/^AR = ar$/;"	m
AR	src/atomic_ops/intel/ia32/sys/Makefile	/^AR = ar$/;"	m
AR	src/atomic_ops/intel/sys/Makefile	/^AR = ar$/;"	m
AR	src/atomic_ops/sparc/Makefile	/^AR = ar$/;"	m
AR	src/atomic_ops/sparc/sys/Makefile	/^AR = ar$/;"	m
AR	src/common/Makefile	/^AR = ar$/;"	m
AR	src/common/tests/Makefile	/^AR = ar$/;"	m
AR	src/fc/Makefile	/^AR = ar$/;"	m
AR	src/fc/tests/Makefile	/^AR = ar$/;"	m
AR	src/sm/Makefile	/^AR = ar$/;"	m
AR	src/sm/smsh/Makefile	/^AR = ar$/;"	m
AR	src/sm/smsh/lib/Makefile	/^AR = ar$/;"	m
AR	src/sm/smsh/scripts/Makefile	/^AR = ar$/;"	m
AR	src/sm/tests/Makefile	/^AR = ar$/;"	m
AR	src/sthread/Makefile	/^AR = ar$/;"	m
AR	src/sthread/tests/Makefile	/^AR = ar$/;"	m
AR	tools/Makefile	/^AR = ar$/;"	m
ARCH_LP64	src/fc/w_defines.h	138;"	d
ARFLAGS	src/atomic_ops/Makefile	/^ARFLAGS = cru$/;"	m
ARFLAGS	src/common/Makefile	/^ARFLAGS = cru$/;"	m
ARFLAGS	src/fc/Makefile	/^ARFLAGS = cru$/;"	m
ARFLAGS	src/sm/Makefile	/^ARFLAGS = cru$/;"	m
ARFLAGS	src/sthread/Makefile	/^ARFLAGS = cru$/;"	m
ARGPUSH	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h	117;"	d
ARGPUSH	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h	128;"	d
ARGPUSH	src/atomic_ops/sparc/sys/stack.h	117;"	d
ARGPUSH	src/atomic_ops/sparc/sys/stack.h	128;"	d
ARGPUSH32	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h	66;"	d
ARGPUSH32	src/atomic_ops/sparc/sys/stack.h	66;"	d
ARGPUSH64	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h	105;"	d
ARGPUSH64	src/atomic_ops/sparc/sys/stack.h	105;"	d
ARGPUSHSIZE	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h	116;"	d
ARGPUSHSIZE	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h	127;"	d
ARGPUSHSIZE	src/atomic_ops/sparc/sys/stack.h	116;"	d
ARGPUSHSIZE	src/atomic_ops/sparc/sys/stack.h	127;"	d
ARGPUSHSIZE32	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h	65;"	d
ARGPUSHSIZE32	src/atomic_ops/sparc/sys/stack.h	65;"	d
ARGPUSHSIZE64	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h	103;"	d
ARGPUSHSIZE64	src/atomic_ops/sparc/sys/stack.h	103;"	d
ARRAY_SIZE	src/fc/tls.h	/^       ARRAY_SIZE = MAX_BYTES_NEEDED\/sizeof(long) };$/;"	e	enum:tls_tricks::tls_blob::__anon108
ASM_ENTRY_ALIGN	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	107;"	d
ASM_ENTRY_ALIGN	src/atomic_ops/ia32/sys/asm_linkage.h	107;"	d
ASM_ENTRY_ALIGN	src/atomic_ops/intel/ia32/sys/asm_linkage.h	107;"	d
ASSERT_FITS_IN_LONGLONG	src/fc/w_base.h	596;"	d
ASSERT_FITS_IN_LONGLONG	src/fc/w_base.h	607;"	d
ASSERT_FITS_IN_POINTER	src/fc/w_base.h	600;"	d
ASSERT_FITS_IN_POINTER	src/fc/w_base.h	606;"	d
ASSERT_STACK_ALIGNED	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/stack.h	133;"	d
ASSERT_STACK_ALIGNED	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/stack.h	139;"	d
ASSERT_STACK_ALIGNED	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/stack.h	146;"	d
ASSERT_STACK_ALIGNED	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h	142;"	d
ASSERT_STACK_ALIGNED	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h	148;"	d
ASSERT_STACK_ALIGNED	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h	155;"	d
ASSERT_STACK_ALIGNED	src/atomic_ops/ia32/sys/stack.h	133;"	d
ASSERT_STACK_ALIGNED	src/atomic_ops/ia32/sys/stack.h	139;"	d
ASSERT_STACK_ALIGNED	src/atomic_ops/ia32/sys/stack.h	146;"	d
ASSERT_STACK_ALIGNED	src/atomic_ops/intel/ia32/sys/stack.h	133;"	d
ASSERT_STACK_ALIGNED	src/atomic_ops/intel/ia32/sys/stack.h	139;"	d
ASSERT_STACK_ALIGNED	src/atomic_ops/intel/ia32/sys/stack.h	146;"	d
ASSERT_STACK_ALIGNED	src/atomic_ops/sparc/sys/stack.h	142;"	d
ASSERT_STACK_ALIGNED	src/atomic_ops/sparc/sys/stack.h	148;"	d
ASSERT_STACK_ALIGNED	src/atomic_ops/sparc/sys/stack.h	155;"	d
ASSIGN	src/common/regexec.cpp	107;"	d	file:
ASSIGN	src/common/regexec.cpp	128;"	d	file:
ASSIGN	src/common/regexec.cpp	81;"	d	file:
ASTERN	src/common/regcomp.cpp	140;"	d	file:
AT	src/common/regex_engine.cpp	103;"	d	file:
AT	src/common/regex_engine.cpp	107;"	d	file:
ATOMIC_BACKOFF_BACKOFF	src/atomic_ops/atomic_ops/sparcv9/atomic.s	/^#define ATOMIC_BACKOFF_BACKOFF(val, limit, ncpu, cas_cnt, label, retlabel) \\$/;"	d
ATOMIC_BACKOFF_BACKOFF	src/atomic_ops/atomic_ops/sparcv9/atomic.s	/^#define ATOMIC_BACKOFF_BACKOFF(val, limit, ncpu, cas_cnt, label, retlabel)$/;"	d
ATOMIC_BACKOFF_BRANCH	src/atomic_ops/atomic_ops/sparcv9/atomic.s	/^#define ATOMIC_BACKOFF_BRANCH(cr, backoff, loop) \\$/;"	d
ATOMIC_BACKOFF_CPU	src/atomic_ops/atomic_ops/sparcv9/atomic.s	/^#define ATOMIC_BACKOFF_CPU(val, limit, ncpu, cas_cnt, label)		\\$/;"	d
ATOMIC_BACKOFF_CPU	src/atomic_ops/atomic_ops/sparcv9/atomic.s	/^#define ATOMIC_BACKOFF_CPU(val, limit, ncpu, cas_cnt, label)  \\$/;"	d
ATOMIC_BACKOFF_INIT	src/atomic_ops/atomic_ops/sparcv9/atomic.s	/^#define ATOMIC_BACKOFF_INIT(val, ncpu, cas_cnt)	\\$/;"	d
ATOMIC_BACKOFF_INIT	src/atomic_ops/atomic_ops/sparcv9/atomic.s	/^#define ATOMIC_BACKOFF_INIT(val, ncpu, cas_cnt)$/;"	d
ATOMIC_TEMPLATES_H	src/fc/atomic_templates.h	69;"	d
ATTEMPT	src/fc/cpu_info.cpp	149;"	d	file:
ATTEMPT	src/fc/tls.cpp	34;"	d	file:
AUTOCONF	Makefile	/^AUTOCONF = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoconf$/;"	m
AUTOCONF	config/Makefile	/^AUTOCONF = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoconf$/;"	m
AUTOCONF	src/Makefile	/^AUTOCONF = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoconf$/;"	m
AUTOCONF	src/atomic_ops/Makefile	/^AUTOCONF = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoconf$/;"	m
AUTOCONF	src/atomic_ops/asm_linkage/Makefile	/^AUTOCONF = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoconf$/;"	m
AUTOCONF	src/atomic_ops/asm_linkage/usr/Makefile	/^AUTOCONF = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoconf$/;"	m
AUTOCONF	src/atomic_ops/asm_linkage/usr/src/Makefile	/^AUTOCONF = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoconf$/;"	m
AUTOCONF	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^AUTOCONF = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoconf$/;"	m
AUTOCONF	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^AUTOCONF = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoconf$/;"	m
AUTOCONF	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^AUTOCONF = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoconf$/;"	m
AUTOCONF	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^AUTOCONF = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoconf$/;"	m
AUTOCONF	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^AUTOCONF = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoconf$/;"	m
AUTOCONF	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^AUTOCONF = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoconf$/;"	m
AUTOCONF	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^AUTOCONF = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoconf$/;"	m
AUTOCONF	src/atomic_ops/atomic_ops/Makefile	/^AUTOCONF = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoconf$/;"	m
AUTOCONF	src/atomic_ops/atomic_ops/amd64/Makefile	/^AUTOCONF = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoconf$/;"	m
AUTOCONF	src/atomic_ops/atomic_ops/i386/Makefile	/^AUTOCONF = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoconf$/;"	m
AUTOCONF	src/atomic_ops/atomic_ops/sparc/Makefile	/^AUTOCONF = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoconf$/;"	m
AUTOCONF	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^AUTOCONF = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoconf$/;"	m
AUTOCONF	src/atomic_ops/ia32/Makefile	/^AUTOCONF = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoconf$/;"	m
AUTOCONF	src/atomic_ops/ia32/sys/Makefile	/^AUTOCONF = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoconf$/;"	m
AUTOCONF	src/atomic_ops/intel/Makefile	/^AUTOCONF = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoconf$/;"	m
AUTOCONF	src/atomic_ops/intel/ia32/Makefile	/^AUTOCONF = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoconf$/;"	m
AUTOCONF	src/atomic_ops/intel/ia32/sys/Makefile	/^AUTOCONF = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoconf$/;"	m
AUTOCONF	src/atomic_ops/intel/sys/Makefile	/^AUTOCONF = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoconf$/;"	m
AUTOCONF	src/atomic_ops/sparc/Makefile	/^AUTOCONF = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoconf$/;"	m
AUTOCONF	src/atomic_ops/sparc/sys/Makefile	/^AUTOCONF = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoconf$/;"	m
AUTOCONF	src/common/Makefile	/^AUTOCONF = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoconf$/;"	m
AUTOCONF	src/common/tests/Makefile	/^AUTOCONF = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoconf$/;"	m
AUTOCONF	src/fc/Makefile	/^AUTOCONF = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoconf$/;"	m
AUTOCONF	src/fc/tests/Makefile	/^AUTOCONF = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoconf$/;"	m
AUTOCONF	src/sm/Makefile	/^AUTOCONF = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoconf$/;"	m
AUTOCONF	src/sm/smsh/Makefile	/^AUTOCONF = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoconf$/;"	m
AUTOCONF	src/sm/smsh/lib/Makefile	/^AUTOCONF = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoconf$/;"	m
AUTOCONF	src/sm/smsh/scripts/Makefile	/^AUTOCONF = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoconf$/;"	m
AUTOCONF	src/sm/tests/Makefile	/^AUTOCONF = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoconf$/;"	m
AUTOCONF	src/sthread/Makefile	/^AUTOCONF = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoconf$/;"	m
AUTOCONF	src/sthread/tests/Makefile	/^AUTOCONF = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoconf$/;"	m
AUTOCONF	tools/Makefile	/^AUTOCONF = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoconf$/;"	m
AUTOHEADER	Makefile	/^AUTOHEADER = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoheader$/;"	m
AUTOHEADER	config/Makefile	/^AUTOHEADER = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoheader$/;"	m
AUTOHEADER	src/Makefile	/^AUTOHEADER = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoheader$/;"	m
AUTOHEADER	src/atomic_ops/Makefile	/^AUTOHEADER = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoheader$/;"	m
AUTOHEADER	src/atomic_ops/asm_linkage/Makefile	/^AUTOHEADER = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoheader$/;"	m
AUTOHEADER	src/atomic_ops/asm_linkage/usr/Makefile	/^AUTOHEADER = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoheader$/;"	m
AUTOHEADER	src/atomic_ops/asm_linkage/usr/src/Makefile	/^AUTOHEADER = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoheader$/;"	m
AUTOHEADER	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^AUTOHEADER = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoheader$/;"	m
AUTOHEADER	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^AUTOHEADER = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoheader$/;"	m
AUTOHEADER	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^AUTOHEADER = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoheader$/;"	m
AUTOHEADER	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^AUTOHEADER = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoheader$/;"	m
AUTOHEADER	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^AUTOHEADER = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoheader$/;"	m
AUTOHEADER	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^AUTOHEADER = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoheader$/;"	m
AUTOHEADER	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^AUTOHEADER = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoheader$/;"	m
AUTOHEADER	src/atomic_ops/atomic_ops/Makefile	/^AUTOHEADER = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoheader$/;"	m
AUTOHEADER	src/atomic_ops/atomic_ops/amd64/Makefile	/^AUTOHEADER = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoheader$/;"	m
AUTOHEADER	src/atomic_ops/atomic_ops/i386/Makefile	/^AUTOHEADER = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoheader$/;"	m
AUTOHEADER	src/atomic_ops/atomic_ops/sparc/Makefile	/^AUTOHEADER = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoheader$/;"	m
AUTOHEADER	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^AUTOHEADER = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoheader$/;"	m
AUTOHEADER	src/atomic_ops/ia32/Makefile	/^AUTOHEADER = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoheader$/;"	m
AUTOHEADER	src/atomic_ops/ia32/sys/Makefile	/^AUTOHEADER = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoheader$/;"	m
AUTOHEADER	src/atomic_ops/intel/Makefile	/^AUTOHEADER = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoheader$/;"	m
AUTOHEADER	src/atomic_ops/intel/ia32/Makefile	/^AUTOHEADER = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoheader$/;"	m
AUTOHEADER	src/atomic_ops/intel/ia32/sys/Makefile	/^AUTOHEADER = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoheader$/;"	m
AUTOHEADER	src/atomic_ops/intel/sys/Makefile	/^AUTOHEADER = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoheader$/;"	m
AUTOHEADER	src/atomic_ops/sparc/Makefile	/^AUTOHEADER = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoheader$/;"	m
AUTOHEADER	src/atomic_ops/sparc/sys/Makefile	/^AUTOHEADER = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoheader$/;"	m
AUTOHEADER	src/common/Makefile	/^AUTOHEADER = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoheader$/;"	m
AUTOHEADER	src/common/tests/Makefile	/^AUTOHEADER = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoheader$/;"	m
AUTOHEADER	src/fc/Makefile	/^AUTOHEADER = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoheader$/;"	m
AUTOHEADER	src/fc/tests/Makefile	/^AUTOHEADER = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoheader$/;"	m
AUTOHEADER	src/sm/Makefile	/^AUTOHEADER = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoheader$/;"	m
AUTOHEADER	src/sm/smsh/Makefile	/^AUTOHEADER = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoheader$/;"	m
AUTOHEADER	src/sm/smsh/lib/Makefile	/^AUTOHEADER = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoheader$/;"	m
AUTOHEADER	src/sm/smsh/scripts/Makefile	/^AUTOHEADER = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoheader$/;"	m
AUTOHEADER	src/sm/tests/Makefile	/^AUTOHEADER = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoheader$/;"	m
AUTOHEADER	src/sthread/Makefile	/^AUTOHEADER = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoheader$/;"	m
AUTOHEADER	src/sthread/tests/Makefile	/^AUTOHEADER = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoheader$/;"	m
AUTOHEADER	tools/Makefile	/^AUTOHEADER = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing autoheader$/;"	m
AUTOMAKE	Makefile	/^AUTOMAKE = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing automake-1.14$/;"	m
AUTOMAKE	config/Makefile	/^AUTOMAKE = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing automake-1.14$/;"	m
AUTOMAKE	src/Makefile	/^AUTOMAKE = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing automake-1.14$/;"	m
AUTOMAKE	src/atomic_ops/Makefile	/^AUTOMAKE = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing automake-1.14$/;"	m
AUTOMAKE	src/atomic_ops/asm_linkage/Makefile	/^AUTOMAKE = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing automake-1.14$/;"	m
AUTOMAKE	src/atomic_ops/asm_linkage/usr/Makefile	/^AUTOMAKE = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing automake-1.14$/;"	m
AUTOMAKE	src/atomic_ops/asm_linkage/usr/src/Makefile	/^AUTOMAKE = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing automake-1.14$/;"	m
AUTOMAKE	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^AUTOMAKE = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing automake-1.14$/;"	m
AUTOMAKE	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^AUTOMAKE = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing automake-1.14$/;"	m
AUTOMAKE	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^AUTOMAKE = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing automake-1.14$/;"	m
AUTOMAKE	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^AUTOMAKE = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing automake-1.14$/;"	m
AUTOMAKE	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^AUTOMAKE = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing automake-1.14$/;"	m
AUTOMAKE	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^AUTOMAKE = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing automake-1.14$/;"	m
AUTOMAKE	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^AUTOMAKE = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing automake-1.14$/;"	m
AUTOMAKE	src/atomic_ops/atomic_ops/Makefile	/^AUTOMAKE = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing automake-1.14$/;"	m
AUTOMAKE	src/atomic_ops/atomic_ops/amd64/Makefile	/^AUTOMAKE = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing automake-1.14$/;"	m
AUTOMAKE	src/atomic_ops/atomic_ops/i386/Makefile	/^AUTOMAKE = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing automake-1.14$/;"	m
AUTOMAKE	src/atomic_ops/atomic_ops/sparc/Makefile	/^AUTOMAKE = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing automake-1.14$/;"	m
AUTOMAKE	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^AUTOMAKE = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing automake-1.14$/;"	m
AUTOMAKE	src/atomic_ops/ia32/Makefile	/^AUTOMAKE = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing automake-1.14$/;"	m
AUTOMAKE	src/atomic_ops/ia32/sys/Makefile	/^AUTOMAKE = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing automake-1.14$/;"	m
AUTOMAKE	src/atomic_ops/intel/Makefile	/^AUTOMAKE = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing automake-1.14$/;"	m
AUTOMAKE	src/atomic_ops/intel/ia32/Makefile	/^AUTOMAKE = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing automake-1.14$/;"	m
AUTOMAKE	src/atomic_ops/intel/ia32/sys/Makefile	/^AUTOMAKE = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing automake-1.14$/;"	m
AUTOMAKE	src/atomic_ops/intel/sys/Makefile	/^AUTOMAKE = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing automake-1.14$/;"	m
AUTOMAKE	src/atomic_ops/sparc/Makefile	/^AUTOMAKE = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing automake-1.14$/;"	m
AUTOMAKE	src/atomic_ops/sparc/sys/Makefile	/^AUTOMAKE = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing automake-1.14$/;"	m
AUTOMAKE	src/common/Makefile	/^AUTOMAKE = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing automake-1.14$/;"	m
AUTOMAKE	src/common/tests/Makefile	/^AUTOMAKE = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing automake-1.14$/;"	m
AUTOMAKE	src/fc/Makefile	/^AUTOMAKE = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing automake-1.14$/;"	m
AUTOMAKE	src/fc/tests/Makefile	/^AUTOMAKE = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing automake-1.14$/;"	m
AUTOMAKE	src/sm/Makefile	/^AUTOMAKE = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing automake-1.14$/;"	m
AUTOMAKE	src/sm/smsh/Makefile	/^AUTOMAKE = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing automake-1.14$/;"	m
AUTOMAKE	src/sm/smsh/lib/Makefile	/^AUTOMAKE = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing automake-1.14$/;"	m
AUTOMAKE	src/sm/smsh/scripts/Makefile	/^AUTOMAKE = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing automake-1.14$/;"	m
AUTOMAKE	src/sm/tests/Makefile	/^AUTOMAKE = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing automake-1.14$/;"	m
AUTOMAKE	src/sthread/Makefile	/^AUTOMAKE = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing automake-1.14$/;"	m
AUTOMAKE	src/sthread/tests/Makefile	/^AUTOMAKE = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing automake-1.14$/;"	m
AUTOMAKE	tools/Makefile	/^AUTOMAKE = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing automake-1.14$/;"	m
AUTOMAKE_OPTIONS	Makefile	/^AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha$/;"	m
AUTOMAKE_OPTIONS	config/Makefile	/^AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha$/;"	m
AUTOMAKE_OPTIONS	src/Makefile	/^AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha$/;"	m
AUTOMAKE_OPTIONS	src/atomic_ops/Makefile	/^AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha$/;"	m
AUTOMAKE_OPTIONS	src/atomic_ops/asm_linkage/Makefile	/^AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha$/;"	m
AUTOMAKE_OPTIONS	src/atomic_ops/asm_linkage/usr/Makefile	/^AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha$/;"	m
AUTOMAKE_OPTIONS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha$/;"	m
AUTOMAKE_OPTIONS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha$/;"	m
AUTOMAKE_OPTIONS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha$/;"	m
AUTOMAKE_OPTIONS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha$/;"	m
AUTOMAKE_OPTIONS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha$/;"	m
AUTOMAKE_OPTIONS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha$/;"	m
AUTOMAKE_OPTIONS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha$/;"	m
AUTOMAKE_OPTIONS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha$/;"	m
AUTOMAKE_OPTIONS	src/atomic_ops/atomic_ops/Makefile	/^AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha$/;"	m
AUTOMAKE_OPTIONS	src/atomic_ops/atomic_ops/amd64/Makefile	/^AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha$/;"	m
AUTOMAKE_OPTIONS	src/atomic_ops/atomic_ops/i386/Makefile	/^AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha$/;"	m
AUTOMAKE_OPTIONS	src/atomic_ops/atomic_ops/sparc/Makefile	/^AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha$/;"	m
AUTOMAKE_OPTIONS	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha$/;"	m
AUTOMAKE_OPTIONS	src/atomic_ops/ia32/Makefile	/^AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha$/;"	m
AUTOMAKE_OPTIONS	src/atomic_ops/ia32/sys/Makefile	/^AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha$/;"	m
AUTOMAKE_OPTIONS	src/atomic_ops/intel/Makefile	/^AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha$/;"	m
AUTOMAKE_OPTIONS	src/atomic_ops/intel/ia32/Makefile	/^AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha$/;"	m
AUTOMAKE_OPTIONS	src/atomic_ops/intel/ia32/sys/Makefile	/^AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha$/;"	m
AUTOMAKE_OPTIONS	src/atomic_ops/intel/sys/Makefile	/^AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha$/;"	m
AUTOMAKE_OPTIONS	src/atomic_ops/sparc/Makefile	/^AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha$/;"	m
AUTOMAKE_OPTIONS	src/atomic_ops/sparc/sys/Makefile	/^AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha$/;"	m
AUTOMAKE_OPTIONS	src/common/Makefile	/^AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha$/;"	m
AUTOMAKE_OPTIONS	src/common/tests/Makefile	/^AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha$/;"	m
AUTOMAKE_OPTIONS	src/fc/Makefile	/^AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha$/;"	m
AUTOMAKE_OPTIONS	src/fc/tests/Makefile	/^AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha$/;"	m
AUTOMAKE_OPTIONS	src/sm/Makefile	/^AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha$/;"	m
AUTOMAKE_OPTIONS	src/sm/smsh/Makefile	/^AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha$/;"	m
AUTOMAKE_OPTIONS	src/sm/smsh/lib/Makefile	/^AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha$/;"	m
AUTOMAKE_OPTIONS	src/sm/smsh/scripts/Makefile	/^AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha$/;"	m
AUTOMAKE_OPTIONS	src/sm/tests/Makefile	/^AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha$/;"	m
AUTOMAKE_OPTIONS	src/sthread/Makefile	/^AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha$/;"	m
AUTOMAKE_OPTIONS	src/sthread/tests/Makefile	/^AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha$/;"	m
AUTOMAKE_OPTIONS	tools/Makefile	/^AUTOMAKE_OPTIONS = check-news dist-bzip2 readme-alpha$/;"	m
AUTO_RELEASE_H	src/sthread/auto_release.h	54;"	d
AVL	src/sm/bf_prefetch.cpp	117;"	d	file:
AVL	src/sm/bf_prefetch.cpp	84;"	d	file:
AWK	Makefile	/^AWK = gawk$/;"	m
AWK	config/Makefile	/^AWK = gawk$/;"	m
AWK	src/Makefile	/^AWK = gawk$/;"	m
AWK	src/atomic_ops/Makefile	/^AWK = gawk$/;"	m
AWK	src/atomic_ops/asm_linkage/Makefile	/^AWK = gawk$/;"	m
AWK	src/atomic_ops/asm_linkage/usr/Makefile	/^AWK = gawk$/;"	m
AWK	src/atomic_ops/asm_linkage/usr/src/Makefile	/^AWK = gawk$/;"	m
AWK	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^AWK = gawk$/;"	m
AWK	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^AWK = gawk$/;"	m
AWK	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^AWK = gawk$/;"	m
AWK	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^AWK = gawk$/;"	m
AWK	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^AWK = gawk$/;"	m
AWK	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^AWK = gawk$/;"	m
AWK	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^AWK = gawk$/;"	m
AWK	src/atomic_ops/atomic_ops/Makefile	/^AWK = gawk$/;"	m
AWK	src/atomic_ops/atomic_ops/amd64/Makefile	/^AWK = gawk$/;"	m
AWK	src/atomic_ops/atomic_ops/i386/Makefile	/^AWK = gawk$/;"	m
AWK	src/atomic_ops/atomic_ops/sparc/Makefile	/^AWK = gawk$/;"	m
AWK	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^AWK = gawk$/;"	m
AWK	src/atomic_ops/ia32/Makefile	/^AWK = gawk$/;"	m
AWK	src/atomic_ops/ia32/sys/Makefile	/^AWK = gawk$/;"	m
AWK	src/atomic_ops/intel/Makefile	/^AWK = gawk$/;"	m
AWK	src/atomic_ops/intel/ia32/Makefile	/^AWK = gawk$/;"	m
AWK	src/atomic_ops/intel/ia32/sys/Makefile	/^AWK = gawk$/;"	m
AWK	src/atomic_ops/intel/sys/Makefile	/^AWK = gawk$/;"	m
AWK	src/atomic_ops/sparc/Makefile	/^AWK = gawk$/;"	m
AWK	src/atomic_ops/sparc/sys/Makefile	/^AWK = gawk$/;"	m
AWK	src/common/Makefile	/^AWK = gawk$/;"	m
AWK	src/common/tests/Makefile	/^AWK = gawk$/;"	m
AWK	src/fc/Makefile	/^AWK = gawk$/;"	m
AWK	src/fc/tests/Makefile	/^AWK = gawk$/;"	m
AWK	src/sm/Makefile	/^AWK = gawk$/;"	m
AWK	src/sm/smsh/Makefile	/^AWK = gawk$/;"	m
AWK	src/sm/smsh/lib/Makefile	/^AWK = gawk$/;"	m
AWK	src/sm/smsh/scripts/Makefile	/^AWK = gawk$/;"	m
AWK	src/sm/tests/Makefile	/^AWK = gawk$/;"	m
AWK	src/sthread/Makefile	/^AWK = gawk$/;"	m
AWK	src/sthread/tests/Makefile	/^AWK = gawk$/;"	m
AWK	tools/Makefile	/^AWK = gawk$/;"	m
AddElement	src/fc/w_heap.h	/^void Heap<T, Cmp>::AddElement(const T& elem)$/;"	f	class:Heap
AddElementDontHeapify	src/fc/w_heap.h	/^void Heap<T, Cmp>::AddElementDontHeapify(const T& elem)$/;"	f	class:Heap
AddLoadStore	src/sm/xct.cpp	/^void xct_t::AddLoadStore(const stid_t& stid)$/;"	f	class:xct_t
AddStoreToFree	src/sm/xct.cpp	/^void xct_t::AddStoreToFree(const stid_t& stid)$/;"	f	class:xct_t
AutoTurnOffLogging	src/sm/restart.h	/^        AutoTurnOffLogging()$/;"	f	class:AutoTurnOffLogging
AutoTurnOffLogging	src/sm/restart.h	/^class AutoTurnOffLogging {$/;"	c
B	src/sm/sm_s.h	/^        B = 'B'                        \/\/ compressed binary (uninterpreted) (vbl or fixed-len)$/;"	e	enum:key_type_s::type_t
BACK	src/common/regexec.cpp	118;"	d	file:
BACK	src/common/regexec.cpp	143;"	d	file:
BACK	src/common/regexec.cpp	94;"	d	file:
BACKSL	src/common/regcomp.cpp	521;"	d	file:
BAD	src/common/regex2.h	170;"	d
BASICS_C	src/common/basics.cpp	34;"	d	file:
BASICS_H	src/common/basics.h	31;"	d
BF_C	src/sm/bf.cpp	59;"	d	file:
BF_C	src/sm/bf_prefetch.cpp	59;"	d	file:
BF_CORE_C	src/sm/bf_core.cpp	60;"	d	file:
BF_CORE_C	src/sm/bf_htab.cpp	60;"	d	file:
BF_CORE_H	src/sm/bf_core.h	59;"	d
BF_H	src/sm/bf.h	54;"	d
BF_HTAB_H	src/sm/bf_htab.h	58;"	d
BF_HTAB_STATS_GENFILES_CPP	src/sm/Makefile	/^BF_HTAB_STATS_GENFILES_CPP = \\$/;"	m
BF_HTAB_STATS_GENFILES_H	src/sm/Makefile	/^BF_HTAB_STATS_GENFILES_H = \\$/;"	m
BF_HTAB_STATS_T_COLLECT_ENUM_GEN_H	src/sm/bf_htab_stats_t_collect_enum_gen.h	2;"	d
BF_HTAB_STATS_T_COLLECT_GEN_CPP	src/sm/bf_htab_stats_t_collect_gen.cpp	2;"	d	file:
BF_HTAB_STATS_T_DEC_GEN_CPP	src/sm/bf_htab_stats_t_dec_gen.cpp	2;"	d	file:
BF_HTAB_STATS_T_INC_GEN_CPP	src/sm/bf_htab_stats_t_inc_gen.cpp	2;"	d	file:
BF_HTAB_STATS_T_MSG_GEN_H	src/sm/bf_htab_stats_t_msg_gen.h	2;"	d
BF_HTAB_STATS_T_OUT_GEN_CPP	src/sm/bf_htab_stats_t_out_gen.cpp	2;"	d	file:
BF_HTAB_STATS_T_STRUCT_GEN_H	src/sm/bf_htab_stats_t_struct_gen.h	2;"	d
BF_PREFETCH_H	src/sm/bf_prefetch.h	31;"	d
BF_S_H	src/sm/bf_s.h	54;"	d
BF_TRANSIT_BUCKET_H	src/sm/bf_transit_bucket.h	59;"	d
BIGDOUBLE	src/sm/lexify.cpp	71;"	d	file:
BIGDOUBLE_VERIFY	src/sm/lexify.cpp	72;"	d	file:
BIGFLOAT	src/sm/lexify.cpp	68;"	d	file:
BIGFLOAT_VERIFY	src/sm/lexify.cpp	69;"	d	file:
BIND_FRIEND_OPERATOR_PART_1	src/fc/w_workaround.h	181;"	d
BIND_FRIEND_OPERATOR_PART_1	src/fc/w_workaround.h	188;"	d
BIND_FRIEND_OPERATOR_PART_1	src/fc/w_workaround.h	224;"	d
BIND_FRIEND_OPERATOR_PART_1B	src/fc/w_workaround.h	182;"	d
BIND_FRIEND_OPERATOR_PART_1B	src/fc/w_workaround.h	192;"	d
BIND_FRIEND_OPERATOR_PART_1B	src/fc/w_workaround.h	228;"	d
BIND_FRIEND_OPERATOR_PART_2	src/fc/w_workaround.h	183;"	d
BIND_FRIEND_OPERATOR_PART_2	src/fc/w_workaround.h	196;"	d
BIND_FRIEND_OPERATOR_PART_2	src/fc/w_workaround.h	232;"	d
BIND_FRIEND_OPERATOR_PART_2B	src/fc/w_workaround.h	184;"	d
BIND_FRIEND_OPERATOR_PART_2B	src/fc/w_workaround.h	199;"	d
BIND_FRIEND_OPERATOR_PART_2B	src/fc/w_workaround.h	235;"	d
BITMAP_C	src/common/bitmap.cpp	34;"	d	file:
BITMAP_H	src/common/bitmap.h	31;"	d
BITS	src/fc/w_bitvector.h	/^    enum { BITS = BIT_COUNT };$/;"	e	enum:w_bitvector_t::__anon120
BITS_PER_WORD	src/fc/w_bitvector.h	/^    enum { BITS_PER_WORD=8*sizeof(Word) };$/;"	e	enum:w_bitvector_t::__anon121
BIT_VECTOR_PROLOGUE	src/fc/w_bitvector.h	178;"	d
BIT_VECTOR_PROLOGUE	src/fc/w_bitvector.h	202;"	d
BLBlob	src/fc/block_alloc.cpp	/^	BLBlob() : initialized(false) { }$/;"	f	struct:blob_pool::helper::BLBlob
BLBlob	src/fc/block_alloc.cpp	/^    struct BLBlob : tls_tricks::tls_blob<BlockList> {$/;"	s	struct:blob_pool::helper	file:
BLMap	src/fc/block_alloc.cpp	/^    typedef std::map<void*, BLBlob> BLMap;$/;"	t	struct:blob_pool::helper	file:
BLOB_POOL_TEMPLATE_ARGS	src/fc/block_alloc.cpp	160;"	d	file:
BLOCK_ALLOC_H	src/fc/block_alloc.h	25;"	d
BLOCK_SIZE	src/sm/log_core.h	/^    enum { BLOCK_SIZE=partition_t::XFERSIZE };$/;"	e	enum:log_core::__anon81
BMAX	src/sm/bf_htab.h	/^    static const int  BMAX = (SLOT_COUNT-1) * (HASH_COUNT-1) * 10; $/;"	m	class:bf_core_m::htab
BOL	src/common/regex_engine_i.h	60;"	d
BOLEOL	src/common/regex_engine_i.h	62;"	d
BOW	src/common/regex_engine_i.h	64;"	d
BPB	src/sm/lock_core.h	/^    enum { BPB=CHAR_BIT };$/;"	e	enum:lock_core_m::__anon36
BTCURSOR_H	src/sm/btcursor.h	54;"	d
BTREE_C	src/sm/btcursor.cpp	58;"	d	file:
BTREE_C	src/sm/btree.cpp	58;"	d	file:
BTREE_C	src/sm/btree_bl.cpp	58;"	d	file:
BTREE_C	src/sm/btree_impl.cpp	58;"	d	file:
BTREE_C	src/sm/btree_p.cpp	58;"	d	file:
BTREE_C	src/sm/lexify.cpp	108;"	d	file:
BTREE_CHECK_LATCHES	src/sm/btree_impl.h	413;"	d
BTREE_H	src/sm/btree.h	54;"	d
BTREE_H	src/sm/sm_int_2.h	64;"	d
BTREE_H	src/sm/sm_int_2.h	67;"	d
BTREE_IMPL_H	src/sm/btree_impl.h	54;"	d
BTREE_LATCH_MGR_H	src/sm/btree_latch_manager.h	54;"	d
BTREE_LOG_COMMENT_ON	src/sm/btree.cpp	74;"	d	file:
BTREE_LOG_COMMENT_ON	src/sm/btree.cpp	76;"	d	file:
BTREE_LOG_COMMENT_ON	src/sm/btree_impl.cpp	61;"	d	file:
BTREE_P_H	src/sm/btree_p.h	54;"	d
BUCKET_MUTEX_IS_MINE	src/sm/lock_core.h	194;"	d
BUFSIZE	src/sthread/tests/ioperf.cpp	54;"	d	file:
BUF_SLOTS	src/fc/w_form.cpp	73;"	d	file:
BUG_DOUBTFUL_LSN_FIX	src/sm/bf.cpp	1603;"	d	file:
BUILT_SOURCES	Makefile	/^BUILT_SOURCES = $(GENFILES)$/;"	m
BUILT_SOURCES	config/Makefile	/^BUILT_SOURCES = $(GENFILES)$/;"	m
BUILT_SOURCES	src/Makefile	/^BUILT_SOURCES = $(GENFILES)$/;"	m
BUILT_SOURCES	src/atomic_ops/Makefile	/^BUILT_SOURCES = $(GENFILES)$/;"	m
BUILT_SOURCES	src/atomic_ops/asm_linkage/Makefile	/^BUILT_SOURCES = $(GENFILES)$/;"	m
BUILT_SOURCES	src/atomic_ops/asm_linkage/usr/Makefile	/^BUILT_SOURCES = $(GENFILES)$/;"	m
BUILT_SOURCES	src/atomic_ops/asm_linkage/usr/src/Makefile	/^BUILT_SOURCES = $(GENFILES)$/;"	m
BUILT_SOURCES	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^BUILT_SOURCES = $(GENFILES)$/;"	m
BUILT_SOURCES	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^BUILT_SOURCES = $(GENFILES)$/;"	m
BUILT_SOURCES	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^BUILT_SOURCES = $(GENFILES)$/;"	m
BUILT_SOURCES	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^BUILT_SOURCES = $(GENFILES)$/;"	m
BUILT_SOURCES	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^BUILT_SOURCES = $(GENFILES)$/;"	m
BUILT_SOURCES	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^BUILT_SOURCES = $(GENFILES)$/;"	m
BUILT_SOURCES	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^BUILT_SOURCES = $(GENFILES)$/;"	m
BUILT_SOURCES	src/atomic_ops/atomic_ops/Makefile	/^BUILT_SOURCES = $(GENFILES)$/;"	m
BUILT_SOURCES	src/atomic_ops/atomic_ops/amd64/Makefile	/^BUILT_SOURCES = $(GENFILES)$/;"	m
BUILT_SOURCES	src/atomic_ops/atomic_ops/i386/Makefile	/^BUILT_SOURCES = $(GENFILES)$/;"	m
BUILT_SOURCES	src/atomic_ops/atomic_ops/sparc/Makefile	/^BUILT_SOURCES = $(GENFILES)$/;"	m
BUILT_SOURCES	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^BUILT_SOURCES = $(GENFILES)$/;"	m
BUILT_SOURCES	src/atomic_ops/ia32/Makefile	/^BUILT_SOURCES = $(GENFILES)$/;"	m
BUILT_SOURCES	src/atomic_ops/ia32/sys/Makefile	/^BUILT_SOURCES = $(GENFILES)$/;"	m
BUILT_SOURCES	src/atomic_ops/intel/Makefile	/^BUILT_SOURCES = $(GENFILES)$/;"	m
BUILT_SOURCES	src/atomic_ops/intel/ia32/Makefile	/^BUILT_SOURCES = $(GENFILES)$/;"	m
BUILT_SOURCES	src/atomic_ops/intel/ia32/sys/Makefile	/^BUILT_SOURCES = $(GENFILES)$/;"	m
BUILT_SOURCES	src/atomic_ops/intel/sys/Makefile	/^BUILT_SOURCES = $(GENFILES)$/;"	m
BUILT_SOURCES	src/atomic_ops/sparc/Makefile	/^BUILT_SOURCES = $(GENFILES)$/;"	m
BUILT_SOURCES	src/atomic_ops/sparc/sys/Makefile	/^BUILT_SOURCES = $(GENFILES)$/;"	m
BUILT_SOURCES	src/common/Makefile	/^BUILT_SOURCES = $(GENFILES)$/;"	m
BUILT_SOURCES	src/common/tests/Makefile	/^BUILT_SOURCES = $(GENFILES)$/;"	m
BUILT_SOURCES	src/fc/Makefile	/^BUILT_SOURCES = $(GENFILES)$/;"	m
BUILT_SOURCES	src/fc/tests/Makefile	/^BUILT_SOURCES = $(GENFILES)$/;"	m
BUILT_SOURCES	src/sm/Makefile	/^BUILT_SOURCES = $(GENFILES)$/;"	m
BUILT_SOURCES	src/sm/smsh/Makefile	/^BUILT_SOURCES = $(GENFILES)$/;"	m
BUILT_SOURCES	src/sm/smsh/lib/Makefile	/^BUILT_SOURCES = $(GENFILES)$/;"	m
BUILT_SOURCES	src/sm/smsh/scripts/Makefile	/^BUILT_SOURCES = $(GENFILES)$/;"	m
BUILT_SOURCES	src/sm/tests/Makefile	/^BUILT_SOURCES = $(GENFILES)$/;"	m
BUILT_SOURCES	src/sthread/Makefile	/^BUILT_SOURCES = $(GENFILES)$/;"	m
BUILT_SOURCES	src/sthread/tests/Makefile	/^BUILT_SOURCES = $(GENFILES)$/;"	m
BUILT_SOURCES	tools/Makefile	/^BUILT_SOURCES = $(GENFILES)$/;"	m
BYTES	src/fc/mem_block.h	/^    enum { BYTES     = 1 << LOG2 };$/;"	e	enum:memory_block::bounds_check::__anon117
BYTES_NEEDED	src/fc/mem_block.h	/^    enum { BYTES_NEEDED = MIN_CHIPS*ChipSize+OverheadBytes };$/;"	e	enum:memory_block::bounds_check::__anon115
BY_SMALLEST_HEAP_ORDER	src/fc/tests/heap.cpp	80;"	d	file:
BlockList	src/fc/block_alloc.h	/^    typedef memory_block::block_list BlockList;$/;"	t	struct:blob_pool
BlockSize	src/fc/block_alloc.h	/^    typedef memory_block::meta_block_size<sizeof(T)> BlockSize;$/;"	t	struct:block_pool
BoxMinder	src/sm/smsh/shell.cpp	/^        BoxMinder()$/;"	f	struct:BoxMinder
BoxMinder	src/sm/smsh/shell.cpp	/^struct BoxMinder {$/;"	s	file:
BufSize	src/sthread/tests/thread2.cpp	/^int	BufSize = 1024;$/;"	v
C	src/sm/tests/lock_cache_test.cpp	/^lock_cache_t<5,10> C;$/;"	v
CADDR_T	src/common/vec_t.h	68;"	d
CASFUNC	src/sthread/sthread.h	315;"	d
CASFUNC	src/sthread/sthread.h	317;"	d
CASFUNC	src/sthread/sthread.h	320;"	d
CASFUNC	src/sthread/sthread.h	380;"	d
CAST	src/fc/w_base.h	96;"	d
CC	Makefile	/^CC = gcc$/;"	m
CC	config/Makefile	/^CC = gcc$/;"	m
CC	src/Makefile	/^CC = gcc$/;"	m
CC	src/atomic_ops/Makefile	/^CC = gcc$/;"	m
CC	src/atomic_ops/asm_linkage/Makefile	/^CC = gcc$/;"	m
CC	src/atomic_ops/asm_linkage/usr/Makefile	/^CC = gcc$/;"	m
CC	src/atomic_ops/asm_linkage/usr/src/Makefile	/^CC = gcc$/;"	m
CC	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^CC = gcc$/;"	m
CC	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^CC = gcc$/;"	m
CC	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^CC = gcc$/;"	m
CC	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^CC = gcc$/;"	m
CC	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^CC = gcc$/;"	m
CC	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^CC = gcc$/;"	m
CC	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^CC = gcc$/;"	m
CC	src/atomic_ops/atomic_ops/Makefile	/^CC = gcc$/;"	m
CC	src/atomic_ops/atomic_ops/amd64/Makefile	/^CC = gcc$/;"	m
CC	src/atomic_ops/atomic_ops/i386/Makefile	/^CC = gcc$/;"	m
CC	src/atomic_ops/atomic_ops/sparc/Makefile	/^CC = gcc$/;"	m
CC	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^CC = gcc$/;"	m
CC	src/atomic_ops/ia32/Makefile	/^CC = gcc$/;"	m
CC	src/atomic_ops/ia32/sys/Makefile	/^CC = gcc$/;"	m
CC	src/atomic_ops/intel/Makefile	/^CC = gcc$/;"	m
CC	src/atomic_ops/intel/ia32/Makefile	/^CC = gcc$/;"	m
CC	src/atomic_ops/intel/ia32/sys/Makefile	/^CC = gcc$/;"	m
CC	src/atomic_ops/intel/sys/Makefile	/^CC = gcc$/;"	m
CC	src/atomic_ops/sparc/Makefile	/^CC = gcc$/;"	m
CC	src/atomic_ops/sparc/sys/Makefile	/^CC = gcc$/;"	m
CC	src/common/Makefile	/^CC = gcc$/;"	m
CC	src/common/tests/Makefile	/^CC = gcc$/;"	m
CC	src/fc/Makefile	/^CC = gcc$/;"	m
CC	src/fc/tests/Makefile	/^CC = gcc$/;"	m
CC	src/sm/Makefile	/^CC = gcc$/;"	m
CC	src/sm/smsh/Makefile	/^CC = gcc$/;"	m
CC	src/sm/smsh/lib/Makefile	/^CC = gcc$/;"	m
CC	src/sm/smsh/scripts/Makefile	/^CC = gcc$/;"	m
CC	src/sm/tests/Makefile	/^CC = gcc$/;"	m
CC	src/sthread/Makefile	/^CC = gcc$/;"	m
CC	src/sthread/tests/Makefile	/^CC = gcc$/;"	m
CC	tools/Makefile	/^CC = gcc$/;"	m
CCAS	Makefile	/^CCAS = gcc$/;"	m
CCAS	config/Makefile	/^CCAS = gcc$/;"	m
CCAS	src/Makefile	/^CCAS = gcc$/;"	m
CCAS	src/atomic_ops/Makefile	/^CCAS = gcc$/;"	m
CCAS	src/atomic_ops/asm_linkage/Makefile	/^CCAS = gcc$/;"	m
CCAS	src/atomic_ops/asm_linkage/usr/Makefile	/^CCAS = gcc$/;"	m
CCAS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^CCAS = gcc$/;"	m
CCAS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^CCAS = gcc$/;"	m
CCAS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^CCAS = gcc$/;"	m
CCAS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^CCAS = gcc$/;"	m
CCAS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^CCAS = gcc$/;"	m
CCAS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^CCAS = gcc$/;"	m
CCAS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^CCAS = gcc$/;"	m
CCAS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^CCAS = gcc$/;"	m
CCAS	src/atomic_ops/atomic_ops/Makefile	/^CCAS = gcc$/;"	m
CCAS	src/atomic_ops/atomic_ops/amd64/Makefile	/^CCAS = gcc$/;"	m
CCAS	src/atomic_ops/atomic_ops/i386/Makefile	/^CCAS = gcc$/;"	m
CCAS	src/atomic_ops/atomic_ops/sparc/Makefile	/^CCAS = gcc$/;"	m
CCAS	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^CCAS = gcc$/;"	m
CCAS	src/atomic_ops/ia32/Makefile	/^CCAS = gcc$/;"	m
CCAS	src/atomic_ops/ia32/sys/Makefile	/^CCAS = gcc$/;"	m
CCAS	src/atomic_ops/intel/Makefile	/^CCAS = gcc$/;"	m
CCAS	src/atomic_ops/intel/ia32/Makefile	/^CCAS = gcc$/;"	m
CCAS	src/atomic_ops/intel/ia32/sys/Makefile	/^CCAS = gcc$/;"	m
CCAS	src/atomic_ops/intel/sys/Makefile	/^CCAS = gcc$/;"	m
CCAS	src/atomic_ops/sparc/Makefile	/^CCAS = gcc$/;"	m
CCAS	src/atomic_ops/sparc/sys/Makefile	/^CCAS = gcc$/;"	m
CCAS	src/common/Makefile	/^CCAS = gcc$/;"	m
CCAS	src/common/tests/Makefile	/^CCAS = gcc$/;"	m
CCAS	src/fc/Makefile	/^CCAS = gcc$/;"	m
CCAS	src/fc/tests/Makefile	/^CCAS = gcc$/;"	m
CCAS	src/sm/Makefile	/^CCAS = gcc$/;"	m
CCAS	src/sm/smsh/Makefile	/^CCAS = gcc$/;"	m
CCAS	src/sm/smsh/lib/Makefile	/^CCAS = gcc$/;"	m
CCAS	src/sm/smsh/scripts/Makefile	/^CCAS = gcc$/;"	m
CCAS	src/sm/tests/Makefile	/^CCAS = gcc$/;"	m
CCAS	src/sthread/Makefile	/^CCAS = gcc$/;"	m
CCAS	src/sthread/tests/Makefile	/^CCAS = gcc$/;"	m
CCAS	tools/Makefile	/^CCAS = gcc$/;"	m
CCASDEPMODE	Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	config/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	src/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	src/atomic_ops/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	src/atomic_ops/asm_linkage/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	src/atomic_ops/asm_linkage/usr/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	src/atomic_ops/asm_linkage/usr/src/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	src/atomic_ops/atomic_ops/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	src/atomic_ops/atomic_ops/amd64/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	src/atomic_ops/atomic_ops/i386/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	src/atomic_ops/atomic_ops/sparc/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	src/atomic_ops/ia32/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	src/atomic_ops/ia32/sys/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	src/atomic_ops/intel/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	src/atomic_ops/intel/ia32/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	src/atomic_ops/intel/ia32/sys/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	src/atomic_ops/intel/sys/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	src/atomic_ops/sparc/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	src/atomic_ops/sparc/sys/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	src/common/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	src/common/tests/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	src/fc/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	src/fc/tests/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	src/sm/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	src/sm/smsh/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	src/sm/smsh/lib/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	src/sm/smsh/scripts/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	src/sm/tests/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	src/sthread/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	src/sthread/tests/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	tools/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASFLAGS	Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	config/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	src/Makefile	/^CCASFLAGS = -g -O0$/;"	m
CCASFLAGS	src/atomic_ops/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	src/atomic_ops/asm_linkage/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	src/atomic_ops/asm_linkage/usr/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	src/atomic_ops/atomic_ops/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	src/atomic_ops/atomic_ops/amd64/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	src/atomic_ops/atomic_ops/i386/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	src/atomic_ops/atomic_ops/sparc/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	src/atomic_ops/ia32/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	src/atomic_ops/ia32/sys/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	src/atomic_ops/intel/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	src/atomic_ops/intel/ia32/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	src/atomic_ops/intel/ia32/sys/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	src/atomic_ops/intel/sys/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	src/atomic_ops/sparc/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	src/atomic_ops/sparc/sys/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	src/common/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	src/common/tests/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	src/fc/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	src/fc/tests/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	src/sm/Makefile	/^CCASFLAGS = -g -O0$/;"	m
CCASFLAGS	src/sm/smsh/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	src/sm/smsh/lib/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	src/sm/smsh/scripts/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	src/sm/tests/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	src/sthread/Makefile	/^CCASFLAGS = -g -O0$/;"	m
CCASFLAGS	src/sthread/tests/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCASFLAGS	tools/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCDEPMODE	Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	config/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/atomic_ops/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/atomic_ops/asm_linkage/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/atomic_ops/asm_linkage/usr/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/atomic_ops/asm_linkage/usr/src/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/atomic_ops/atomic_ops/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/atomic_ops/atomic_ops/amd64/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/atomic_ops/atomic_ops/i386/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/atomic_ops/atomic_ops/sparc/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/atomic_ops/ia32/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/atomic_ops/ia32/sys/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/atomic_ops/intel/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/atomic_ops/intel/ia32/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/atomic_ops/intel/ia32/sys/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/atomic_ops/intel/sys/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/atomic_ops/sparc/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/atomic_ops/sparc/sys/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/common/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/common/tests/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/fc/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/fc/tests/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/sm/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/sm/smsh/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/sm/smsh/lib/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/sm/smsh/scripts/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/sm/tests/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/sthread/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/sthread/tests/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	tools/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCLD	src/atomic_ops/Makefile	/^CCLD = $(CC)$/;"	m
CF	src/sm/newsort.cpp	/^typedef ssm_sort::CF CF;$/;"	t	file:
CF	src/sm/sort_s.h	/^typedef int (*CF) ($/;"	t	namespace:ssm_sort
CFLAGS	Makefile	/^CFLAGS = $/;"	m
CFLAGS	config/Makefile	/^CFLAGS = $/;"	m
CFLAGS	src/Makefile	/^CFLAGS = $/;"	m
CFLAGS	src/atomic_ops/Makefile	/^CFLAGS = $/;"	m
CFLAGS	src/atomic_ops/asm_linkage/Makefile	/^CFLAGS = $/;"	m
CFLAGS	src/atomic_ops/asm_linkage/usr/Makefile	/^CFLAGS = $/;"	m
CFLAGS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^CFLAGS = $/;"	m
CFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^CFLAGS = $/;"	m
CFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^CFLAGS = $/;"	m
CFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^CFLAGS = $/;"	m
CFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^CFLAGS = $/;"	m
CFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^CFLAGS = $/;"	m
CFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^CFLAGS = $/;"	m
CFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^CFLAGS = $/;"	m
CFLAGS	src/atomic_ops/atomic_ops/Makefile	/^CFLAGS = $/;"	m
CFLAGS	src/atomic_ops/atomic_ops/amd64/Makefile	/^CFLAGS = $/;"	m
CFLAGS	src/atomic_ops/atomic_ops/i386/Makefile	/^CFLAGS = $/;"	m
CFLAGS	src/atomic_ops/atomic_ops/sparc/Makefile	/^CFLAGS = $/;"	m
CFLAGS	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^CFLAGS = $/;"	m
CFLAGS	src/atomic_ops/ia32/Makefile	/^CFLAGS = $/;"	m
CFLAGS	src/atomic_ops/ia32/sys/Makefile	/^CFLAGS = $/;"	m
CFLAGS	src/atomic_ops/intel/Makefile	/^CFLAGS = $/;"	m
CFLAGS	src/atomic_ops/intel/ia32/Makefile	/^CFLAGS = $/;"	m
CFLAGS	src/atomic_ops/intel/ia32/sys/Makefile	/^CFLAGS = $/;"	m
CFLAGS	src/atomic_ops/intel/sys/Makefile	/^CFLAGS = $/;"	m
CFLAGS	src/atomic_ops/sparc/Makefile	/^CFLAGS = $/;"	m
CFLAGS	src/atomic_ops/sparc/sys/Makefile	/^CFLAGS = $/;"	m
CFLAGS	src/common/Makefile	/^CFLAGS = $/;"	m
CFLAGS	src/common/tests/Makefile	/^CFLAGS = $/;"	m
CFLAGS	src/fc/Makefile	/^CFLAGS = $/;"	m
CFLAGS	src/fc/tests/Makefile	/^CFLAGS = $/;"	m
CFLAGS	src/sm/Makefile	/^CFLAGS = $/;"	m
CFLAGS	src/sm/smsh/Makefile	/^CFLAGS = $/;"	m
CFLAGS	src/sm/smsh/lib/Makefile	/^CFLAGS = $/;"	m
CFLAGS	src/sm/smsh/scripts/Makefile	/^CFLAGS = $/;"	m
CFLAGS	src/sm/tests/Makefile	/^CFLAGS = $/;"	m
CFLAGS	src/sthread/Makefile	/^CFLAGS = $/;"	m
CFLAGS	src/sthread/tests/Makefile	/^CFLAGS = $/;"	m
CFLAGS	tools/Makefile	/^CFLAGS = $/;"	m
CHECKIT	src/fc/w_error.cpp	110;"	d	file:
CHECKIT	src/fc/w_error.cpp	97;"	d	file:
CHECKRCUNCHECKED	src/sm/smthread.cpp	73;"	d	file:
CHECKRCUNCHECKED	src/sm/smthread.cpp	75;"	d	file:
CHECK_ENTRY	src/sm/bf_htab.h	171;"	d
CHECK_ENTRY	src/sm/bf_htab.h	174;"	d
CHECK_NESTING_VARIABLES	src/sm/sm_base.h	126;"	d
CHECK_NESTING_VARIABLES	src/sm/sm_base.h	128;"	d
CHECK_STRING	src/fc/w_error.cpp	129;"	d	file:
CHECK_STRING	src/fc/w_error.cpp	131;"	d	file:
CHECK_TABLE	src/sm/bf_htab.h	170;"	d
CHECK_TABLE	src/sm/bf_htab.h	173;"	d
CHIN	src/common/regex2.h	144;"	d
CHIP_SIZE	src/fc/mem_block.h	/^    enum { CHIP_SIZE    = ChipSize };$/;"	e	enum:memory_block::bounds_check::__anon111
CHKPT_C	src/sm/chkpt.cpp	59;"	d	file:
CHKPT_H	src/sm/chkpt.h	54;"	d
CHKPT_META_BUF	src/sm/log_core.h	73;"	d
CHKPT_SERIAL_C	src/sm/chkpt_serial.cpp	58;"	d	file:
CHKPT_SERIAL_H	src/sm/chkpt_serial.h	54;"	d
CHadd	src/common/regex2.h	142;"	d
CHsub	src/common/regex2.h	143;"	d
CLEANFILES	Makefile	/^CLEANFILES = dox\/ warnings$/;"	m
CLEANFILES	src/sm/smsh/Makefile	/^CLEANFILES = .\/log\/* .\/volumes\/*$/;"	m
CLEANFILES	src/sm/tests/Makefile	/^CLEANFILES = .\/log\/* .\/volumes\/*$/;"	m
CLEAR	src/common/regexec.cpp	103;"	d	file:
CLEAR	src/common/regexec.cpp	124;"	d	file:
CLEAR	src/common/regexec.cpp	77;"	d	file:
CLONGMASK	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	85;"	d
CLONGMASK	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	89;"	d
CLONGMASK	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/asm_linkage.h	55;"	d
CLONGMASK	src/atomic_ops/ia32/sys/asm_linkage.h	85;"	d
CLONGMASK	src/atomic_ops/ia32/sys/asm_linkage.h	89;"	d
CLONGMASK	src/atomic_ops/intel/ia32/sys/asm_linkage.h	85;"	d
CLONGMASK	src/atomic_ops/intel/ia32/sys/asm_linkage.h	89;"	d
CLONGMASK	src/atomic_ops/sparc/sys/asm_linkage.h	55;"	d
CLONGSHIFT	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	83;"	d
CLONGSHIFT	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	87;"	d
CLONGSHIFT	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/asm_linkage.h	47;"	d
CLONGSHIFT	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/asm_linkage.h	50;"	d
CLONGSHIFT	src/atomic_ops/ia32/sys/asm_linkage.h	83;"	d
CLONGSHIFT	src/atomic_ops/ia32/sys/asm_linkage.h	87;"	d
CLONGSHIFT	src/atomic_ops/intel/ia32/sys/asm_linkage.h	83;"	d
CLONGSHIFT	src/atomic_ops/intel/ia32/sys/asm_linkage.h	87;"	d
CLONGSHIFT	src/atomic_ops/sparc/sys/asm_linkage.h	47;"	d
CLONGSHIFT	src/atomic_ops/sparc/sys/asm_linkage.h	50;"	d
CLONGSIZE	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	84;"	d
CLONGSIZE	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	88;"	d
CLONGSIZE	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/asm_linkage.h	53;"	d
CLONGSIZE	src/atomic_ops/ia32/sys/asm_linkage.h	84;"	d
CLONGSIZE	src/atomic_ops/ia32/sys/asm_linkage.h	88;"	d
CLONGSIZE	src/atomic_ops/intel/ia32/sys/asm_linkage.h	84;"	d
CLONGSIZE	src/atomic_ops/intel/ia32/sys/asm_linkage.h	88;"	d
CLONGSIZE	src/atomic_ops/sparc/sys/asm_linkage.h	53;"	d
CODEMAX	src/common/regex_engine_i.h	66;"	d
COMMA2	src/sm/xct.cpp	551;"	d	file:
COMM_ERROR	src/sm/smsh/smsh.h	52;"	d
COMM_FATAL	src/sm/smsh/smsh.h	56;"	d
COMPARE_LT	src/sm/lock_s_inline.h	605;"	d
COMPILE	src/atomic_ops/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
CONFIG_CLEAN_FILES	Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	config/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/atomic_ops/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/atomic_ops/asm_linkage/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/atomic_ops/asm_linkage/usr/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/atomic_ops/asm_linkage/usr/src/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/atomic_ops/atomic_ops/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/atomic_ops/atomic_ops/amd64/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/atomic_ops/atomic_ops/i386/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/atomic_ops/atomic_ops/sparc/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/atomic_ops/ia32/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/atomic_ops/ia32/sys/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/atomic_ops/intel/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/atomic_ops/intel/ia32/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/atomic_ops/intel/ia32/sys/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/atomic_ops/intel/sys/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/atomic_ops/sparc/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/atomic_ops/sparc/sys/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/common/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/common/tests/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/fc/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/fc/tests/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/sm/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/sm/smsh/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/sm/smsh/lib/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/sm/smsh/scripts/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/sm/tests/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/sthread/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/sthread/tests/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	tools/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	config/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/atomic_ops/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/atomic_ops/asm_linkage/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/atomic_ops/asm_linkage/usr/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/atomic_ops/asm_linkage/usr/src/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/atomic_ops/atomic_ops/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/atomic_ops/atomic_ops/amd64/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/atomic_ops/atomic_ops/i386/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/atomic_ops/atomic_ops/sparc/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/atomic_ops/ia32/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/atomic_ops/ia32/sys/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/atomic_ops/intel/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/atomic_ops/intel/ia32/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/atomic_ops/intel/ia32/sys/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/atomic_ops/intel/sys/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/atomic_ops/sparc/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/atomic_ops/sparc/sys/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/common/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/common/tests/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/fc/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/fc/tests/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/sm/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/sm/smsh/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/sm/smsh/lib/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/sm/smsh/scripts/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/sm/tests/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/sthread/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/sthread/tests/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	tools/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_HEADER	Makefile	/^CONFIG_HEADER = $(top_builddir)\/config\/shore-config.h$/;"	m
CONFIG_HEADER	config/Makefile	/^CONFIG_HEADER = shore-config.h$/;"	m
CONFIG_HEADER	src/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config\/shore-config.h$/;"	m
CONFIG_HEADER	src/atomic_ops/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config\/shore-config.h$/;"	m
CONFIG_HEADER	src/atomic_ops/asm_linkage/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config\/shore-config.h$/;"	m
CONFIG_HEADER	src/atomic_ops/asm_linkage/usr/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config\/shore-config.h$/;"	m
CONFIG_HEADER	src/atomic_ops/asm_linkage/usr/src/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config\/shore-config.h$/;"	m
CONFIG_HEADER	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config\/shore-config.h$/;"	m
CONFIG_HEADER	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config\/shore-config.h$/;"	m
CONFIG_HEADER	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config\/shore-config.h$/;"	m
CONFIG_HEADER	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config\/shore-config.h$/;"	m
CONFIG_HEADER	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config\/shore-config.h$/;"	m
CONFIG_HEADER	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config\/shore-config.h$/;"	m
CONFIG_HEADER	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config\/shore-config.h$/;"	m
CONFIG_HEADER	src/atomic_ops/atomic_ops/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config\/shore-config.h$/;"	m
CONFIG_HEADER	src/atomic_ops/atomic_ops/amd64/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config\/shore-config.h$/;"	m
CONFIG_HEADER	src/atomic_ops/atomic_ops/i386/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config\/shore-config.h$/;"	m
CONFIG_HEADER	src/atomic_ops/atomic_ops/sparc/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config\/shore-config.h$/;"	m
CONFIG_HEADER	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config\/shore-config.h$/;"	m
CONFIG_HEADER	src/atomic_ops/ia32/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config\/shore-config.h$/;"	m
CONFIG_HEADER	src/atomic_ops/ia32/sys/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config\/shore-config.h$/;"	m
CONFIG_HEADER	src/atomic_ops/intel/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config\/shore-config.h$/;"	m
CONFIG_HEADER	src/atomic_ops/intel/ia32/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config\/shore-config.h$/;"	m
CONFIG_HEADER	src/atomic_ops/intel/ia32/sys/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config\/shore-config.h$/;"	m
CONFIG_HEADER	src/atomic_ops/intel/sys/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config\/shore-config.h$/;"	m
CONFIG_HEADER	src/atomic_ops/sparc/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config\/shore-config.h$/;"	m
CONFIG_HEADER	src/atomic_ops/sparc/sys/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config\/shore-config.h$/;"	m
CONFIG_HEADER	src/common/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config\/shore-config.h$/;"	m
CONFIG_HEADER	src/common/tests/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config\/shore-config.h$/;"	m
CONFIG_HEADER	src/fc/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config\/shore-config.h$/;"	m
CONFIG_HEADER	src/fc/tests/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config\/shore-config.h$/;"	m
CONFIG_HEADER	src/sm/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config\/shore-config.h$/;"	m
CONFIG_HEADER	src/sm/smsh/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config\/shore-config.h$/;"	m
CONFIG_HEADER	src/sm/smsh/lib/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config\/shore-config.h$/;"	m
CONFIG_HEADER	src/sm/smsh/scripts/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config\/shore-config.h$/;"	m
CONFIG_HEADER	src/sm/tests/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config\/shore-config.h$/;"	m
CONFIG_HEADER	src/sthread/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config\/shore-config.h$/;"	m
CONFIG_HEADER	src/sthread/tests/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config\/shore-config.h$/;"	m
CONFIG_HEADER	tools/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config\/shore-config.h$/;"	m
COPYIN	src/fc/cpu_info.cpp	113;"	d	file:
COPYOUT	src/fc/cpu_info.cpp	114;"	d	file:
COUNT	src/fc/mem_block.h	/^    enum { COUNT     = meta_min<MAX_CHIPS, REAL_COUNT>::VALUE };$/;"	e	enum:memory_block::bounds_check::__anon119
CPP	Makefile	/^CPP = gcc -E$/;"	m
CPP	config/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/atomic_ops/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/atomic_ops/asm_linkage/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/atomic_ops/asm_linkage/usr/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/atomic_ops/asm_linkage/usr/src/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/atomic_ops/atomic_ops/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/atomic_ops/atomic_ops/amd64/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/atomic_ops/atomic_ops/i386/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/atomic_ops/atomic_ops/sparc/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/atomic_ops/ia32/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/atomic_ops/ia32/sys/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/atomic_ops/intel/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/atomic_ops/intel/ia32/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/atomic_ops/intel/ia32/sys/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/atomic_ops/intel/sys/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/atomic_ops/sparc/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/atomic_ops/sparc/sys/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/common/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/common/tests/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/fc/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/fc/tests/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/sm/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/sm/smsh/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/sm/smsh/lib/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/sm/smsh/scripts/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/sm/tests/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/sthread/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/sthread/tests/Makefile	/^CPP = gcc -E$/;"	m
CPP	tools/Makefile	/^CPP = gcc -E$/;"	m
CPPASCOMPILE	src/atomic_ops/Makefile	/^CPPASCOMPILE = $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	config/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	src/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	src/atomic_ops/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	src/atomic_ops/asm_linkage/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	src/atomic_ops/asm_linkage/usr/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	src/atomic_ops/atomic_ops/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	src/atomic_ops/atomic_ops/amd64/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	src/atomic_ops/atomic_ops/i386/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	src/atomic_ops/atomic_ops/sparc/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	src/atomic_ops/ia32/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	src/atomic_ops/ia32/sys/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	src/atomic_ops/intel/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	src/atomic_ops/intel/ia32/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	src/atomic_ops/intel/ia32/sys/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	src/atomic_ops/intel/sys/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	src/atomic_ops/sparc/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	src/atomic_ops/sparc/sys/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	src/common/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	src/common/tests/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	src/fc/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	src/fc/tests/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	src/sm/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	src/sm/smsh/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	src/sm/smsh/lib/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	src/sm/smsh/scripts/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	src/sm/tests/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	src/sthread/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	src/sthread/tests/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	tools/Makefile	/^CPPFLAGS = $/;"	m
CPTRMASK	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	97;"	d
CPTRMASK	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/asm_linkage.h	54;"	d
CPTRMASK	src/atomic_ops/ia32/sys/asm_linkage.h	97;"	d
CPTRMASK	src/atomic_ops/intel/ia32/sys/asm_linkage.h	97;"	d
CPTRMASK	src/atomic_ops/sparc/sys/asm_linkage.h	54;"	d
CPTRSHIFT	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	95;"	d
CPTRSHIFT	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/asm_linkage.h	46;"	d
CPTRSHIFT	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/asm_linkage.h	49;"	d
CPTRSHIFT	src/atomic_ops/ia32/sys/asm_linkage.h	95;"	d
CPTRSHIFT	src/atomic_ops/intel/ia32/sys/asm_linkage.h	95;"	d
CPTRSHIFT	src/atomic_ops/sparc/sys/asm_linkage.h	46;"	d
CPTRSHIFT	src/atomic_ops/sparc/sys/asm_linkage.h	49;"	d
CPTRSIZE	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	96;"	d
CPTRSIZE	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/asm_linkage.h	52;"	d
CPTRSIZE	src/atomic_ops/ia32/sys/asm_linkage.h	96;"	d
CPTRSIZE	src/atomic_ops/intel/ia32/sys/asm_linkage.h	96;"	d
CPTRSIZE	src/atomic_ops/sparc/sys/asm_linkage.h	52;"	d
CRASH_H	src/sm/crash.h	31;"	d
CRITICAL_SECTION	src/sthread/sthread.h	1025;"	d
CSCOPE	Makefile	/^CSCOPE = cscope$/;"	m
CSKF	src/sm/newsort.cpp	/^typedef ssm_sort::CSKF CSKF;$/;"	t	file:
CSKF	src/sm/sort_s.h	/^typedef w_rc_t (*CSKF)($/;"	t	namespace:ssm_sort
CTAGS	Makefile	/^CTAGS = ctags$/;"	m
CTAGS	config/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/atomic_ops/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/atomic_ops/asm_linkage/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/atomic_ops/asm_linkage/usr/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/atomic_ops/atomic_ops/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/atomic_ops/ia32/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/atomic_ops/ia32/sys/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/atomic_ops/intel/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/atomic_ops/intel/ia32/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/atomic_ops/intel/ia32/sys/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/atomic_ops/intel/sys/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/atomic_ops/sparc/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/atomic_ops/sparc/sys/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/common/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/common/tests/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/fc/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/fc/tests/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/sm/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/sm/smsh/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/sm/smsh/lib/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/sm/smsh/scripts/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/sm/tests/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/sthread/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/sthread/tests/Makefile	/^CTAGS = ctags$/;"	m
CXX	Makefile	/^CXX = g++$/;"	m
CXX	config/Makefile	/^CXX = g++$/;"	m
CXX	src/Makefile	/^CXX = g++$/;"	m
CXX	src/atomic_ops/Makefile	/^CXX = g++$/;"	m
CXX	src/atomic_ops/asm_linkage/Makefile	/^CXX = g++$/;"	m
CXX	src/atomic_ops/asm_linkage/usr/Makefile	/^CXX = g++$/;"	m
CXX	src/atomic_ops/asm_linkage/usr/src/Makefile	/^CXX = g++$/;"	m
CXX	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^CXX = g++$/;"	m
CXX	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^CXX = g++$/;"	m
CXX	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^CXX = g++$/;"	m
CXX	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^CXX = g++$/;"	m
CXX	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^CXX = g++$/;"	m
CXX	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^CXX = g++$/;"	m
CXX	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^CXX = g++$/;"	m
CXX	src/atomic_ops/atomic_ops/Makefile	/^CXX = g++$/;"	m
CXX	src/atomic_ops/atomic_ops/amd64/Makefile	/^CXX = g++$/;"	m
CXX	src/atomic_ops/atomic_ops/i386/Makefile	/^CXX = g++$/;"	m
CXX	src/atomic_ops/atomic_ops/sparc/Makefile	/^CXX = g++$/;"	m
CXX	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^CXX = g++$/;"	m
CXX	src/atomic_ops/ia32/Makefile	/^CXX = g++$/;"	m
CXX	src/atomic_ops/ia32/sys/Makefile	/^CXX = g++$/;"	m
CXX	src/atomic_ops/intel/Makefile	/^CXX = g++$/;"	m
CXX	src/atomic_ops/intel/ia32/Makefile	/^CXX = g++$/;"	m
CXX	src/atomic_ops/intel/ia32/sys/Makefile	/^CXX = g++$/;"	m
CXX	src/atomic_ops/intel/sys/Makefile	/^CXX = g++$/;"	m
CXX	src/atomic_ops/sparc/Makefile	/^CXX = g++$/;"	m
CXX	src/atomic_ops/sparc/sys/Makefile	/^CXX = g++$/;"	m
CXX	src/common/Makefile	/^CXX = g++$/;"	m
CXX	src/common/tests/Makefile	/^CXX = g++$/;"	m
CXX	src/fc/Makefile	/^CXX = g++$/;"	m
CXX	src/fc/tests/Makefile	/^CXX = g++$/;"	m
CXX	src/sm/Makefile	/^CXX = g++$/;"	m
CXX	src/sm/smsh/Makefile	/^CXX = g++$/;"	m
CXX	src/sm/smsh/lib/Makefile	/^CXX = g++$/;"	m
CXX	src/sm/smsh/scripts/Makefile	/^CXX = g++$/;"	m
CXX	src/sm/tests/Makefile	/^CXX = g++$/;"	m
CXX	src/sthread/Makefile	/^CXX = g++$/;"	m
CXX	src/sthread/tests/Makefile	/^CXX = g++$/;"	m
CXX	tools/Makefile	/^CXX = g++$/;"	m
CXXCOMPILE	src/atomic_ops/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCOMPILE	src/common/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCOMPILE	src/common/tests/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCOMPILE	src/fc/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCOMPILE	src/fc/tests/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCOMPILE	src/sm/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCOMPILE	src/sm/smsh/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCOMPILE	src/sm/tests/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCOMPILE	src/sthread/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCOMPILE	src/sthread/tests/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCPP	Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	config/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/atomic_ops/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/atomic_ops/asm_linkage/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/atomic_ops/asm_linkage/usr/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/atomic_ops/asm_linkage/usr/src/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/atomic_ops/atomic_ops/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/atomic_ops/atomic_ops/amd64/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/atomic_ops/atomic_ops/i386/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/atomic_ops/atomic_ops/sparc/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/atomic_ops/ia32/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/atomic_ops/ia32/sys/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/atomic_ops/intel/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/atomic_ops/intel/ia32/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/atomic_ops/intel/ia32/sys/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/atomic_ops/intel/sys/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/atomic_ops/sparc/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/atomic_ops/sparc/sys/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/common/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/common/tests/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/fc/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/fc/tests/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/sm/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/sm/smsh/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/sm/smsh/lib/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/sm/smsh/scripts/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/sm/tests/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/sthread/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/sthread/tests/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	tools/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXDEPMODE	Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	config/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/atomic_ops/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/atomic_ops/asm_linkage/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/atomic_ops/asm_linkage/usr/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/atomic_ops/asm_linkage/usr/src/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/atomic_ops/atomic_ops/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/atomic_ops/atomic_ops/amd64/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/atomic_ops/atomic_ops/i386/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/atomic_ops/atomic_ops/sparc/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/atomic_ops/ia32/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/atomic_ops/ia32/sys/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/atomic_ops/intel/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/atomic_ops/intel/ia32/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/atomic_ops/intel/ia32/sys/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/atomic_ops/intel/sys/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/atomic_ops/sparc/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/atomic_ops/sparc/sys/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/common/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/common/tests/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/fc/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/fc/tests/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/sm/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/sm/smsh/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/sm/smsh/lib/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/sm/smsh/scripts/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/sm/tests/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/sthread/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/sthread/tests/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	tools/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXFLAGS	Makefile	/^CXXFLAGS =  -pthread$/;"	m
CXXFLAGS	config/Makefile	/^CXXFLAGS =  -pthread$/;"	m
CXXFLAGS	src/Makefile	/^CXXFLAGS =  -pthread$/;"	m
CXXFLAGS	src/atomic_ops/Makefile	/^CXXFLAGS =  -pthread$/;"	m
CXXFLAGS	src/atomic_ops/asm_linkage/Makefile	/^CXXFLAGS =  -pthread$/;"	m
CXXFLAGS	src/atomic_ops/asm_linkage/usr/Makefile	/^CXXFLAGS =  -pthread$/;"	m
CXXFLAGS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^CXXFLAGS =  -pthread$/;"	m
CXXFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^CXXFLAGS =  -pthread$/;"	m
CXXFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^CXXFLAGS =  -pthread$/;"	m
CXXFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^CXXFLAGS =  -pthread$/;"	m
CXXFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^CXXFLAGS =  -pthread$/;"	m
CXXFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^CXXFLAGS =  -pthread$/;"	m
CXXFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^CXXFLAGS =  -pthread$/;"	m
CXXFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^CXXFLAGS =  -pthread$/;"	m
CXXFLAGS	src/atomic_ops/atomic_ops/Makefile	/^CXXFLAGS =  -pthread$/;"	m
CXXFLAGS	src/atomic_ops/atomic_ops/amd64/Makefile	/^CXXFLAGS =  -pthread$/;"	m
CXXFLAGS	src/atomic_ops/atomic_ops/i386/Makefile	/^CXXFLAGS =  -pthread$/;"	m
CXXFLAGS	src/atomic_ops/atomic_ops/sparc/Makefile	/^CXXFLAGS =  -pthread$/;"	m
CXXFLAGS	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^CXXFLAGS =  -pthread$/;"	m
CXXFLAGS	src/atomic_ops/ia32/Makefile	/^CXXFLAGS =  -pthread$/;"	m
CXXFLAGS	src/atomic_ops/ia32/sys/Makefile	/^CXXFLAGS =  -pthread$/;"	m
CXXFLAGS	src/atomic_ops/intel/Makefile	/^CXXFLAGS =  -pthread$/;"	m
CXXFLAGS	src/atomic_ops/intel/ia32/Makefile	/^CXXFLAGS =  -pthread$/;"	m
CXXFLAGS	src/atomic_ops/intel/ia32/sys/Makefile	/^CXXFLAGS =  -pthread$/;"	m
CXXFLAGS	src/atomic_ops/intel/sys/Makefile	/^CXXFLAGS =  -pthread$/;"	m
CXXFLAGS	src/atomic_ops/sparc/Makefile	/^CXXFLAGS =  -pthread$/;"	m
CXXFLAGS	src/atomic_ops/sparc/sys/Makefile	/^CXXFLAGS =  -pthread$/;"	m
CXXFLAGS	src/common/Makefile	/^CXXFLAGS =  -pthread$/;"	m
CXXFLAGS	src/common/tests/Makefile	/^CXXFLAGS =  -pthread$/;"	m
CXXFLAGS	src/fc/Makefile	/^CXXFLAGS =  -pthread$/;"	m
CXXFLAGS	src/fc/tests/Makefile	/^CXXFLAGS =  -pthread$/;"	m
CXXFLAGS	src/sm/Makefile	/^CXXFLAGS =  -pthread$/;"	m
CXXFLAGS	src/sm/smsh/Makefile	/^CXXFLAGS =  -pthread$/;"	m
CXXFLAGS	src/sm/smsh/lib/Makefile	/^CXXFLAGS =  -pthread$/;"	m
CXXFLAGS	src/sm/smsh/scripts/Makefile	/^CXXFLAGS =  -pthread$/;"	m
CXXFLAGS	src/sm/tests/Makefile	/^CXXFLAGS =  -pthread$/;"	m
CXXFLAGS	src/sthread/Makefile	/^CXXFLAGS =  -pthread$/;"	m
CXXFLAGS	src/sthread/tests/Makefile	/^CXXFLAGS =  -pthread$/;"	m
CXXFLAGS	tools/Makefile	/^CXXFLAGS =  -pthread$/;"	m
CXXLD	src/atomic_ops/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	src/common/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	src/common/tests/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	src/fc/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	src/fc/tests/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	src/sm/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	src/sm/smsh/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	src/sm/tests/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	src/sthread/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	src/sthread/tests/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLINK	src/atomic_ops/Makefile	/^CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \\$/;"	m
CXXLINK	src/common/Makefile	/^CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \\$/;"	m
CXXLINK	src/common/tests/Makefile	/^CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \\$/;"	m
CXXLINK	src/fc/Makefile	/^CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \\$/;"	m
CXXLINK	src/fc/tests/Makefile	/^CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \\$/;"	m
CXXLINK	src/sm/Makefile	/^CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \\$/;"	m
CXXLINK	src/sm/smsh/Makefile	/^CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \\$/;"	m
CXXLINK	src/sm/tests/Makefile	/^CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \\$/;"	m
CXXLINK	src/sthread/Makefile	/^CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \\$/;"	m
CXXLINK	src/sthread/tests/Makefile	/^CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \\$/;"	m
CYGPATH_W	Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	config/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/atomic_ops/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/atomic_ops/asm_linkage/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/atomic_ops/asm_linkage/usr/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/atomic_ops/asm_linkage/usr/src/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/atomic_ops/atomic_ops/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/atomic_ops/atomic_ops/amd64/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/atomic_ops/atomic_ops/i386/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/atomic_ops/atomic_ops/sparc/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/atomic_ops/ia32/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/atomic_ops/ia32/sys/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/atomic_ops/intel/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/atomic_ops/intel/ia32/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/atomic_ops/intel/ia32/sys/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/atomic_ops/intel/sys/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/atomic_ops/sparc/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/atomic_ops/sparc/sys/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/common/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/common/tests/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/fc/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/fc/tests/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/sm/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/sm/smsh/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/sm/smsh/lib/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/sm/smsh/scripts/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/sm/tests/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/sthread/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/sthread/tests/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	tools/Makefile	/^CYGPATH_W = echo$/;"	m
C_STRING_BUG	src/fc/w_workaround.h	270;"	d
CharHeap	src/fc/tests/heap.cpp	/^typedef Heap<char, CmpFunction> CharHeap;$/;"	t	file:
CheckHeap	src/fc/w_heap.h	/^inline void Heap<T, Cmp>::CheckHeap() const$/;"	f	class:Heap
CheckHeapRoot	src/fc/w_heap.h	/^void Heap<T, Cmp>::CheckHeapRoot(int rootElem) const$/;"	f	class:Heap
Clear	src/sm/sm_du_stats.h	/^inline void SmFileMetaStats::Clear()$/;"	f	class:SmFileMetaStats
Clear	src/sm/sm_du_stats.h	/^inline void SmStoreMetaStats::Clear()$/;"	f	class:SmStoreMetaStats
Clear	src/sm/sm_du_stats.h	/^inline void SmVolumeMetaStats::Clear()$/;"	f	class:SmVolumeMetaStats
ClearAllLoadStores	src/sm/xct.cpp	/^xct_t::ClearAllLoadStores()$/;"	f	class:xct_t
ClearAllStoresToFree	src/sm/xct.cpp	/^xct_t::ClearAllStoresToFree()$/;"	f	class:xct_t
CmpFunction	src/fc/tests/heap.cpp	/^typedef CmpGreaterFunction<char> CmpFunction;$/;"	t	file:
CmpFunction	src/fc/tests/heap.cpp	/^typedef CmpLessFunction<char> CmpFunction;$/;"	t	file:
CmpGreaterFunction	src/fc/tests/heap.cpp	/^template<class T> class CmpGreaterFunction$/;"	c	file:
CmpLessFunction	src/fc/tests/heap.cpp	/^template<class T> class CmpLessFunction$/;"	c	file:
CmpXctUndoLsns	src/sm/restart.h	/^class CmpXctUndoLsns$/;"	c
CompareOp	src/fc/w_base.h	/^    enum CompareOp {$/;"	g	class:w_base_t
CompileTimeAssertion	src/fc/w_base.h	/^template<> struct CompileTimeAssertion<true> { void reference() {} };$/;"	s
ConvertAllLoadStoresToRegularStores	src/sm/xct.cpp	/^xct_t::ConvertAllLoadStoresToRegularStores()$/;"	f	class:xct_t
D	src/sm/tests/htab.cpp	210;"	d	file:
D	src/sm/tests/htab.cpp	229;"	d	file:
D	src/sm/tests/htab.cpp	230;"	d	file:
D	src/sm/tests/htab.cpp	246;"	d	file:
D16	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	53;"	d
D16	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	69;"	d
D16	src/atomic_ops/ia32/sys/asm_linkage.h	53;"	d
D16	src/atomic_ops/ia32/sys/asm_linkage.h	69;"	d
D16	src/atomic_ops/intel/ia32/sys/asm_linkage.h	53;"	d
D16	src/atomic_ops/intel/ia32/sys/asm_linkage.h	69;"	d
DBG	src/fc/w_debug.h	230;"	d
DBG	src/fc/w_debug.h	233;"	d
DBG	src/sm/smsh/sort_funcs3.cpp	180;"	d	file:
DBG	src/sm/smsh/sort_funcs3.cpp	181;"	d	file:
DBG	src/sm/smsh/sort_funcs3.cpp	84;"	d	file:
DBG	src/sm/smsh/sort_funcs3.cpp	85;"	d	file:
DBG1	src/fc/w_debug.h	222;"	d
DBGTHRD	src/fc/w_debug.h	238;"	d
DBGTHRD	src/sm/smthread.h	734;"	d
DBGTHRD	src/sm/smthread.h	736;"	d
DBGX	src/sm/xct.cpp	102;"	d	file:
DEBUGFLAGS	Makefile	/^DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \\$/;"	m
DEBUGFLAGS	config/Makefile	/^DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \\$/;"	m
DEBUGFLAGS	src/Makefile	/^DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \\$/;"	m
DEBUGFLAGS	src/atomic_ops/Makefile	/^DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \\$/;"	m
DEBUGFLAGS	src/atomic_ops/asm_linkage/Makefile	/^DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \\$/;"	m
DEBUGFLAGS	src/atomic_ops/asm_linkage/usr/Makefile	/^DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \\$/;"	m
DEBUGFLAGS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \\$/;"	m
DEBUGFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \\$/;"	m
DEBUGFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \\$/;"	m
DEBUGFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \\$/;"	m
DEBUGFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \\$/;"	m
DEBUGFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \\$/;"	m
DEBUGFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \\$/;"	m
DEBUGFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \\$/;"	m
DEBUGFLAGS	src/atomic_ops/atomic_ops/Makefile	/^DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \\$/;"	m
DEBUGFLAGS	src/atomic_ops/atomic_ops/amd64/Makefile	/^DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \\$/;"	m
DEBUGFLAGS	src/atomic_ops/atomic_ops/i386/Makefile	/^DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \\$/;"	m
DEBUGFLAGS	src/atomic_ops/atomic_ops/sparc/Makefile	/^DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \\$/;"	m
DEBUGFLAGS	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \\$/;"	m
DEBUGFLAGS	src/atomic_ops/ia32/Makefile	/^DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \\$/;"	m
DEBUGFLAGS	src/atomic_ops/ia32/sys/Makefile	/^DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \\$/;"	m
DEBUGFLAGS	src/atomic_ops/intel/Makefile	/^DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \\$/;"	m
DEBUGFLAGS	src/atomic_ops/intel/ia32/Makefile	/^DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \\$/;"	m
DEBUGFLAGS	src/atomic_ops/intel/ia32/sys/Makefile	/^DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \\$/;"	m
DEBUGFLAGS	src/atomic_ops/intel/sys/Makefile	/^DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \\$/;"	m
DEBUGFLAGS	src/atomic_ops/sparc/Makefile	/^DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \\$/;"	m
DEBUGFLAGS	src/atomic_ops/sparc/sys/Makefile	/^DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \\$/;"	m
DEBUGFLAGS	src/common/Makefile	/^DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \\$/;"	m
DEBUGFLAGS	src/common/tests/Makefile	/^DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \\$/;"	m
DEBUGFLAGS	src/fc/Makefile	/^DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \\$/;"	m
DEBUGFLAGS	src/fc/tests/Makefile	/^DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \\$/;"	m
DEBUGFLAGS	src/sm/Makefile	/^DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \\$/;"	m
DEBUGFLAGS	src/sm/smsh/Makefile	/^DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \\$/;"	m
DEBUGFLAGS	src/sm/smsh/lib/Makefile	/^DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \\$/;"	m
DEBUGFLAGS	src/sm/smsh/scripts/Makefile	/^DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \\$/;"	m
DEBUGFLAGS	src/sm/tests/Makefile	/^DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \\$/;"	m
DEBUGFLAGS	src/sthread/Makefile	/^DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \\$/;"	m
DEBUGFLAGS	src/sthread/tests/Makefile	/^DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \\$/;"	m
DEBUGFLAGS	tools/Makefile	/^DEBUGFLAGS = $(GENERIC_NODEBUG_FLAGS) \\$/;"	m
DEBUG_DEADLOCK	src/sm/lock_core.cpp	456;"	d	file:
DEBUG_GNATS_77	src/sm/sm_du_stats.cpp	54;"	d	file:
DEBUG_LOCK_HASH	src/sm/lock_core.h	180;"	d
DECLARE_TLS	src/fc/tls.h	237;"	d
DECLARE_TLS_SCHWARZ	src/fc/tls.h	258;"	d
DEFAULT_DUMPRC	src/sm/smsh/shell.cpp	136;"	d	file:
DEFAULT_DUMPRC	src/sm/smsh/shell.cpp	138;"	d	file:
DEFAULT_INCLUDES	src/atomic_ops/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)\/config$/;"	m
DEFAULT_INCLUDES	src/common/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)\/config$/;"	m
DEFAULT_INCLUDES	src/common/tests/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)\/config$/;"	m
DEFAULT_INCLUDES	src/fc/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)\/config$/;"	m
DEFAULT_INCLUDES	src/fc/tests/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)\/config$/;"	m
DEFAULT_INCLUDES	src/sm/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)\/config$/;"	m
DEFAULT_INCLUDES	src/sm/smsh/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)\/config$/;"	m
DEFAULT_INCLUDES	src/sm/tests/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)\/config$/;"	m
DEFAULT_INCLUDES	src/sthread/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)\/config$/;"	m
DEFAULT_INCLUDES	src/sthread/tests/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)\/config$/;"	m
DEFAULT_STACK_SIZE	src/sthread/sthread_core_pthread.cpp	80;"	d	file:
DEFINE_TLS_SCHWARZ	src/fc/tls.h	271;"	d
DEFS	Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	config/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/atomic_ops/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/atomic_ops/asm_linkage/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/atomic_ops/asm_linkage/usr/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/atomic_ops/atomic_ops/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/atomic_ops/atomic_ops/amd64/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/atomic_ops/atomic_ops/i386/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/atomic_ops/atomic_ops/sparc/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/atomic_ops/ia32/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/atomic_ops/ia32/sys/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/atomic_ops/intel/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/atomic_ops/intel/ia32/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/atomic_ops/intel/ia32/sys/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/atomic_ops/intel/sys/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/atomic_ops/sparc/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/atomic_ops/sparc/sys/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/common/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/common/tests/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/fc/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/fc/tests/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/sm/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/sm/smsh/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/sm/smsh/lib/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/sm/smsh/scripts/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/sm/tests/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/sthread/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/sthread/tests/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	tools/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEF_LOCK_X_TYPE	src/sm/lock_x.h	339;"	d
DELAY_SPIN	src/atomic_ops/atomic_ops/sparcv9/atomic.s	/^#define	DELAY_SPIN(label, tmp1, tmp2)					\\$/;"	d
DELAY_SPIN	src/atomic_ops/atomic_ops/sparcv9/atomic.s	/^#define	DELAY_SPIN(label, tmp1, tmp2)	\\$/;"	d
DELETE_CORE	src/sm/xct.cpp	548;"	d	file:
DELETE_CORE	src/sm/xct.cpp	557;"	d	file:
DELETE_CORE	src/sm/xct.cpp	563;"	d	file:
DELETE_LOCK_REQUEST	src/sm/lock_core.cpp	96;"	d	file:
DELETE_LOCK_REQUEST	src/sm/lock_core.cpp	99;"	d	file:
DELETE_XCT	src/sm/xct.cpp	546;"	d	file:
DELETE_XCT	src/sm/xct.cpp	555;"	d	file:
DELETE_XCT	src/sm/xct.cpp	561;"	d	file:
DEPDIR	Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	config/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/atomic_ops/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/atomic_ops/asm_linkage/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/atomic_ops/asm_linkage/usr/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/atomic_ops/asm_linkage/usr/src/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/atomic_ops/atomic_ops/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/atomic_ops/atomic_ops/amd64/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/atomic_ops/atomic_ops/i386/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/atomic_ops/atomic_ops/sparc/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/atomic_ops/ia32/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/atomic_ops/ia32/sys/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/atomic_ops/intel/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/atomic_ops/intel/ia32/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/atomic_ops/intel/ia32/sys/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/atomic_ops/intel/sys/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/atomic_ops/sparc/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/atomic_ops/sparc/sys/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/common/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/common/tests/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/fc/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/fc/tests/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/sm/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/sm/smsh/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/sm/smsh/lib/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/sm/smsh/scripts/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/sm/tests/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/sthread/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/sthread/tests/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	tools/Makefile	/^DEPDIR = .deps$/;"	m
DEVICE_C	src/sm/device.cpp	58;"	d	file:
DEVICE_H	src/sm/device.h	31;"	d
DEVID_T_C	src/common/devid_t.cpp	57;"	d	file:
DEVID_T_H	src/common/devid_t.h	31;"	d
DGDEF	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	281;"	d
DGDEF	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/asm_linkage.h	235;"	d
DGDEF	src/atomic_ops/ia32/sys/asm_linkage.h	281;"	d
DGDEF	src/atomic_ops/intel/ia32/sys/asm_linkage.h	281;"	d
DGDEF	src/atomic_ops/sparc/sys/asm_linkage.h	235;"	d
DGDEF2	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	266;"	d
DGDEF2	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/asm_linkage.h	220;"	d
DGDEF2	src/atomic_ops/ia32/sys/asm_linkage.h	266;"	d
DGDEF2	src/atomic_ops/intel/ia32/sys/asm_linkage.h	266;"	d
DGDEF2	src/atomic_ops/sparc/sys/asm_linkage.h	220;"	d
DGDEF3	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	273;"	d
DGDEF3	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/asm_linkage.h	227;"	d
DGDEF3	src/atomic_ops/ia32/sys/asm_linkage.h	273;"	d
DGDEF3	src/atomic_ops/intel/ia32/sys/asm_linkage.h	273;"	d
DGDEF3	src/atomic_ops/sparc/sys/asm_linkage.h	227;"	d
DIR_C	src/sm/dir.cpp	59;"	d	file:
DIR_H	src/sm/dir.h	54;"	d
DISTCLEANFILES	Makefile	/^DISTCLEANFILES = Makefile $(GENFILES)$/;"	m
DISTCLEANFILES	config/Makefile	/^DISTCLEANFILES = Makefile $(GENFILES)$/;"	m
DISTCLEANFILES	src/Makefile	/^DISTCLEANFILES = Makefile $(GENFILES)$/;"	m
DISTCLEANFILES	src/atomic_ops/Makefile	/^DISTCLEANFILES = Makefile $(GENFILES)$/;"	m
DISTCLEANFILES	src/atomic_ops/asm_linkage/Makefile	/^DISTCLEANFILES = Makefile $(GENFILES)$/;"	m
DISTCLEANFILES	src/atomic_ops/asm_linkage/usr/Makefile	/^DISTCLEANFILES = Makefile $(GENFILES)$/;"	m
DISTCLEANFILES	src/atomic_ops/asm_linkage/usr/src/Makefile	/^DISTCLEANFILES = Makefile $(GENFILES)$/;"	m
DISTCLEANFILES	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^DISTCLEANFILES = Makefile $(GENFILES)$/;"	m
DISTCLEANFILES	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^DISTCLEANFILES = Makefile $(GENFILES)$/;"	m
DISTCLEANFILES	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^DISTCLEANFILES = Makefile $(GENFILES)$/;"	m
DISTCLEANFILES	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^DISTCLEANFILES = Makefile $(GENFILES)$/;"	m
DISTCLEANFILES	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^DISTCLEANFILES = Makefile $(GENFILES)$/;"	m
DISTCLEANFILES	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^DISTCLEANFILES = Makefile $(GENFILES)$/;"	m
DISTCLEANFILES	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^DISTCLEANFILES = Makefile $(GENFILES)$/;"	m
DISTCLEANFILES	src/atomic_ops/atomic_ops/Makefile	/^DISTCLEANFILES = Makefile $(GENFILES)$/;"	m
DISTCLEANFILES	src/atomic_ops/atomic_ops/amd64/Makefile	/^DISTCLEANFILES = Makefile $(GENFILES)$/;"	m
DISTCLEANFILES	src/atomic_ops/atomic_ops/i386/Makefile	/^DISTCLEANFILES = Makefile $(GENFILES)$/;"	m
DISTCLEANFILES	src/atomic_ops/atomic_ops/sparc/Makefile	/^DISTCLEANFILES = Makefile $(GENFILES)$/;"	m
DISTCLEANFILES	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^DISTCLEANFILES = Makefile $(GENFILES)$/;"	m
DISTCLEANFILES	src/atomic_ops/ia32/Makefile	/^DISTCLEANFILES = Makefile $(GENFILES)$/;"	m
DISTCLEANFILES	src/atomic_ops/ia32/sys/Makefile	/^DISTCLEANFILES = Makefile $(GENFILES)$/;"	m
DISTCLEANFILES	src/atomic_ops/intel/Makefile	/^DISTCLEANFILES = Makefile $(GENFILES)$/;"	m
DISTCLEANFILES	src/atomic_ops/intel/ia32/Makefile	/^DISTCLEANFILES = Makefile $(GENFILES)$/;"	m
DISTCLEANFILES	src/atomic_ops/intel/ia32/sys/Makefile	/^DISTCLEANFILES = Makefile $(GENFILES)$/;"	m
DISTCLEANFILES	src/atomic_ops/intel/sys/Makefile	/^DISTCLEANFILES = Makefile $(GENFILES)$/;"	m
DISTCLEANFILES	src/atomic_ops/sparc/Makefile	/^DISTCLEANFILES = Makefile $(GENFILES)$/;"	m
DISTCLEANFILES	src/atomic_ops/sparc/sys/Makefile	/^DISTCLEANFILES = Makefile $(GENFILES)$/;"	m
DISTCLEANFILES	src/common/Makefile	/^DISTCLEANFILES = Makefile $(GENFILES)$/;"	m
DISTCLEANFILES	src/common/tests/Makefile	/^DISTCLEANFILES = Makefile $(GENFILES)$/;"	m
DISTCLEANFILES	src/fc/Makefile	/^DISTCLEANFILES = Makefile $(GENFILES)$/;"	m
DISTCLEANFILES	src/fc/tests/Makefile	/^DISTCLEANFILES = Makefile $(GENFILES)$/;"	m
DISTCLEANFILES	src/sm/Makefile	/^DISTCLEANFILES = Makefile $(GENFILES)$/;"	m
DISTCLEANFILES	src/sm/smsh/Makefile	/^DISTCLEANFILES = Makefile $(GENFILES)$/;"	m
DISTCLEANFILES	src/sm/smsh/lib/Makefile	/^DISTCLEANFILES = Makefile $(GENFILES)$/;"	m
DISTCLEANFILES	src/sm/smsh/scripts/Makefile	/^DISTCLEANFILES = Makefile $(GENFILES)$/;"	m
DISTCLEANFILES	src/sm/tests/Makefile	/^DISTCLEANFILES = Makefile $(GENFILES)$/;"	m
DISTCLEANFILES	src/sthread/Makefile	/^DISTCLEANFILES = Makefile $(GENFILES)$/;"	m
DISTCLEANFILES	src/sthread/tests/Makefile	/^DISTCLEANFILES = Makefile $(GENFILES)$/;"	m
DISTCLEANFILES	tools/Makefile	/^DISTCLEANFILES = Makefile $(GENFILES)$/;"	m
DISTFILES	Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	config/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/atomic_ops/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/atomic_ops/asm_linkage/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/atomic_ops/asm_linkage/usr/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/atomic_ops/asm_linkage/usr/src/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/atomic_ops/atomic_ops/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/atomic_ops/atomic_ops/amd64/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/atomic_ops/atomic_ops/i386/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/atomic_ops/atomic_ops/sparc/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/atomic_ops/ia32/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/atomic_ops/ia32/sys/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/atomic_ops/intel/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/atomic_ops/intel/ia32/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/atomic_ops/intel/ia32/sys/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/atomic_ops/intel/sys/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/atomic_ops/sparc/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/atomic_ops/sparc/sys/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/common/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/common/tests/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/fc/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/fc/tests/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/sm/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/sm/smsh/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/sm/smsh/lib/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/sm/smsh/scripts/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/sm/tests/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/sthread/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/sthread/tests/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	tools/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DIST_ARCHIVES	Makefile	/^DIST_ARCHIVES = $(distdir).tar.gz $(distdir).tar.bz2$/;"	m
DIST_COMMON	Makefile	/^DIST_COMMON = $(top_srcdir)\/Makefile.generic \\$/;"	m
DIST_COMMON	config/Makefile	/^DIST_COMMON = $(top_srcdir)\/Makefile.generic \\$/;"	m
DIST_COMMON	src/Makefile	/^DIST_COMMON = $(top_srcdir)\/Makefile.generic \\$/;"	m
DIST_COMMON	src/atomic_ops/Makefile	/^DIST_COMMON = $(top_srcdir)\/Makefile.generic \\$/;"	m
DIST_COMMON	src/atomic_ops/asm_linkage/Makefile	/^DIST_COMMON = $(top_srcdir)\/Makefile.generic \\$/;"	m
DIST_COMMON	src/atomic_ops/asm_linkage/usr/Makefile	/^DIST_COMMON = $(top_srcdir)\/Makefile.generic \\$/;"	m
DIST_COMMON	src/atomic_ops/asm_linkage/usr/src/Makefile	/^DIST_COMMON = $(top_srcdir)\/Makefile.generic \\$/;"	m
DIST_COMMON	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^DIST_COMMON = $(top_srcdir)\/Makefile.generic \\$/;"	m
DIST_COMMON	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^DIST_COMMON = $(top_srcdir)\/Makefile.generic \\$/;"	m
DIST_COMMON	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^DIST_COMMON = $(top_srcdir)\/Makefile.generic \\$/;"	m
DIST_COMMON	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^DIST_COMMON = $(top_srcdir)\/Makefile.generic \\$/;"	m
DIST_COMMON	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^DIST_COMMON = $(top_srcdir)\/Makefile.generic \\$/;"	m
DIST_COMMON	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^DIST_COMMON = $(top_srcdir)\/Makefile.generic \\$/;"	m
DIST_COMMON	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^DIST_COMMON = $(top_srcdir)\/Makefile.generic \\$/;"	m
DIST_COMMON	src/atomic_ops/atomic_ops/Makefile	/^DIST_COMMON = $(top_srcdir)\/Makefile.generic \\$/;"	m
DIST_COMMON	src/atomic_ops/atomic_ops/amd64/Makefile	/^DIST_COMMON = $(top_srcdir)\/Makefile.generic \\$/;"	m
DIST_COMMON	src/atomic_ops/atomic_ops/i386/Makefile	/^DIST_COMMON = $(top_srcdir)\/Makefile.generic \\$/;"	m
DIST_COMMON	src/atomic_ops/atomic_ops/sparc/Makefile	/^DIST_COMMON = $(top_srcdir)\/Makefile.generic \\$/;"	m
DIST_COMMON	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^DIST_COMMON = $(top_srcdir)\/Makefile.generic \\$/;"	m
DIST_COMMON	src/atomic_ops/ia32/Makefile	/^DIST_COMMON = $(top_srcdir)\/Makefile.generic \\$/;"	m
DIST_COMMON	src/atomic_ops/ia32/sys/Makefile	/^DIST_COMMON = $(top_srcdir)\/Makefile.generic \\$/;"	m
DIST_COMMON	src/atomic_ops/intel/Makefile	/^DIST_COMMON = $(top_srcdir)\/Makefile.generic \\$/;"	m
DIST_COMMON	src/atomic_ops/intel/ia32/Makefile	/^DIST_COMMON = $(top_srcdir)\/Makefile.generic \\$/;"	m
DIST_COMMON	src/atomic_ops/intel/ia32/sys/Makefile	/^DIST_COMMON = $(top_srcdir)\/Makefile.generic \\$/;"	m
DIST_COMMON	src/atomic_ops/intel/sys/Makefile	/^DIST_COMMON = $(top_srcdir)\/Makefile.generic \\$/;"	m
DIST_COMMON	src/atomic_ops/sparc/Makefile	/^DIST_COMMON = $(top_srcdir)\/Makefile.generic \\$/;"	m
DIST_COMMON	src/atomic_ops/sparc/sys/Makefile	/^DIST_COMMON = $(top_srcdir)\/Makefile.generic \\$/;"	m
DIST_COMMON	src/common/Makefile	/^DIST_COMMON = $(top_srcdir)\/Makefile.generic \\$/;"	m
DIST_COMMON	src/common/tests/Makefile	/^DIST_COMMON = $(top_srcdir)\/Makefile.generic \\$/;"	m
DIST_COMMON	src/fc/Makefile	/^DIST_COMMON = $(top_srcdir)\/Makefile.generic \\$/;"	m
DIST_COMMON	src/fc/tests/Makefile	/^DIST_COMMON = $(top_srcdir)\/Makefile.generic \\$/;"	m
DIST_COMMON	src/sm/Makefile	/^DIST_COMMON = $(top_srcdir)\/Makefile.generic \\$/;"	m
DIST_COMMON	src/sm/smsh/Makefile	/^DIST_COMMON = $(top_srcdir)\/Makefile.generic \\$/;"	m
DIST_COMMON	src/sm/smsh/lib/Makefile	/^DIST_COMMON = $(top_srcdir)\/Makefile.generic \\$/;"	m
DIST_COMMON	src/sm/smsh/scripts/Makefile	/^DIST_COMMON = $(top_srcdir)\/Makefile.generic \\$/;"	m
DIST_COMMON	src/sm/tests/Makefile	/^DIST_COMMON = $(top_srcdir)\/Makefile.generic \\$/;"	m
DIST_COMMON	src/sthread/Makefile	/^DIST_COMMON = $(top_srcdir)\/Makefile.generic \\$/;"	m
DIST_COMMON	src/sthread/tests/Makefile	/^DIST_COMMON = $(top_srcdir)\/Makefile.generic \\$/;"	m
DIST_COMMON	tools/Makefile	/^DIST_COMMON = $(top_srcdir)\/Makefile.generic \\$/;"	m
DIST_SOURCES	Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	config/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	src/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	src/atomic_ops/Makefile	/^DIST_SOURCES = $(am__libatomic_ops_a_SOURCES_DIST)$/;"	m
DIST_SOURCES	src/atomic_ops/asm_linkage/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	src/atomic_ops/asm_linkage/usr/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	src/atomic_ops/asm_linkage/usr/src/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	src/atomic_ops/atomic_ops/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	src/atomic_ops/atomic_ops/amd64/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	src/atomic_ops/atomic_ops/i386/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	src/atomic_ops/atomic_ops/sparc/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	src/atomic_ops/ia32/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	src/atomic_ops/ia32/sys/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	src/atomic_ops/intel/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	src/atomic_ops/intel/ia32/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	src/atomic_ops/intel/ia32/sys/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	src/atomic_ops/intel/sys/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	src/atomic_ops/sparc/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	src/atomic_ops/sparc/sys/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	src/common/Makefile	/^DIST_SOURCES = $(libcommon_a_SOURCES)$/;"	m
DIST_SOURCES	src/common/tests/Makefile	/^DIST_SOURCES = $(bitmap_SOURCES) $(errcodes_SOURCES) $(kvl_SOURCES) \\$/;"	m
DIST_SOURCES	src/fc/Makefile	/^DIST_SOURCES = $(libfc_a_SOURCES)$/;"	m
DIST_SOURCES	src/fc/tests/Makefile	/^DIST_SOURCES = $(basic_sizes_SOURCES) $(bitvector_SOURCES) \\$/;"	m
DIST_SOURCES	src/sm/Makefile	/^DIST_SOURCES = $(libsm_a_SOURCES)$/;"	m
DIST_SOURCES	src/sm/smsh/Makefile	/^DIST_SOURCES = $(random_kick_SOURCES) $(smsh_SOURCES)$/;"	m
DIST_SOURCES	src/sm/smsh/lib/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	src/sm/smsh/scripts/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	src/sm/tests/Makefile	/^DIST_SOURCES = $(create_rec_SOURCES) $(file_scan_SOURCES) \\$/;"	m
DIST_SOURCES	src/sthread/Makefile	/^DIST_SOURCES = $(libsthread_a_SOURCES)$/;"	m
DIST_SOURCES	src/sthread/tests/Makefile	/^DIST_SOURCES = $(except_SOURCES) $(ioperf_SOURCES) $(mmap_SOURCES) \\$/;"	m
DIST_SOURCES	tools/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SUBDIRS	Makefile	/^DIST_SUBDIRS = tools $(SUBDIRS) $/;"	m
DIST_SUBDIRS	src/Makefile	/^DIST_SUBDIRS = $(SUBDIRS)$/;"	m
DIST_SUBDIRS	src/atomic_ops/Makefile	/^DIST_SUBDIRS = $(SUBDIRS)$/;"	m
DIST_SUBDIRS	src/atomic_ops/asm_linkage/Makefile	/^DIST_SUBDIRS = $(SUBDIRS)$/;"	m
DIST_SUBDIRS	src/atomic_ops/asm_linkage/usr/Makefile	/^DIST_SUBDIRS = $(SUBDIRS)$/;"	m
DIST_SUBDIRS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^DIST_SUBDIRS = uts$/;"	m
DIST_SUBDIRS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^DIST_SUBDIRS = intel sparc$/;"	m
DIST_SUBDIRS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^DIST_SUBDIRS = ia32 sys$/;"	m
DIST_SUBDIRS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^DIST_SUBDIRS = sys$/;"	m
DIST_SUBDIRS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^DIST_SUBDIRS = sys$/;"	m
DIST_SUBDIRS	src/atomic_ops/atomic_ops/Makefile	/^DIST_SUBDIRS = amd64 i386 sparc sparcv9$/;"	m
DIST_SUBDIRS	src/atomic_ops/ia32/Makefile	/^DIST_SUBDIRS = sys$/;"	m
DIST_SUBDIRS	src/atomic_ops/intel/Makefile	/^DIST_SUBDIRS = ia32 sys$/;"	m
DIST_SUBDIRS	src/atomic_ops/intel/ia32/Makefile	/^DIST_SUBDIRS = sys$/;"	m
DIST_SUBDIRS	src/atomic_ops/sparc/Makefile	/^DIST_SUBDIRS = sys$/;"	m
DIST_SUBDIRS	src/common/Makefile	/^DIST_SUBDIRS = $(SUBDIRS)$/;"	m
DIST_SUBDIRS	src/fc/Makefile	/^DIST_SUBDIRS = $(SUBDIRS)$/;"	m
DIST_SUBDIRS	src/sm/Makefile	/^DIST_SUBDIRS = $(SUBDIRS)$/;"	m
DIST_SUBDIRS	src/sm/smsh/Makefile	/^DIST_SUBDIRS = $(SUBDIRS)$/;"	m
DIST_SUBDIRS	src/sm/smsh/lib/Makefile	/^DIST_SUBDIRS = $(SUBDIRS)$/;"	m
DIST_SUBDIRS	src/sm/smsh/scripts/Makefile	/^DIST_SUBDIRS = $(SUBDIRS)$/;"	m
DIST_SUBDIRS	src/sthread/Makefile	/^DIST_SUBDIRS = $(SUBDIRS)$/;"	m
DIST_TARGETS	Makefile	/^DIST_TARGETS = dist-bzip2 dist-gzip$/;"	m
DO	src/sm/smsh/shell.h	119;"	d
DO	src/sm/smsh/shell.h	120;"	d
DO	src/sm/smsh/smsh.h	44;"	d
DO	src/sm/smsh/smsh.h	46;"	d
DONTCARE	src/sm/smsh/shell2.cpp	1935;"	d	file:
DO_GOTO	src/sm/smsh/shell.h	133;"	d
DO_GOTO	src/sm/smsh/shell.h	134;"	d
DO_PTHREAD	src/sthread/sthread.h	1151;"	d
DO_PTHREAD_BARRIER	src/sthread/sthread.h	1140;"	d
DO_PTHREAD_TIMED	src/sthread/sthread.h	1162;"	d
DROP	src/common/regcomp.cpp	144;"	d	file:
DSCB	src/sm/smsh/shell.h	/^typedef void (*DSCB) (pin_i &);$/;"	t
DTRACE	Makefile	/^DTRACE = $/;"	m
DTRACE	config/Makefile	/^DTRACE = $/;"	m
DTRACE	src/Makefile	/^DTRACE = $/;"	m
DTRACE	src/atomic_ops/Makefile	/^DTRACE = $/;"	m
DTRACE	src/atomic_ops/asm_linkage/Makefile	/^DTRACE = $/;"	m
DTRACE	src/atomic_ops/asm_linkage/usr/Makefile	/^DTRACE = $/;"	m
DTRACE	src/atomic_ops/asm_linkage/usr/src/Makefile	/^DTRACE = $/;"	m
DTRACE	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^DTRACE = $/;"	m
DTRACE	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^DTRACE = $/;"	m
DTRACE	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^DTRACE = $/;"	m
DTRACE	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^DTRACE = $/;"	m
DTRACE	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^DTRACE = $/;"	m
DTRACE	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^DTRACE = $/;"	m
DTRACE	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^DTRACE = $/;"	m
DTRACE	src/atomic_ops/atomic_ops/Makefile	/^DTRACE = $/;"	m
DTRACE	src/atomic_ops/atomic_ops/amd64/Makefile	/^DTRACE = $/;"	m
DTRACE	src/atomic_ops/atomic_ops/i386/Makefile	/^DTRACE = $/;"	m
DTRACE	src/atomic_ops/atomic_ops/sparc/Makefile	/^DTRACE = $/;"	m
DTRACE	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^DTRACE = $/;"	m
DTRACE	src/atomic_ops/ia32/Makefile	/^DTRACE = $/;"	m
DTRACE	src/atomic_ops/ia32/sys/Makefile	/^DTRACE = $/;"	m
DTRACE	src/atomic_ops/intel/Makefile	/^DTRACE = $/;"	m
DTRACE	src/atomic_ops/intel/ia32/Makefile	/^DTRACE = $/;"	m
DTRACE	src/atomic_ops/intel/ia32/sys/Makefile	/^DTRACE = $/;"	m
DTRACE	src/atomic_ops/intel/sys/Makefile	/^DTRACE = $/;"	m
DTRACE	src/atomic_ops/sparc/Makefile	/^DTRACE = $/;"	m
DTRACE	src/atomic_ops/sparc/sys/Makefile	/^DTRACE = $/;"	m
DTRACE	src/common/Makefile	/^DTRACE = $/;"	m
DTRACE	src/common/tests/Makefile	/^DTRACE = $/;"	m
DTRACE	src/fc/Makefile	/^DTRACE = $/;"	m
DTRACE	src/fc/tests/Makefile	/^DTRACE = $/;"	m
DTRACE	src/sm/Makefile	/^DTRACE = $/;"	m
DTRACE	src/sm/smsh/Makefile	/^DTRACE = $/;"	m
DTRACE	src/sm/smsh/lib/Makefile	/^DTRACE = $/;"	m
DTRACE	src/sm/smsh/scripts/Makefile	/^DTRACE = $/;"	m
DTRACE	src/sm/tests/Makefile	/^DTRACE = $/;"	m
DTRACE	src/sthread/Makefile	/^DTRACE = $/;"	m
DTRACE	src/sthread/tests/Makefile	/^DTRACE = $/;"	m
DTRACE	tools/Makefile	/^DTRACE = $/;"	m
DUMMY_CLUSTER_ID	src/sm/file.h	113;"	d
DUMP	src/fc/w_debug.h	148;"	d
DUMP	src/fc/w_debug.h	167;"	d
DUMP2	src/fc/tests/cuckoo.cpp	152;"	d	file:
DUMPRC	src/sm/smsh/shell.h	114;"	d
DUMPRC	src/sm/smsh/shell.h	116;"	d
DUPMAX	src/common/regex_utils.h	56;"	d
DUPMAX	src/common/regex_utils.h	58;"	d
Dbyteorder	src/sm/lexify.cpp	/^sortorder::Dbyteorder(int permutation[8]) $/;"	f	class:sortorder
DecreasedN	src/fc/w_heap.h	/^inline void Heap<T, Cmp>::DecreasedN(int n)$/;"	f	class:Heap
Decrement	src/sm/xct.cpp	/^        int Decrement(int vol)$/;"	f	class:VolidCnt
DefaultNumThreads	src/sthread/tests/thread1.cpp	47;"	d	file:
DefaultPongTimes	src/sthread/tests/thread1.cpp	49;"	d	file:
Dperm	src/sm/lexify.h	/^    int Dperm[8];$/;"	m	class:sortorder
DumpBlockedThreads	src/sm/smthread.cpp	/^DumpBlockedThreads(ostream& o)$/;"	f
DumpInThreads	src/sthread/tests/thread1.cpp	/^bool	DumpInThreads = false;$/;"	v
DumpStoresToFree	src/sm/xct.cpp	/^xct_t::DumpStoresToFree()$/;"	f	class:xct_t
DumpThreads	src/sthread/tests/thread1.cpp	/^bool	DumpThreads = false;$/;"	v
EAT	src/common/regcomp.cpp	126;"	d	file:
EATTWO	src/common/regcomp.cpp	127;"	d	file:
ECHO_C	Makefile	/^ECHO_C = $/;"	m
ECHO_C	config/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/atomic_ops/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/atomic_ops/asm_linkage/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/atomic_ops/asm_linkage/usr/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/atomic_ops/asm_linkage/usr/src/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/atomic_ops/atomic_ops/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/atomic_ops/atomic_ops/amd64/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/atomic_ops/atomic_ops/i386/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/atomic_ops/atomic_ops/sparc/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/atomic_ops/ia32/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/atomic_ops/ia32/sys/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/atomic_ops/intel/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/atomic_ops/intel/ia32/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/atomic_ops/intel/ia32/sys/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/atomic_ops/intel/sys/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/atomic_ops/sparc/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/atomic_ops/sparc/sys/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/common/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/common/tests/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/fc/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/fc/tests/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/sm/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/sm/smsh/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/sm/smsh/lib/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/sm/smsh/scripts/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/sm/tests/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/sthread/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/sthread/tests/Makefile	/^ECHO_C = $/;"	m
ECHO_C	tools/Makefile	/^ECHO_C = $/;"	m
ECHO_N	Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	config/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/atomic_ops/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/atomic_ops/asm_linkage/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/atomic_ops/asm_linkage/usr/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/atomic_ops/asm_linkage/usr/src/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/atomic_ops/atomic_ops/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/atomic_ops/atomic_ops/amd64/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/atomic_ops/atomic_ops/i386/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/atomic_ops/atomic_ops/sparc/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/atomic_ops/ia32/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/atomic_ops/ia32/sys/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/atomic_ops/intel/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/atomic_ops/intel/ia32/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/atomic_ops/intel/ia32/sys/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/atomic_ops/intel/sys/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/atomic_ops/sparc/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/atomic_ops/sparc/sys/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/common/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/common/tests/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/fc/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/fc/tests/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/sm/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/sm/smsh/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/sm/smsh/lib/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/sm/smsh/scripts/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/sm/tests/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/sthread/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/sthread/tests/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	tools/Makefile	/^ECHO_N = -n$/;"	m
ECHO_T	Makefile	/^ECHO_T = $/;"	m
ECHO_T	config/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/atomic_ops/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/atomic_ops/asm_linkage/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/atomic_ops/asm_linkage/usr/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/atomic_ops/asm_linkage/usr/src/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/atomic_ops/atomic_ops/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/atomic_ops/atomic_ops/amd64/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/atomic_ops/atomic_ops/i386/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/atomic_ops/atomic_ops/sparc/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/atomic_ops/ia32/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/atomic_ops/ia32/sys/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/atomic_ops/intel/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/atomic_ops/intel/ia32/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/atomic_ops/intel/ia32/sys/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/atomic_ops/intel/sys/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/atomic_ops/sparc/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/atomic_ops/sparc/sys/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/common/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/common/tests/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/fc/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/fc/tests/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/sm/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/sm/smsh/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/sm/smsh/lib/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/sm/smsh/scripts/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/sm/tests/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/sthread/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/sthread/tests/Makefile	/^ECHO_T = $/;"	m
ECHO_T	tools/Makefile	/^ECHO_T = $/;"	m
EGREP	Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	config/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/atomic_ops/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/atomic_ops/asm_linkage/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/atomic_ops/asm_linkage/usr/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/atomic_ops/asm_linkage/usr/src/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/atomic_ops/atomic_ops/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/atomic_ops/atomic_ops/amd64/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/atomic_ops/atomic_ops/i386/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/atomic_ops/atomic_ops/sparc/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/atomic_ops/ia32/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/atomic_ops/ia32/sys/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/atomic_ops/intel/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/atomic_ops/intel/ia32/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/atomic_ops/intel/ia32/sys/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/atomic_ops/intel/sys/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/atomic_ops/sparc/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/atomic_ops/sparc/sys/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/common/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/common/tests/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/fc/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/fc/tests/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/sm/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/sm/smsh/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/sm/smsh/lib/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/sm/smsh/scripts/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/sm/tests/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/sthread/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/sthread/tests/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	tools/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
ELEN_	src/sm/smsh/shell.cpp	3931;"	d	file:
ELSIZE	src/sm/smsh/shell.cpp	3845;"	d	file:
ELSIZE	src/sm/smsh/shell2.cpp	3011;"	d	file:
EMIT	src/common/regcomp.cpp	137;"	d	file:
EMPTY_ARRAY_DIM	src/fc/mem_block.h	56;"	d
ENTRY	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	203;"	d
ENTRY	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/asm_linkage.h	155;"	d
ENTRY	src/atomic_ops/ia32/sys/asm_linkage.h	203;"	d
ENTRY	src/atomic_ops/intel/ia32/sys/asm_linkage.h	203;"	d
ENTRY	src/atomic_ops/sparc/sys/asm_linkage.h	155;"	d
ENTRY2	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	227;"	d
ENTRY2	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/asm_linkage.h	181;"	d
ENTRY2	src/atomic_ops/ia32/sys/asm_linkage.h	227;"	d
ENTRY2	src/atomic_ops/intel/ia32/sys/asm_linkage.h	227;"	d
ENTRY2	src/atomic_ops/sparc/sys/asm_linkage.h	181;"	d
ENTRY_NP	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	210;"	d
ENTRY_NP	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/asm_linkage.h	164;"	d
ENTRY_NP	src/atomic_ops/ia32/sys/asm_linkage.h	210;"	d
ENTRY_NP	src/atomic_ops/intel/ia32/sys/asm_linkage.h	210;"	d
ENTRY_NP	src/atomic_ops/sparc/sys/asm_linkage.h	164;"	d
ENTRY_NP2	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	237;"	d
ENTRY_NP2	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/asm_linkage.h	191;"	d
ENTRY_NP2	src/atomic_ops/ia32/sys/asm_linkage.h	237;"	d
ENTRY_NP2	src/atomic_ops/intel/ia32/sys/asm_linkage.h	237;"	d
ENTRY_NP2	src/atomic_ops/sparc/sys/asm_linkage.h	191;"	d
ENTRY_SIZE	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/asm_linkage.h	162;"	d
ENTRY_SIZE	src/atomic_ops/sparc/sys/asm_linkage.h	162;"	d
EOL	src/common/regex_engine_i.h	61;"	d
EOW	src/common/regex_engine_i.h	65;"	d
EQ	src/common/regexec.cpp	108;"	d	file:
EQ	src/common/regexec.cpp	129;"	d	file:
EQ	src/common/regexec.cpp	82;"	d	file:
ERRLOG_BUF_SIZE	src/fc/errlog.cpp	74;"	d	file:
ERRLOG_BUF_SIZE	src/fc/errlog.cpp	76;"	d	file:
ERRLOG_H	src/fc/errlog.h	31;"	d
ERRLOG_S_H	src/fc/errlog_s.h	31;"	d
ERRORLOG__MAGIC	src/fc/errlog.h	/^    enum { ERRORLOG__MAGIC = 0xa2d29754 };$/;"	e	enum:ErrLog::__anon125
ETAGS	Makefile	/^ETAGS = etags$/;"	m
ETAGS	config/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/atomic_ops/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/atomic_ops/asm_linkage/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/atomic_ops/asm_linkage/usr/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/atomic_ops/atomic_ops/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/atomic_ops/ia32/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/atomic_ops/ia32/sys/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/atomic_ops/intel/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/atomic_ops/intel/ia32/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/atomic_ops/intel/ia32/sys/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/atomic_ops/intel/sys/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/atomic_ops/sparc/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/atomic_ops/sparc/sys/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/common/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/common/tests/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/fc/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/fc/tests/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/sm/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/sm/smsh/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/sm/smsh/lib/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/sm/smsh/scripts/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/sm/tests/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/sthread/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/sthread/tests/Makefile	/^ETAGS = etags$/;"	m
EX	src/common/basics.h	/^	static const lock_mode_t EX = w_base_t::EX;$/;"	m	namespace:locking
EX	src/fc/w_base.h	/^        EX            \/* exclusive (write)            *\/$/;"	e	enum:w_base_t::lock_mode_t
EXEEXT	Makefile	/^EXEEXT = $/;"	m
EXEEXT	config/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/atomic_ops/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/atomic_ops/asm_linkage/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/atomic_ops/asm_linkage/usr/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/atomic_ops/asm_linkage/usr/src/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/atomic_ops/atomic_ops/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/atomic_ops/atomic_ops/amd64/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/atomic_ops/atomic_ops/i386/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/atomic_ops/atomic_ops/sparc/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/atomic_ops/ia32/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/atomic_ops/ia32/sys/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/atomic_ops/intel/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/atomic_ops/intel/ia32/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/atomic_ops/intel/ia32/sys/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/atomic_ops/intel/sys/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/atomic_ops/sparc/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/atomic_ops/sparc/sys/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/common/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/common/tests/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/fc/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/fc/tests/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/sm/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/sm/smsh/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/sm/smsh/lib/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/sm/smsh/scripts/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/sm/tests/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/sthread/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/sthread/tests/Makefile	/^EXEEXT = $/;"	m
EXEEXT	tools/Makefile	/^EXEEXT = $/;"	m
EXPECT_ASSERT	src/fc/tests/test_me.h	63;"	d
EXPENSIVE_STATS	config/shore-config.h	20;"	d
EXTENT_H	src/sm/extent.h	54;"	d
EXTERN	src/sm/smsh/shell.h	48;"	d
EXTERN	src/sm/smsh/smsh.cpp	66;"	d	file:
EXTRA_DIST	Makefile	/^EXTRA_DIST = bootstrap Makefile.local Makefile.generic COPYRIGHT-NOTICE README ChangeLog Makefile.in gethugepagesize.sh Doxyfile$/;"	m
EXTRA_DIST	config/Makefile	/^EXTRA_DIST = shore.def$/;"	m
EXTRA_DIST	src/Makefile	/^EXTRA_DIST = api.h references.h internal.h mainpage.h$/;"	m
EXTRA_DIST	src/atomic_ops/Makefile	/^EXTRA_DIST = makelinks.sh$/;"	m
EXTRA_DIST	src/atomic_ops/atomic_ops/amd64/Makefile	/^EXTRA_DIST = atomic.s$/;"	m
EXTRA_DIST	src/atomic_ops/atomic_ops/i386/Makefile	/^EXTRA_DIST = atomic.s$/;"	m
EXTRA_DIST	src/atomic_ops/atomic_ops/sparc/Makefile	/^EXTRA_DIST = atomic.s$/;"	m
EXTRA_DIST	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^EXTRA_DIST = atomic.s$/;"	m
EXTRA_DIST	src/common/Makefile	/^EXTRA_DIST = opt_error.dat regex_engine.cpp$/;"	m
EXTRA_DIST	src/common/tests/Makefile	/^EXTRA_DIST = testall  $(RESULT_COMPARISON_FILES)$/;"	m
EXTRA_DIST	src/fc/Makefile	/^EXTRA_DIST = fc_error.dat$/;"	m
EXTRA_DIST	src/fc/tests/Makefile	/^EXTRA_DIST = testall test_stat.dat test_stat.h $(RESULT_COMPARISON_FILES) test_me.h$/;"	m
EXTRA_DIST	src/sm/Makefile	/^EXTRA_DIST = e_error.dat\\$/;"	m
EXTRA_DIST	src/sm/smsh/Makefile	/^EXTRA_DIST = test-short testall testall.maintainer \\$/;"	m
EXTRA_DIST	src/sm/smsh/lib/Makefile	/^EXTRA_DIST = smsh.tcl $/;"	m
EXTRA_DIST	src/sm/smsh/scripts/Makefile	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	src/sm/tests/Makefile	/^EXTRA_DIST = testall EXAMPLE_SHORECONFIG $(RESULT_COMPARISON_FILES)$/;"	m
EXTRA_DIST	src/sthread/Makefile	/^EXTRA_DIST = st_error.dat sthread_stats.dat $/;"	m
EXTRA_DIST	src/sthread/tests/Makefile	/^EXTRA_DIST = testall $(RESULT_COMPARISON_FILES)$/;"	m
EXTRA_DIST	tools/Makefile	/^EXTRA_DIST = errors.pl stats.pl logdef.pl convert-dox.sh$/;"	m
EXT_CACHE_SIZE	src/sm/vol.h	/^    enum { EXT_CACHE_SIZE=16 };$/;"	e	enum:vol_t::__anon98
E_ABORTED	src/sm/e_error_def_gen.h	103;"	d
E_ALIGNPARM	src/sm/e_error_def_gen.h	41;"	d
E_ALREADYMOUNTED	src/sm/e_error_def_gen.h	51;"	d
E_APPENDFILEINOSCAN	src/sm/e_error_def_gen.h	106;"	d
E_ASSERT	src/sm/e_error_def_gen.h	37;"	d
E_BADAPPEND	src/sm/e_error_def_gen.h	71;"	d
E_BADARGUMENT	src/sm/e_error_def_gen.h	76;"	d
E_BADCCLEVEL	src/sm/e_error_def_gen.h	95;"	d
E_BADCMPOP	src/sm/e_error_def_gen.h	65;"	d
E_BADCOMPENSATION	src/sm/e_error_def_gen.h	105;"	d
E_BADFORMAT	src/sm/e_error_def_gen.h	53;"	d
E_BADKEY	src/sm/e_error_def_gen.h	64;"	d
E_BADKEYTYPESTR	src/sm/e_error_def_gen.h	63;"	d
E_BADLENGTH	src/sm/e_error_def_gen.h	72;"	d
E_BADLOCKMODE	src/sm/e_error_def_gen.h	91;"	d
E_BADMASTERCHKPTFORMAT	src/sm/e_error_def_gen.h	102;"	d
E_BADNDXTYPE	src/sm/e_error_def_gen.h	59;"	d
E_BADPID	src/sm/e_error_def_gen.h	45;"	d
E_BADSAVEPOINT	src/sm/e_error_def_gen.h	73;"	d
E_BADSCAN	src/sm/e_error_def_gen.h	60;"	d
E_BADSLOTNUMBER	src/sm/e_error_def_gen.h	68;"	d
E_BADSTART	src/sm/e_error_def_gen.h	70;"	d
E_BADSTID	src/sm/e_error_def_gen.h	42;"	d
E_BADSTOREFLAGS	src/sm/e_error_def_gen.h	58;"	d
E_BADSTORETYPE	src/sm/e_error_def_gen.h	57;"	d
E_BADVOL	src/sm/e_error_def_gen.h	46;"	d
E_BPFORCEFAILED	src/sm/e_error_def_gen.h	111;"	d
E_CANTWHILEACTIVEXCTS	src/sm/e_error_def_gen.h	98;"	d
E_CRASH	src/sm/e_error_def_gen.h	39;"	d
E_DEADLOCK	src/sm/e_error_def_gen.h	94;"	d
E_DEVICEVOLFULL	src/sm/e_error_def_gen.h	49;"	d
E_DEVNOTMOUNTED	src/sm/e_error_def_gen.h	50;"	d
E_DEVTOOLARGE	src/sm/e_error_def_gen.h	48;"	d
E_DUAUDITFAILED	src/sm/e_error_def_gen.h	108;"	d
E_DUPLICATE	src/sm/e_error_def_gen.h	56;"	d
E_EINFO_BAKW_GEN_H	src/sm/e_einfo_bakw_gen.h	2;"	d
E_EINFO_GEN_H	src/sm/e_einfo_gen.h	2;"	d
E_EOF	src/sm/e_error_def_gen.h	55;"	d
E_ERRMAX	src/sm/e_error_def_gen.h	114;"	d
E_ERRMIN	src/sm/e_error_def_gen.h	113;"	d
E_ERRMSG_GEN_H	src/sm/e_errmsg_gen.h	2;"	d
E_ERROR_DEF_GEN_H	src/sm/e_error_def_gen.h	2;"	d
E_ERROR_ENUM_GEN_H	src/sm/e_error_enum_gen.h	2;"	d
E_ERROR_GENFILES_H	src/sm/Makefile	/^E_ERROR_GENFILES_H = \\$/;"	m
E_EXTERN2PCTHREAD	src/sm/e_error_def_gen.h	87;"	d
E_FOUNDEXTTOFREE	src/sm/e_error_def_gen.h	97;"	d
E_FRAMENOTFOUND	src/sm/e_error_def_gen.h	43;"	d
E_HOTPAGE	src/sm/e_error_def_gen.h	110;"	d
E_INQUARK	src/sm/e_error_def_gen.h	83;"	d
E_INSUFFICIENTMEM	src/sm/e_error_def_gen.h	75;"	d
E_INTRANS	src/sm/e_error_def_gen.h	80;"	d
E_INVALIDHINT	src/sm/e_error_def_gen.h	107;"	d
E_ISPREPARED	src/sm/e_error_def_gen.h	86;"	d
E_LOCKTIMEOUT	src/sm/e_error_def_gen.h	92;"	d
E_LOGSPACEWARN	src/sm/e_error_def_gen.h	104;"	d
E_LOGVERSIONTOONEW	src/sm/e_error_def_gen.h	100;"	d
E_LOGVERSIONTOOOLD	src/sm/e_error_def_gen.h	101;"	d
E_NDXNOTEMPTY	src/sm/e_error_def_gen.h	62;"	d
E_NOABORT	src/sm/e_error_def_gen.h	84;"	d
E_NOHANDLE	src/sm/e_error_def_gen.h	99;"	d
E_NOQUARK	src/sm/e_error_def_gen.h	82;"	d
E_NOSUCHPTRANS	src/sm/e_error_def_gen.h	89;"	d
E_NOTBLOCKED	src/sm/e_error_def_gen.h	93;"	d
E_NOTEXTERN2PC	src/sm/e_error_def_gen.h	88;"	d
E_NOTPREPARED	src/sm/e_error_def_gen.h	85;"	d
E_NOTRANS	src/sm/e_error_def_gen.h	79;"	d
E_NVOL	src/sm/e_error_def_gen.h	54;"	d
E_OK	src/sm/e_error_def_gen.h	112;"	d
E_OUTOFLOGSPACE	src/sm/e_error_def_gen.h	66;"	d
E_OUTOFSPACE	src/sm/e_error_def_gen.h	40;"	d
E_PAGECHANGED	src/sm/e_error_def_gen.h	74;"	d
E_PINACTIVE	src/sm/e_error_def_gen.h	109;"	d
E_RECUPDATESIZE	src/sm/e_error_def_gen.h	69;"	d
E_RECWONTFIT	src/sm/e_error_def_gen.h	67;"	d
E_RETRY	src/sm/e_error_def_gen.h	96;"	d
E_SPACENOTFOUND	src/sm/e_error_def_gen.h	44;"	d
E_THREADMAPFULL	src/sm/e_error_def_gen.h	90;"	d
E_TWOQUARK	src/sm/e_error_def_gen.h	81;"	d
E_TWOTHREAD	src/sm/e_error_def_gen.h	78;"	d
E_TWOTRANS	src/sm/e_error_def_gen.h	77;"	d
E_USERABORT	src/sm/e_error_def_gen.h	38;"	d
E_VOLEXISTS	src/sm/e_error_def_gen.h	52;"	d
E_VOLTOOLARGE	src/sm/e_error_def_gen.h	47;"	d
E_WRONGKEYTYPE	src/sm/e_error_def_gen.h	61;"	d
ErrLog	src/fc/errlog.cpp	/^ErrLog::ErrLog($/;"	f	class:ErrLog
ErrLog	src/fc/errlog.h	/^class ErrLog {$/;"	c
ErrLogFunc	src/fc/errlog.h	/^typedef void (*ErrLogFunc)(ErrLog *, void *);$/;"	t
ErrLogInfo	src/fc/errlog.cpp	/^ErrLogInfo::ErrLogInfo(ErrLog *e)$/;"	f	class:ErrLogInfo
ErrLogInfo	src/fc/errlog_s.h	/^struct ErrLogInfo {$/;"	s
Evicted	src/sm/tests/htab.cpp	/^    typedef enum { Zero, Init, Inserted, Evicted, Returned, Removed } Status;$/;"	e	enum:htab_tester::__anon97	file:
F	src/sm/sm_s.h	/^        F = 'F',                \/\/ float (4,8), compressed$/;"	e	enum:key_type_s::type_t
FAI	src/sm/bf_prefetch.cpp	119;"	d	file:
FAI	src/sm/bf_prefetch.cpp	86;"	d	file:
FC_ASSERT	src/fc/fc_error_def_gen.h	49;"	d
FC_EINFO_BAKW_GEN_H	src/fc/fc_einfo_bakw_gen.h	2;"	d
FC_EINFO_GEN_H	src/fc/fc_einfo_gen.h	2;"	d
FC_EMPTY	src/fc/fc_error_def_gen.h	40;"	d
FC_ERRMAX	src/fc/fc_error_def_gen.h	52;"	d
FC_ERRMIN	src/fc/fc_error_def_gen.h	51;"	d
FC_ERRMSG_GEN_H	src/fc/fc_errmsg_gen.h	2;"	d
FC_ERROR_DEF_GEN_H	src/fc/fc_error_def_gen.h	2;"	d
FC_ERROR_ENUM_GEN_H	src/fc/fc_error_enum_gen.h	2;"	d
FC_ERROR_GENFILES_H	src/fc/Makefile	/^FC_ERROR_GENFILES_H = fc_errmsg_gen.h \\$/;"	m
FC_FOUND	src/fc/fc_error_def_gen.h	47;"	d
FC_FULL	src/fc/fc_error_def_gen.h	39;"	d
FC_INTERNAL	src/fc/fc_error_def_gen.h	37;"	d
FC_IOSTREAM_FORM_METHOD	src/fc/w_workaround.h	327;"	d
FC_MIXED	src/fc/fc_error_def_gen.h	46;"	d
FC_MMAPFAILED	src/fc/fc_error_def_gen.h	42;"	d
FC_NEED_UNBOUND_FORM	src/fc/w_workaround.h	329;"	d
FC_NEED_UNBOUND_FORM	src/fc/w_workaround.h	332;"	d
FC_NOSUCHERROR	src/fc/fc_error_def_gen.h	48;"	d
FC_NOTFOUND	src/fc/fc_error_def_gen.h	43;"	d
FC_NOTIMPLEMENTED	src/fc/fc_error_def_gen.h	44;"	d
FC_OK	src/fc/fc_error_def_gen.h	50;"	d
FC_OS	src/fc/fc_error_def_gen.h	38;"	d
FC_OUTOFMEMORY	src/fc/fc_error_def_gen.h	41;"	d
FC_READONLY	src/fc/fc_error_def_gen.h	45;"	d
FD_NONE	src/sthread/sdisk_unix.h	/^    enum    { FD_NONE = -1 };$/;"	e	enum:sdisk_unix_t::__anon147
FILE_C	src/sm/file.cpp	69;"	d	file:
FILE_H	src/sm/file.h	54;"	d
FILE_LOG_COMMENT_ON	src/sm/smfile.cpp	71;"	d	file:
FILE_LOG_COMMENT_ON	src/sm/smfile.cpp	73;"	d	file:
FILE_S_H	src/sm/file_s.h	31;"	d
FINGER_BITS	src/sm/smthread.h	/^enum { FINGER_BITS=3 };$/;"	e	enum:__anon99
FLUSHOUT	src/sthread/tests/thread1.cpp	54;"	d	file:
FORK_LOG_STREAM	src/sm/sm.h	805;"	d
FTL	src/sm/bf_prefetch.cpp	120;"	d	file:
FTL	src/sm/bf_prefetch.cpp	87;"	d	file:
FUDGE	src/sm/page.cpp	1743;"	d	file:
FULLOPTFLAGS	Makefile	/^FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)$/;"	m
FULLOPTFLAGS	config/Makefile	/^FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)$/;"	m
FULLOPTFLAGS	src/Makefile	/^FULLOPTFLAGS = -O0 -fexpensive-optimizations $(YES_INLINE_FLAGS)$/;"	m
FULLOPTFLAGS	src/atomic_ops/Makefile	/^FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)$/;"	m
FULLOPTFLAGS	src/atomic_ops/asm_linkage/Makefile	/^FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)$/;"	m
FULLOPTFLAGS	src/atomic_ops/asm_linkage/usr/Makefile	/^FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)$/;"	m
FULLOPTFLAGS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)$/;"	m
FULLOPTFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)$/;"	m
FULLOPTFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)$/;"	m
FULLOPTFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)$/;"	m
FULLOPTFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)$/;"	m
FULLOPTFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)$/;"	m
FULLOPTFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)$/;"	m
FULLOPTFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)$/;"	m
FULLOPTFLAGS	src/atomic_ops/atomic_ops/Makefile	/^FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)$/;"	m
FULLOPTFLAGS	src/atomic_ops/atomic_ops/amd64/Makefile	/^FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)$/;"	m
FULLOPTFLAGS	src/atomic_ops/atomic_ops/i386/Makefile	/^FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)$/;"	m
FULLOPTFLAGS	src/atomic_ops/atomic_ops/sparc/Makefile	/^FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)$/;"	m
FULLOPTFLAGS	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)$/;"	m
FULLOPTFLAGS	src/atomic_ops/ia32/Makefile	/^FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)$/;"	m
FULLOPTFLAGS	src/atomic_ops/ia32/sys/Makefile	/^FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)$/;"	m
FULLOPTFLAGS	src/atomic_ops/intel/Makefile	/^FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)$/;"	m
FULLOPTFLAGS	src/atomic_ops/intel/ia32/Makefile	/^FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)$/;"	m
FULLOPTFLAGS	src/atomic_ops/intel/ia32/sys/Makefile	/^FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)$/;"	m
FULLOPTFLAGS	src/atomic_ops/intel/sys/Makefile	/^FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)$/;"	m
FULLOPTFLAGS	src/atomic_ops/sparc/Makefile	/^FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)$/;"	m
FULLOPTFLAGS	src/atomic_ops/sparc/sys/Makefile	/^FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)$/;"	m
FULLOPTFLAGS	src/common/Makefile	/^FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)$/;"	m
FULLOPTFLAGS	src/common/tests/Makefile	/^FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)$/;"	m
FULLOPTFLAGS	src/fc/Makefile	/^FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)$/;"	m
FULLOPTFLAGS	src/fc/tests/Makefile	/^FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)$/;"	m
FULLOPTFLAGS	src/sm/Makefile	/^FULLOPTFLAGS = -O0 -fexpensive-optimizations $(YES_INLINE_FLAGS)$/;"	m
FULLOPTFLAGS	src/sm/smsh/Makefile	/^FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)$/;"	m
FULLOPTFLAGS	src/sm/smsh/lib/Makefile	/^FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)$/;"	m
FULLOPTFLAGS	src/sm/smsh/scripts/Makefile	/^FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)$/;"	m
FULLOPTFLAGS	src/sm/tests/Makefile	/^FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)$/;"	m
FULLOPTFLAGS	src/sthread/Makefile	/^FULLOPTFLAGS = -O0 -fexpensive-optimizations $(YES_INLINE_FLAGS)$/;"	m
FULLOPTFLAGS	src/sthread/tests/Makefile	/^FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)$/;"	m
FULLOPTFLAGS	tools/Makefile	/^FULLOPTFLAGS = -O3 -fexpensive-optimizations $(YES_INLINE_FLAGS)$/;"	m
FUNC	src/fc/w_debug.h	154;"	d
FUNC	src/fc/w_debug.h	168;"	d
FUNC	src/sm/smthread.h	741;"	d
FUNC	src/sm/smthread.h	742;"	d
FWD	src/common/regexec.cpp	117;"	d	file:
FWD	src/common/regexec.cpp	142;"	d	file:
FWD	src/common/regexec.cpp	93;"	d	file:
Fbyteorder	src/sm/lexify.cpp	/^sortorder::Fbyteorder(int permutation[4]) $/;"	f	class:sortorder
First	src/fc/w_heap.h	/^T& Heap<T, Cmp>::First()$/;"	f	class:Heap
Fperm	src/sm/lexify.h	/^    int Fperm[4];$/;"	m	class:sortorder
FreeAllStoresToFree	src/sm/xct.cpp	/^xct_t::FreeAllStoresToFree()$/;"	f	class:xct_t
FreeLockHeadToPool	src/sm/lock_core.cpp	/^lock_core_m::FreeLockHeadToPool(lock_head_t* theLockHead)$/;"	f	class:lock_core_m
GCC_BROKEN_WARNINGS	config/shore-config.h	26;"	d
GCC_VER_3_WARNINGS	config/shore-config.h	36;"	d
GCC_WARN_FLAGS	Makefile	/^GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \\$/;"	m
GCC_WARN_FLAGS	config/Makefile	/^GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \\$/;"	m
GCC_WARN_FLAGS	src/Makefile	/^GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \\$/;"	m
GCC_WARN_FLAGS	src/atomic_ops/Makefile	/^GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \\$/;"	m
GCC_WARN_FLAGS	src/atomic_ops/asm_linkage/Makefile	/^GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \\$/;"	m
GCC_WARN_FLAGS	src/atomic_ops/asm_linkage/usr/Makefile	/^GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \\$/;"	m
GCC_WARN_FLAGS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \\$/;"	m
GCC_WARN_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \\$/;"	m
GCC_WARN_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \\$/;"	m
GCC_WARN_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \\$/;"	m
GCC_WARN_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \\$/;"	m
GCC_WARN_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \\$/;"	m
GCC_WARN_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \\$/;"	m
GCC_WARN_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \\$/;"	m
GCC_WARN_FLAGS	src/atomic_ops/atomic_ops/Makefile	/^GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \\$/;"	m
GCC_WARN_FLAGS	src/atomic_ops/atomic_ops/amd64/Makefile	/^GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \\$/;"	m
GCC_WARN_FLAGS	src/atomic_ops/atomic_ops/i386/Makefile	/^GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \\$/;"	m
GCC_WARN_FLAGS	src/atomic_ops/atomic_ops/sparc/Makefile	/^GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \\$/;"	m
GCC_WARN_FLAGS	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \\$/;"	m
GCC_WARN_FLAGS	src/atomic_ops/ia32/Makefile	/^GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \\$/;"	m
GCC_WARN_FLAGS	src/atomic_ops/ia32/sys/Makefile	/^GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \\$/;"	m
GCC_WARN_FLAGS	src/atomic_ops/intel/Makefile	/^GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \\$/;"	m
GCC_WARN_FLAGS	src/atomic_ops/intel/ia32/Makefile	/^GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \\$/;"	m
GCC_WARN_FLAGS	src/atomic_ops/intel/ia32/sys/Makefile	/^GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \\$/;"	m
GCC_WARN_FLAGS	src/atomic_ops/intel/sys/Makefile	/^GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \\$/;"	m
GCC_WARN_FLAGS	src/atomic_ops/sparc/Makefile	/^GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \\$/;"	m
GCC_WARN_FLAGS	src/atomic_ops/sparc/sys/Makefile	/^GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \\$/;"	m
GCC_WARN_FLAGS	src/common/Makefile	/^GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \\$/;"	m
GCC_WARN_FLAGS	src/common/tests/Makefile	/^GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \\$/;"	m
GCC_WARN_FLAGS	src/fc/Makefile	/^GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \\$/;"	m
GCC_WARN_FLAGS	src/fc/tests/Makefile	/^GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \\$/;"	m
GCC_WARN_FLAGS	src/sm/Makefile	/^GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \\$/;"	m
GCC_WARN_FLAGS	src/sm/smsh/Makefile	/^GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \\$/;"	m
GCC_WARN_FLAGS	src/sm/smsh/lib/Makefile	/^GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \\$/;"	m
GCC_WARN_FLAGS	src/sm/smsh/scripts/Makefile	/^GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \\$/;"	m
GCC_WARN_FLAGS	src/sm/tests/Makefile	/^GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \\$/;"	m
GCC_WARN_FLAGS	src/sthread/Makefile	/^GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \\$/;"	m
GCC_WARN_FLAGS	src/sthread/tests/Makefile	/^GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \\$/;"	m
GCC_WARN_FLAGS	tools/Makefile	/^GCC_WARN_FLAGS = $(am__append_9) $(am__append_10) $(am__append_11) \\$/;"	m
GENERIC_NODEBUG_FLAGS	Makefile	/^GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG $/;"	m
GENERIC_NODEBUG_FLAGS	config/Makefile	/^GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG $/;"	m
GENERIC_NODEBUG_FLAGS	src/Makefile	/^GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG $/;"	m
GENERIC_NODEBUG_FLAGS	src/atomic_ops/Makefile	/^GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG $/;"	m
GENERIC_NODEBUG_FLAGS	src/atomic_ops/asm_linkage/Makefile	/^GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG $/;"	m
GENERIC_NODEBUG_FLAGS	src/atomic_ops/asm_linkage/usr/Makefile	/^GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG $/;"	m
GENERIC_NODEBUG_FLAGS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG $/;"	m
GENERIC_NODEBUG_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG $/;"	m
GENERIC_NODEBUG_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG $/;"	m
GENERIC_NODEBUG_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG $/;"	m
GENERIC_NODEBUG_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG $/;"	m
GENERIC_NODEBUG_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG $/;"	m
GENERIC_NODEBUG_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG $/;"	m
GENERIC_NODEBUG_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG $/;"	m
GENERIC_NODEBUG_FLAGS	src/atomic_ops/atomic_ops/Makefile	/^GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG $/;"	m
GENERIC_NODEBUG_FLAGS	src/atomic_ops/atomic_ops/amd64/Makefile	/^GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG $/;"	m
GENERIC_NODEBUG_FLAGS	src/atomic_ops/atomic_ops/i386/Makefile	/^GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG $/;"	m
GENERIC_NODEBUG_FLAGS	src/atomic_ops/atomic_ops/sparc/Makefile	/^GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG $/;"	m
GENERIC_NODEBUG_FLAGS	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG $/;"	m
GENERIC_NODEBUG_FLAGS	src/atomic_ops/ia32/Makefile	/^GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG $/;"	m
GENERIC_NODEBUG_FLAGS	src/atomic_ops/ia32/sys/Makefile	/^GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG $/;"	m
GENERIC_NODEBUG_FLAGS	src/atomic_ops/intel/Makefile	/^GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG $/;"	m
GENERIC_NODEBUG_FLAGS	src/atomic_ops/intel/ia32/Makefile	/^GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG $/;"	m
GENERIC_NODEBUG_FLAGS	src/atomic_ops/intel/ia32/sys/Makefile	/^GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG $/;"	m
GENERIC_NODEBUG_FLAGS	src/atomic_ops/intel/sys/Makefile	/^GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG $/;"	m
GENERIC_NODEBUG_FLAGS	src/atomic_ops/sparc/Makefile	/^GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG $/;"	m
GENERIC_NODEBUG_FLAGS	src/atomic_ops/sparc/sys/Makefile	/^GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG $/;"	m
GENERIC_NODEBUG_FLAGS	src/common/Makefile	/^GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG $/;"	m
GENERIC_NODEBUG_FLAGS	src/common/tests/Makefile	/^GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG $/;"	m
GENERIC_NODEBUG_FLAGS	src/fc/Makefile	/^GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG $/;"	m
GENERIC_NODEBUG_FLAGS	src/fc/tests/Makefile	/^GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG $/;"	m
GENERIC_NODEBUG_FLAGS	src/sm/Makefile	/^GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG $/;"	m
GENERIC_NODEBUG_FLAGS	src/sm/smsh/Makefile	/^GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG $/;"	m
GENERIC_NODEBUG_FLAGS	src/sm/smsh/lib/Makefile	/^GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG $/;"	m
GENERIC_NODEBUG_FLAGS	src/sm/smsh/scripts/Makefile	/^GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG $/;"	m
GENERIC_NODEBUG_FLAGS	src/sm/tests/Makefile	/^GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG $/;"	m
GENERIC_NODEBUG_FLAGS	src/sthread/Makefile	/^GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG $/;"	m
GENERIC_NODEBUG_FLAGS	src/sthread/tests/Makefile	/^GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG $/;"	m
GENERIC_NODEBUG_FLAGS	tools/Makefile	/^GENERIC_NODEBUG_FLAGS = -DNDEBUG -UDEBUG $/;"	m
GENERIC_YESDEBUG_FLAGS	Makefile	/^GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG $/;"	m
GENERIC_YESDEBUG_FLAGS	config/Makefile	/^GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG $/;"	m
GENERIC_YESDEBUG_FLAGS	src/Makefile	/^GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG $/;"	m
GENERIC_YESDEBUG_FLAGS	src/atomic_ops/Makefile	/^GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG $/;"	m
GENERIC_YESDEBUG_FLAGS	src/atomic_ops/asm_linkage/Makefile	/^GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG $/;"	m
GENERIC_YESDEBUG_FLAGS	src/atomic_ops/asm_linkage/usr/Makefile	/^GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG $/;"	m
GENERIC_YESDEBUG_FLAGS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG $/;"	m
GENERIC_YESDEBUG_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG $/;"	m
GENERIC_YESDEBUG_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG $/;"	m
GENERIC_YESDEBUG_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG $/;"	m
GENERIC_YESDEBUG_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG $/;"	m
GENERIC_YESDEBUG_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG $/;"	m
GENERIC_YESDEBUG_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG $/;"	m
GENERIC_YESDEBUG_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG $/;"	m
GENERIC_YESDEBUG_FLAGS	src/atomic_ops/atomic_ops/Makefile	/^GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG $/;"	m
GENERIC_YESDEBUG_FLAGS	src/atomic_ops/atomic_ops/amd64/Makefile	/^GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG $/;"	m
GENERIC_YESDEBUG_FLAGS	src/atomic_ops/atomic_ops/i386/Makefile	/^GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG $/;"	m
GENERIC_YESDEBUG_FLAGS	src/atomic_ops/atomic_ops/sparc/Makefile	/^GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG $/;"	m
GENERIC_YESDEBUG_FLAGS	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG $/;"	m
GENERIC_YESDEBUG_FLAGS	src/atomic_ops/ia32/Makefile	/^GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG $/;"	m
GENERIC_YESDEBUG_FLAGS	src/atomic_ops/ia32/sys/Makefile	/^GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG $/;"	m
GENERIC_YESDEBUG_FLAGS	src/atomic_ops/intel/Makefile	/^GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG $/;"	m
GENERIC_YESDEBUG_FLAGS	src/atomic_ops/intel/ia32/Makefile	/^GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG $/;"	m
GENERIC_YESDEBUG_FLAGS	src/atomic_ops/intel/ia32/sys/Makefile	/^GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG $/;"	m
GENERIC_YESDEBUG_FLAGS	src/atomic_ops/intel/sys/Makefile	/^GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG $/;"	m
GENERIC_YESDEBUG_FLAGS	src/atomic_ops/sparc/Makefile	/^GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG $/;"	m
GENERIC_YESDEBUG_FLAGS	src/atomic_ops/sparc/sys/Makefile	/^GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG $/;"	m
GENERIC_YESDEBUG_FLAGS	src/common/Makefile	/^GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG $/;"	m
GENERIC_YESDEBUG_FLAGS	src/common/tests/Makefile	/^GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG $/;"	m
GENERIC_YESDEBUG_FLAGS	src/fc/Makefile	/^GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG $/;"	m
GENERIC_YESDEBUG_FLAGS	src/fc/tests/Makefile	/^GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG $/;"	m
GENERIC_YESDEBUG_FLAGS	src/sm/Makefile	/^GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG $/;"	m
GENERIC_YESDEBUG_FLAGS	src/sm/smsh/Makefile	/^GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG $/;"	m
GENERIC_YESDEBUG_FLAGS	src/sm/smsh/lib/Makefile	/^GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG $/;"	m
GENERIC_YESDEBUG_FLAGS	src/sm/smsh/scripts/Makefile	/^GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG $/;"	m
GENERIC_YESDEBUG_FLAGS	src/sm/tests/Makefile	/^GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG $/;"	m
GENERIC_YESDEBUG_FLAGS	src/sthread/Makefile	/^GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG $/;"	m
GENERIC_YESDEBUG_FLAGS	src/sthread/tests/Makefile	/^GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG $/;"	m
GENERIC_YESDEBUG_FLAGS	tools/Makefile	/^GENERIC_YESDEBUG_FLAGS = -UNDEBUG -DDEBUG $/;"	m
GENFILES	src/common/Makefile	/^GENFILES = $(OPT_ERROR_GENFILES_H)$/;"	m
GENFILES	src/fc/Makefile	/^GENFILES = $(FC_ERROR_GENFILES_H)$/;"	m
GENFILES	src/fc/tests/Makefile	/^GENFILES = $(TEST_STAT_GENFILES)$/;"	m
GENFILES	src/sm/Makefile	/^GENFILES = $(GENFILES_H) $(GENFILES_CPP)$/;"	m
GENFILES	src/sthread/Makefile	/^GENFILES = $(GENFILES_H) $(GENFILES_CPP)$/;"	m
GENFILES_CPP	src/sm/Makefile	/^GENFILES_CPP = $(SM_STATS_GENFILES_CPP) \\$/;"	m
GENFILES_CPP	src/sthread/Makefile	/^GENFILES_CPP = $(SHMC_GENFILES_CPP)  $(STHREAD_GENFILES_CPP) $/;"	m
GENFILES_H	src/sm/Makefile	/^GENFILES_H = $(E_ERROR_GENFILES_H) \\$/;"	m
GENFILES_H	src/sthread/Makefile	/^GENFILES_H = $(SHMC_GENFILES_H)  $(STHREAD_GENFILES_H) $(ST_ERROR_GENFILES)$/;"	m
GETNEXT	src/common/regcomp.cpp	131;"	d	file:
GETOPT_H	src/fc/w_getopt.h	33;"	d
GET_TSTAT	src/sm/smthread.h	519;"	d
GET_TSTAT_SORT	src/sm/newsort.cpp	174;"	d	file:
GET_TSTAT_SORT	src/sm/newsort.cpp	181;"	d	file:
GET_TSTAT_SORT	src/sm/sort.cpp	103;"	d	file:
GET_TSTAT_SORT	src/sm/sort.cpp	96;"	d	file:
GNUG_BUG_12	src/fc/w_workaround.h	132;"	d
GNUG_BUG_12	src/fc/w_workaround.h	134;"	d
GNUG_BUG_12	src/fc/w_workaround.h	135;"	d
GNUG_BUG_13	src/fc/w_workaround.h	144;"	d
GNUG_BUG_14	src/fc/w_workaround.h	149;"	d
GNUG_BUG_15	src/fc/w_workaround.h	155;"	d
GNUG_BUG_16	src/fc/w_workaround.h	164;"	d
GNUG_BUG_2	src/fc/w_workaround.h	97;"	d
GNUG_BUG_3	src/fc/w_workaround.h	102;"	d
GNUG_BUG_7	src/fc/w_workaround.h	110;"	d
GNUG_BUG_8	src/fc/w_workaround.h	116;"	d
GOODFLAGS	src/common/regcomp.cpp	173;"	d	file:
GOODFLAGS	src/common/regexec.cpp	170;"	d	file:
GRAB_R	src/sm/sm_io.cpp	783;"	d	file:
GRAB_W	src/sm/sm_io.cpp	789;"	d	file:
GRB	src/sm/bf_prefetch.cpp	118;"	d	file:
GRB	src/sm/bf_prefetch.cpp	85;"	d	file:
GREP	Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	config/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/atomic_ops/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/atomic_ops/asm_linkage/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/atomic_ops/asm_linkage/usr/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/atomic_ops/asm_linkage/usr/src/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/atomic_ops/atomic_ops/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/atomic_ops/atomic_ops/amd64/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/atomic_ops/atomic_ops/i386/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/atomic_ops/atomic_ops/sparc/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/atomic_ops/ia32/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/atomic_ops/ia32/sys/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/atomic_ops/intel/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/atomic_ops/intel/ia32/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/atomic_ops/intel/ia32/sys/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/atomic_ops/intel/sys/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/atomic_ops/sparc/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/atomic_ops/sparc/sys/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/common/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/common/tests/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/fc/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/fc/tests/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/sm/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/sm/smsh/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/sm/smsh/lib/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/sm/smsh/scripts/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/sm/tests/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/sthread/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/sthread/tests/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	tools/Makefile	/^GREP = \/bin\/grep$/;"	m
GROFF_OPTIONS	Makefile	/^GROFF_OPTIONS = -s -m man -U$/;"	m
GROFF_OPTIONS	config/Makefile	/^GROFF_OPTIONS = -s -m man -U$/;"	m
GROFF_OPTIONS	src/Makefile	/^GROFF_OPTIONS = -s -m man -U$/;"	m
GROFF_OPTIONS	src/atomic_ops/Makefile	/^GROFF_OPTIONS = -s -m man -U$/;"	m
GROFF_OPTIONS	src/atomic_ops/asm_linkage/Makefile	/^GROFF_OPTIONS = -s -m man -U$/;"	m
GROFF_OPTIONS	src/atomic_ops/asm_linkage/usr/Makefile	/^GROFF_OPTIONS = -s -m man -U$/;"	m
GROFF_OPTIONS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^GROFF_OPTIONS = -s -m man -U$/;"	m
GROFF_OPTIONS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^GROFF_OPTIONS = -s -m man -U$/;"	m
GROFF_OPTIONS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^GROFF_OPTIONS = -s -m man -U$/;"	m
GROFF_OPTIONS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^GROFF_OPTIONS = -s -m man -U$/;"	m
GROFF_OPTIONS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^GROFF_OPTIONS = -s -m man -U$/;"	m
GROFF_OPTIONS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^GROFF_OPTIONS = -s -m man -U$/;"	m
GROFF_OPTIONS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^GROFF_OPTIONS = -s -m man -U$/;"	m
GROFF_OPTIONS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^GROFF_OPTIONS = -s -m man -U$/;"	m
GROFF_OPTIONS	src/atomic_ops/atomic_ops/Makefile	/^GROFF_OPTIONS = -s -m man -U$/;"	m
GROFF_OPTIONS	src/atomic_ops/atomic_ops/amd64/Makefile	/^GROFF_OPTIONS = -s -m man -U$/;"	m
GROFF_OPTIONS	src/atomic_ops/atomic_ops/i386/Makefile	/^GROFF_OPTIONS = -s -m man -U$/;"	m
GROFF_OPTIONS	src/atomic_ops/atomic_ops/sparc/Makefile	/^GROFF_OPTIONS = -s -m man -U$/;"	m
GROFF_OPTIONS	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^GROFF_OPTIONS = -s -m man -U$/;"	m
GROFF_OPTIONS	src/atomic_ops/ia32/Makefile	/^GROFF_OPTIONS = -s -m man -U$/;"	m
GROFF_OPTIONS	src/atomic_ops/ia32/sys/Makefile	/^GROFF_OPTIONS = -s -m man -U$/;"	m
GROFF_OPTIONS	src/atomic_ops/intel/Makefile	/^GROFF_OPTIONS = -s -m man -U$/;"	m
GROFF_OPTIONS	src/atomic_ops/intel/ia32/Makefile	/^GROFF_OPTIONS = -s -m man -U$/;"	m
GROFF_OPTIONS	src/atomic_ops/intel/ia32/sys/Makefile	/^GROFF_OPTIONS = -s -m man -U$/;"	m
GROFF_OPTIONS	src/atomic_ops/intel/sys/Makefile	/^GROFF_OPTIONS = -s -m man -U$/;"	m
GROFF_OPTIONS	src/atomic_ops/sparc/Makefile	/^GROFF_OPTIONS = -s -m man -U$/;"	m
GROFF_OPTIONS	src/atomic_ops/sparc/sys/Makefile	/^GROFF_OPTIONS = -s -m man -U$/;"	m
GROFF_OPTIONS	src/common/Makefile	/^GROFF_OPTIONS = -s -m man -U$/;"	m
GROFF_OPTIONS	src/common/tests/Makefile	/^GROFF_OPTIONS = -s -m man -U$/;"	m
GROFF_OPTIONS	src/fc/Makefile	/^GROFF_OPTIONS = -s -m man -U$/;"	m
GROFF_OPTIONS	src/fc/tests/Makefile	/^GROFF_OPTIONS = -s -m man -U$/;"	m
GROFF_OPTIONS	src/sm/Makefile	/^GROFF_OPTIONS = -s -m man -U$/;"	m
GROFF_OPTIONS	src/sm/smsh/Makefile	/^GROFF_OPTIONS = -s -m man -U$/;"	m
GROFF_OPTIONS	src/sm/smsh/lib/Makefile	/^GROFF_OPTIONS = -s -m man -U$/;"	m
GROFF_OPTIONS	src/sm/smsh/scripts/Makefile	/^GROFF_OPTIONS = -s -m man -U$/;"	m
GROFF_OPTIONS	src/sm/tests/Makefile	/^GROFF_OPTIONS = -s -m man -U$/;"	m
GROFF_OPTIONS	src/sthread/Makefile	/^GROFF_OPTIONS = -s -m man -U$/;"	m
GROFF_OPTIONS	src/sthread/tests/Makefile	/^GROFF_OPTIONS = -s -m man -U$/;"	m
GROFF_OPTIONS	tools/Makefile	/^GROFF_OPTIONS = -s -m man -U$/;"	m
GUARD	src/sthread/sthread.cpp	747;"	d	file:
GZIP_ENV	Makefile	/^GZIP_ENV = --best$/;"	m
GenErrorFiles	tools/errors.pl	/^sub GenErrorFiles$/;"	s
GetEscalationThresholds	src/sm/xct.h	/^xct_t::GetEscalationThresholds(w_base_t::int4_t &toPage, $/;"	f	class:xct_t
GetEscalationThresholdsArray	src/sm/xct.h	/^xct_t::GetEscalationThresholdsArray()$/;"	f	class:xct_t
GetLastMountLSN	src/sm/sm_io.h	/^io_m::GetLastMountLSN()$/;"	f	class:io_m
GetNewLockHeadFromPool	src/sm/lock_core.cpp	/^lock_core_m::GetNewLockHeadFromPool(const lockid_t& name, lmode_t mode)$/;"	f	class:lock_core_m
GrowElements	src/fc/w_heap.h	/^void Heap<T, Cmp>::GrowElements(int newSize)$/;"	f	class:Heap
H0	src/fc/tests/cuckoo.cpp	/^enum {H0, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, HASH_COUNT};$/;"	e	enum:__anon133	file:
H1	src/fc/tests/cuckoo.cpp	/^enum {H0, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, HASH_COUNT};$/;"	e	enum:__anon133	file:
H10	src/fc/tests/cuckoo.cpp	/^enum {H0, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, HASH_COUNT};$/;"	e	enum:__anon133	file:
H2	src/fc/tests/cuckoo.cpp	/^enum {H0, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, HASH_COUNT};$/;"	e	enum:__anon133	file:
H3	src/fc/tests/cuckoo.cpp	/^enum {H0, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, HASH_COUNT};$/;"	e	enum:__anon133	file:
H4	src/fc/tests/cuckoo.cpp	/^enum {H0, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, HASH_COUNT};$/;"	e	enum:__anon133	file:
H5	src/fc/tests/cuckoo.cpp	/^enum {H0, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, HASH_COUNT};$/;"	e	enum:__anon133	file:
H6	src/fc/tests/cuckoo.cpp	/^enum {H0, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, HASH_COUNT};$/;"	e	enum:__anon133	file:
H7	src/fc/tests/cuckoo.cpp	/^enum {H0, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, HASH_COUNT};$/;"	e	enum:__anon133	file:
H8	src/fc/tests/cuckoo.cpp	/^enum {H0, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, HASH_COUNT};$/;"	e	enum:__anon133	file:
H9	src/fc/tests/cuckoo.cpp	/^enum {H0, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, HASH_COUNT};$/;"	e	enum:__anon133	file:
HANDLE_FSCAN_FAILURE	src/sm/smsh/shell.h	158;"	d
HASH_COUNT	src/fc/tests/cuckoo.cpp	/^enum {H0, H1, H2, H3, H4, H5, H6, H7, H8, H9, H10, HASH_COUNT};$/;"	e	enum:__anon133	file:
HASH_COUNT	src/sm/bf_htab.h	/^    static const int HASH_COUNT = 2;$/;"	m	class:bf_core_m::htab
HAVE_CLOCK_GETTIME	config/shore-config.h	47;"	d
HAVE_DECL_MAP_ALIGN	config/shore-config.h	51;"	d
HAVE_DECL_MAP_ANON	config/shore-config.h	55;"	d
HAVE_DECL_MAP_ANONYMOUS	config/shore-config.h	59;"	d
HAVE_DECL_MAP_FIXED	config/shore-config.h	63;"	d
HAVE_DECL_MAP_NORESERVE	config/shore-config.h	67;"	d
HAVE_DIRENT_H	config/shore-config.h	71;"	d
HAVE_FCNTL_H	config/shore-config.h	77;"	d
HAVE_GCC_ATOMIC_BUILTINS	Makefile	/^HAVE_GCC_ATOMIC_BUILTINS = $/;"	m
HAVE_GCC_ATOMIC_BUILTINS	config/Makefile	/^HAVE_GCC_ATOMIC_BUILTINS = $/;"	m
HAVE_GCC_ATOMIC_BUILTINS	config/shore-config.h	80;"	d
HAVE_GCC_ATOMIC_BUILTINS	src/Makefile	/^HAVE_GCC_ATOMIC_BUILTINS = $/;"	m
HAVE_GCC_ATOMIC_BUILTINS	src/atomic_ops/Makefile	/^HAVE_GCC_ATOMIC_BUILTINS = $/;"	m
HAVE_GCC_ATOMIC_BUILTINS	src/atomic_ops/asm_linkage/Makefile	/^HAVE_GCC_ATOMIC_BUILTINS = $/;"	m
HAVE_GCC_ATOMIC_BUILTINS	src/atomic_ops/asm_linkage/usr/Makefile	/^HAVE_GCC_ATOMIC_BUILTINS = $/;"	m
HAVE_GCC_ATOMIC_BUILTINS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^HAVE_GCC_ATOMIC_BUILTINS = $/;"	m
HAVE_GCC_ATOMIC_BUILTINS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^HAVE_GCC_ATOMIC_BUILTINS = $/;"	m
HAVE_GCC_ATOMIC_BUILTINS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^HAVE_GCC_ATOMIC_BUILTINS = $/;"	m
HAVE_GCC_ATOMIC_BUILTINS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^HAVE_GCC_ATOMIC_BUILTINS = $/;"	m
HAVE_GCC_ATOMIC_BUILTINS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^HAVE_GCC_ATOMIC_BUILTINS = $/;"	m
HAVE_GCC_ATOMIC_BUILTINS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^HAVE_GCC_ATOMIC_BUILTINS = $/;"	m
HAVE_GCC_ATOMIC_BUILTINS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^HAVE_GCC_ATOMIC_BUILTINS = $/;"	m
HAVE_GCC_ATOMIC_BUILTINS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^HAVE_GCC_ATOMIC_BUILTINS = $/;"	m
HAVE_GCC_ATOMIC_BUILTINS	src/atomic_ops/atomic_ops/Makefile	/^HAVE_GCC_ATOMIC_BUILTINS = $/;"	m
HAVE_GCC_ATOMIC_BUILTINS	src/atomic_ops/atomic_ops/amd64/Makefile	/^HAVE_GCC_ATOMIC_BUILTINS = $/;"	m
HAVE_GCC_ATOMIC_BUILTINS	src/atomic_ops/atomic_ops/i386/Makefile	/^HAVE_GCC_ATOMIC_BUILTINS = $/;"	m
HAVE_GCC_ATOMIC_BUILTINS	src/atomic_ops/atomic_ops/sparc/Makefile	/^HAVE_GCC_ATOMIC_BUILTINS = $/;"	m
HAVE_GCC_ATOMIC_BUILTINS	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^HAVE_GCC_ATOMIC_BUILTINS = $/;"	m
HAVE_GCC_ATOMIC_BUILTINS	src/atomic_ops/ia32/Makefile	/^HAVE_GCC_ATOMIC_BUILTINS = $/;"	m
HAVE_GCC_ATOMIC_BUILTINS	src/atomic_ops/ia32/sys/Makefile	/^HAVE_GCC_ATOMIC_BUILTINS = $/;"	m
HAVE_GCC_ATOMIC_BUILTINS	src/atomic_ops/intel/Makefile	/^HAVE_GCC_ATOMIC_BUILTINS = $/;"	m
HAVE_GCC_ATOMIC_BUILTINS	src/atomic_ops/intel/ia32/Makefile	/^HAVE_GCC_ATOMIC_BUILTINS = $/;"	m
HAVE_GCC_ATOMIC_BUILTINS	src/atomic_ops/intel/ia32/sys/Makefile	/^HAVE_GCC_ATOMIC_BUILTINS = $/;"	m
HAVE_GCC_ATOMIC_BUILTINS	src/atomic_ops/intel/sys/Makefile	/^HAVE_GCC_ATOMIC_BUILTINS = $/;"	m
HAVE_GCC_ATOMIC_BUILTINS	src/atomic_ops/sparc/Makefile	/^HAVE_GCC_ATOMIC_BUILTINS = $/;"	m
HAVE_GCC_ATOMIC_BUILTINS	src/atomic_ops/sparc/sys/Makefile	/^HAVE_GCC_ATOMIC_BUILTINS = $/;"	m
HAVE_GCC_ATOMIC_BUILTINS	src/common/Makefile	/^HAVE_GCC_ATOMIC_BUILTINS = $/;"	m
HAVE_GCC_ATOMIC_BUILTINS	src/common/tests/Makefile	/^HAVE_GCC_ATOMIC_BUILTINS = $/;"	m
HAVE_GCC_ATOMIC_BUILTINS	src/fc/Makefile	/^HAVE_GCC_ATOMIC_BUILTINS = $/;"	m
HAVE_GCC_ATOMIC_BUILTINS	src/fc/tests/Makefile	/^HAVE_GCC_ATOMIC_BUILTINS = $/;"	m
HAVE_GCC_ATOMIC_BUILTINS	src/sm/Makefile	/^HAVE_GCC_ATOMIC_BUILTINS = $/;"	m
HAVE_GCC_ATOMIC_BUILTINS	src/sm/smsh/Makefile	/^HAVE_GCC_ATOMIC_BUILTINS = $/;"	m
HAVE_GCC_ATOMIC_BUILTINS	src/sm/smsh/lib/Makefile	/^HAVE_GCC_ATOMIC_BUILTINS = $/;"	m
HAVE_GCC_ATOMIC_BUILTINS	src/sm/smsh/scripts/Makefile	/^HAVE_GCC_ATOMIC_BUILTINS = $/;"	m
HAVE_GCC_ATOMIC_BUILTINS	src/sm/tests/Makefile	/^HAVE_GCC_ATOMIC_BUILTINS = $/;"	m
HAVE_GCC_ATOMIC_BUILTINS	src/sthread/Makefile	/^HAVE_GCC_ATOMIC_BUILTINS = $/;"	m
HAVE_GCC_ATOMIC_BUILTINS	src/sthread/tests/Makefile	/^HAVE_GCC_ATOMIC_BUILTINS = $/;"	m
HAVE_GCC_ATOMIC_BUILTINS	tools/Makefile	/^HAVE_GCC_ATOMIC_BUILTINS = $/;"	m
HAVE_GETOPT	config/shore-config.h	86;"	d
HAVE_GETTIMEOFDAY	config/shore-config.h	92;"	d
HAVE_INTTYPES_H	config/shore-config.h	98;"	d
HAVE_IO_VECTOR	src/sthread/sdisk_unix.cpp	96;"	d	file:
HAVE_LIBRT	config/shore-config.h	101;"	d
HAVE_MEMALIGN	config/shore-config.h	107;"	d
HAVE_MEMORY_H	config/shore-config.h	116;"	d
HAVE_NETDB_H	config/shore-config.h	122;"	d
HAVE_NETINET_IN_H	config/shore-config.h	125;"	d
HAVE_OS_DIRENT_T	src/sthread/os_interface.h	127;"	d
HAVE_OS_STAT_T	src/sthread/os_interface.h	107;"	d
HAVE_POSIX_MEMALIGN	config/shore-config.h	128;"	d
HAVE_POSIX_SPAWN	config/shore-config.h	131;"	d
HAVE_PTHREAD	config/shore-config.h	134;"	d
HAVE_PTHREAD_ATTR_GETSTACK	config/shore-config.h	137;"	d
HAVE_PTHREAD_ATTR_GETSTACKSIZE	config/shore-config.h	140;"	d
HAVE_PTHREAD_BARRIERS	config/shore-config.h	143;"	d
HAVE_PTHREAD_PRIO_INHERIT	config/shore-config.h	146;"	d
HAVE_PTRDIFF_T	config/shore-config.h	149;"	d
HAVE_SEMAPHORE_H	config/shore-config.h	152;"	d
HAVE_STDINT_H	config/shore-config.h	158;"	d
HAVE_STDLIB_H	config/shore-config.h	161;"	d
HAVE_STRERROR	config/shore-config.h	164;"	d
HAVE_STRINGS_H	config/shore-config.h	167;"	d
HAVE_STRING_H	config/shore-config.h	170;"	d
HAVE_STRUCT_STAT_ST_BLKSIZE	config/shore-config.h	173;"	d
HAVE_SYS_IOCTL_H	config/shore-config.h	180;"	d
HAVE_SYS_PARAM_H	config/shore-config.h	187;"	d
HAVE_SYS_SOCKET_H	config/shore-config.h	190;"	d
HAVE_SYS_STAT_H	config/shore-config.h	193;"	d
HAVE_SYS_TYPES_H	config/shore-config.h	196;"	d
HAVE_TIME_H	config/shore-config.h	199;"	d
HAVE_UNAME	config/shore-config.h	208;"	d
HAVE_UNISTD_H	config/shore-config.h	211;"	d
HAVE_VALLOC	config/shore-config.h	223;"	d
HAVE_VPRINTF	config/shore-config.h	226;"	d
HBUCKETBITS	src/sm/page_h.h	51;"	d
HEADERS	config/Makefile	/^HEADERS = $(include_HEADERS)$/;"	m
HEADERS	src/atomic_ops/Makefile	/^HEADERS = $(include_HEADERS)$/;"	m
HEADERS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^HEADERS = $(include_HEADERS)$/;"	m
HEADERS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^HEADERS = $(include_HEADERS)$/;"	m
HEADERS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^HEADERS = $(include_HEADERS)$/;"	m
HEADERS	src/atomic_ops/ia32/sys/Makefile	/^HEADERS = $(include_HEADERS)$/;"	m
HEADERS	src/atomic_ops/intel/ia32/sys/Makefile	/^HEADERS = $(include_HEADERS)$/;"	m
HEADERS	src/atomic_ops/intel/sys/Makefile	/^HEADERS = $(include_HEADERS)$/;"	m
HEADERS	src/atomic_ops/sparc/sys/Makefile	/^HEADERS = $(include_HEADERS)$/;"	m
HEADERS	src/common/Makefile	/^HEADERS = $(include_HEADERS)$/;"	m
HEADERS	src/fc/Makefile	/^HEADERS = $(include_HEADERS)$/;"	m
HEADERS	src/sm/Makefile	/^HEADERS = $(include_HEADERS)$/;"	m
HEADERS	src/sm/smsh/Makefile	/^HEADERS = $(include_HEADERS)$/;"	m
HEADERS	src/sthread/Makefile	/^HEADERS = $(include_HEADERS)$/;"	m
HERE	src/common/regcomp.cpp	141;"	d	file:
HISTO_C	src/sm/histo.cpp	58;"	d	file:
HISTO_H	src/sm/histo.h	54;"	d
HOSTNAME_H	src/common/hostname.h	31;"	d
HP_CC_BUG_1	src/fc/w_workaround.h	300;"	d
HP_CC_BUG_2	src/fc/w_workaround.h	305;"	d
HP_CC_BUG_3	src/fc/w_workaround.h	311;"	d
HR_MAX	src/fc/stime.cpp	74;"	d	file:
HR_ROUNDUP	src/fc/stime.cpp	538;"	d	file:
HR_SECOND	src/fc/stime.cpp	61;"	d	file:
HR_SECOND	src/fc/stime.cpp	66;"	d	file:
HR_SECOND	src/fc/tests/ntime.cpp	56;"	d	file:
HR_SECOND	src/fc/tests/ntime.cpp	60;"	d	file:
HTAB_UNIT_TEST_C	src/sm/bf_htab_test.cpp	69;"	d	file:
HTAB_UNIT_TEST_C	src/sm/tests/htab.cpp	30;"	d	file:
HUGEPAGESIZE	config/shore-config.h	232;"	d
HUGEPAGESIZE	src/sthread/io.cpp	94;"	d	file:
Heap	src/fc/w_heap.h	/^Heap<T, Cmp>::Heap(const Cmp& cmpFunction, int initialNumElements)$/;"	f	class:Heap
Heap	src/fc/w_heap.h	/^class Heap$/;"	c
HeapProperty	src/fc/w_heap.h	/^bool Heap<T, Cmp>::HeapProperty(int root) const$/;"	f	class:Heap
HeapProperty	src/fc/w_heap.h	/^bool Heap<T, Cmp>::HeapProperty(int top, int bottom) const$/;"	f	class:Heap
Heapify	src/fc/w_heap.h	/^void Heap<T, Cmp>::Heapify()$/;"	f	class:Heap
I	src/sm/sm_s.h	/^        I = 'I',                \/\/ integer (1,2,4), compressed$/;"	e	enum:key_type_s::type_t
I1perm	src/sm/lexify.h	/^    int I1perm[1];$/;"	m	class:sortorder
I2perm	src/sm/lexify.h	/^    int I2perm[2];$/;"	m	class:sortorder
I4perm	src/sm/lexify.h	/^    int I4perm[4];$/;"	m	class:sortorder
I8perm	src/sm/lexify.h	/^    int I8perm[8];$/;"	m	class:sortorder
IF_MATCH	src/fc/cpu_info.cpp	199;"	d	file:
INC	src/common/regexec.cpp	115;"	d	file:
INC	src/common/regexec.cpp	138;"	d	file:
INC	src/common/regexec.cpp	89;"	d	file:
INC_STAT_SORT	src/sm/newsort.cpp	172;"	d	file:
INC_STAT_SORT	src/sm/newsort.cpp	179;"	d	file:
INC_STH_STATS	src/sthread/sthread_stats.h	98;"	d
INC_TSTAT	src/sm/smthread.h	524;"	d
INC_TSTAT_BFHT	src/sm/smthread.h	530;"	d
INC_TSTAT_SORT	src/sm/sort.cpp	101;"	d	file:
INC_TSTAT_SORT	src/sm/sort.cpp	94;"	d	file:
INDEPENDENT_MAKEFLAGS	config/Makefile	/^INDEPENDENT_MAKEFLAGS = $(AM_CXXFLAGS)$/;"	m
INF	src/common/regcomp.cpp	972;"	d	file:
INI	src/sm/bf_prefetch.cpp	114;"	d	file:
INI	src/sm/bf_prefetch.cpp	81;"	d	file:
INIT	src/common/regexec.cpp	114;"	d	file:
INIT	src/common/regexec.cpp	137;"	d	file:
INIT	src/common/regexec.cpp	88;"	d	file:
INIT_SCAN_PROLOGUE_RC	src/sm/prologue.h	85;"	d
INSERT	src/common/regcomp.cpp	138;"	d	file:
INSTALL	Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	config/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/atomic_ops/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/atomic_ops/asm_linkage/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/atomic_ops/asm_linkage/usr/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/atomic_ops/asm_linkage/usr/src/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/atomic_ops/atomic_ops/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/atomic_ops/atomic_ops/amd64/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/atomic_ops/atomic_ops/i386/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/atomic_ops/atomic_ops/sparc/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/atomic_ops/ia32/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/atomic_ops/ia32/sys/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/atomic_ops/intel/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/atomic_ops/intel/ia32/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/atomic_ops/intel/ia32/sys/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/atomic_ops/intel/sys/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/atomic_ops/sparc/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/atomic_ops/sparc/sys/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/common/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/common/tests/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/fc/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/fc/tests/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/sm/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/sm/smsh/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/sm/smsh/lib/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/sm/smsh/scripts/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/sm/tests/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/sthread/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/sthread/tests/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	tools/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL_DATA	Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	config/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/atomic_ops/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/atomic_ops/asm_linkage/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/atomic_ops/asm_linkage/usr/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/atomic_ops/asm_linkage/usr/src/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/atomic_ops/atomic_ops/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/atomic_ops/atomic_ops/amd64/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/atomic_ops/atomic_ops/i386/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/atomic_ops/atomic_ops/sparc/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/atomic_ops/ia32/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/atomic_ops/ia32/sys/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/atomic_ops/intel/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/atomic_ops/intel/ia32/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/atomic_ops/intel/ia32/sys/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/atomic_ops/intel/sys/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/atomic_ops/sparc/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/atomic_ops/sparc/sys/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/common/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/common/tests/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/fc/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/fc/tests/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/sm/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/sm/smsh/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/sm/smsh/lib/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/sm/smsh/scripts/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/sm/tests/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/sthread/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/sthread/tests/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	tools/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_HEADER	Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	config/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/atomic_ops/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/atomic_ops/asm_linkage/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/atomic_ops/asm_linkage/usr/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/atomic_ops/asm_linkage/usr/src/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/atomic_ops/atomic_ops/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/atomic_ops/atomic_ops/amd64/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/atomic_ops/atomic_ops/i386/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/atomic_ops/atomic_ops/sparc/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/atomic_ops/ia32/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/atomic_ops/ia32/sys/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/atomic_ops/intel/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/atomic_ops/intel/ia32/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/atomic_ops/intel/ia32/sys/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/atomic_ops/intel/sys/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/atomic_ops/sparc/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/atomic_ops/sparc/sys/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/common/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/common/tests/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/fc/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/fc/tests/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/sm/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/sm/smsh/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/sm/smsh/lib/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/sm/smsh/scripts/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/sm/tests/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/sthread/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/sthread/tests/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	tools/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_PROGRAM	Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	config/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/atomic_ops/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/atomic_ops/asm_linkage/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/atomic_ops/asm_linkage/usr/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/atomic_ops/asm_linkage/usr/src/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/atomic_ops/atomic_ops/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/atomic_ops/atomic_ops/amd64/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/atomic_ops/atomic_ops/i386/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/atomic_ops/atomic_ops/sparc/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/atomic_ops/ia32/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/atomic_ops/ia32/sys/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/atomic_ops/intel/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/atomic_ops/intel/ia32/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/atomic_ops/intel/ia32/sys/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/atomic_ops/intel/sys/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/atomic_ops/sparc/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/atomic_ops/sparc/sys/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/common/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/common/tests/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/fc/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/fc/tests/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/sm/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/sm/smsh/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/sm/smsh/lib/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/sm/smsh/scripts/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/sm/tests/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/sthread/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/sthread/tests/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	tools/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_SCRIPT	Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	config/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/atomic_ops/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/atomic_ops/asm_linkage/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/atomic_ops/asm_linkage/usr/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/atomic_ops/asm_linkage/usr/src/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/atomic_ops/atomic_ops/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/atomic_ops/atomic_ops/amd64/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/atomic_ops/atomic_ops/i386/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/atomic_ops/atomic_ops/sparc/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/atomic_ops/ia32/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/atomic_ops/ia32/sys/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/atomic_ops/intel/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/atomic_ops/intel/ia32/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/atomic_ops/intel/ia32/sys/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/atomic_ops/intel/sys/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/atomic_ops/sparc/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/atomic_ops/sparc/sys/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/common/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/common/tests/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/fc/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/fc/tests/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/sm/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/sm/smsh/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/sm/smsh/lib/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/sm/smsh/scripts/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/sm/tests/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/sthread/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/sthread/tests/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	tools/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_STRIP_PROGRAM	Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	config/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/atomic_ops/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/atomic_ops/asm_linkage/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/atomic_ops/asm_linkage/usr/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/atomic_ops/asm_linkage/usr/src/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/atomic_ops/atomic_ops/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/atomic_ops/atomic_ops/amd64/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/atomic_ops/atomic_ops/i386/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/atomic_ops/atomic_ops/sparc/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/atomic_ops/ia32/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/atomic_ops/ia32/sys/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/atomic_ops/intel/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/atomic_ops/intel/ia32/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/atomic_ops/intel/ia32/sys/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/atomic_ops/intel/sys/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/atomic_ops/sparc/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/atomic_ops/sparc/sys/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/common/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/common/tests/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/fc/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/fc/tests/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/sm/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/sm/smsh/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/sm/smsh/lib/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/sm/smsh/scripts/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/sm/tests/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/sthread/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/sthread/tests/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	tools/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTRUMENT_SORT	src/sm/sort.h	66;"	d
INT64_LITERAL_BUG	src/fc/w_workaround.h	245;"	d
INT64_LITERAL_BUG	src/fc/w_workaround.h	247;"	d
IOS_BACK	src/fc/w_input.cpp	232;"	d	file:
IOS_BACK	src/fc/w_input.cpp	234;"	d	file:
IOS_FAIL	src/fc/w_input.cpp	238;"	d	file:
IOS_FAIL	src/fc/w_input.cpp	240;"	d	file:
IOS_FAIL	src/sm/smsh/shell.cpp	47;"	d	file:
IOS_FAIL	src/sm/smsh/shell.cpp	49;"	d	file:
IO_C	src/sm/sm_io.cpp	58;"	d	file:
IO_C	src/sthread/io.cpp	72;"	d	file:
IO_DIR	src/sthread/tests/thread2.cpp	46;"	d	file:
IS	src/common/basics.h	/^	static const lock_mode_t IS = w_base_t::IS;$/;"	m	namespace:locking
IS	src/fc/w_base.h	/^        IS,         \/* intention share (read)        *\/$/;"	e	enum:w_base_t::lock_mode_t
ISSET	src/common/regexec.cpp	106;"	d	file:
ISSET	src/common/regexec.cpp	127;"	d	file:
ISSET	src/common/regexec.cpp	80;"	d	file:
ISSETBACK	src/common/regexec.cpp	119;"	d	file:
ISSETBACK	src/common/regexec.cpp	144;"	d	file:
ISSETBACK	src/common/regexec.cpp	95;"	d	file:
ISSTATEIN	src/common/regexec.cpp	116;"	d	file:
ISSTATEIN	src/common/regexec.cpp	139;"	d	file:
ISSTATEIN	src/common/regexec.cpp	90;"	d	file:
ISWORD	src/common/regex2.h	186;"	d
IS_AMD64_LINUX	config/shore-config.h	259;"	d
IS_LINUX	config/shore-config.h	298;"	d
IS_UNIX	config/shore-config.h	350;"	d
IS_V9STACK	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h	112;"	d
IS_V9STACK	src/atomic_ops/sparc/sys/stack.h	112;"	d
IS_X86_64_LINUX	config/shore-config.h	358;"	d
IX	src/common/basics.h	/^	static const lock_mode_t IX = w_base_t::IX;$/;"	m	namespace:locking
IX	src/fc/w_base.h	/^        IX,            \/* intention exclusive (write)        *\/$/;"	e	enum:w_base_t::lock_mode_t
Ibyteorder	src/sm/lexify.cpp	/^sortorder::Ibyteorder(int permutation[4]) $/;"	f	class:sortorder
Ibyteorder	src/sm/lexify.cpp	/^void sortorder::Ibyteorder(int *permutation, int size) $/;"	f	class:sortorder
IncreasedN	src/fc/w_heap.h	/^inline void Heap<T, Cmp>::IncreasedN(int n)$/;"	f	class:Heap
Increment	src/sm/xct.cpp	/^        int Increment(int vol)$/;"	f	class:VolidCnt
IncrementPages	src/sm/sm_du_stats.h	/^inline void SmStoreMetaStats::IncrementPages(int numReserved, int numAlloc)$/;"	f	class:SmStoreMetaStats
IncrementPages	src/sm/sm_du_stats.h	/^inline void SmVolumeMetaStats::IncrementPages(int numReserved, int numAlloc)$/;"	f	class:SmVolumeMetaStats
Init	src/sm/tests/htab.cpp	/^    typedef enum { Zero, Init, Inserted, Evicted, Returned, Removed } Status;$/;"	e	enum:htab_tester::__anon97	file:
Inserted	src/sm/tests/htab.cpp	/^    typedef enum { Zero, Init, Inserted, Evicted, Returned, Removed } Status;$/;"	e	enum:htab_tester::__anon97	file:
JJJJ	src/fc/w_input.cpp	/^        exx, JJJJ, eofile, white, sign, no_charclass$/;"	e	enum:charclass	file:
KEYED_C	src/sm/keyed.cpp	58;"	d	file:
KEYED_H	src/sm/keyed.h	31;"	d
KRMap	src/sm/key_ranges_map.h	/^    typedef map<foo, lpid_t, cmp_greater >                 KRMap;$/;"	t	class:key_ranges_map
KRMapCIt	src/sm/key_ranges_map.h	/^    typedef map<foo, lpid_t, cmp_greater >::const_iterator KRMapCIt;$/;"	t	class:key_ranges_map
KRMapIt	src/sm/key_ranges_map.h	/^    typedef map<foo, lpid_t, cmp_greater >::iterator       KRMapIt;$/;"	t	class:key_ranges_map
KVL_T_H	src/common/kvl_t.h	31;"	d
Key	src/sm/data_access_histogram.h	/^    typedef cvec_t Key;$/;"	t	class:data_access_histogram
Key	src/sm/key_ranges_map.h	/^    typedef cvec_t Key;$/;"	t	class:key_ranges_map
LARGEFILE_AWARE	config/shore-config.h	473;"	d
LARGEKEYSTRING	src/sm/smsh/shell2.cpp	273;"	d	file:
LARGEKEYSTRING	src/sm/smsh/shell2.cpp	43;"	d	file:
LARGESTRING	src/sm/smsh/shell2.cpp	274;"	d	file:
LARGESTRING	src/sm/smsh/shell2.cpp	44;"	d	file:
LASTSTRING	src/sm/smsh/shell2.cpp	/^char *LASTSTRING = (char *)&_laststring;$/;"	v
LAST_THREAD	src/common/tests/latch1.cpp	54;"	d	file:
LATCH_CAN_BLOCK_LONG	src/sthread/sthread.h	286;"	d
LATCH_EX	src/common/latch.h	/^enum latch_mode_t { LATCH_NL = 0, LATCH_SH = 1, LATCH_EX = 2,$/;"	e	enum:latch_mode_t
LATCH_H	src/common/latch.h	55;"	d
LATCH_NL	src/common/latch.h	/^enum latch_mode_t { LATCH_NL = 0, LATCH_SH = 1, LATCH_EX = 2,$/;"	e	enum:latch_mode_t
LATCH_NLS	src/common/latch.h	/^		    LATCH_NLS = 4, LATCH_NLX = 8 }; \/\/ pin: for plp$/;"	e	enum:latch_mode_t
LATCH_NLX	src/common/latch.h	/^		    LATCH_NLS = 4, LATCH_NLX = 8 }; \/\/ pin: for plp$/;"	e	enum:latch_mode_t
LATCH_SH	src/common/latch.h	/^enum latch_mode_t { LATCH_NL = 0, LATCH_SH = 1, LATCH_EX = 2,$/;"	e	enum:latch_mode_t
LDADD	src/common/tests/Makefile	/^LDADD = ..\/libcommon.a ..\/..\/sthread\/libsthread.a ..\/..\/fc\/libfc.a $(LOCALLDADD)$/;"	m
LDADD	src/fc/tests/Makefile	/^LDADD = ..\/libfc.a  $(LOCALLDADD)$/;"	m
LDADD	src/sm/smsh/Makefile	/^LDADD = \\$/;"	m
LDADD	src/sm/tests/Makefile	/^LDADD = \\$/;"	m
LDADD	src/sthread/tests/Makefile	/^LDADD = ..\/libsthread.a ..\/..\/fc\/libfc.a $(LOCALLDADD)$/;"	m
LDFLAGS	Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	config/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/atomic_ops/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/atomic_ops/asm_linkage/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/atomic_ops/asm_linkage/usr/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/atomic_ops/atomic_ops/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/atomic_ops/atomic_ops/amd64/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/atomic_ops/atomic_ops/i386/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/atomic_ops/atomic_ops/sparc/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/atomic_ops/ia32/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/atomic_ops/ia32/sys/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/atomic_ops/intel/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/atomic_ops/intel/ia32/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/atomic_ops/intel/ia32/sys/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/atomic_ops/intel/sys/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/atomic_ops/sparc/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/atomic_ops/sparc/sys/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/common/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/common/tests/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/fc/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/fc/tests/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/sm/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/sm/smsh/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/sm/smsh/lib/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/sm/smsh/scripts/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/sm/tests/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/sthread/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/sthread/tests/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	tools/Makefile	/^LDFLAGS = $/;"	m
LEXFUNC	src/sm/sort_s.h	/^    typedef ssm_sort::LEXFUNC LEXFUNC;$/;"	t	class:ssm_sort::sort_keys_t
LEXFUNC	src/sm/sort_s.h	/^typedef w_rc_t (*LEXFUNC) (const void *source, smsize_t len, void *sink);$/;"	t	namespace:ssm_sort
LEXIFY_H	src/sm/lexify.h	31;"	d
LGREC_C	src/sm/lgrec.cpp	35;"	d	file:
LGREC_H	src/sm/lgrec.h	31;"	d
LIBOBJS	Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	config/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/atomic_ops/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/atomic_ops/asm_linkage/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/atomic_ops/asm_linkage/usr/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/atomic_ops/atomic_ops/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/atomic_ops/atomic_ops/amd64/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/atomic_ops/atomic_ops/i386/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/atomic_ops/atomic_ops/sparc/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/atomic_ops/ia32/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/atomic_ops/ia32/sys/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/atomic_ops/intel/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/atomic_ops/intel/ia32/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/atomic_ops/intel/ia32/sys/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/atomic_ops/intel/sys/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/atomic_ops/sparc/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/atomic_ops/sparc/sys/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/common/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/common/tests/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/fc/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/fc/tests/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/sm/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/sm/smsh/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/sm/smsh/lib/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/sm/smsh/scripts/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/sm/tests/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/sthread/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/sthread/tests/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	tools/Makefile	/^LIBOBJS = $/;"	m
LIBRARIES	src/atomic_ops/Makefile	/^LIBRARIES = $(lib_LIBRARIES)$/;"	m
LIBRARIES	src/common/Makefile	/^LIBRARIES = $(lib_LIBRARIES)$/;"	m
LIBRARIES	src/fc/Makefile	/^LIBRARIES = $(lib_LIBRARIES)$/;"	m
LIBRARIES	src/sm/Makefile	/^LIBRARIES = $(lib_LIBRARIES)$/;"	m
LIBRARIES	src/sthread/Makefile	/^LIBRARIES = $(lib_LIBRARIES)$/;"	m
LIBS	Makefile	/^LIBS = -lrt  $/;"	m
LIBS	config/Makefile	/^LIBS = -lrt  $/;"	m
LIBS	src/Makefile	/^LIBS = -lrt  $/;"	m
LIBS	src/atomic_ops/Makefile	/^LIBS = -lrt  $/;"	m
LIBS	src/atomic_ops/asm_linkage/Makefile	/^LIBS = -lrt  $/;"	m
LIBS	src/atomic_ops/asm_linkage/usr/Makefile	/^LIBS = -lrt  $/;"	m
LIBS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^LIBS = -lrt  $/;"	m
LIBS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^LIBS = -lrt  $/;"	m
LIBS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^LIBS = -lrt  $/;"	m
LIBS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^LIBS = -lrt  $/;"	m
LIBS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^LIBS = -lrt  $/;"	m
LIBS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^LIBS = -lrt  $/;"	m
LIBS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^LIBS = -lrt  $/;"	m
LIBS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^LIBS = -lrt  $/;"	m
LIBS	src/atomic_ops/atomic_ops/Makefile	/^LIBS = -lrt  $/;"	m
LIBS	src/atomic_ops/atomic_ops/amd64/Makefile	/^LIBS = -lrt  $/;"	m
LIBS	src/atomic_ops/atomic_ops/i386/Makefile	/^LIBS = -lrt  $/;"	m
LIBS	src/atomic_ops/atomic_ops/sparc/Makefile	/^LIBS = -lrt  $/;"	m
LIBS	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^LIBS = -lrt  $/;"	m
LIBS	src/atomic_ops/ia32/Makefile	/^LIBS = -lrt  $/;"	m
LIBS	src/atomic_ops/ia32/sys/Makefile	/^LIBS = -lrt  $/;"	m
LIBS	src/atomic_ops/intel/Makefile	/^LIBS = -lrt  $/;"	m
LIBS	src/atomic_ops/intel/ia32/Makefile	/^LIBS = -lrt  $/;"	m
LIBS	src/atomic_ops/intel/ia32/sys/Makefile	/^LIBS = -lrt  $/;"	m
LIBS	src/atomic_ops/intel/sys/Makefile	/^LIBS = -lrt  $/;"	m
LIBS	src/atomic_ops/sparc/Makefile	/^LIBS = -lrt  $/;"	m
LIBS	src/atomic_ops/sparc/sys/Makefile	/^LIBS = -lrt  $/;"	m
LIBS	src/common/Makefile	/^LIBS = -lrt  $/;"	m
LIBS	src/common/tests/Makefile	/^LIBS = -lrt  $/;"	m
LIBS	src/fc/Makefile	/^LIBS = -lrt  $/;"	m
LIBS	src/fc/tests/Makefile	/^LIBS = -lrt  $/;"	m
LIBS	src/sm/Makefile	/^LIBS = -lrt  $/;"	m
LIBS	src/sm/smsh/Makefile	/^LIBS = -lrt  $/;"	m
LIBS	src/sm/smsh/lib/Makefile	/^LIBS = -lrt  $/;"	m
LIBS	src/sm/smsh/scripts/Makefile	/^LIBS = -lrt  $/;"	m
LIBS	src/sm/tests/Makefile	/^LIBS = -lrt  $/;"	m
LIBS	src/sthread/Makefile	/^LIBS = -lrt  $/;"	m
LIBS	src/sthread/tests/Makefile	/^LIBS = -lrt  $/;"	m
LIBS	tools/Makefile	/^LIBS = -lrt  $/;"	m
LID_C	src/sm/lid.cpp	35;"	d	file:
LID_H	src/sm/lid.h	31;"	d
LID_T_C	src/common/lid_t.cpp	34;"	d	file:
LID_T_H	src/common/lid_t.h	31;"	d
LINE	tools/logdef.pl	/^LINE:$/;"	l
LINE	tools/stats.pl	/^    LINE: while (<>)  {$/;"	l
LINENO	src/fc/tests/stats2.cpp	61;"	d	file:
LINK	src/atomic_ops/Makefile	/^LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@$/;"	m
LNAMES	src/common/regexec.cpp	146;"	d	file:
LOCALCLEAN	Makefile	/^LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)$/;"	m
LOCALCLEAN	config/Makefile	/^LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)$/;"	m
LOCALCLEAN	src/Makefile	/^LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)$/;"	m
LOCALCLEAN	src/atomic_ops/Makefile	/^LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)$/;"	m
LOCALCLEAN	src/atomic_ops/asm_linkage/Makefile	/^LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)$/;"	m
LOCALCLEAN	src/atomic_ops/asm_linkage/usr/Makefile	/^LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)$/;"	m
LOCALCLEAN	src/atomic_ops/asm_linkage/usr/src/Makefile	/^LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)$/;"	m
LOCALCLEAN	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)$/;"	m
LOCALCLEAN	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)$/;"	m
LOCALCLEAN	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)$/;"	m
LOCALCLEAN	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)$/;"	m
LOCALCLEAN	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)$/;"	m
LOCALCLEAN	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)$/;"	m
LOCALCLEAN	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)$/;"	m
LOCALCLEAN	src/atomic_ops/atomic_ops/Makefile	/^LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)$/;"	m
LOCALCLEAN	src/atomic_ops/atomic_ops/amd64/Makefile	/^LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)$/;"	m
LOCALCLEAN	src/atomic_ops/atomic_ops/i386/Makefile	/^LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)$/;"	m
LOCALCLEAN	src/atomic_ops/atomic_ops/sparc/Makefile	/^LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)$/;"	m
LOCALCLEAN	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)$/;"	m
LOCALCLEAN	src/atomic_ops/ia32/Makefile	/^LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)$/;"	m
LOCALCLEAN	src/atomic_ops/ia32/sys/Makefile	/^LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)$/;"	m
LOCALCLEAN	src/atomic_ops/intel/Makefile	/^LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)$/;"	m
LOCALCLEAN	src/atomic_ops/intel/ia32/Makefile	/^LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)$/;"	m
LOCALCLEAN	src/atomic_ops/intel/ia32/sys/Makefile	/^LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)$/;"	m
LOCALCLEAN	src/atomic_ops/intel/sys/Makefile	/^LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)$/;"	m
LOCALCLEAN	src/atomic_ops/sparc/Makefile	/^LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)$/;"	m
LOCALCLEAN	src/atomic_ops/sparc/sys/Makefile	/^LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)$/;"	m
LOCALCLEAN	src/common/Makefile	/^LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)$/;"	m
LOCALCLEAN	src/common/tests/Makefile	/^LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)$/;"	m
LOCALCLEAN	src/fc/Makefile	/^LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)$/;"	m
LOCALCLEAN	src/fc/tests/Makefile	/^LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)$/;"	m
LOCALCLEAN	src/sm/Makefile	/^LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)$/;"	m
LOCALCLEAN	src/sm/smsh/Makefile	/^LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)$/;"	m
LOCALCLEAN	src/sm/smsh/lib/Makefile	/^LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)$/;"	m
LOCALCLEAN	src/sm/smsh/scripts/Makefile	/^LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)$/;"	m
LOCALCLEAN	src/sm/tests/Makefile	/^LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)$/;"	m
LOCALCLEAN	src/sthread/Makefile	/^LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)$/;"	m
LOCALCLEAN	src/sthread/tests/Makefile	/^LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)$/;"	m
LOCALCLEAN	tools/Makefile	/^LOCALCLEAN = $(am__append_17) $(am__append_20) $(am__append_23)$/;"	m
LOCALLDADD	Makefile	/^LOCALLDADD = $(top_srcdir)\/src\/atomic_ops\/libatomic_ops.a \\$/;"	m
LOCALLDADD	config/Makefile	/^LOCALLDADD = $(top_srcdir)\/src\/atomic_ops\/libatomic_ops.a \\$/;"	m
LOCALLDADD	src/Makefile	/^LOCALLDADD = $(top_srcdir)\/src\/atomic_ops\/libatomic_ops.a \\$/;"	m
LOCALLDADD	src/atomic_ops/Makefile	/^LOCALLDADD = $(top_srcdir)\/src\/atomic_ops\/libatomic_ops.a \\$/;"	m
LOCALLDADD	src/atomic_ops/asm_linkage/Makefile	/^LOCALLDADD = $(top_srcdir)\/src\/atomic_ops\/libatomic_ops.a \\$/;"	m
LOCALLDADD	src/atomic_ops/asm_linkage/usr/Makefile	/^LOCALLDADD = $(top_srcdir)\/src\/atomic_ops\/libatomic_ops.a \\$/;"	m
LOCALLDADD	src/atomic_ops/asm_linkage/usr/src/Makefile	/^LOCALLDADD = $(top_srcdir)\/src\/atomic_ops\/libatomic_ops.a \\$/;"	m
LOCALLDADD	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^LOCALLDADD = $(top_srcdir)\/src\/atomic_ops\/libatomic_ops.a \\$/;"	m
LOCALLDADD	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^LOCALLDADD = $(top_srcdir)\/src\/atomic_ops\/libatomic_ops.a \\$/;"	m
LOCALLDADD	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^LOCALLDADD = $(top_srcdir)\/src\/atomic_ops\/libatomic_ops.a \\$/;"	m
LOCALLDADD	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^LOCALLDADD = $(top_srcdir)\/src\/atomic_ops\/libatomic_ops.a \\$/;"	m
LOCALLDADD	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^LOCALLDADD = $(top_srcdir)\/src\/atomic_ops\/libatomic_ops.a \\$/;"	m
LOCALLDADD	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^LOCALLDADD = $(top_srcdir)\/src\/atomic_ops\/libatomic_ops.a \\$/;"	m
LOCALLDADD	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^LOCALLDADD = $(top_srcdir)\/src\/atomic_ops\/libatomic_ops.a \\$/;"	m
LOCALLDADD	src/atomic_ops/atomic_ops/Makefile	/^LOCALLDADD = $(top_srcdir)\/src\/atomic_ops\/libatomic_ops.a \\$/;"	m
LOCALLDADD	src/atomic_ops/atomic_ops/amd64/Makefile	/^LOCALLDADD = $(top_srcdir)\/src\/atomic_ops\/libatomic_ops.a \\$/;"	m
LOCALLDADD	src/atomic_ops/atomic_ops/i386/Makefile	/^LOCALLDADD = $(top_srcdir)\/src\/atomic_ops\/libatomic_ops.a \\$/;"	m
LOCALLDADD	src/atomic_ops/atomic_ops/sparc/Makefile	/^LOCALLDADD = $(top_srcdir)\/src\/atomic_ops\/libatomic_ops.a \\$/;"	m
LOCALLDADD	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^LOCALLDADD = $(top_srcdir)\/src\/atomic_ops\/libatomic_ops.a \\$/;"	m
LOCALLDADD	src/atomic_ops/ia32/Makefile	/^LOCALLDADD = $(top_srcdir)\/src\/atomic_ops\/libatomic_ops.a \\$/;"	m
LOCALLDADD	src/atomic_ops/ia32/sys/Makefile	/^LOCALLDADD = $(top_srcdir)\/src\/atomic_ops\/libatomic_ops.a \\$/;"	m
LOCALLDADD	src/atomic_ops/intel/Makefile	/^LOCALLDADD = $(top_srcdir)\/src\/atomic_ops\/libatomic_ops.a \\$/;"	m
LOCALLDADD	src/atomic_ops/intel/ia32/Makefile	/^LOCALLDADD = $(top_srcdir)\/src\/atomic_ops\/libatomic_ops.a \\$/;"	m
LOCALLDADD	src/atomic_ops/intel/ia32/sys/Makefile	/^LOCALLDADD = $(top_srcdir)\/src\/atomic_ops\/libatomic_ops.a \\$/;"	m
LOCALLDADD	src/atomic_ops/intel/sys/Makefile	/^LOCALLDADD = $(top_srcdir)\/src\/atomic_ops\/libatomic_ops.a \\$/;"	m
LOCALLDADD	src/atomic_ops/sparc/Makefile	/^LOCALLDADD = $(top_srcdir)\/src\/atomic_ops\/libatomic_ops.a \\$/;"	m
LOCALLDADD	src/atomic_ops/sparc/sys/Makefile	/^LOCALLDADD = $(top_srcdir)\/src\/atomic_ops\/libatomic_ops.a \\$/;"	m
LOCALLDADD	src/common/Makefile	/^LOCALLDADD = $(top_srcdir)\/src\/atomic_ops\/libatomic_ops.a \\$/;"	m
LOCALLDADD	src/common/tests/Makefile	/^LOCALLDADD = $(top_srcdir)\/src\/atomic_ops\/libatomic_ops.a \\$/;"	m
LOCALLDADD	src/fc/Makefile	/^LOCALLDADD = $(top_srcdir)\/src\/atomic_ops\/libatomic_ops.a \\$/;"	m
LOCALLDADD	src/fc/tests/Makefile	/^LOCALLDADD = $(top_srcdir)\/src\/atomic_ops\/libatomic_ops.a \\$/;"	m
LOCALLDADD	src/sm/Makefile	/^LOCALLDADD = $(top_srcdir)\/src\/atomic_ops\/libatomic_ops.a \\$/;"	m
LOCALLDADD	src/sm/smsh/Makefile	/^LOCALLDADD = $(top_srcdir)\/src\/atomic_ops\/libatomic_ops.a \\$/;"	m
LOCALLDADD	src/sm/smsh/lib/Makefile	/^LOCALLDADD = $(top_srcdir)\/src\/atomic_ops\/libatomic_ops.a \\$/;"	m
LOCALLDADD	src/sm/smsh/scripts/Makefile	/^LOCALLDADD = $(top_srcdir)\/src\/atomic_ops\/libatomic_ops.a \\$/;"	m
LOCALLDADD	src/sm/tests/Makefile	/^LOCALLDADD = $(top_srcdir)\/src\/atomic_ops\/libatomic_ops.a \\$/;"	m
LOCALLDADD	src/sthread/Makefile	/^LOCALLDADD = $(top_srcdir)\/src\/atomic_ops\/libatomic_ops.a \\$/;"	m
LOCALLDADD	src/sthread/tests/Makefile	/^LOCALLDADD = $(top_srcdir)\/src\/atomic_ops\/libatomic_ops.a \\$/;"	m
LOCALLDADD	tools/Makefile	/^LOCALLDADD = $(top_srcdir)\/src\/atomic_ops\/libatomic_ops.a \\$/;"	m
LOCATING	src/sm/crash.cpp	244;"	d	file:
LOCKHACK	src/sthread/sthread.h	113;"	d
LOCK_C	src/sm/lock.cpp	59;"	d	file:
LOCK_CACHE_H	src/sm/lock_cache.h	55;"	d
LOCK_CORE_C	src/sm/lock_core.cpp	58;"	d	file:
LOCK_CORE_H	src/sm/lock_core.h	55;"	d
LOCK_H	src/sm/lock.h	54;"	d
LOCK_S_H	src/sm/lock_s.h	54;"	d
LOCK_S_inline_H	src/sm/lock_s_inline.h	54;"	d
LOCK_X_H	src/sm/lock_x.h	55;"	d
LOG2	src/fc/mem_block.h	/^    enum { LOG2     = meta_log2<2*BYTES_NEEDED-1>::VALUE };$/;"	e	enum:memory_block::bounds_check::__anon116
LOGDEF_GENFILES_CPP	src/sm/Makefile	/^LOGDEF_GENFILES_CPP = \\$/;"	m
LOGDEF_GENFILES_H	src/sm/Makefile	/^LOGDEF_GENFILES_H = \\$/;"	m
LOGFUNC_GEN_H	src/sm/logfunc_gen.h	2;"	d
LOGREC_C	src/sm/common_templates.cpp	58;"	d	file:
LOGREC_C	src/sm/logrec.cpp	58;"	d	file:
LOGREC_H	src/sm/logrec.h	54;"	d
LOGSTREAM__MAGIC	src/fc/errlog.h	/^    enum { LOGSTREAM__MAGIC = 0xad12bc45 };$/;"	e	enum:logstream::__anon124
LOGSTUB_C	src/sm/logstub.cpp	35;"	d	file:
LOGTRACE	src/sm/crash.h	39;"	d
LOGTRACE	src/sm/crash.h	54;"	d
LOGTRACE1	src/sm/crash.h	46;"	d
LOGTRACE1	src/sm/crash.h	55;"	d
LOG_ALERT	src/fc/errlog.h	57;"	d
LOG_ARCHIVED_CALLBACK_FUNC	src/sm/sm.h	/^    typedef smlevel_0::LOG_ARCHIVED_CALLBACK_FUNC LOG_ARCHIVED_CALLBACK_FUNC;$/;"	t	class:ss_m
LOG_ARCHIVED_CALLBACK_FUNC	src/sm/sm_base.h	/^    typedef w_rc_t (*LOG_ARCHIVED_CALLBACK_FUNC) ($/;"	t	class:smlevel_0
LOG_C	src/sm/crash.cpp	40;"	d	file:
LOG_C	src/sm/log.cpp	58;"	d	file:
LOG_COMMENT_USE	src/sm/xct.h	75;"	d
LOG_COMMENT_USE	src/sm/xct.h	82;"	d
LOG_COMPILE	src/common/tests/Makefile	/^LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)$/;"	m
LOG_COMPILE	src/fc/tests/Makefile	/^LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)$/;"	m
LOG_COMPILE	src/sm/smsh/Makefile	/^LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)$/;"	m
LOG_COMPILE	src/sm/tests/Makefile	/^LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)$/;"	m
LOG_COMPILE	src/sthread/tests/Makefile	/^LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)$/;"	m
LOG_CORE_C	src/sm/log_core.cpp	62;"	d	file:
LOG_CORE_C	src/sm/sm-no-inline.cpp	28;"	d	file:
LOG_CORE_H	src/sm/log_core.h	55;"	d
LOG_CRIT	src/fc/errlog.h	58;"	d
LOG_DEBUG	src/fc/errlog.h	63;"	d
LOG_DRIVER	src/common/tests/Makefile	/^LOG_DRIVER = $(SHELL) $(top_srcdir)\/config\/test-driver$/;"	m
LOG_DRIVER	src/fc/tests/Makefile	/^LOG_DRIVER = $(SHELL) $(top_srcdir)\/config\/test-driver$/;"	m
LOG_DRIVER	src/sm/smsh/Makefile	/^LOG_DRIVER = $(SHELL) $(top_srcdir)\/config\/test-driver$/;"	m
LOG_DRIVER	src/sm/tests/Makefile	/^LOG_DRIVER = $(SHELL) $(top_srcdir)\/config\/test-driver$/;"	m
LOG_DRIVER	src/sthread/tests/Makefile	/^LOG_DRIVER = $(SHELL) $(top_srcdir)\/config\/test-driver$/;"	m
LOG_EMERG	src/fc/errlog.h	56;"	d
LOG_ERR	src/fc/errlog.h	59;"	d
LOG_H	src/sm/log.h	54;"	d
LOG_INFO	src/fc/errlog.h	62;"	d
LOG_INSERT	src/sm/chkpt.cpp	321;"	d	file:
LOG_NOTICE	src/fc/errlog.h	61;"	d
LOG_USER	src/fc/errlog.h	64;"	d
LOG_WARNING	src/fc/errlog.h	60;"	d
LOG_WARN_CALLBACK_FUNC	src/sm/sm.h	/^    typedef smlevel_0::LOG_WARN_CALLBACK_FUNC LOG_WARN_CALLBACK_FUNC;$/;"	t	class:ss_m
LOG_WARN_CALLBACK_FUNC	src/sm/sm_base.h	/^    typedef w_rc_t (*LOG_WARN_CALLBACK_FUNC) ($/;"	t	class:smlevel_0
LONGLONGCONSTANT	src/fc/w_base.cpp	82;"	d	file:
LONGLONGCONSTANT	src/fc/w_input.cpp	249;"	d	file:
LOOK	src/sm/smsh/smsh_error.cpp	108;"	d	file:
LOOK	src/sm/smsh/smsh_error.cpp	63;"	d	file:
LOOK	src/sm/smsh/smsh_error.cpp	77;"	d	file:
LOOK	src/sm/smsh/smsh_error.cpp	93;"	d	file:
LPID_T	src/sm/sm_s.h	94;"	d
LSN_H	src/common/lsn.h	54;"	d
LSN_T	src/common/lsn.h	62;"	d
LST	src/sm/bf_prefetch.cpp	121;"	d	file:
LST	src/sm/bf_prefetch.cpp	88;"	d	file:
LTLIBOBJS	Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	config/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/atomic_ops/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/atomic_ops/asm_linkage/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/atomic_ops/asm_linkage/usr/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/atomic_ops/atomic_ops/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/atomic_ops/atomic_ops/amd64/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/atomic_ops/atomic_ops/i386/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/atomic_ops/atomic_ops/sparc/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/atomic_ops/ia32/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/atomic_ops/ia32/sys/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/atomic_ops/intel/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/atomic_ops/intel/ia32/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/atomic_ops/intel/ia32/sys/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/atomic_ops/intel/sys/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/atomic_ops/sparc/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/atomic_ops/sparc/sys/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/common/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/common/tests/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/fc/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/fc/tests/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/sm/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/sm/smsh/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/sm/smsh/lib/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/sm/smsh/scripts/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/sm/tests/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/sthread/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/sthread/tests/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	tools/Makefile	/^LTLIBOBJS = $/;"	m
LVID_T	src/common/lid_t.h	68;"	d
LeftChild	src/fc/w_heap.h	/^inline int Heap<T, Cmp>::LeftChild(int i) const$/;"	f	class:Heap
Linux	config/shore-config.h	364;"	d
LocalMsgPongTimes	src/sthread/tests/thread1.cpp	50;"	d	file:
Lock	src/sm/btree_latch_manager.h	/^    typedef occ_rwlock Lock;$/;"	t	class:btree_latch_manager
Lock	src/sm/btree_latch_manager.h	/^    typedef queue_based_lock_t Lock;$/;"	t	class:btree_latch_manager
LockAndModePair	src/sm/logrec.h	/^    struct LockAndModePair {$/;"	s	struct:prepare_all_lock_t
LockCoreFunc	src/sm/lock_core.h	/^class LockCoreFunc {$/;"	c
LogPriority	src/fc/errlog.h	/^enum LogPriority {$/;"	g	namespace:shore_errlog
LoggingDestination	src/fc/errlog.h	/^enum LoggingDestination {$/;"	g
Logical_id_flag_tcl	src/sm/smsh/tcl_thread.cpp	/^const char* Logical_id_flag_tcl = "Use_logical_id";$/;"	v
Lookup	src/sm/xct.cpp	/^        int Lookup(int vol)$/;"	f	class:VolidCnt
M	src/common/tests/mapp.cpp	/^typedef std::map<snum_t, int> M;$/;"	t	file:
M	src/fc/vtable.h	/^    int            M; \/\/ max value size$/;"	m	class:vtable_row_t
MAGIC1	src/common/regex2.h	70;"	d
MAGIC2	src/common/regex2.h	157;"	d
MAINTAINERCLEANFILES	Makefile	/^MAINTAINERCLEANFILES = \\$/;"	m
MAINTAINERCLEANFILES	config/Makefile	/^MAINTAINERCLEANFILES = shore-config.h$/;"	m
MAKEINFO	Makefile	/^MAKEINFO = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing makeinfo$/;"	m
MAKEINFO	config/Makefile	/^MAKEINFO = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing makeinfo$/;"	m
MAKEINFO	src/Makefile	/^MAKEINFO = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing makeinfo$/;"	m
MAKEINFO	src/atomic_ops/Makefile	/^MAKEINFO = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing makeinfo$/;"	m
MAKEINFO	src/atomic_ops/asm_linkage/Makefile	/^MAKEINFO = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing makeinfo$/;"	m
MAKEINFO	src/atomic_ops/asm_linkage/usr/Makefile	/^MAKEINFO = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing makeinfo$/;"	m
MAKEINFO	src/atomic_ops/asm_linkage/usr/src/Makefile	/^MAKEINFO = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing makeinfo$/;"	m
MAKEINFO	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^MAKEINFO = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing makeinfo$/;"	m
MAKEINFO	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^MAKEINFO = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing makeinfo$/;"	m
MAKEINFO	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^MAKEINFO = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing makeinfo$/;"	m
MAKEINFO	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^MAKEINFO = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing makeinfo$/;"	m
MAKEINFO	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^MAKEINFO = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing makeinfo$/;"	m
MAKEINFO	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^MAKEINFO = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing makeinfo$/;"	m
MAKEINFO	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^MAKEINFO = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing makeinfo$/;"	m
MAKEINFO	src/atomic_ops/atomic_ops/Makefile	/^MAKEINFO = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing makeinfo$/;"	m
MAKEINFO	src/atomic_ops/atomic_ops/amd64/Makefile	/^MAKEINFO = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing makeinfo$/;"	m
MAKEINFO	src/atomic_ops/atomic_ops/i386/Makefile	/^MAKEINFO = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing makeinfo$/;"	m
MAKEINFO	src/atomic_ops/atomic_ops/sparc/Makefile	/^MAKEINFO = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing makeinfo$/;"	m
MAKEINFO	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^MAKEINFO = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing makeinfo$/;"	m
MAKEINFO	src/atomic_ops/ia32/Makefile	/^MAKEINFO = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing makeinfo$/;"	m
MAKEINFO	src/atomic_ops/ia32/sys/Makefile	/^MAKEINFO = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing makeinfo$/;"	m
MAKEINFO	src/atomic_ops/intel/Makefile	/^MAKEINFO = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing makeinfo$/;"	m
MAKEINFO	src/atomic_ops/intel/ia32/Makefile	/^MAKEINFO = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing makeinfo$/;"	m
MAKEINFO	src/atomic_ops/intel/ia32/sys/Makefile	/^MAKEINFO = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing makeinfo$/;"	m
MAKEINFO	src/atomic_ops/intel/sys/Makefile	/^MAKEINFO = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing makeinfo$/;"	m
MAKEINFO	src/atomic_ops/sparc/Makefile	/^MAKEINFO = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing makeinfo$/;"	m
MAKEINFO	src/atomic_ops/sparc/sys/Makefile	/^MAKEINFO = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing makeinfo$/;"	m
MAKEINFO	src/common/Makefile	/^MAKEINFO = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing makeinfo$/;"	m
MAKEINFO	src/common/tests/Makefile	/^MAKEINFO = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing makeinfo$/;"	m
MAKEINFO	src/fc/Makefile	/^MAKEINFO = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing makeinfo$/;"	m
MAKEINFO	src/fc/tests/Makefile	/^MAKEINFO = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing makeinfo$/;"	m
MAKEINFO	src/sm/Makefile	/^MAKEINFO = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing makeinfo$/;"	m
MAKEINFO	src/sm/smsh/Makefile	/^MAKEINFO = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing makeinfo$/;"	m
MAKEINFO	src/sm/smsh/lib/Makefile	/^MAKEINFO = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing makeinfo$/;"	m
MAKEINFO	src/sm/smsh/scripts/Makefile	/^MAKEINFO = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing makeinfo$/;"	m
MAKEINFO	src/sm/tests/Makefile	/^MAKEINFO = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing makeinfo$/;"	m
MAKEINFO	src/sthread/Makefile	/^MAKEINFO = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing makeinfo$/;"	m
MAKEINFO	src/sthread/tests/Makefile	/^MAKEINFO = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing makeinfo$/;"	m
MAKEINFO	tools/Makefile	/^MAKEINFO = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/missing makeinfo$/;"	m
MAKEPAGE	src/sm/page.h	423;"	d
MAKEPAGECODE	src/sm/page.h	454;"	d
MAKERC	src/fc/w_rc.h	535;"	d
MAKE_CHAR	src/sm/smsh/shell2.cpp	537;"	d	file:
MAKE_DOUBLE	src/sm/smsh/shell2.cpp	542;"	d	file:
MAKE_FLOAT	src/sm/smsh/shell2.cpp	541;"	d	file:
MAKE_INT	src/sm/smsh/shell2.cpp	539;"	d	file:
MAKE_INT8	src/sm/smsh/shell2.cpp	540;"	d	file:
MAKE_SHORT	src/sm/smsh/shell2.cpp	538;"	d	file:
MAKE_STRING	src/sm/smsh/shell2.cpp	543;"	d	file:
MAP	src/common/regcomp.cpp	974;"	d	file:
MAP_ANONYMOUS	src/fc/w_temp_alloc.cpp	32;"	d	file:
MAX	src/fc/nbox.cpp	55;"	d	file:
MAX	src/fc/w_minmax.h	72;"	d
MAX	src/sm/rtree.cpp	77;"	d	file:
MAXBV	src/sm/smsh/sort_funcs.h	41;"	d
MAXKEYSIZE	src/sm/tests/create_rec.cpp	256;"	d	file:
MAXKEYSIZE	src/sm/tests/log_exceed.cpp	290;"	d	file:
MAXKEYSIZE	src/sm/tests/mrbtrees_test.cpp	1048;"	d	file:
MAXKEYSIZE	src/sm/tests/sort_stream.cpp	259;"	d	file:
MAXKEYSIZE	src/sm/tests/vtable_example.cpp	260;"	d	file:
MAXPFX	src/sm/zkeyed.cpp	60;"	d	file:
MAXRECLEN	src/sm/smsh/shell.h	/^const int MAXRECLEN = 1000;$/;"	v
MAX_BUFFER	src/fc/w_form.cpp	74;"	d	file:
MAX_BYTES_NEEDED	src/fc/tls.h	/^    enum { MAX_BYTES_NEEDED = sizeof(T)+sizeof(long)-1,$/;"	e	enum:tls_tricks::tls_blob::__anon108
MAX_CHIPS	src/fc/block_alloc.cpp	/^    enum { MAX_CHIPS=memory_block::block_bits::MAX_CHIPS };$/;"	e	enum:blob_pool::helper::__anon107	file:
MAX_CHIPS	src/fc/mem_block.h	/^    enum         { MAX_CHIPS=8*sizeof(bitmap) };$/;"	e	enum:memory_block::block_bits::__anon110
MAX_CHIPS	src/fc/mem_block.h	/^    enum { MAX_CHIPS     = MaxChips };$/;"	e	enum:memory_block::bounds_check::__anon113
MAX_IN_TRANSIT	src/sm/bf_transit_bucket.h	/^    enum { MAX_IN_TRANSIT=1 };$/;"	e	enum:transit_bucket_t::__anon95
MAX_MODE	src/sm/lock_s.h	/^        MIN_MODE = NL, MAX_MODE = EX,$/;"	e	enum:lock_base_t::__anon56
MAX_PREFIX_LEVEL	src/sm/zkeyed.cpp	68;"	d	file:
MAX_SMALL_VEC_SIZE	src/common/vec_t.h	69;"	d
MAX_THREADS	src/sm/log_core.cpp	/^static long const MAX_THREADS = 256;$/;"	v	file:
MAYBE_UNUSED	src/fc/w_defines.h	160;"	d
MAYBE_UNUSED	src/fc/w_defines.h	162;"	d
MB	src/sthread/tests/mmap.cpp	104;"	d	file:
MCOUNT	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	144;"	d
MCOUNT	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	154;"	d
MCOUNT	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	170;"	d
MCOUNT	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/asm_linkage.h	102;"	d
MCOUNT	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/asm_linkage.h	122;"	d
MCOUNT	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/asm_linkage.h	69;"	d
MCOUNT	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/asm_linkage.h	82;"	d
MCOUNT	src/atomic_ops/ia32/sys/asm_linkage.h	144;"	d
MCOUNT	src/atomic_ops/ia32/sys/asm_linkage.h	154;"	d
MCOUNT	src/atomic_ops/ia32/sys/asm_linkage.h	170;"	d
MCOUNT	src/atomic_ops/intel/ia32/sys/asm_linkage.h	144;"	d
MCOUNT	src/atomic_ops/intel/ia32/sys/asm_linkage.h	154;"	d
MCOUNT	src/atomic_ops/intel/ia32/sys/asm_linkage.h	170;"	d
MCOUNT	src/atomic_ops/sparc/sys/asm_linkage.h	102;"	d
MCOUNT	src/atomic_ops/sparc/sys/asm_linkage.h	122;"	d
MCOUNT	src/atomic_ops/sparc/sys/asm_linkage.h	69;"	d
MCOUNT	src/atomic_ops/sparc/sys/asm_linkage.h	82;"	d
MCOUNT_SIZE	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/asm_linkage.h	101;"	d
MCOUNT_SIZE	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/asm_linkage.h	121;"	d
MCOUNT_SIZE	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/asm_linkage.h	68;"	d
MCOUNT_SIZE	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/asm_linkage.h	81;"	d
MCOUNT_SIZE	src/atomic_ops/sparc/sys/asm_linkage.h	101;"	d
MCOUNT_SIZE	src/atomic_ops/sparc/sys/asm_linkage.h	121;"	d
MCOUNT_SIZE	src/atomic_ops/sparc/sys/asm_linkage.h	68;"	d
MCOUNT_SIZE	src/atomic_ops/sparc/sys/asm_linkage.h	81;"	d
MCS_EXT_QNODE_INITIALIZER	src/sthread/mcs_lock.h	57;"	d
MCS_LOCK_H	src/sthread/mcs_lock.h	2;"	d
MCadd	src/common/regex2.h	145;"	d
MCin	src/common/regex2.h	147;"	d
MCsub	src/common/regex2.h	146;"	d
MIDOPTFLAGS	Makefile	/^MIDOPTFLAGS = -O0 $(YES_INLINE_FLAGS)$/;"	m
MIDOPTFLAGS	config/Makefile	/^MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)$/;"	m
MIDOPTFLAGS	src/Makefile	/^MIDOPTFLAGS = -O0 $(YES_INLINE_FLAGS)$/;"	m
MIDOPTFLAGS	src/atomic_ops/Makefile	/^MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)$/;"	m
MIDOPTFLAGS	src/atomic_ops/asm_linkage/Makefile	/^MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)$/;"	m
MIDOPTFLAGS	src/atomic_ops/asm_linkage/usr/Makefile	/^MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)$/;"	m
MIDOPTFLAGS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)$/;"	m
MIDOPTFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)$/;"	m
MIDOPTFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)$/;"	m
MIDOPTFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)$/;"	m
MIDOPTFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)$/;"	m
MIDOPTFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)$/;"	m
MIDOPTFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)$/;"	m
MIDOPTFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)$/;"	m
MIDOPTFLAGS	src/atomic_ops/atomic_ops/Makefile	/^MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)$/;"	m
MIDOPTFLAGS	src/atomic_ops/atomic_ops/amd64/Makefile	/^MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)$/;"	m
MIDOPTFLAGS	src/atomic_ops/atomic_ops/i386/Makefile	/^MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)$/;"	m
MIDOPTFLAGS	src/atomic_ops/atomic_ops/sparc/Makefile	/^MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)$/;"	m
MIDOPTFLAGS	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)$/;"	m
MIDOPTFLAGS	src/atomic_ops/ia32/Makefile	/^MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)$/;"	m
MIDOPTFLAGS	src/atomic_ops/ia32/sys/Makefile	/^MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)$/;"	m
MIDOPTFLAGS	src/atomic_ops/intel/Makefile	/^MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)$/;"	m
MIDOPTFLAGS	src/atomic_ops/intel/ia32/Makefile	/^MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)$/;"	m
MIDOPTFLAGS	src/atomic_ops/intel/ia32/sys/Makefile	/^MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)$/;"	m
MIDOPTFLAGS	src/atomic_ops/intel/sys/Makefile	/^MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)$/;"	m
MIDOPTFLAGS	src/atomic_ops/sparc/Makefile	/^MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)$/;"	m
MIDOPTFLAGS	src/atomic_ops/sparc/sys/Makefile	/^MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)$/;"	m
MIDOPTFLAGS	src/common/Makefile	/^MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)$/;"	m
MIDOPTFLAGS	src/common/tests/Makefile	/^MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)$/;"	m
MIDOPTFLAGS	src/fc/Makefile	/^MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)$/;"	m
MIDOPTFLAGS	src/fc/tests/Makefile	/^MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)$/;"	m
MIDOPTFLAGS	src/sm/Makefile	/^MIDOPTFLAGS = -O0 $(YES_INLINE_FLAGS)$/;"	m
MIDOPTFLAGS	src/sm/smsh/Makefile	/^MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)$/;"	m
MIDOPTFLAGS	src/sm/smsh/lib/Makefile	/^MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)$/;"	m
MIDOPTFLAGS	src/sm/smsh/scripts/Makefile	/^MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)$/;"	m
MIDOPTFLAGS	src/sm/tests/Makefile	/^MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)$/;"	m
MIDOPTFLAGS	src/sthread/Makefile	/^MIDOPTFLAGS = -O0 $(YES_INLINE_FLAGS)$/;"	m
MIDOPTFLAGS	src/sthread/tests/Makefile	/^MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)$/;"	m
MIDOPTFLAGS	tools/Makefile	/^MIDOPTFLAGS = -O2 $(YES_INLINE_FLAGS)$/;"	m
MIN	src/fc/nbox.cpp	51;"	d	file:
MIN	src/fc/w_minmax.h	76;"	d
MIN	src/sm/rtree.cpp	73;"	d	file:
MINFRAME	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/stack.h	116;"	d
MINFRAME	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/stack.h	125;"	d
MINFRAME	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h	118;"	d
MINFRAME	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h	129;"	d
MINFRAME	src/atomic_ops/ia32/sys/stack.h	116;"	d
MINFRAME	src/atomic_ops/ia32/sys/stack.h	125;"	d
MINFRAME	src/atomic_ops/intel/ia32/sys/stack.h	116;"	d
MINFRAME	src/atomic_ops/intel/ia32/sys/stack.h	125;"	d
MINFRAME	src/atomic_ops/sparc/sys/stack.h	118;"	d
MINFRAME	src/atomic_ops/sparc/sys/stack.h	129;"	d
MINFRAME32	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/stack.h	69;"	d
MINFRAME32	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h	67;"	d
MINFRAME32	src/atomic_ops/ia32/sys/stack.h	69;"	d
MINFRAME32	src/atomic_ops/intel/ia32/sys/stack.h	69;"	d
MINFRAME32	src/atomic_ops/sparc/sys/stack.h	67;"	d
MINFRAME64	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/stack.h	109;"	d
MINFRAME64	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h	104;"	d
MINFRAME64	src/atomic_ops/ia32/sys/stack.h	109;"	d
MINFRAME64	src/atomic_ops/intel/ia32/sys/stack.h	109;"	d
MINFRAME64	src/atomic_ops/sparc/sys/stack.h	104;"	d
MIN_CHIPS	src/fc/mem_block.h	/^    enum { MIN_CHIPS     = MAX_CHIPS\/2 + 1 };$/;"	e	enum:memory_block::bounds_check::__anon114
MIN_MODE	src/sm/lock_s.h	/^        MIN_MODE = NL, MAX_MODE = EX,$/;"	e	enum:lock_base_t::__anon56
MIN_RATIO	src/sm/rtree.h	/^const float  MIN_RATIO = (float)0.4;$/;"	v
MKDIR_P	Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	config/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/atomic_ops/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/atomic_ops/asm_linkage/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/atomic_ops/asm_linkage/usr/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/atomic_ops/asm_linkage/usr/src/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/atomic_ops/atomic_ops/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/atomic_ops/atomic_ops/amd64/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/atomic_ops/atomic_ops/i386/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/atomic_ops/atomic_ops/sparc/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/atomic_ops/ia32/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/atomic_ops/ia32/sys/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/atomic_ops/intel/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/atomic_ops/intel/ia32/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/atomic_ops/intel/ia32/sys/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/atomic_ops/intel/sys/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/atomic_ops/sparc/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/atomic_ops/sparc/sys/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/common/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/common/tests/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/fc/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/fc/tests/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/sm/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/sm/smsh/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/sm/smsh/lib/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/sm/smsh/scripts/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/sm/tests/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/sthread/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/sthread/tests/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	tools/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MM	src/common/tests/mapp.cpp	/^typedef std::multimap<snum_t, int, compare_snum_t> MM;$/;"	t	file:
MM_MAX_CAPACITY	src/fc/dynarray.cpp	/^static size_t const MM_MAX_CAPACITY = MM_PAGE_SIZE*1024*1024*1024;$/;"	v	file:
MM_MAX_CAPACITY	src/fc/tests/darray.cpp	/^static size_t const MM_MAX_CAPACITY = MM_PAGE_SIZE*1024*1024*1024;$/;"	v	file:
MM_PAGE_SIZE	src/fc/dynarray.cpp	/^static size_t const MM_PAGE_SIZE = 65536;$/;"	v	file:
MM_PAGE_SIZE	src/fc/tests/darray.cpp	/^static size_t const MM_PAGE_SIZE = 8192;$/;"	v	file:
MODE_FLAGS	src/sthread/sdisk.h	/^        MODE_FLAGS=0x3,        \/\/ internal$/;"	e	enum:sdisk_base_t::__anon145
MOF	src/sm/newsort.cpp	/^typedef ssm_sort::MOF MOF;$/;"	t	file:
MOF	src/sm/sort_s.h	/^typedef w_rc_t (*MOF)($/;"	t	namespace:ssm_sort
MORE	src/common/regcomp.cpp	122;"	d	file:
MORE2	src/common/regcomp.cpp	123;"	d	file:
MOSTLYCLEANFILES	src/common/Makefile	/^MOSTLYCLEANFILES = $(GENFILES)$/;"	m
MOSTLYCLEANFILES	src/fc/Makefile	/^MOSTLYCLEANFILES = $(GENFILES)$/;"	m
MOSTLYCLEANFILES	src/fc/tests/Makefile	/^MOSTLYCLEANFILES = $(GENFILES)$/;"	m
MOSTLYCLEANFILES	src/sm/Makefile	/^MOSTLYCLEANFILES = $(GENFILES) e_error.timestamp logdef.timestamp \\$/;"	m
MOSTLYCLEANFILES	src/sthread/Makefile	/^MOSTLYCLEANFILES = $(GENFILES_H) $(GENFILES_CPP)$/;"	m
MS	src/common/tests/mapp.cpp	/^typedef std::multiset<snum_t> MS;$/;"	t	file:
MS_SECOND	src/fc/stime.cpp	55;"	d	file:
MUSTEAT	src/common/regcomp.cpp	135;"	d	file:
MUSTNOTSEE	src/common/regcomp.cpp	136;"	d	file:
MUSTSEE	src/common/regcomp.cpp	134;"	d	file:
MUTEX_ACQUIRE	src/sthread/sthread.h	1005;"	d
MUTEX_IS_MINE	src/sthread/sthread.h	1007;"	d
MUTEX_RELEASE	src/sthread/sthread.h	1006;"	d
MY_LOCK_DEBUG	src/sm/lock_x.h	566;"	d
MakeStdHeader	tools/errors.pl	/^sub MakeStdHeader$/;"	s
Match	src/sm/histo.cpp	/^int SearchableHeap<T, Cmp>::Match(const T& t) const$/;"	f	class:SearchableHeap
Max	src/common/tid_t.h	/^    static const tid_t Max;$/;"	m	class:tid_t
MaxDouble	src/sm/rtree.cpp	/^const double MaxDouble = 4.0*max_int4*max_int4;$/;"	v
MyException	src/sthread/tests/except.cpp	/^	MyException(int err = 0) : error(err) { }$/;"	f	class:MyException
MyException	src/sthread/tests/except.cpp	/^	MyException(w_rc_t e) : error(e.err_num()) { }$/;"	f	class:MyException
MyException	src/sthread/tests/except.cpp	/^class MyException {$/;"	c	file:
N	src/common/regcomp.cpp	971;"	d	file:
N	src/fc/vtable.h	/^    int            N;$/;"	m	class:vtable_row_t
NAME_ARRAY	src/sthread/sthread.h	/^    enum { NAME_ARRAY = 64 };$/;"	e	enum:sthread_name_t::__anon139
NBOX_C	src/fc/nbox.cpp	35;"	d	file:
NBOX_H	src/fc/nbox.h	31;"	d
NC	src/common/regex_utils.h	61;"	d
NEWSORT_C	src/sm/newsort.cpp	58;"	d	file:
NEW_CORE	src/sm/xct.cpp	547;"	d	file:
NEW_CORE	src/sm/xct.cpp	556;"	d	file:
NEW_CORE	src/sm/xct.cpp	562;"	d	file:
NEW_LOCK_REQUEST	src/sm/lock_core.cpp	95;"	d	file:
NEW_LOCK_REQUEST	src/sm/lock_core.cpp	98;"	d	file:
NEW_XCT	src/sm/xct.cpp	545;"	d	file:
NEW_XCT	src/sm/xct.cpp	554;"	d	file:
NEW_XCT	src/sm/xct.cpp	560;"	d	file:
NEXT	src/common/regcomp.cpp	128;"	d	file:
NEXT2	src/common/regcomp.cpp	129;"	d	file:
NEXTn	src/common/regcomp.cpp	130;"	d	file:
NITERS	src/fc/tests/errlogtest.cpp	109;"	d	file:
NL	src/common/basics.h	/^	static const lock_mode_t NL = w_base_t::NL;$/;"	m	namespace:locking
NL	src/fc/w_base.h	/^        NL = 0,         \/* no lock                *\/$/;"	e	enum:w_base_t::lock_mode_t
NNONCHAR	src/common/regex_engine_i.h	68;"	d
NOBODY	src/sthread/sthread.h	/^    enum { NOBODY=0 };$/;"	e	enum:tatas_lock::__anon140
NODE_ACTIVE	src/sm/xct.cpp	/^enum { NODE_DELETED=-2, NODE_LEFT=-1, NODE_ACTIVE, NODE_HEAD };$/;"	e	enum:__anon22	file:
NODE_DELETED	src/sm/xct.cpp	/^enum { NODE_DELETED=-2, NODE_LEFT=-1, NODE_ACTIVE, NODE_HEAD };$/;"	e	enum:__anon22	file:
NODE_HEAD	src/sm/xct.cpp	/^enum { NODE_DELETED=-2, NODE_LEFT=-1, NODE_ACTIVE, NODE_HEAD };$/;"	e	enum:__anon22	file:
NODE_LEFT	src/sm/xct.cpp	/^enum { NODE_DELETED=-2, NODE_LEFT=-1, NODE_ACTIVE, NODE_HEAD };$/;"	e	enum:__anon22	file:
NOLOCK	src/sthread/sthread.cpp	1433;"	d	file:
NONCHAR	src/common/regex_engine_i.h	67;"	d
NONE	src/sthread/srwlock.h	/^    enum rwmode_t { NONE=0, WRITER=0x1, READER=0x2 };$/;"	e	enum:mcs_rwlock::rwmode_t
NOOPTFLAGS	Makefile	/^NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) $/;"	m
NOOPTFLAGS	config/Makefile	/^NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) $/;"	m
NOOPTFLAGS	src/Makefile	/^NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) $/;"	m
NOOPTFLAGS	src/atomic_ops/Makefile	/^NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) $/;"	m
NOOPTFLAGS	src/atomic_ops/asm_linkage/Makefile	/^NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) $/;"	m
NOOPTFLAGS	src/atomic_ops/asm_linkage/usr/Makefile	/^NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) $/;"	m
NOOPTFLAGS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) $/;"	m
NOOPTFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) $/;"	m
NOOPTFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) $/;"	m
NOOPTFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) $/;"	m
NOOPTFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) $/;"	m
NOOPTFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) $/;"	m
NOOPTFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) $/;"	m
NOOPTFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) $/;"	m
NOOPTFLAGS	src/atomic_ops/atomic_ops/Makefile	/^NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) $/;"	m
NOOPTFLAGS	src/atomic_ops/atomic_ops/amd64/Makefile	/^NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) $/;"	m
NOOPTFLAGS	src/atomic_ops/atomic_ops/i386/Makefile	/^NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) $/;"	m
NOOPTFLAGS	src/atomic_ops/atomic_ops/sparc/Makefile	/^NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) $/;"	m
NOOPTFLAGS	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) $/;"	m
NOOPTFLAGS	src/atomic_ops/ia32/Makefile	/^NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) $/;"	m
NOOPTFLAGS	src/atomic_ops/ia32/sys/Makefile	/^NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) $/;"	m
NOOPTFLAGS	src/atomic_ops/intel/Makefile	/^NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) $/;"	m
NOOPTFLAGS	src/atomic_ops/intel/ia32/Makefile	/^NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) $/;"	m
NOOPTFLAGS	src/atomic_ops/intel/ia32/sys/Makefile	/^NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) $/;"	m
NOOPTFLAGS	src/atomic_ops/intel/sys/Makefile	/^NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) $/;"	m
NOOPTFLAGS	src/atomic_ops/sparc/Makefile	/^NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) $/;"	m
NOOPTFLAGS	src/atomic_ops/sparc/sys/Makefile	/^NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) $/;"	m
NOOPTFLAGS	src/common/Makefile	/^NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) $/;"	m
NOOPTFLAGS	src/common/tests/Makefile	/^NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) $/;"	m
NOOPTFLAGS	src/fc/Makefile	/^NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) $/;"	m
NOOPTFLAGS	src/fc/tests/Makefile	/^NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) $/;"	m
NOOPTFLAGS	src/sm/Makefile	/^NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) $/;"	m
NOOPTFLAGS	src/sm/smsh/Makefile	/^NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) $/;"	m
NOOPTFLAGS	src/sm/smsh/lib/Makefile	/^NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) $/;"	m
NOOPTFLAGS	src/sm/smsh/scripts/Makefile	/^NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) $/;"	m
NOOPTFLAGS	src/sm/tests/Makefile	/^NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) $/;"	m
NOOPTFLAGS	src/sthread/Makefile	/^NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) $/;"	m
NOOPTFLAGS	src/sthread/tests/Makefile	/^NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) $/;"	m
NOOPTFLAGS	tools/Makefile	/^NOOPTFLAGS = -O0 $(NO_INLINE_FLAGS) $/;"	m
NORET	src/fc/mem_block.h	35;"	d
NORET	src/fc/w_base.h	95;"	d
NORMALIZE	src/sm/smsh/shell2.cpp	545;"	d	file:
NORMAL_INSTALL	Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	config/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/atomic_ops/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/atomic_ops/asm_linkage/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/atomic_ops/asm_linkage/usr/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/atomic_ops/asm_linkage/usr/src/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/atomic_ops/atomic_ops/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/atomic_ops/atomic_ops/amd64/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/atomic_ops/atomic_ops/i386/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/atomic_ops/atomic_ops/sparc/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/atomic_ops/ia32/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/atomic_ops/ia32/sys/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/atomic_ops/intel/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/atomic_ops/intel/ia32/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/atomic_ops/intel/ia32/sys/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/atomic_ops/intel/sys/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/atomic_ops/sparc/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/atomic_ops/sparc/sys/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/common/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/common/tests/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/fc/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/fc/tests/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/sm/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/sm/smsh/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/sm/smsh/lib/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/sm/smsh/scripts/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/sm/tests/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/sthread/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/sthread/tests/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	tools/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_UNINSTALL	Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	config/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/atomic_ops/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/atomic_ops/asm_linkage/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/atomic_ops/asm_linkage/usr/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/atomic_ops/asm_linkage/usr/src/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/atomic_ops/atomic_ops/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/atomic_ops/atomic_ops/amd64/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/atomic_ops/atomic_ops/i386/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/atomic_ops/atomic_ops/sparc/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/atomic_ops/ia32/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/atomic_ops/ia32/sys/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/atomic_ops/intel/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/atomic_ops/intel/ia32/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/atomic_ops/intel/ia32/sys/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/atomic_ops/intel/sys/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/atomic_ops/sparc/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/atomic_ops/sparc/sys/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/common/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/common/tests/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/fc/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/fc/tests/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/sm/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/sm/smsh/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/sm/smsh/lib/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/sm/smsh/scripts/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/sm/tests/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/sthread/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/sthread/tests/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	tools/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NOSHOWBASE	src/fc/tests/io.cpp	41;"	d	file:
NOSYMBOLSFLAGS	Makefile	/^NOSYMBOLSFLAGS = $/;"	m
NOSYMBOLSFLAGS	config/Makefile	/^NOSYMBOLSFLAGS = $/;"	m
NOSYMBOLSFLAGS	src/Makefile	/^NOSYMBOLSFLAGS = $/;"	m
NOSYMBOLSFLAGS	src/atomic_ops/Makefile	/^NOSYMBOLSFLAGS = $/;"	m
NOSYMBOLSFLAGS	src/atomic_ops/asm_linkage/Makefile	/^NOSYMBOLSFLAGS = $/;"	m
NOSYMBOLSFLAGS	src/atomic_ops/asm_linkage/usr/Makefile	/^NOSYMBOLSFLAGS = $/;"	m
NOSYMBOLSFLAGS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^NOSYMBOLSFLAGS = $/;"	m
NOSYMBOLSFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^NOSYMBOLSFLAGS = $/;"	m
NOSYMBOLSFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^NOSYMBOLSFLAGS = $/;"	m
NOSYMBOLSFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^NOSYMBOLSFLAGS = $/;"	m
NOSYMBOLSFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^NOSYMBOLSFLAGS = $/;"	m
NOSYMBOLSFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^NOSYMBOLSFLAGS = $/;"	m
NOSYMBOLSFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^NOSYMBOLSFLAGS = $/;"	m
NOSYMBOLSFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^NOSYMBOLSFLAGS = $/;"	m
NOSYMBOLSFLAGS	src/atomic_ops/atomic_ops/Makefile	/^NOSYMBOLSFLAGS = $/;"	m
NOSYMBOLSFLAGS	src/atomic_ops/atomic_ops/amd64/Makefile	/^NOSYMBOLSFLAGS = $/;"	m
NOSYMBOLSFLAGS	src/atomic_ops/atomic_ops/i386/Makefile	/^NOSYMBOLSFLAGS = $/;"	m
NOSYMBOLSFLAGS	src/atomic_ops/atomic_ops/sparc/Makefile	/^NOSYMBOLSFLAGS = $/;"	m
NOSYMBOLSFLAGS	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^NOSYMBOLSFLAGS = $/;"	m
NOSYMBOLSFLAGS	src/atomic_ops/ia32/Makefile	/^NOSYMBOLSFLAGS = $/;"	m
NOSYMBOLSFLAGS	src/atomic_ops/ia32/sys/Makefile	/^NOSYMBOLSFLAGS = $/;"	m
NOSYMBOLSFLAGS	src/atomic_ops/intel/Makefile	/^NOSYMBOLSFLAGS = $/;"	m
NOSYMBOLSFLAGS	src/atomic_ops/intel/ia32/Makefile	/^NOSYMBOLSFLAGS = $/;"	m
NOSYMBOLSFLAGS	src/atomic_ops/intel/ia32/sys/Makefile	/^NOSYMBOLSFLAGS = $/;"	m
NOSYMBOLSFLAGS	src/atomic_ops/intel/sys/Makefile	/^NOSYMBOLSFLAGS = $/;"	m
NOSYMBOLSFLAGS	src/atomic_ops/sparc/Makefile	/^NOSYMBOLSFLAGS = $/;"	m
NOSYMBOLSFLAGS	src/atomic_ops/sparc/sys/Makefile	/^NOSYMBOLSFLAGS = $/;"	m
NOSYMBOLSFLAGS	src/common/Makefile	/^NOSYMBOLSFLAGS = $/;"	m
NOSYMBOLSFLAGS	src/common/tests/Makefile	/^NOSYMBOLSFLAGS = $/;"	m
NOSYMBOLSFLAGS	src/fc/Makefile	/^NOSYMBOLSFLAGS = $/;"	m
NOSYMBOLSFLAGS	src/fc/tests/Makefile	/^NOSYMBOLSFLAGS = $/;"	m
NOSYMBOLSFLAGS	src/sm/Makefile	/^NOSYMBOLSFLAGS = $/;"	m
NOSYMBOLSFLAGS	src/sm/smsh/Makefile	/^NOSYMBOLSFLAGS = $/;"	m
NOSYMBOLSFLAGS	src/sm/smsh/lib/Makefile	/^NOSYMBOLSFLAGS = $/;"	m
NOSYMBOLSFLAGS	src/sm/smsh/scripts/Makefile	/^NOSYMBOLSFLAGS = $/;"	m
NOSYMBOLSFLAGS	src/sm/tests/Makefile	/^NOSYMBOLSFLAGS = $/;"	m
NOSYMBOLSFLAGS	src/sthread/Makefile	/^NOSYMBOLSFLAGS = $/;"	m
NOSYMBOLSFLAGS	src/sthread/tests/Makefile	/^NOSYMBOLSFLAGS = $/;"	m
NOSYMBOLSFLAGS	tools/Makefile	/^NOSYMBOLSFLAGS = $/;"	m
NOTE	src/common/regex_engine.cpp	104;"	d	file:
NOTE	src/common/regex_engine.cpp	108;"	d	file:
NOTHING	src/common/regex_engine_i.h	63;"	d
NO_INLINE_FLAGS	Makefile	/^NO_INLINE_FLAGS = $/;"	m
NO_INLINE_FLAGS	config/Makefile	/^NO_INLINE_FLAGS = $/;"	m
NO_INLINE_FLAGS	src/Makefile	/^NO_INLINE_FLAGS = $/;"	m
NO_INLINE_FLAGS	src/atomic_ops/Makefile	/^NO_INLINE_FLAGS = $/;"	m
NO_INLINE_FLAGS	src/atomic_ops/asm_linkage/Makefile	/^NO_INLINE_FLAGS = $/;"	m
NO_INLINE_FLAGS	src/atomic_ops/asm_linkage/usr/Makefile	/^NO_INLINE_FLAGS = $/;"	m
NO_INLINE_FLAGS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^NO_INLINE_FLAGS = $/;"	m
NO_INLINE_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^NO_INLINE_FLAGS = $/;"	m
NO_INLINE_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^NO_INLINE_FLAGS = $/;"	m
NO_INLINE_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^NO_INLINE_FLAGS = $/;"	m
NO_INLINE_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^NO_INLINE_FLAGS = $/;"	m
NO_INLINE_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^NO_INLINE_FLAGS = $/;"	m
NO_INLINE_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^NO_INLINE_FLAGS = $/;"	m
NO_INLINE_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^NO_INLINE_FLAGS = $/;"	m
NO_INLINE_FLAGS	src/atomic_ops/atomic_ops/Makefile	/^NO_INLINE_FLAGS = $/;"	m
NO_INLINE_FLAGS	src/atomic_ops/atomic_ops/amd64/Makefile	/^NO_INLINE_FLAGS = $/;"	m
NO_INLINE_FLAGS	src/atomic_ops/atomic_ops/i386/Makefile	/^NO_INLINE_FLAGS = $/;"	m
NO_INLINE_FLAGS	src/atomic_ops/atomic_ops/sparc/Makefile	/^NO_INLINE_FLAGS = $/;"	m
NO_INLINE_FLAGS	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^NO_INLINE_FLAGS = $/;"	m
NO_INLINE_FLAGS	src/atomic_ops/ia32/Makefile	/^NO_INLINE_FLAGS = $/;"	m
NO_INLINE_FLAGS	src/atomic_ops/ia32/sys/Makefile	/^NO_INLINE_FLAGS = $/;"	m
NO_INLINE_FLAGS	src/atomic_ops/intel/Makefile	/^NO_INLINE_FLAGS = $/;"	m
NO_INLINE_FLAGS	src/atomic_ops/intel/ia32/Makefile	/^NO_INLINE_FLAGS = $/;"	m
NO_INLINE_FLAGS	src/atomic_ops/intel/ia32/sys/Makefile	/^NO_INLINE_FLAGS = $/;"	m
NO_INLINE_FLAGS	src/atomic_ops/intel/sys/Makefile	/^NO_INLINE_FLAGS = $/;"	m
NO_INLINE_FLAGS	src/atomic_ops/sparc/Makefile	/^NO_INLINE_FLAGS = $/;"	m
NO_INLINE_FLAGS	src/atomic_ops/sparc/sys/Makefile	/^NO_INLINE_FLAGS = $/;"	m
NO_INLINE_FLAGS	src/common/Makefile	/^NO_INLINE_FLAGS = $/;"	m
NO_INLINE_FLAGS	src/common/tests/Makefile	/^NO_INLINE_FLAGS = $/;"	m
NO_INLINE_FLAGS	src/fc/Makefile	/^NO_INLINE_FLAGS = $/;"	m
NO_INLINE_FLAGS	src/fc/tests/Makefile	/^NO_INLINE_FLAGS = $/;"	m
NO_INLINE_FLAGS	src/sm/Makefile	/^NO_INLINE_FLAGS = $/;"	m
NO_INLINE_FLAGS	src/sm/smsh/Makefile	/^NO_INLINE_FLAGS = $/;"	m
NO_INLINE_FLAGS	src/sm/smsh/lib/Makefile	/^NO_INLINE_FLAGS = $/;"	m
NO_INLINE_FLAGS	src/sm/smsh/scripts/Makefile	/^NO_INLINE_FLAGS = $/;"	m
NO_INLINE_FLAGS	src/sm/tests/Makefile	/^NO_INLINE_FLAGS = $/;"	m
NO_INLINE_FLAGS	src/sthread/Makefile	/^NO_INLINE_FLAGS = $/;"	m
NO_INLINE_FLAGS	src/sthread/tests/Makefile	/^NO_INLINE_FLAGS = $/;"	m
NO_INLINE_FLAGS	tools/Makefile	/^NO_INLINE_FLAGS = $/;"	m
NPAREN	src/common/regcomp.cpp	107;"	d	file:
NS_SECOND	src/fc/stime.cpp	53;"	d	file:
NUMLEVELS	src/sm/lock_s.h	/^    enum { NUMLEVELS = 4 };$/;"	e	enum:lockid_t::__anon58
NUMNODES	src/sm/lock_s.h	/^    enum { NUMNODES = 6 };$/;"	e	enum:lockid_t::__anon57
NUM_MODES	src/sm/lock_s.h	/^        NUM_MODES = MAX_MODE - MIN_MODE + 1$/;"	e	enum:lock_base_t::__anon56
NUM_THREADS	src/common/tests/latch1.cpp	53;"	d	file:
NUM_TRANSIT_BUCKETS	src/sm/bf_transit_bucket.h	/^    static int const          NUM_TRANSIT_BUCKETS = 128;$/;"	m	class:transit_bucket_t
NWORD	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	295;"	d
NWORD	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	299;"	d
NWORD	src/atomic_ops/ia32/sys/asm_linkage.h	295;"	d
NWORD	src/atomic_ops/ia32/sys/asm_linkage.h	299;"	d
NWORD	src/atomic_ops/intel/ia32/sys/asm_linkage.h	295;"	d
NWORD	src/atomic_ops/intel/ia32/sys/asm_linkage.h	299;"	d
NegInf	src/fc/w_base.h	/^    NegInf=0x100, eqNegInf, gtNegInf, geNegInf, ltNegInf, leNegInf,$/;"	e	enum:w_base_t::CompareOp
NestExcept	src/sthread/tests/except.cpp	/^void except_thread_t::NestExcept(int count)$/;"	f	class:except_thread_t
Null	src/fc/nbox.cpp	/^nbox_t&                nbox_t::Null = __Null__;$/;"	m	class:nbox_t	file:
Null	src/fc/nbox.h	/^    static nbox_t&     Null;$/;"	m	class:nbox_t
NumElements	src/fc/w_heap.h	/^inline int Heap<T, Cmp>::NumElements() const$/;"	f	class:Heap
NumExceptions	src/sthread/tests/except.cpp	/^int	NumExceptions = 4;$/;"	v
NumFloatThreads	src/sthread/tests/thread3.cpp	/^int	NumFloatThreads = 4;$/;"	v
NumIOs	src/sthread/tests/thread2.cpp	/^int	NumIOs = 100;$/;"	v
NumIntThreads	src/sthread/tests/thread3.cpp	/^int	NumIntThreads = 4;$/;"	v
NumThreads	src/sthread/tests/except.cpp	/^int	NumThreads = 4;$/;"	v
NumThreads	src/sthread/tests/thread1.cpp	/^int	NumThreads = DefaultNumThreads;$/;"	v
NumThreads	src/sthread/tests/thread2.cpp	/^int	NumThreads = 5;$/;"	v
OANY	src/common/regex2.h	105;"	d
OANYOF	src/common/regex2.h	106;"	d
OBACK_	src/common/regex2.h	107;"	d
OBJEXT	Makefile	/^OBJEXT = o$/;"	m
OBJEXT	config/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/atomic_ops/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/atomic_ops/asm_linkage/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/atomic_ops/asm_linkage/usr/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/atomic_ops/asm_linkage/usr/src/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/atomic_ops/atomic_ops/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/atomic_ops/atomic_ops/amd64/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/atomic_ops/atomic_ops/i386/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/atomic_ops/atomic_ops/sparc/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/atomic_ops/ia32/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/atomic_ops/ia32/sys/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/atomic_ops/intel/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/atomic_ops/intel/ia32/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/atomic_ops/intel/ia32/sys/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/atomic_ops/intel/sys/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/atomic_ops/sparc/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/atomic_ops/sparc/sys/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/common/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/common/tests/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/fc/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/fc/tests/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/sm/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/sm/smsh/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/sm/smsh/lib/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/sm/smsh/scripts/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/sm/tests/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/sthread/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/sthread/tests/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	tools/Makefile	/^OBJEXT = o$/;"	m
OBOL	src/common/regex2.h	103;"	d
OBOW	src/common/regex2.h	119;"	d
OCCREAD	src/common/store_latch_manager.cpp	65;"	d	file:
OCCREAD	src/common/store_latch_manager.cpp	68;"	d	file:
OCCREAD	src/sm/btree_latch_manager.cpp	66;"	d	file:
OCCREAD	src/sm/btree_latch_manager.cpp	69;"	d	file:
OCCWRITE	src/common/store_latch_manager.cpp	64;"	d	file:
OCCWRITE	src/common/store_latch_manager.cpp	67;"	d	file:
OCCWRITE	src/sm/btree_latch_manager.cpp	65;"	d	file:
OCCWRITE	src/sm/btree_latch_manager.cpp	68;"	d	file:
OCHAR	src/common/regex2.h	102;"	d
OCH_	src/common/regex2.h	115;"	d
OEND	src/common/regex2.h	101;"	d
OEOL	src/common/regex2.h	104;"	d
OEOW	src/common/regex2.h	120;"	d
OFF	src/fc/w_base.h	77;"	d
OFF	src/sm/sm_base.h	/^        OFF = 0$/;"	e	enum:smlevel_0::switch_t
OHEADERS	src/atomic_ops/Makefile	/^OHEADERS = atomic_ops_builtin.h$/;"	m
OLDSORT_COMPATIBILITY	src/sm/sort_s.h	68;"	d
OLPAREN	src/common/regex2.h	113;"	d
ON	src/fc/w_base.h	73;"	d
ON	src/sm/sm_base.h	/^        ON = 1,$/;"	e	enum:smlevel_0::switch_t
ONE	src/sm/log_core.cpp	/^static long const ONE = 1l<<32;$/;"	v	file:
OOR1	src/common/regex2.h	116;"	d
OOR2	src/common/regex2.h	117;"	d
OP	src/common/regex2.h	96;"	d
OPDMASK	src/common/regex2.h	94;"	d
OPEN_APPEND	src/sthread/sdisk.h	/^        OPEN_APPEND=0x100,$/;"	e	enum:sdisk_base_t::__anon145
OPEN_APPEND	src/sthread/sthread.h	/^    OPEN_APPEND = sdisk_base_t::OPEN_APPEND,$/;"	e	enum:sthread_base_t::__anon137
OPEN_CREATE	src/sthread/sdisk.h	/^        OPEN_CREATE=0x40,$/;"	e	enum:sdisk_base_t::__anon145
OPEN_CREATE	src/sthread/sthread.h	/^    OPEN_CREATE = sdisk_base_t::OPEN_CREATE,$/;"	e	enum:sthread_base_t::__anon137
OPEN_EXCL	src/sthread/sdisk.h	/^        OPEN_EXCL=0x20,$/;"	e	enum:sdisk_base_t::__anon145
OPEN_EXCL	src/sthread/sthread.h	/^    OPEN_EXCL = sdisk_base_t::OPEN_EXCL,$/;"	e	enum:sthread_base_t::__anon137
OPEN_RAW	src/sthread/sdisk.h	/^        OPEN_RAW=0x200,$/;"	e	enum:sdisk_base_t::__anon145
OPEN_RAW	src/sthread/sthread.h	/^    OPEN_RAW = sdisk_base_t::OPEN_RAW$/;"	e	enum:sthread_base_t::__anon137
OPEN_RDONLY	src/sthread/sdisk.h	/^        OPEN_RDONLY=0,$/;"	e	enum:sdisk_base_t::__anon145
OPEN_RDONLY	src/sthread/sthread.h	/^    OPEN_RDONLY = sdisk_base_t::OPEN_RDONLY,$/;"	e	enum:sthread_base_t::__anon137
OPEN_RDWR	src/sthread/sdisk.h	/^        OPEN_RDWR=0x2,$/;"	e	enum:sdisk_base_t::__anon145
OPEN_RDWR	src/sthread/sthread.h	/^    OPEN_RDWR = sdisk_base_t::OPEN_RDWR,$/;"	e	enum:sthread_base_t::__anon137
OPEN_SYNC	src/sthread/sdisk.h	/^        OPEN_SYNC=0x80,$/;"	e	enum:sdisk_base_t::__anon145
OPEN_SYNC	src/sthread/sthread.h	/^    OPEN_SYNC = sdisk_base_t::OPEN_SYNC,$/;"	e	enum:sthread_base_t::__anon137
OPEN_TRUNC	src/sthread/sdisk.h	/^        OPEN_TRUNC=0x10,$/;"	e	enum:sdisk_base_t::__anon145
OPEN_TRUNC	src/sthread/sthread.h	/^    OPEN_TRUNC = sdisk_base_t::OPEN_TRUNC,$/;"	e	enum:sthread_base_t::__anon137
OPEN_WRONLY	src/sthread/sdisk.h	/^        OPEN_WRONLY=0x1,$/;"	e	enum:sdisk_base_t::__anon145
OPEN_WRONLY	src/sthread/sthread.h	/^    OPEN_WRONLY = sdisk_base_t::OPEN_WRONLY,$/;"	e	enum:sthread_base_t::__anon137
OPLUS_	src/common/regex2.h	109;"	d
OPND	src/common/regex2.h	97;"	d
OPRMASK	src/common/regex2.h	93;"	d
OPSHIFT	src/common/regex2.h	95;"	d
OPTFLAGS	Makefile	/^OPTFLAGS = $(FULLOPTFLAGS)$/;"	m
OPTFLAGS	config/Makefile	/^OPTFLAGS = $(FULLOPTFLAGS)$/;"	m
OPTFLAGS	src/Makefile	/^OPTFLAGS = $(FULLOPTFLAGS)$/;"	m
OPTFLAGS	src/atomic_ops/Makefile	/^OPTFLAGS = $(FULLOPTFLAGS)$/;"	m
OPTFLAGS	src/atomic_ops/asm_linkage/Makefile	/^OPTFLAGS = $(FULLOPTFLAGS)$/;"	m
OPTFLAGS	src/atomic_ops/asm_linkage/usr/Makefile	/^OPTFLAGS = $(FULLOPTFLAGS)$/;"	m
OPTFLAGS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^OPTFLAGS = $(FULLOPTFLAGS)$/;"	m
OPTFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^OPTFLAGS = $(FULLOPTFLAGS)$/;"	m
OPTFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^OPTFLAGS = $(FULLOPTFLAGS)$/;"	m
OPTFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^OPTFLAGS = $(FULLOPTFLAGS)$/;"	m
OPTFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^OPTFLAGS = $(FULLOPTFLAGS)$/;"	m
OPTFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^OPTFLAGS = $(FULLOPTFLAGS)$/;"	m
OPTFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^OPTFLAGS = $(FULLOPTFLAGS)$/;"	m
OPTFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^OPTFLAGS = $(FULLOPTFLAGS)$/;"	m
OPTFLAGS	src/atomic_ops/atomic_ops/Makefile	/^OPTFLAGS = $(FULLOPTFLAGS)$/;"	m
OPTFLAGS	src/atomic_ops/atomic_ops/amd64/Makefile	/^OPTFLAGS = $(FULLOPTFLAGS)$/;"	m
OPTFLAGS	src/atomic_ops/atomic_ops/i386/Makefile	/^OPTFLAGS = $(FULLOPTFLAGS)$/;"	m
OPTFLAGS	src/atomic_ops/atomic_ops/sparc/Makefile	/^OPTFLAGS = $(FULLOPTFLAGS)$/;"	m
OPTFLAGS	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^OPTFLAGS = $(FULLOPTFLAGS)$/;"	m
OPTFLAGS	src/atomic_ops/ia32/Makefile	/^OPTFLAGS = $(FULLOPTFLAGS)$/;"	m
OPTFLAGS	src/atomic_ops/ia32/sys/Makefile	/^OPTFLAGS = $(FULLOPTFLAGS)$/;"	m
OPTFLAGS	src/atomic_ops/intel/Makefile	/^OPTFLAGS = $(FULLOPTFLAGS)$/;"	m
OPTFLAGS	src/atomic_ops/intel/ia32/Makefile	/^OPTFLAGS = $(FULLOPTFLAGS)$/;"	m
OPTFLAGS	src/atomic_ops/intel/ia32/sys/Makefile	/^OPTFLAGS = $(FULLOPTFLAGS)$/;"	m
OPTFLAGS	src/atomic_ops/intel/sys/Makefile	/^OPTFLAGS = $(FULLOPTFLAGS)$/;"	m
OPTFLAGS	src/atomic_ops/sparc/Makefile	/^OPTFLAGS = $(FULLOPTFLAGS)$/;"	m
OPTFLAGS	src/atomic_ops/sparc/sys/Makefile	/^OPTFLAGS = $(FULLOPTFLAGS)$/;"	m
OPTFLAGS	src/common/Makefile	/^OPTFLAGS = $(FULLOPTFLAGS)$/;"	m
OPTFLAGS	src/common/tests/Makefile	/^OPTFLAGS = $(FULLOPTFLAGS)$/;"	m
OPTFLAGS	src/fc/Makefile	/^OPTFLAGS = $(FULLOPTFLAGS)$/;"	m
OPTFLAGS	src/fc/tests/Makefile	/^OPTFLAGS = $(FULLOPTFLAGS)$/;"	m
OPTFLAGS	src/sm/Makefile	/^OPTFLAGS = $(FULLOPTFLAGS)$/;"	m
OPTFLAGS	src/sm/smsh/Makefile	/^OPTFLAGS = $(FULLOPTFLAGS)$/;"	m
OPTFLAGS	src/sm/smsh/lib/Makefile	/^OPTFLAGS = $(FULLOPTFLAGS)$/;"	m
OPTFLAGS	src/sm/smsh/scripts/Makefile	/^OPTFLAGS = $(FULLOPTFLAGS)$/;"	m
OPTFLAGS	src/sm/tests/Makefile	/^OPTFLAGS = $(FULLOPTFLAGS)$/;"	m
OPTFLAGS	src/sthread/Makefile	/^OPTFLAGS = $(FULLOPTFLAGS)$/;"	m
OPTFLAGS	src/sthread/tests/Makefile	/^OPTFLAGS = $(FULLOPTFLAGS)$/;"	m
OPTFLAGS	tools/Makefile	/^OPTFLAGS = $(FULLOPTFLAGS)$/;"	m
OPTION_C	src/common/option.cpp	57;"	d	file:
OPTION_FLAGS	src/sthread/sdisk.h	/^        OPTION_FLAGS=0x3f0    \/\/ internal$/;"	e	enum:sdisk_base_t::__anon145
OPTION_H	src/common/option.h	31;"	d
OPT_BadValue	src/common/opt_error_def_gen.h	45;"	d
OPT_ClassTooLong	src/common/opt_error_def_gen.h	39;"	d
OPT_Duplicate	src/common/opt_error_def_gen.h	41;"	d
OPT_EINFO_BAKW_GEN_H	src/common/opt_einfo_bakw_gen.h	2;"	d
OPT_EINFO_GEN_H	src/common/opt_einfo_gen.h	2;"	d
OPT_ERRMAX	src/common/opt_error_def_gen.h	49;"	d
OPT_ERRMIN	src/common/opt_error_def_gen.h	48;"	d
OPT_ERRMSG_GEN_H	src/common/opt_errmsg_gen.h	2;"	d
OPT_ERROR_DEF_GEN_H	src/common/opt_error_def_gen.h	2;"	d
OPT_ERROR_GENFILES_H	src/common/Makefile	/^OPT_ERROR_GENFILES_H = opt_errmsg_gen.h opt_einfo_gen.h \\$/;"	m
OPT_IllegalClass	src/common/opt_error_def_gen.h	38;"	d
OPT_IllegalDescLine	src/common/opt_error_def_gen.h	37;"	d
OPT_NoClassMatch	src/common/opt_error_def_gen.h	43;"	d
OPT_NoOptionMatch	src/common/opt_error_def_gen.h	42;"	d
OPT_NotSet	src/common/opt_error_def_gen.h	46;"	d
OPT_OK	src/common/opt_error_def_gen.h	47;"	d
OPT_Syntax	src/common/opt_error_def_gen.h	44;"	d
OPT_TooManyClasses	src/common/opt_error_def_gen.h	40;"	d
OQUEST_	src/common/regex2.h	111;"	d
ORIG_SM	src/common/tests/latch1.cpp	40;"	d	file:
ORPAREN	src/common/regex2.h	114;"	d
OSOURCES	src/atomic_ops/Makefile	/^OSOURCES = empty.cpp$/;"	m
OSUBDIRS	src/atomic_ops/Makefile	/^OSUBDIRS = $/;"	m
OS_FCNTL_H	src/sthread/os_fcntl.h	31;"	d
OS_INTERFACE_H	src/sthread/os_interface.h	31;"	d
OS_TYPES_H	src/fc/os_types.h	31;"	d
OUT	src/sthread/tests/thread1.cpp	53;"	d	file:
OVERFLOW_MASK	src/common/bitmap.cpp	51;"	d	file:
OVERHEAD	src/fc/block_alloc.cpp	/^    enum { OVERHEAD=sizeof(memory_block::block) };$/;"	e	enum:blob_pool::helper::__anon106	file:
OVERHEAD	src/fc/mem_block.h	/^    enum { OVERHEAD     = OverheadBytes };$/;"	e	enum:memory_block::bounds_check::__anon112
O_BACK	src/common/regex2.h	108;"	d
O_CH	src/common/regex2.h	118;"	d
O_PLUS	src/common/regex2.h	110;"	d
O_QUEST	src/common/regex2.h	112;"	d
OptionSetFunc	src/common/option.h	/^    typedef w_rc_t (*OptionSetFunc)(option_t*, const char * value,$/;"	t	class:option_t
P	src/common/tests/vectors.cpp	/^P(const char *s) $/;"	f
PACKAGE	Makefile	/^PACKAGE = shore-storage-manager$/;"	m
PACKAGE	config/Makefile	/^PACKAGE = shore-storage-manager$/;"	m
PACKAGE	config/shore-config.h	382;"	d
PACKAGE	src/Makefile	/^PACKAGE = shore-storage-manager$/;"	m
PACKAGE	src/atomic_ops/Makefile	/^PACKAGE = shore-storage-manager$/;"	m
PACKAGE	src/atomic_ops/asm_linkage/Makefile	/^PACKAGE = shore-storage-manager$/;"	m
PACKAGE	src/atomic_ops/asm_linkage/usr/Makefile	/^PACKAGE = shore-storage-manager$/;"	m
PACKAGE	src/atomic_ops/asm_linkage/usr/src/Makefile	/^PACKAGE = shore-storage-manager$/;"	m
PACKAGE	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^PACKAGE = shore-storage-manager$/;"	m
PACKAGE	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^PACKAGE = shore-storage-manager$/;"	m
PACKAGE	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^PACKAGE = shore-storage-manager$/;"	m
PACKAGE	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^PACKAGE = shore-storage-manager$/;"	m
PACKAGE	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^PACKAGE = shore-storage-manager$/;"	m
PACKAGE	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^PACKAGE = shore-storage-manager$/;"	m
PACKAGE	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^PACKAGE = shore-storage-manager$/;"	m
PACKAGE	src/atomic_ops/atomic_ops/Makefile	/^PACKAGE = shore-storage-manager$/;"	m
PACKAGE	src/atomic_ops/atomic_ops/amd64/Makefile	/^PACKAGE = shore-storage-manager$/;"	m
PACKAGE	src/atomic_ops/atomic_ops/i386/Makefile	/^PACKAGE = shore-storage-manager$/;"	m
PACKAGE	src/atomic_ops/atomic_ops/sparc/Makefile	/^PACKAGE = shore-storage-manager$/;"	m
PACKAGE	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^PACKAGE = shore-storage-manager$/;"	m
PACKAGE	src/atomic_ops/ia32/Makefile	/^PACKAGE = shore-storage-manager$/;"	m
PACKAGE	src/atomic_ops/ia32/sys/Makefile	/^PACKAGE = shore-storage-manager$/;"	m
PACKAGE	src/atomic_ops/intel/Makefile	/^PACKAGE = shore-storage-manager$/;"	m
PACKAGE	src/atomic_ops/intel/ia32/Makefile	/^PACKAGE = shore-storage-manager$/;"	m
PACKAGE	src/atomic_ops/intel/ia32/sys/Makefile	/^PACKAGE = shore-storage-manager$/;"	m
PACKAGE	src/atomic_ops/intel/sys/Makefile	/^PACKAGE = shore-storage-manager$/;"	m
PACKAGE	src/atomic_ops/sparc/Makefile	/^PACKAGE = shore-storage-manager$/;"	m
PACKAGE	src/atomic_ops/sparc/sys/Makefile	/^PACKAGE = shore-storage-manager$/;"	m
PACKAGE	src/common/Makefile	/^PACKAGE = shore-storage-manager$/;"	m
PACKAGE	src/common/tests/Makefile	/^PACKAGE = shore-storage-manager$/;"	m
PACKAGE	src/fc/Makefile	/^PACKAGE = shore-storage-manager$/;"	m
PACKAGE	src/fc/tests/Makefile	/^PACKAGE = shore-storage-manager$/;"	m
PACKAGE	src/fc/w_defines.h	66;"	d
PACKAGE	src/sm/Makefile	/^PACKAGE = shore-storage-manager$/;"	m
PACKAGE	src/sm/smsh/Makefile	/^PACKAGE = shore-storage-manager$/;"	m
PACKAGE	src/sm/smsh/lib/Makefile	/^PACKAGE = shore-storage-manager$/;"	m
PACKAGE	src/sm/smsh/scripts/Makefile	/^PACKAGE = shore-storage-manager$/;"	m
PACKAGE	src/sm/tests/Makefile	/^PACKAGE = shore-storage-manager$/;"	m
PACKAGE	src/sthread/Makefile	/^PACKAGE = shore-storage-manager$/;"	m
PACKAGE	src/sthread/tests/Makefile	/^PACKAGE = shore-storage-manager$/;"	m
PACKAGE	tools/Makefile	/^PACKAGE = shore-storage-manager$/;"	m
PACKAGE_BUGREPORT	Makefile	/^PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.$/;"	m
PACKAGE_BUGREPORT	config/Makefile	/^PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.$/;"	m
PACKAGE_BUGREPORT	config/shore-config.h	385;"	d
PACKAGE_BUGREPORT	src/Makefile	/^PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.$/;"	m
PACKAGE_BUGREPORT	src/atomic_ops/Makefile	/^PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.$/;"	m
PACKAGE_BUGREPORT	src/atomic_ops/asm_linkage/Makefile	/^PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.$/;"	m
PACKAGE_BUGREPORT	src/atomic_ops/asm_linkage/usr/Makefile	/^PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.$/;"	m
PACKAGE_BUGREPORT	src/atomic_ops/asm_linkage/usr/src/Makefile	/^PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.$/;"	m
PACKAGE_BUGREPORT	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.$/;"	m
PACKAGE_BUGREPORT	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.$/;"	m
PACKAGE_BUGREPORT	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.$/;"	m
PACKAGE_BUGREPORT	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.$/;"	m
PACKAGE_BUGREPORT	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.$/;"	m
PACKAGE_BUGREPORT	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.$/;"	m
PACKAGE_BUGREPORT	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.$/;"	m
PACKAGE_BUGREPORT	src/atomic_ops/atomic_ops/Makefile	/^PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.$/;"	m
PACKAGE_BUGREPORT	src/atomic_ops/atomic_ops/amd64/Makefile	/^PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.$/;"	m
PACKAGE_BUGREPORT	src/atomic_ops/atomic_ops/i386/Makefile	/^PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.$/;"	m
PACKAGE_BUGREPORT	src/atomic_ops/atomic_ops/sparc/Makefile	/^PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.$/;"	m
PACKAGE_BUGREPORT	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.$/;"	m
PACKAGE_BUGREPORT	src/atomic_ops/ia32/Makefile	/^PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.$/;"	m
PACKAGE_BUGREPORT	src/atomic_ops/ia32/sys/Makefile	/^PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.$/;"	m
PACKAGE_BUGREPORT	src/atomic_ops/intel/Makefile	/^PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.$/;"	m
PACKAGE_BUGREPORT	src/atomic_ops/intel/ia32/Makefile	/^PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.$/;"	m
PACKAGE_BUGREPORT	src/atomic_ops/intel/ia32/sys/Makefile	/^PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.$/;"	m
PACKAGE_BUGREPORT	src/atomic_ops/intel/sys/Makefile	/^PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.$/;"	m
PACKAGE_BUGREPORT	src/atomic_ops/sparc/Makefile	/^PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.$/;"	m
PACKAGE_BUGREPORT	src/atomic_ops/sparc/sys/Makefile	/^PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.$/;"	m
PACKAGE_BUGREPORT	src/common/Makefile	/^PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.$/;"	m
PACKAGE_BUGREPORT	src/common/tests/Makefile	/^PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.$/;"	m
PACKAGE_BUGREPORT	src/fc/Makefile	/^PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.$/;"	m
PACKAGE_BUGREPORT	src/fc/tests/Makefile	/^PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.$/;"	m
PACKAGE_BUGREPORT	src/fc/w_defines.h	75;"	d
PACKAGE_BUGREPORT	src/sm/Makefile	/^PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.$/;"	m
PACKAGE_BUGREPORT	src/sm/smsh/Makefile	/^PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.$/;"	m
PACKAGE_BUGREPORT	src/sm/smsh/lib/Makefile	/^PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.$/;"	m
PACKAGE_BUGREPORT	src/sm/smsh/scripts/Makefile	/^PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.$/;"	m
PACKAGE_BUGREPORT	src/sm/tests/Makefile	/^PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.$/;"	m
PACKAGE_BUGREPORT	src/sthread/Makefile	/^PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.$/;"	m
PACKAGE_BUGREPORT	src/sthread/tests/Makefile	/^PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.$/;"	m
PACKAGE_BUGREPORT	tools/Makefile	/^PACKAGE_BUGREPORT = Noone._Sadly-_this_is_unsupported_software.$/;"	m
PACKAGE_NAME	Makefile	/^PACKAGE_NAME = Shore-Storage-Manager$/;"	m
PACKAGE_NAME	config/Makefile	/^PACKAGE_NAME = Shore-Storage-Manager$/;"	m
PACKAGE_NAME	config/shore-config.h	388;"	d
PACKAGE_NAME	src/Makefile	/^PACKAGE_NAME = Shore-Storage-Manager$/;"	m
PACKAGE_NAME	src/atomic_ops/Makefile	/^PACKAGE_NAME = Shore-Storage-Manager$/;"	m
PACKAGE_NAME	src/atomic_ops/asm_linkage/Makefile	/^PACKAGE_NAME = Shore-Storage-Manager$/;"	m
PACKAGE_NAME	src/atomic_ops/asm_linkage/usr/Makefile	/^PACKAGE_NAME = Shore-Storage-Manager$/;"	m
PACKAGE_NAME	src/atomic_ops/asm_linkage/usr/src/Makefile	/^PACKAGE_NAME = Shore-Storage-Manager$/;"	m
PACKAGE_NAME	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^PACKAGE_NAME = Shore-Storage-Manager$/;"	m
PACKAGE_NAME	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^PACKAGE_NAME = Shore-Storage-Manager$/;"	m
PACKAGE_NAME	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^PACKAGE_NAME = Shore-Storage-Manager$/;"	m
PACKAGE_NAME	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^PACKAGE_NAME = Shore-Storage-Manager$/;"	m
PACKAGE_NAME	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^PACKAGE_NAME = Shore-Storage-Manager$/;"	m
PACKAGE_NAME	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^PACKAGE_NAME = Shore-Storage-Manager$/;"	m
PACKAGE_NAME	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^PACKAGE_NAME = Shore-Storage-Manager$/;"	m
PACKAGE_NAME	src/atomic_ops/atomic_ops/Makefile	/^PACKAGE_NAME = Shore-Storage-Manager$/;"	m
PACKAGE_NAME	src/atomic_ops/atomic_ops/amd64/Makefile	/^PACKAGE_NAME = Shore-Storage-Manager$/;"	m
PACKAGE_NAME	src/atomic_ops/atomic_ops/i386/Makefile	/^PACKAGE_NAME = Shore-Storage-Manager$/;"	m
PACKAGE_NAME	src/atomic_ops/atomic_ops/sparc/Makefile	/^PACKAGE_NAME = Shore-Storage-Manager$/;"	m
PACKAGE_NAME	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^PACKAGE_NAME = Shore-Storage-Manager$/;"	m
PACKAGE_NAME	src/atomic_ops/ia32/Makefile	/^PACKAGE_NAME = Shore-Storage-Manager$/;"	m
PACKAGE_NAME	src/atomic_ops/ia32/sys/Makefile	/^PACKAGE_NAME = Shore-Storage-Manager$/;"	m
PACKAGE_NAME	src/atomic_ops/intel/Makefile	/^PACKAGE_NAME = Shore-Storage-Manager$/;"	m
PACKAGE_NAME	src/atomic_ops/intel/ia32/Makefile	/^PACKAGE_NAME = Shore-Storage-Manager$/;"	m
PACKAGE_NAME	src/atomic_ops/intel/ia32/sys/Makefile	/^PACKAGE_NAME = Shore-Storage-Manager$/;"	m
PACKAGE_NAME	src/atomic_ops/intel/sys/Makefile	/^PACKAGE_NAME = Shore-Storage-Manager$/;"	m
PACKAGE_NAME	src/atomic_ops/sparc/Makefile	/^PACKAGE_NAME = Shore-Storage-Manager$/;"	m
PACKAGE_NAME	src/atomic_ops/sparc/sys/Makefile	/^PACKAGE_NAME = Shore-Storage-Manager$/;"	m
PACKAGE_NAME	src/common/Makefile	/^PACKAGE_NAME = Shore-Storage-Manager$/;"	m
PACKAGE_NAME	src/common/tests/Makefile	/^PACKAGE_NAME = Shore-Storage-Manager$/;"	m
PACKAGE_NAME	src/fc/Makefile	/^PACKAGE_NAME = Shore-Storage-Manager$/;"	m
PACKAGE_NAME	src/fc/tests/Makefile	/^PACKAGE_NAME = Shore-Storage-Manager$/;"	m
PACKAGE_NAME	src/fc/w_defines.h	69;"	d
PACKAGE_NAME	src/sm/Makefile	/^PACKAGE_NAME = Shore-Storage-Manager$/;"	m
PACKAGE_NAME	src/sm/smsh/Makefile	/^PACKAGE_NAME = Shore-Storage-Manager$/;"	m
PACKAGE_NAME	src/sm/smsh/lib/Makefile	/^PACKAGE_NAME = Shore-Storage-Manager$/;"	m
PACKAGE_NAME	src/sm/smsh/scripts/Makefile	/^PACKAGE_NAME = Shore-Storage-Manager$/;"	m
PACKAGE_NAME	src/sm/tests/Makefile	/^PACKAGE_NAME = Shore-Storage-Manager$/;"	m
PACKAGE_NAME	src/sthread/Makefile	/^PACKAGE_NAME = Shore-Storage-Manager$/;"	m
PACKAGE_NAME	src/sthread/tests/Makefile	/^PACKAGE_NAME = Shore-Storage-Manager$/;"	m
PACKAGE_NAME	tools/Makefile	/^PACKAGE_NAME = Shore-Storage-Manager$/;"	m
PACKAGE_STRING	Makefile	/^PACKAGE_STRING = Shore-Storage-Manager 7.0.0$/;"	m
PACKAGE_STRING	config/Makefile	/^PACKAGE_STRING = Shore-Storage-Manager 7.0.0$/;"	m
PACKAGE_STRING	config/shore-config.h	391;"	d
PACKAGE_STRING	src/Makefile	/^PACKAGE_STRING = Shore-Storage-Manager 7.0.0$/;"	m
PACKAGE_STRING	src/atomic_ops/Makefile	/^PACKAGE_STRING = Shore-Storage-Manager 7.0.0$/;"	m
PACKAGE_STRING	src/atomic_ops/asm_linkage/Makefile	/^PACKAGE_STRING = Shore-Storage-Manager 7.0.0$/;"	m
PACKAGE_STRING	src/atomic_ops/asm_linkage/usr/Makefile	/^PACKAGE_STRING = Shore-Storage-Manager 7.0.0$/;"	m
PACKAGE_STRING	src/atomic_ops/asm_linkage/usr/src/Makefile	/^PACKAGE_STRING = Shore-Storage-Manager 7.0.0$/;"	m
PACKAGE_STRING	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^PACKAGE_STRING = Shore-Storage-Manager 7.0.0$/;"	m
PACKAGE_STRING	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^PACKAGE_STRING = Shore-Storage-Manager 7.0.0$/;"	m
PACKAGE_STRING	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^PACKAGE_STRING = Shore-Storage-Manager 7.0.0$/;"	m
PACKAGE_STRING	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^PACKAGE_STRING = Shore-Storage-Manager 7.0.0$/;"	m
PACKAGE_STRING	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^PACKAGE_STRING = Shore-Storage-Manager 7.0.0$/;"	m
PACKAGE_STRING	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^PACKAGE_STRING = Shore-Storage-Manager 7.0.0$/;"	m
PACKAGE_STRING	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^PACKAGE_STRING = Shore-Storage-Manager 7.0.0$/;"	m
PACKAGE_STRING	src/atomic_ops/atomic_ops/Makefile	/^PACKAGE_STRING = Shore-Storage-Manager 7.0.0$/;"	m
PACKAGE_STRING	src/atomic_ops/atomic_ops/amd64/Makefile	/^PACKAGE_STRING = Shore-Storage-Manager 7.0.0$/;"	m
PACKAGE_STRING	src/atomic_ops/atomic_ops/i386/Makefile	/^PACKAGE_STRING = Shore-Storage-Manager 7.0.0$/;"	m
PACKAGE_STRING	src/atomic_ops/atomic_ops/sparc/Makefile	/^PACKAGE_STRING = Shore-Storage-Manager 7.0.0$/;"	m
PACKAGE_STRING	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^PACKAGE_STRING = Shore-Storage-Manager 7.0.0$/;"	m
PACKAGE_STRING	src/atomic_ops/ia32/Makefile	/^PACKAGE_STRING = Shore-Storage-Manager 7.0.0$/;"	m
PACKAGE_STRING	src/atomic_ops/ia32/sys/Makefile	/^PACKAGE_STRING = Shore-Storage-Manager 7.0.0$/;"	m
PACKAGE_STRING	src/atomic_ops/intel/Makefile	/^PACKAGE_STRING = Shore-Storage-Manager 7.0.0$/;"	m
PACKAGE_STRING	src/atomic_ops/intel/ia32/Makefile	/^PACKAGE_STRING = Shore-Storage-Manager 7.0.0$/;"	m
PACKAGE_STRING	src/atomic_ops/intel/ia32/sys/Makefile	/^PACKAGE_STRING = Shore-Storage-Manager 7.0.0$/;"	m
PACKAGE_STRING	src/atomic_ops/intel/sys/Makefile	/^PACKAGE_STRING = Shore-Storage-Manager 7.0.0$/;"	m
PACKAGE_STRING	src/atomic_ops/sparc/Makefile	/^PACKAGE_STRING = Shore-Storage-Manager 7.0.0$/;"	m
PACKAGE_STRING	src/atomic_ops/sparc/sys/Makefile	/^PACKAGE_STRING = Shore-Storage-Manager 7.0.0$/;"	m
PACKAGE_STRING	src/common/Makefile	/^PACKAGE_STRING = Shore-Storage-Manager 7.0.0$/;"	m
PACKAGE_STRING	src/common/tests/Makefile	/^PACKAGE_STRING = Shore-Storage-Manager 7.0.0$/;"	m
PACKAGE_STRING	src/fc/Makefile	/^PACKAGE_STRING = Shore-Storage-Manager 7.0.0$/;"	m
PACKAGE_STRING	src/fc/tests/Makefile	/^PACKAGE_STRING = Shore-Storage-Manager 7.0.0$/;"	m
PACKAGE_STRING	src/fc/w_defines.h	72;"	d
PACKAGE_STRING	src/sm/Makefile	/^PACKAGE_STRING = Shore-Storage-Manager 7.0.0$/;"	m
PACKAGE_STRING	src/sm/smsh/Makefile	/^PACKAGE_STRING = Shore-Storage-Manager 7.0.0$/;"	m
PACKAGE_STRING	src/sm/smsh/lib/Makefile	/^PACKAGE_STRING = Shore-Storage-Manager 7.0.0$/;"	m
PACKAGE_STRING	src/sm/smsh/scripts/Makefile	/^PACKAGE_STRING = Shore-Storage-Manager 7.0.0$/;"	m
PACKAGE_STRING	src/sm/tests/Makefile	/^PACKAGE_STRING = Shore-Storage-Manager 7.0.0$/;"	m
PACKAGE_STRING	src/sthread/Makefile	/^PACKAGE_STRING = Shore-Storage-Manager 7.0.0$/;"	m
PACKAGE_STRING	src/sthread/tests/Makefile	/^PACKAGE_STRING = Shore-Storage-Manager 7.0.0$/;"	m
PACKAGE_STRING	tools/Makefile	/^PACKAGE_STRING = Shore-Storage-Manager 7.0.0$/;"	m
PACKAGE_TARNAME	Makefile	/^PACKAGE_TARNAME = shore-storage-manager$/;"	m
PACKAGE_TARNAME	config/Makefile	/^PACKAGE_TARNAME = shore-storage-manager$/;"	m
PACKAGE_TARNAME	config/shore-config.h	394;"	d
PACKAGE_TARNAME	src/Makefile	/^PACKAGE_TARNAME = shore-storage-manager$/;"	m
PACKAGE_TARNAME	src/atomic_ops/Makefile	/^PACKAGE_TARNAME = shore-storage-manager$/;"	m
PACKAGE_TARNAME	src/atomic_ops/asm_linkage/Makefile	/^PACKAGE_TARNAME = shore-storage-manager$/;"	m
PACKAGE_TARNAME	src/atomic_ops/asm_linkage/usr/Makefile	/^PACKAGE_TARNAME = shore-storage-manager$/;"	m
PACKAGE_TARNAME	src/atomic_ops/asm_linkage/usr/src/Makefile	/^PACKAGE_TARNAME = shore-storage-manager$/;"	m
PACKAGE_TARNAME	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^PACKAGE_TARNAME = shore-storage-manager$/;"	m
PACKAGE_TARNAME	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^PACKAGE_TARNAME = shore-storage-manager$/;"	m
PACKAGE_TARNAME	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^PACKAGE_TARNAME = shore-storage-manager$/;"	m
PACKAGE_TARNAME	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^PACKAGE_TARNAME = shore-storage-manager$/;"	m
PACKAGE_TARNAME	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^PACKAGE_TARNAME = shore-storage-manager$/;"	m
PACKAGE_TARNAME	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^PACKAGE_TARNAME = shore-storage-manager$/;"	m
PACKAGE_TARNAME	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^PACKAGE_TARNAME = shore-storage-manager$/;"	m
PACKAGE_TARNAME	src/atomic_ops/atomic_ops/Makefile	/^PACKAGE_TARNAME = shore-storage-manager$/;"	m
PACKAGE_TARNAME	src/atomic_ops/atomic_ops/amd64/Makefile	/^PACKAGE_TARNAME = shore-storage-manager$/;"	m
PACKAGE_TARNAME	src/atomic_ops/atomic_ops/i386/Makefile	/^PACKAGE_TARNAME = shore-storage-manager$/;"	m
PACKAGE_TARNAME	src/atomic_ops/atomic_ops/sparc/Makefile	/^PACKAGE_TARNAME = shore-storage-manager$/;"	m
PACKAGE_TARNAME	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^PACKAGE_TARNAME = shore-storage-manager$/;"	m
PACKAGE_TARNAME	src/atomic_ops/ia32/Makefile	/^PACKAGE_TARNAME = shore-storage-manager$/;"	m
PACKAGE_TARNAME	src/atomic_ops/ia32/sys/Makefile	/^PACKAGE_TARNAME = shore-storage-manager$/;"	m
PACKAGE_TARNAME	src/atomic_ops/intel/Makefile	/^PACKAGE_TARNAME = shore-storage-manager$/;"	m
PACKAGE_TARNAME	src/atomic_ops/intel/ia32/Makefile	/^PACKAGE_TARNAME = shore-storage-manager$/;"	m
PACKAGE_TARNAME	src/atomic_ops/intel/ia32/sys/Makefile	/^PACKAGE_TARNAME = shore-storage-manager$/;"	m
PACKAGE_TARNAME	src/atomic_ops/intel/sys/Makefile	/^PACKAGE_TARNAME = shore-storage-manager$/;"	m
PACKAGE_TARNAME	src/atomic_ops/sparc/Makefile	/^PACKAGE_TARNAME = shore-storage-manager$/;"	m
PACKAGE_TARNAME	src/atomic_ops/sparc/sys/Makefile	/^PACKAGE_TARNAME = shore-storage-manager$/;"	m
PACKAGE_TARNAME	src/common/Makefile	/^PACKAGE_TARNAME = shore-storage-manager$/;"	m
PACKAGE_TARNAME	src/common/tests/Makefile	/^PACKAGE_TARNAME = shore-storage-manager$/;"	m
PACKAGE_TARNAME	src/fc/Makefile	/^PACKAGE_TARNAME = shore-storage-manager$/;"	m
PACKAGE_TARNAME	src/fc/tests/Makefile	/^PACKAGE_TARNAME = shore-storage-manager$/;"	m
PACKAGE_TARNAME	src/fc/w_defines.h	78;"	d
PACKAGE_TARNAME	src/sm/Makefile	/^PACKAGE_TARNAME = shore-storage-manager$/;"	m
PACKAGE_TARNAME	src/sm/smsh/Makefile	/^PACKAGE_TARNAME = shore-storage-manager$/;"	m
PACKAGE_TARNAME	src/sm/smsh/lib/Makefile	/^PACKAGE_TARNAME = shore-storage-manager$/;"	m
PACKAGE_TARNAME	src/sm/smsh/scripts/Makefile	/^PACKAGE_TARNAME = shore-storage-manager$/;"	m
PACKAGE_TARNAME	src/sm/tests/Makefile	/^PACKAGE_TARNAME = shore-storage-manager$/;"	m
PACKAGE_TARNAME	src/sthread/Makefile	/^PACKAGE_TARNAME = shore-storage-manager$/;"	m
PACKAGE_TARNAME	src/sthread/tests/Makefile	/^PACKAGE_TARNAME = shore-storage-manager$/;"	m
PACKAGE_TARNAME	tools/Makefile	/^PACKAGE_TARNAME = shore-storage-manager$/;"	m
PACKAGE_URL	Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	config/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	config/shore-config.h	397;"	d
PACKAGE_URL	src/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/atomic_ops/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/atomic_ops/asm_linkage/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/atomic_ops/asm_linkage/usr/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/atomic_ops/asm_linkage/usr/src/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/atomic_ops/atomic_ops/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/atomic_ops/atomic_ops/amd64/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/atomic_ops/atomic_ops/i386/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/atomic_ops/atomic_ops/sparc/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/atomic_ops/ia32/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/atomic_ops/ia32/sys/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/atomic_ops/intel/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/atomic_ops/intel/ia32/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/atomic_ops/intel/ia32/sys/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/atomic_ops/intel/sys/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/atomic_ops/sparc/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/atomic_ops/sparc/sys/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/common/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/common/tests/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/fc/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/fc/tests/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/sm/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/sm/smsh/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/sm/smsh/lib/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/sm/smsh/scripts/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/sm/tests/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/sthread/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/sthread/tests/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	tools/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_VERSION	Makefile	/^PACKAGE_VERSION = 7.0.0$/;"	m
PACKAGE_VERSION	config/Makefile	/^PACKAGE_VERSION = 7.0.0$/;"	m
PACKAGE_VERSION	config/shore-config.h	400;"	d
PACKAGE_VERSION	src/Makefile	/^PACKAGE_VERSION = 7.0.0$/;"	m
PACKAGE_VERSION	src/atomic_ops/Makefile	/^PACKAGE_VERSION = 7.0.0$/;"	m
PACKAGE_VERSION	src/atomic_ops/asm_linkage/Makefile	/^PACKAGE_VERSION = 7.0.0$/;"	m
PACKAGE_VERSION	src/atomic_ops/asm_linkage/usr/Makefile	/^PACKAGE_VERSION = 7.0.0$/;"	m
PACKAGE_VERSION	src/atomic_ops/asm_linkage/usr/src/Makefile	/^PACKAGE_VERSION = 7.0.0$/;"	m
PACKAGE_VERSION	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^PACKAGE_VERSION = 7.0.0$/;"	m
PACKAGE_VERSION	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^PACKAGE_VERSION = 7.0.0$/;"	m
PACKAGE_VERSION	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^PACKAGE_VERSION = 7.0.0$/;"	m
PACKAGE_VERSION	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^PACKAGE_VERSION = 7.0.0$/;"	m
PACKAGE_VERSION	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^PACKAGE_VERSION = 7.0.0$/;"	m
PACKAGE_VERSION	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^PACKAGE_VERSION = 7.0.0$/;"	m
PACKAGE_VERSION	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^PACKAGE_VERSION = 7.0.0$/;"	m
PACKAGE_VERSION	src/atomic_ops/atomic_ops/Makefile	/^PACKAGE_VERSION = 7.0.0$/;"	m
PACKAGE_VERSION	src/atomic_ops/atomic_ops/amd64/Makefile	/^PACKAGE_VERSION = 7.0.0$/;"	m
PACKAGE_VERSION	src/atomic_ops/atomic_ops/i386/Makefile	/^PACKAGE_VERSION = 7.0.0$/;"	m
PACKAGE_VERSION	src/atomic_ops/atomic_ops/sparc/Makefile	/^PACKAGE_VERSION = 7.0.0$/;"	m
PACKAGE_VERSION	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^PACKAGE_VERSION = 7.0.0$/;"	m
PACKAGE_VERSION	src/atomic_ops/ia32/Makefile	/^PACKAGE_VERSION = 7.0.0$/;"	m
PACKAGE_VERSION	src/atomic_ops/ia32/sys/Makefile	/^PACKAGE_VERSION = 7.0.0$/;"	m
PACKAGE_VERSION	src/atomic_ops/intel/Makefile	/^PACKAGE_VERSION = 7.0.0$/;"	m
PACKAGE_VERSION	src/atomic_ops/intel/ia32/Makefile	/^PACKAGE_VERSION = 7.0.0$/;"	m
PACKAGE_VERSION	src/atomic_ops/intel/ia32/sys/Makefile	/^PACKAGE_VERSION = 7.0.0$/;"	m
PACKAGE_VERSION	src/atomic_ops/intel/sys/Makefile	/^PACKAGE_VERSION = 7.0.0$/;"	m
PACKAGE_VERSION	src/atomic_ops/sparc/Makefile	/^PACKAGE_VERSION = 7.0.0$/;"	m
PACKAGE_VERSION	src/atomic_ops/sparc/sys/Makefile	/^PACKAGE_VERSION = 7.0.0$/;"	m
PACKAGE_VERSION	src/common/Makefile	/^PACKAGE_VERSION = 7.0.0$/;"	m
PACKAGE_VERSION	src/common/tests/Makefile	/^PACKAGE_VERSION = 7.0.0$/;"	m
PACKAGE_VERSION	src/fc/Makefile	/^PACKAGE_VERSION = 7.0.0$/;"	m
PACKAGE_VERSION	src/fc/tests/Makefile	/^PACKAGE_VERSION = 7.0.0$/;"	m
PACKAGE_VERSION	src/fc/w_defines.h	81;"	d
PACKAGE_VERSION	src/sm/Makefile	/^PACKAGE_VERSION = 7.0.0$/;"	m
PACKAGE_VERSION	src/sm/smsh/Makefile	/^PACKAGE_VERSION = 7.0.0$/;"	m
PACKAGE_VERSION	src/sm/smsh/lib/Makefile	/^PACKAGE_VERSION = 7.0.0$/;"	m
PACKAGE_VERSION	src/sm/smsh/scripts/Makefile	/^PACKAGE_VERSION = 7.0.0$/;"	m
PACKAGE_VERSION	src/sm/tests/Makefile	/^PACKAGE_VERSION = 7.0.0$/;"	m
PACKAGE_VERSION	src/sthread/Makefile	/^PACKAGE_VERSION = 7.0.0$/;"	m
PACKAGE_VERSION	src/sthread/tests/Makefile	/^PACKAGE_VERSION = 7.0.0$/;"	m
PACKAGE_VERSION	tools/Makefile	/^PACKAGE_VERSION = 7.0.0$/;"	m
PAGE_ALIAS	src/sm/page_alias.h	46;"	d
PAGE_ALIAS	src/sm/page_alias.h	48;"	d
PAGE_ALIAS_FILE	src/sm/page_alias.h	51;"	d
PAGE_ALIAS_H	src/sm/page_alias.h	31;"	d
PAGE_ALIAS_LGDATA	src/sm/page_alias.h	52;"	d
PAGE_C	src/sm/page.cpp	59;"	d	file:
PAGE_H	src/sm/page.h	54;"	d
PAGE_H_H	src/sm/page_h.h	31;"	d
PAGE_IN_BLOCKS	src/sm/log_core.h	/^    enum { PAGE_IN_BLOCKS= SM_PAGESIZE\/BLOCK_SIZE };$/;"	e	enum:log_core::__anon82
PAGE_S_H	src/sm/page_s.h	54;"	d
PARALLEL_LOGGING	src/sm/log_core.cpp	53;"	d	file:
PARTITION_BITS	src/common/lsn.h	/^    enum { PARTITION_BITS=16 };$/;"	e	enum:lsn_t::__anon3
PARTITION_C	src/sm/partition.cpp	60;"	d	file:
PARTITION_COUNT	src/sm/log_core.h	/^enum       { PARTITION_COUNT= smlevel_0::max_openlog };$/;"	e	enum:__anon79
PARTITION_H	src/sm/partition.h	55;"	d
PARTITION_SHIFT	src/common/lsn.h	/^    enum { PARTITION_SHIFT=(64-PARTITION_BITS) };$/;"	e	enum:lsn_t::__anon4
PATH_SEPARATOR	Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	config/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/atomic_ops/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/atomic_ops/asm_linkage/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/atomic_ops/asm_linkage/usr/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/atomic_ops/asm_linkage/usr/src/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/atomic_ops/atomic_ops/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/atomic_ops/atomic_ops/amd64/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/atomic_ops/atomic_ops/i386/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/atomic_ops/atomic_ops/sparc/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/atomic_ops/ia32/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/atomic_ops/ia32/sys/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/atomic_ops/intel/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/atomic_ops/intel/ia32/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/atomic_ops/intel/ia32/sys/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/atomic_ops/intel/sys/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/atomic_ops/sparc/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/atomic_ops/sparc/sys/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/common/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/common/tests/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/fc/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/fc/tests/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/sm/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/sm/smsh/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/sm/smsh/lib/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/sm/smsh/scripts/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/sm/tests/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/sthread/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/sthread/tests/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	tools/Makefile	/^PATH_SEPARATOR = :$/;"	m
PCHARDONE	src/common/regex_engine.cpp	994;"	d	file:
PEDANTIC	Makefile	/^PEDANTIC = $/;"	m
PEDANTIC	config/Makefile	/^PEDANTIC = $/;"	m
PEDANTIC	src/Makefile	/^PEDANTIC = $/;"	m
PEDANTIC	src/atomic_ops/Makefile	/^PEDANTIC = $/;"	m
PEDANTIC	src/atomic_ops/asm_linkage/Makefile	/^PEDANTIC = $/;"	m
PEDANTIC	src/atomic_ops/asm_linkage/usr/Makefile	/^PEDANTIC = $/;"	m
PEDANTIC	src/atomic_ops/asm_linkage/usr/src/Makefile	/^PEDANTIC = $/;"	m
PEDANTIC	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^PEDANTIC = $/;"	m
PEDANTIC	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^PEDANTIC = $/;"	m
PEDANTIC	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^PEDANTIC = $/;"	m
PEDANTIC	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^PEDANTIC = $/;"	m
PEDANTIC	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^PEDANTIC = $/;"	m
PEDANTIC	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^PEDANTIC = $/;"	m
PEDANTIC	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^PEDANTIC = $/;"	m
PEDANTIC	src/atomic_ops/atomic_ops/Makefile	/^PEDANTIC = $/;"	m
PEDANTIC	src/atomic_ops/atomic_ops/amd64/Makefile	/^PEDANTIC = $/;"	m
PEDANTIC	src/atomic_ops/atomic_ops/i386/Makefile	/^PEDANTIC = $/;"	m
PEDANTIC	src/atomic_ops/atomic_ops/sparc/Makefile	/^PEDANTIC = $/;"	m
PEDANTIC	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^PEDANTIC = $/;"	m
PEDANTIC	src/atomic_ops/ia32/Makefile	/^PEDANTIC = $/;"	m
PEDANTIC	src/atomic_ops/ia32/sys/Makefile	/^PEDANTIC = $/;"	m
PEDANTIC	src/atomic_ops/intel/Makefile	/^PEDANTIC = $/;"	m
PEDANTIC	src/atomic_ops/intel/ia32/Makefile	/^PEDANTIC = $/;"	m
PEDANTIC	src/atomic_ops/intel/ia32/sys/Makefile	/^PEDANTIC = $/;"	m
PEDANTIC	src/atomic_ops/intel/sys/Makefile	/^PEDANTIC = $/;"	m
PEDANTIC	src/atomic_ops/sparc/Makefile	/^PEDANTIC = $/;"	m
PEDANTIC	src/atomic_ops/sparc/sys/Makefile	/^PEDANTIC = $/;"	m
PEDANTIC	src/common/Makefile	/^PEDANTIC = $/;"	m
PEDANTIC	src/common/tests/Makefile	/^PEDANTIC = $/;"	m
PEDANTIC	src/fc/Makefile	/^PEDANTIC = $/;"	m
PEDANTIC	src/fc/tests/Makefile	/^PEDANTIC = $/;"	m
PEDANTIC	src/sm/Makefile	/^PEDANTIC = $/;"	m
PEDANTIC	src/sm/smsh/Makefile	/^PEDANTIC = $/;"	m
PEDANTIC	src/sm/smsh/lib/Makefile	/^PEDANTIC = $/;"	m
PEDANTIC	src/sm/smsh/scripts/Makefile	/^PEDANTIC = $/;"	m
PEDANTIC	src/sm/tests/Makefile	/^PEDANTIC = $/;"	m
PEDANTIC	src/sthread/Makefile	/^PEDANTIC = $/;"	m
PEDANTIC	src/sthread/tests/Makefile	/^PEDANTIC = $/;"	m
PEDANTIC	tools/Makefile	/^PEDANTIC = $/;"	m
PEEK	src/common/regcomp.cpp	120;"	d	file:
PEEK2	src/common/regcomp.cpp	121;"	d	file:
PERL	Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	config/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	src/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	src/atomic_ops/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	src/atomic_ops/asm_linkage/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	src/atomic_ops/asm_linkage/usr/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	src/atomic_ops/asm_linkage/usr/src/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	src/atomic_ops/atomic_ops/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	src/atomic_ops/atomic_ops/amd64/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	src/atomic_ops/atomic_ops/i386/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	src/atomic_ops/atomic_ops/sparc/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	src/atomic_ops/ia32/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	src/atomic_ops/ia32/sys/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	src/atomic_ops/intel/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	src/atomic_ops/intel/ia32/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	src/atomic_ops/intel/ia32/sys/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	src/atomic_ops/intel/sys/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	src/atomic_ops/sparc/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	src/atomic_ops/sparc/sys/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	src/common/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	src/common/tests/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	src/fc/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	src/fc/tests/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	src/sm/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	src/sm/smsh/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	src/sm/smsh/lib/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	src/sm/smsh/scripts/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	src/sm/tests/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	src/sthread/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	src/sthread/tests/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL	tools/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PERL_CVBUG	src/fc/w_workaround.h	282;"	d
PERL_UNUSED_VAR	src/fc/w_workaround.h	287;"	d
PFC	src/sm/sort.h	/^typedef int  (*PFC) PROTOTYPE((w_base_t::uint4_t kLen1, $/;"	t
PFCDEFINED	src/sm/sort.h	406;"	d
PF_ERR_EXEC	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	90;"	d
PF_ERR_EXEC	src/atomic_ops/ia32/sys/trap.h	90;"	d
PF_ERR_EXEC	src/atomic_ops/intel/ia32/sys/trap.h	90;"	d
PF_ERR_MASK	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	84;"	d
PF_ERR_MASK	src/atomic_ops/ia32/sys/trap.h	84;"	d
PF_ERR_MASK	src/atomic_ops/intel/ia32/sys/trap.h	84;"	d
PF_ERR_PAGE	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	85;"	d
PF_ERR_PAGE	src/atomic_ops/ia32/sys/trap.h	85;"	d
PF_ERR_PAGE	src/atomic_ops/intel/ia32/sys/trap.h	85;"	d
PF_ERR_PROT	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	86;"	d
PF_ERR_PROT	src/atomic_ops/ia32/sys/trap.h	86;"	d
PF_ERR_PROT	src/atomic_ops/intel/ia32/sys/trap.h	86;"	d
PF_ERR_USER	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	88;"	d
PF_ERR_USER	src/atomic_ops/ia32/sys/trap.h	88;"	d
PF_ERR_USER	src/atomic_ops/intel/ia32/sys/trap.h	88;"	d
PF_ERR_WRITE	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	87;"	d
PF_ERR_WRITE	src/atomic_ops/ia32/sys/trap.h	87;"	d
PF_ERR_WRITE	src/atomic_ops/intel/ia32/sys/trap.h	87;"	d
PIN_C	src/sm/pin.cpp	58;"	d	file:
PIN_H	src/sm/pin.h	54;"	d
PLP_TRACE_CS	src/sm/sm_base.h	/^        PLP_TRACE_CS    = 0x02$/;"	e	enum:smlevel_0::plp_tracing_level_t
PLP_TRACE_NONE	src/sm/sm_base.h	/^        PLP_TRACE_NONE  = 0x0, $/;"	e	enum:smlevel_0::plp_tracing_level_t
PLP_TRACE_PAGE	src/sm/sm_base.h	/^        PLP_TRACE_PAGE  = 0x01,$/;"	e	enum:smlevel_0::plp_tracing_level_t
PMAP_C	src/sm/pmap.cpp	35;"	d	file:
PMAP_H	src/sm/pmap.h	31;"	d
POST_INSTALL	Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	config/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/atomic_ops/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/atomic_ops/asm_linkage/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/atomic_ops/asm_linkage/usr/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/atomic_ops/asm_linkage/usr/src/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/atomic_ops/atomic_ops/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/atomic_ops/atomic_ops/amd64/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/atomic_ops/atomic_ops/i386/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/atomic_ops/atomic_ops/sparc/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/atomic_ops/ia32/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/atomic_ops/ia32/sys/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/atomic_ops/intel/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/atomic_ops/intel/ia32/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/atomic_ops/intel/ia32/sys/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/atomic_ops/intel/sys/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/atomic_ops/sparc/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/atomic_ops/sparc/sys/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/common/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/common/tests/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/fc/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/fc/tests/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/sm/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/sm/smsh/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/sm/smsh/lib/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/sm/smsh/scripts/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/sm/tests/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/sthread/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/sthread/tests/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	tools/Makefile	/^POST_INSTALL = :$/;"	m
POST_UNINSTALL	Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	config/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/atomic_ops/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/atomic_ops/asm_linkage/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/atomic_ops/asm_linkage/usr/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/atomic_ops/asm_linkage/usr/src/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/atomic_ops/atomic_ops/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/atomic_ops/atomic_ops/amd64/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/atomic_ops/atomic_ops/i386/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/atomic_ops/atomic_ops/sparc/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/atomic_ops/ia32/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/atomic_ops/ia32/sys/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/atomic_ops/intel/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/atomic_ops/intel/ia32/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/atomic_ops/intel/ia32/sys/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/atomic_ops/intel/sys/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/atomic_ops/sparc/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/atomic_ops/sparc/sys/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/common/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/common/tests/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/fc/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/fc/tests/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/sm/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/sm/smsh/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/sm/smsh/lib/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/sm/smsh/scripts/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/sm/tests/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/sthread/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/sthread/tests/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	tools/Makefile	/^POST_UNINSTALL = :$/;"	m
PRE_INSTALL	Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	config/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/atomic_ops/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/atomic_ops/asm_linkage/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/atomic_ops/asm_linkage/usr/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/atomic_ops/asm_linkage/usr/src/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/atomic_ops/atomic_ops/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/atomic_ops/atomic_ops/amd64/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/atomic_ops/atomic_ops/i386/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/atomic_ops/atomic_ops/sparc/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/atomic_ops/ia32/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/atomic_ops/ia32/sys/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/atomic_ops/intel/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/atomic_ops/intel/ia32/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/atomic_ops/intel/ia32/sys/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/atomic_ops/intel/sys/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/atomic_ops/sparc/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/atomic_ops/sparc/sys/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/common/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/common/tests/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/fc/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/fc/tests/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/sm/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/sm/smsh/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/sm/smsh/lib/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/sm/smsh/scripts/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/sm/tests/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/sthread/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/sthread/tests/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	tools/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_UNINSTALL	Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	config/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/atomic_ops/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/atomic_ops/asm_linkage/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/atomic_ops/asm_linkage/usr/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/atomic_ops/asm_linkage/usr/src/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/atomic_ops/atomic_ops/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/atomic_ops/atomic_ops/amd64/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/atomic_ops/atomic_ops/i386/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/atomic_ops/atomic_ops/sparc/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/atomic_ops/ia32/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/atomic_ops/ia32/sys/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/atomic_ops/intel/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/atomic_ops/intel/ia32/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/atomic_ops/intel/ia32/sys/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/atomic_ops/intel/sys/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/atomic_ops/sparc/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/atomic_ops/sparc/sys/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/common/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/common/tests/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/fc/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/fc/tests/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/sm/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/sm/smsh/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/sm/smsh/lib/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/sm/smsh/scripts/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/sm/tests/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/sthread/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/sthread/tests/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	tools/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRINT_KEYCMP	src/sm/newsort.cpp	2836;"	d	file:
PRIO_PGRP	src/fc/w_rusage.h	70;"	d
PRIO_PROCESS	src/fc/w_rusage.h	69;"	d
PRIO_USER	src/fc/w_rusage.h	71;"	d
PROLOGUE_H	src/sm/prologue.h	54;"	d
PROTECT	src/fc/tls.h	173;"	d
PROTOTYPE	src/sm/sort.h	402;"	d
PTHREAD_BARRIER_H_	src/sthread/macpthread_barrier.h	37;"	d
PTHREAD_CC	Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	config/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	src/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	src/atomic_ops/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	src/atomic_ops/asm_linkage/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	src/atomic_ops/asm_linkage/usr/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	src/atomic_ops/asm_linkage/usr/src/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	src/atomic_ops/atomic_ops/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	src/atomic_ops/atomic_ops/amd64/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	src/atomic_ops/atomic_ops/i386/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	src/atomic_ops/atomic_ops/sparc/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	src/atomic_ops/ia32/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	src/atomic_ops/ia32/sys/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	src/atomic_ops/intel/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	src/atomic_ops/intel/ia32/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	src/atomic_ops/intel/ia32/sys/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	src/atomic_ops/intel/sys/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	src/atomic_ops/sparc/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	src/atomic_ops/sparc/sys/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	src/common/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	src/common/tests/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	src/fc/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	src/fc/tests/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	src/sm/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	src/sm/smsh/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	src/sm/smsh/lib/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	src/sm/smsh/scripts/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	src/sm/tests/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	src/sthread/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	src/sthread/tests/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	tools/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CFLAGS	Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	config/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	src/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	src/atomic_ops/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	src/atomic_ops/asm_linkage/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	src/atomic_ops/asm_linkage/usr/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	src/atomic_ops/atomic_ops/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	src/atomic_ops/atomic_ops/amd64/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	src/atomic_ops/atomic_ops/i386/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	src/atomic_ops/atomic_ops/sparc/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	src/atomic_ops/ia32/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	src/atomic_ops/ia32/sys/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	src/atomic_ops/intel/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	src/atomic_ops/intel/ia32/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	src/atomic_ops/intel/ia32/sys/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	src/atomic_ops/intel/sys/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	src/atomic_ops/sparc/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	src/atomic_ops/sparc/sys/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	src/common/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	src/common/tests/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	src/fc/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	src/fc/tests/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	src/sm/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	src/sm/smsh/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	src/sm/smsh/lib/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	src/sm/smsh/scripts/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	src/sm/tests/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	src/sthread/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	src/sthread/tests/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	tools/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_EXT_QNODE_INITIALIZER	src/sthread/sthread.h	415;"	d
PTHREAD_LIBS	Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	config/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	src/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	src/atomic_ops/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	src/atomic_ops/asm_linkage/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	src/atomic_ops/asm_linkage/usr/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	src/atomic_ops/atomic_ops/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	src/atomic_ops/atomic_ops/amd64/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	src/atomic_ops/atomic_ops/i386/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	src/atomic_ops/atomic_ops/sparc/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	src/atomic_ops/ia32/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	src/atomic_ops/ia32/sys/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	src/atomic_ops/intel/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	src/atomic_ops/intel/ia32/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	src/atomic_ops/intel/ia32/sys/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	src/atomic_ops/intel/sys/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	src/atomic_ops/sparc/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	src/atomic_ops/sparc/sys/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	src/common/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	src/common/tests/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	src/fc/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	src/fc/tests/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	src/sm/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	src/sm/smsh/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	src/sm/smsh/lib/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	src/sm/smsh/scripts/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	src/sm/tests/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	src/sthread/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	src/sthread/tests/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	tools/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_STACK_MIN_SUBSTITUTE	src/sthread/sthread.cpp	754;"	d	file:
PUN	src/fc/tests/rand.cpp	/^}PUN;$/;"	t	typeref:union:__anon132	file:
PURE_CACHE_DIR	Makefile	/^PURE_CACHE_DIR = \/tmp\/nhall\/pure$/;"	m
PURE_CACHE_DIR	config/Makefile	/^PURE_CACHE_DIR = \/tmp\/nhall\/pure$/;"	m
PURE_CACHE_DIR	src/Makefile	/^PURE_CACHE_DIR = \/tmp\/nhall\/pure$/;"	m
PURE_CACHE_DIR	src/atomic_ops/Makefile	/^PURE_CACHE_DIR = \/tmp\/nhall\/pure$/;"	m
PURE_CACHE_DIR	src/atomic_ops/asm_linkage/Makefile	/^PURE_CACHE_DIR = \/tmp\/nhall\/pure$/;"	m
PURE_CACHE_DIR	src/atomic_ops/asm_linkage/usr/Makefile	/^PURE_CACHE_DIR = \/tmp\/nhall\/pure$/;"	m
PURE_CACHE_DIR	src/atomic_ops/asm_linkage/usr/src/Makefile	/^PURE_CACHE_DIR = \/tmp\/nhall\/pure$/;"	m
PURE_CACHE_DIR	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^PURE_CACHE_DIR = \/tmp\/nhall\/pure$/;"	m
PURE_CACHE_DIR	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^PURE_CACHE_DIR = \/tmp\/nhall\/pure$/;"	m
PURE_CACHE_DIR	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^PURE_CACHE_DIR = \/tmp\/nhall\/pure$/;"	m
PURE_CACHE_DIR	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^PURE_CACHE_DIR = \/tmp\/nhall\/pure$/;"	m
PURE_CACHE_DIR	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^PURE_CACHE_DIR = \/tmp\/nhall\/pure$/;"	m
PURE_CACHE_DIR	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^PURE_CACHE_DIR = \/tmp\/nhall\/pure$/;"	m
PURE_CACHE_DIR	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^PURE_CACHE_DIR = \/tmp\/nhall\/pure$/;"	m
PURE_CACHE_DIR	src/atomic_ops/atomic_ops/Makefile	/^PURE_CACHE_DIR = \/tmp\/nhall\/pure$/;"	m
PURE_CACHE_DIR	src/atomic_ops/atomic_ops/amd64/Makefile	/^PURE_CACHE_DIR = \/tmp\/nhall\/pure$/;"	m
PURE_CACHE_DIR	src/atomic_ops/atomic_ops/i386/Makefile	/^PURE_CACHE_DIR = \/tmp\/nhall\/pure$/;"	m
PURE_CACHE_DIR	src/atomic_ops/atomic_ops/sparc/Makefile	/^PURE_CACHE_DIR = \/tmp\/nhall\/pure$/;"	m
PURE_CACHE_DIR	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^PURE_CACHE_DIR = \/tmp\/nhall\/pure$/;"	m
PURE_CACHE_DIR	src/atomic_ops/ia32/Makefile	/^PURE_CACHE_DIR = \/tmp\/nhall\/pure$/;"	m
PURE_CACHE_DIR	src/atomic_ops/ia32/sys/Makefile	/^PURE_CACHE_DIR = \/tmp\/nhall\/pure$/;"	m
PURE_CACHE_DIR	src/atomic_ops/intel/Makefile	/^PURE_CACHE_DIR = \/tmp\/nhall\/pure$/;"	m
PURE_CACHE_DIR	src/atomic_ops/intel/ia32/Makefile	/^PURE_CACHE_DIR = \/tmp\/nhall\/pure$/;"	m
PURE_CACHE_DIR	src/atomic_ops/intel/ia32/sys/Makefile	/^PURE_CACHE_DIR = \/tmp\/nhall\/pure$/;"	m
PURE_CACHE_DIR	src/atomic_ops/intel/sys/Makefile	/^PURE_CACHE_DIR = \/tmp\/nhall\/pure$/;"	m
PURE_CACHE_DIR	src/atomic_ops/sparc/Makefile	/^PURE_CACHE_DIR = \/tmp\/nhall\/pure$/;"	m
PURE_CACHE_DIR	src/atomic_ops/sparc/sys/Makefile	/^PURE_CACHE_DIR = \/tmp\/nhall\/pure$/;"	m
PURE_CACHE_DIR	src/common/Makefile	/^PURE_CACHE_DIR = \/tmp\/nhall\/pure$/;"	m
PURE_CACHE_DIR	src/common/tests/Makefile	/^PURE_CACHE_DIR = \/tmp\/nhall\/pure$/;"	m
PURE_CACHE_DIR	src/fc/Makefile	/^PURE_CACHE_DIR = \/tmp\/nhall\/pure$/;"	m
PURE_CACHE_DIR	src/fc/tests/Makefile	/^PURE_CACHE_DIR = \/tmp\/nhall\/pure$/;"	m
PURE_CACHE_DIR	src/sm/Makefile	/^PURE_CACHE_DIR = \/tmp\/nhall\/pure$/;"	m
PURE_CACHE_DIR	src/sm/smsh/Makefile	/^PURE_CACHE_DIR = \/tmp\/nhall\/pure$/;"	m
PURE_CACHE_DIR	src/sm/smsh/lib/Makefile	/^PURE_CACHE_DIR = \/tmp\/nhall\/pure$/;"	m
PURE_CACHE_DIR	src/sm/smsh/scripts/Makefile	/^PURE_CACHE_DIR = \/tmp\/nhall\/pure$/;"	m
PURE_CACHE_DIR	src/sm/tests/Makefile	/^PURE_CACHE_DIR = \/tmp\/nhall\/pure$/;"	m
PURE_CACHE_DIR	src/sthread/Makefile	/^PURE_CACHE_DIR = \/tmp\/nhall\/pure$/;"	m
PURE_CACHE_DIR	src/sthread/tests/Makefile	/^PURE_CACHE_DIR = \/tmp\/nhall\/pure$/;"	m
PURE_CACHE_DIR	tools/Makefile	/^PURE_CACHE_DIR = \/tmp\/nhall\/pure$/;"	m
PURE_CXXFLAGS	Makefile	/^PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)$/;"	m
PURE_CXXFLAGS	config/Makefile	/^PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)$/;"	m
PURE_CXXFLAGS	src/Makefile	/^PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)$/;"	m
PURE_CXXFLAGS	src/atomic_ops/Makefile	/^PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)$/;"	m
PURE_CXXFLAGS	src/atomic_ops/asm_linkage/Makefile	/^PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)$/;"	m
PURE_CXXFLAGS	src/atomic_ops/asm_linkage/usr/Makefile	/^PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)$/;"	m
PURE_CXXFLAGS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)$/;"	m
PURE_CXXFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)$/;"	m
PURE_CXXFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)$/;"	m
PURE_CXXFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)$/;"	m
PURE_CXXFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)$/;"	m
PURE_CXXFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)$/;"	m
PURE_CXXFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)$/;"	m
PURE_CXXFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)$/;"	m
PURE_CXXFLAGS	src/atomic_ops/atomic_ops/Makefile	/^PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)$/;"	m
PURE_CXXFLAGS	src/atomic_ops/atomic_ops/amd64/Makefile	/^PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)$/;"	m
PURE_CXXFLAGS	src/atomic_ops/atomic_ops/i386/Makefile	/^PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)$/;"	m
PURE_CXXFLAGS	src/atomic_ops/atomic_ops/sparc/Makefile	/^PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)$/;"	m
PURE_CXXFLAGS	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)$/;"	m
PURE_CXXFLAGS	src/atomic_ops/ia32/Makefile	/^PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)$/;"	m
PURE_CXXFLAGS	src/atomic_ops/ia32/sys/Makefile	/^PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)$/;"	m
PURE_CXXFLAGS	src/atomic_ops/intel/Makefile	/^PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)$/;"	m
PURE_CXXFLAGS	src/atomic_ops/intel/ia32/Makefile	/^PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)$/;"	m
PURE_CXXFLAGS	src/atomic_ops/intel/ia32/sys/Makefile	/^PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)$/;"	m
PURE_CXXFLAGS	src/atomic_ops/intel/sys/Makefile	/^PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)$/;"	m
PURE_CXXFLAGS	src/atomic_ops/sparc/Makefile	/^PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)$/;"	m
PURE_CXXFLAGS	src/atomic_ops/sparc/sys/Makefile	/^PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)$/;"	m
PURE_CXXFLAGS	src/common/Makefile	/^PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)$/;"	m
PURE_CXXFLAGS	src/common/tests/Makefile	/^PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)$/;"	m
PURE_CXXFLAGS	src/fc/Makefile	/^PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)$/;"	m
PURE_CXXFLAGS	src/fc/tests/Makefile	/^PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)$/;"	m
PURE_CXXFLAGS	src/sm/Makefile	/^PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)$/;"	m
PURE_CXXFLAGS	src/sm/smsh/Makefile	/^PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)$/;"	m
PURE_CXXFLAGS	src/sm/smsh/lib/Makefile	/^PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)$/;"	m
PURE_CXXFLAGS	src/sm/smsh/scripts/Makefile	/^PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)$/;"	m
PURE_CXXFLAGS	src/sm/tests/Makefile	/^PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)$/;"	m
PURE_CXXFLAGS	src/sthread/Makefile	/^PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)$/;"	m
PURE_CXXFLAGS	src/sthread/tests/Makefile	/^PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)$/;"	m
PURE_CXXFLAGS	tools/Makefile	/^PURE_CXXFLAGS = $(am__append_18) $(am__append_21) $(am__append_24)$/;"	m
PURE_DIR	Makefile	/^PURE_DIR = \/s\/purifyplus\/amd64_rhel5$/;"	m
PURE_DIR	config/Makefile	/^PURE_DIR = \/s\/purifyplus\/amd64_rhel5$/;"	m
PURE_DIR	src/Makefile	/^PURE_DIR = \/s\/purifyplus\/amd64_rhel5$/;"	m
PURE_DIR	src/atomic_ops/Makefile	/^PURE_DIR = \/s\/purifyplus\/amd64_rhel5$/;"	m
PURE_DIR	src/atomic_ops/asm_linkage/Makefile	/^PURE_DIR = \/s\/purifyplus\/amd64_rhel5$/;"	m
PURE_DIR	src/atomic_ops/asm_linkage/usr/Makefile	/^PURE_DIR = \/s\/purifyplus\/amd64_rhel5$/;"	m
PURE_DIR	src/atomic_ops/asm_linkage/usr/src/Makefile	/^PURE_DIR = \/s\/purifyplus\/amd64_rhel5$/;"	m
PURE_DIR	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^PURE_DIR = \/s\/purifyplus\/amd64_rhel5$/;"	m
PURE_DIR	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^PURE_DIR = \/s\/purifyplus\/amd64_rhel5$/;"	m
PURE_DIR	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^PURE_DIR = \/s\/purifyplus\/amd64_rhel5$/;"	m
PURE_DIR	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^PURE_DIR = \/s\/purifyplus\/amd64_rhel5$/;"	m
PURE_DIR	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^PURE_DIR = \/s\/purifyplus\/amd64_rhel5$/;"	m
PURE_DIR	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^PURE_DIR = \/s\/purifyplus\/amd64_rhel5$/;"	m
PURE_DIR	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^PURE_DIR = \/s\/purifyplus\/amd64_rhel5$/;"	m
PURE_DIR	src/atomic_ops/atomic_ops/Makefile	/^PURE_DIR = \/s\/purifyplus\/amd64_rhel5$/;"	m
PURE_DIR	src/atomic_ops/atomic_ops/amd64/Makefile	/^PURE_DIR = \/s\/purifyplus\/amd64_rhel5$/;"	m
PURE_DIR	src/atomic_ops/atomic_ops/i386/Makefile	/^PURE_DIR = \/s\/purifyplus\/amd64_rhel5$/;"	m
PURE_DIR	src/atomic_ops/atomic_ops/sparc/Makefile	/^PURE_DIR = \/s\/purifyplus\/amd64_rhel5$/;"	m
PURE_DIR	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^PURE_DIR = \/s\/purifyplus\/amd64_rhel5$/;"	m
PURE_DIR	src/atomic_ops/ia32/Makefile	/^PURE_DIR = \/s\/purifyplus\/amd64_rhel5$/;"	m
PURE_DIR	src/atomic_ops/ia32/sys/Makefile	/^PURE_DIR = \/s\/purifyplus\/amd64_rhel5$/;"	m
PURE_DIR	src/atomic_ops/intel/Makefile	/^PURE_DIR = \/s\/purifyplus\/amd64_rhel5$/;"	m
PURE_DIR	src/atomic_ops/intel/ia32/Makefile	/^PURE_DIR = \/s\/purifyplus\/amd64_rhel5$/;"	m
PURE_DIR	src/atomic_ops/intel/ia32/sys/Makefile	/^PURE_DIR = \/s\/purifyplus\/amd64_rhel5$/;"	m
PURE_DIR	src/atomic_ops/intel/sys/Makefile	/^PURE_DIR = \/s\/purifyplus\/amd64_rhel5$/;"	m
PURE_DIR	src/atomic_ops/sparc/Makefile	/^PURE_DIR = \/s\/purifyplus\/amd64_rhel5$/;"	m
PURE_DIR	src/atomic_ops/sparc/sys/Makefile	/^PURE_DIR = \/s\/purifyplus\/amd64_rhel5$/;"	m
PURE_DIR	src/common/Makefile	/^PURE_DIR = \/s\/purifyplus\/amd64_rhel5$/;"	m
PURE_DIR	src/common/tests/Makefile	/^PURE_DIR = \/s\/purifyplus\/amd64_rhel5$/;"	m
PURE_DIR	src/fc/Makefile	/^PURE_DIR = \/s\/purifyplus\/amd64_rhel5$/;"	m
PURE_DIR	src/fc/tests/Makefile	/^PURE_DIR = \/s\/purifyplus\/amd64_rhel5$/;"	m
PURE_DIR	src/sm/Makefile	/^PURE_DIR = \/s\/purifyplus\/amd64_rhel5$/;"	m
PURE_DIR	src/sm/smsh/Makefile	/^PURE_DIR = \/s\/purifyplus\/amd64_rhel5$/;"	m
PURE_DIR	src/sm/smsh/lib/Makefile	/^PURE_DIR = \/s\/purifyplus\/amd64_rhel5$/;"	m
PURE_DIR	src/sm/smsh/scripts/Makefile	/^PURE_DIR = \/s\/purifyplus\/amd64_rhel5$/;"	m
PURE_DIR	src/sm/tests/Makefile	/^PURE_DIR = \/s\/purifyplus\/amd64_rhel5$/;"	m
PURE_DIR	src/sthread/Makefile	/^PURE_DIR = \/s\/purifyplus\/amd64_rhel5$/;"	m
PURE_DIR	src/sthread/tests/Makefile	/^PURE_DIR = \/s\/purifyplus\/amd64_rhel5$/;"	m
PURE_DIR	tools/Makefile	/^PURE_DIR = \/s\/purifyplus\/amd64_rhel5$/;"	m
PURE_VIRTUAL	src/fc/w_base.cpp	242;"	d	file:
PURE_VIRTUAL	src/fc/w_base.cpp	244;"	d	file:
PWM_COUNT	src/sm/bf_core.h	/^    static int const PWM_COUNT = 64;$/;"	m	class:page_write_mutex_t
Parent	src/fc/w_heap.h	/^inline int Heap<T, Cmp>::Parent(int i) const$/;"	f	class:Heap
Pmap	src/sm/pmap.h	/^    inline    Pmap() {$/;"	f	struct:Pmap
Pmap	src/sm/pmap.h	/^struct Pmap $/;"	s
Pmap_Align4	src/sm/pmap.h	/^class Pmap_Align4 : public Pmap {$/;"	c
Pmap_Align4	src/sm/pmap.h	/^typedef    Pmap    Pmap_Align4;$/;"	t
PongGames	src/sthread/tests/thread1.cpp	/^int	PongGames = 1;$/;"	v
PongTimes	src/sthread/tests/thread1.cpp	/^int	PongTimes = DefaultPongTimes;$/;"	v
Pool	src/fc/block_alloc.h	/^    typedef block_pool<T, cache_pool, MaxBytes> Pool;$/;"	t	struct:object_cache
Pool	src/fc/block_alloc.h	/^    typedef block_pool<T, dynpool, MaxBytes> Pool;$/;"	t	struct:block_alloc
Pool	src/fc/block_alloc.h	/^    typedef dynpool Pool;$/;"	t	struct:blob_pool
PosInf	src/fc/w_base.h	/^    PosInf=0x400, eqPosInf, gtPosInf, gePosInf, ltPosInf, lePosInf$/;"	e	enum:w_base_t::CompareOp
PrepareLogAllStoresToFree	src/sm/xct.cpp	/^xct_t::PrepareLogAllStoresToFree()$/;"	f	class:xct_t
Print	src/fc/w_heap.h	/^inline void Heap<T, Cmp>::Print(ostream& out) const$/;"	f	class:Heap
PrintBlockedThread	src/sm/smthread.cpp	/^                        PrintBlockedThread(ostream& o) : out(o) {};$/;"	f	class:PrintBlockedThread
PrintBlockedThread	src/sm/smthread.cpp	/^class PrintBlockedThread : public ThreadFunc$/;"	c	file:
PrintError	src/fc/w_getopt.cpp	/^int PrintError(const char* errMsg, const char* progName, char optChar)$/;"	f
PrintRoot	src/fc/w_heap.h	/^void Heap<T, Cmp>::PrintRoot(ostream& out, int rootElem, int indentLevel) const$/;"	f	class:Heap
PrintSmthreadById	src/sm/xct.cpp	/^        PrintSmthreadById(ostream& out, int i ) : o(out), _i(0) {$/;"	f	class:PrintSmthreadById
PrintSmthreadById	src/sm/xct.cpp	/^class PrintSmthreadById : public SmthreadFunc$/;"	c	file:
ProcessFile	tools/errors.pl	/^sub ProcessFile$/;"	s
QUEUE_BLOCK_EXT_QNODE_INITIALIZER	src/sthread/sthread.h	543;"	d
QUEUE_EXT_QNODE_INITIALIZER	src/sthread/sthread.h	549;"	d
QUEUE_EXT_QNODE_INITIALIZER	src/sthread/sthread.h	555;"	d
QUEUE_SPIN_EXT_QNODE_INITIALIZER	src/sthread/sthread.h	547;"	d
QUEUE_SPIN_EXT_QNODE_INITIALIZER	src/sthread/sthread.h	553;"	d
QuickSort	src/sm/sort.cpp	/^void QuickSort(char* a[], int cnt, int (*compar)(const void*, const void*) )$/;"	f	file:
R	src/fc/w_rand.h	/^    enum { R=16 };$/;"	e	enum:w_rand::__anon128
RAND48_INITIALIZER	src/fc/rand48.h	64;"	d
RAND48_INITIAL_SEED	src/fc/rand48.h	63;"	d
RANGES_C	src/sm/ranges_p.cpp	36;"	d	file:
RANGES_P_H	src/sm/ranges_p.h	37;"	d
RANLIB	Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	config/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/atomic_ops/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/atomic_ops/asm_linkage/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/atomic_ops/asm_linkage/usr/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/atomic_ops/asm_linkage/usr/src/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/atomic_ops/atomic_ops/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/atomic_ops/atomic_ops/amd64/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/atomic_ops/atomic_ops/i386/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/atomic_ops/atomic_ops/sparc/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/atomic_ops/ia32/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/atomic_ops/ia32/sys/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/atomic_ops/intel/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/atomic_ops/intel/ia32/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/atomic_ops/intel/ia32/sys/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/atomic_ops/intel/sys/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/atomic_ops/sparc/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/atomic_ops/sparc/sys/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/common/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/common/tests/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/fc/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/fc/tests/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/sm/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/sm/smsh/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/sm/smsh/lib/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/sm/smsh/scripts/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/sm/tests/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/sthread/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/sthread/tests/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	tools/Makefile	/^RANLIB = ranlib$/;"	m
RC	src/fc/w_rc.h	506;"	d
RC2	src/fc/w_rc.h	517;"	d
RCOK	src/fc/w_rc.h	527;"	d
RC_APPEND_MSG	src/fc/w_rc.h	618;"	d
RC_AUGMENT	src/fc/w_rc.h	591;"	d
RC_PUSH	src/fc/w_rc.h	605;"	d
READER	src/sthread/srwlock.h	/^    enum rwmode_t { NONE=0, WRITER=0x1, READER=0x2 };$/;"	e	enum:mcs_rwlock::rwmode_t
READER	src/sthread/sthread.h	/^    enum { WRITER=1, READER=2 };$/;"	e	enum:occ_rwlock::__anon142
READ_PTR	src/sm/smsh/shell.cpp	505;"	d	file:
REAL_COUNT	src/fc/mem_block.h	/^    enum { REAL_COUNT     = (BYTES-OverheadBytes)\/ChipSize };$/;"	e	enum:memory_block::bounds_check::__anon118
RECHECK_LOGS	src/common/tests/Makefile	/^RECHECK_LOGS = $(TEST_LOGS)$/;"	m
RECHECK_LOGS	src/fc/tests/Makefile	/^RECHECK_LOGS = $(TEST_LOGS)$/;"	m
RECHECK_LOGS	src/sm/smsh/Makefile	/^RECHECK_LOGS = $(TEST_LOGS)$/;"	m
RECHECK_LOGS	src/sm/tests/Makefile	/^RECHECK_LOGS = $(TEST_LOGS)$/;"	m
RECHECK_LOGS	src/sthread/tests/Makefile	/^RECHECK_LOGS = $(TEST_LOGS)$/;"	m
RECLAIM_CHECK_PARENT	src/sm/lock_core.h	/^    enum sli_parent_cmd { RECLAIM_NO_PARENT, RECLAIM_CHECK_PARENT, RECLAIM_RECLAIM_PARENT };$/;"	e	enum:lock_core_m::sli_parent_cmd
RECLAIM_NO_PARENT	src/sm/lock_core.h	/^    enum sli_parent_cmd { RECLAIM_NO_PARENT, RECLAIM_CHECK_PARENT, RECLAIM_RECLAIM_PARENT };$/;"	e	enum:lock_core_m::sli_parent_cmd
RECLAIM_RECLAIM_PARENT	src/sm/lock_core.h	/^    enum sli_parent_cmd { RECLAIM_NO_PARENT, RECLAIM_CHECK_PARENT, RECLAIM_RECLAIM_PARENT };$/;"	e	enum:lock_core_m::sli_parent_cmd
RECURSIVE_CLEAN_TARGETS	Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_CLEAN_TARGETS	src/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_CLEAN_TARGETS	src/atomic_ops/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_CLEAN_TARGETS	src/atomic_ops/asm_linkage/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_CLEAN_TARGETS	src/atomic_ops/asm_linkage/usr/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_CLEAN_TARGETS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_CLEAN_TARGETS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_CLEAN_TARGETS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_CLEAN_TARGETS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_CLEAN_TARGETS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_CLEAN_TARGETS	src/atomic_ops/atomic_ops/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_CLEAN_TARGETS	src/atomic_ops/ia32/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_CLEAN_TARGETS	src/atomic_ops/intel/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_CLEAN_TARGETS	src/atomic_ops/intel/ia32/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_CLEAN_TARGETS	src/atomic_ops/sparc/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_CLEAN_TARGETS	src/common/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_CLEAN_TARGETS	src/fc/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_CLEAN_TARGETS	src/sm/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_CLEAN_TARGETS	src/sm/smsh/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_CLEAN_TARGETS	src/sm/smsh/lib/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_CLEAN_TARGETS	src/sm/smsh/scripts/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_CLEAN_TARGETS	src/sthread/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_TARGETS	Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
RECURSIVE_TARGETS	src/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
RECURSIVE_TARGETS	src/atomic_ops/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
RECURSIVE_TARGETS	src/atomic_ops/asm_linkage/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
RECURSIVE_TARGETS	src/atomic_ops/asm_linkage/usr/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
RECURSIVE_TARGETS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
RECURSIVE_TARGETS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
RECURSIVE_TARGETS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
RECURSIVE_TARGETS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
RECURSIVE_TARGETS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
RECURSIVE_TARGETS	src/atomic_ops/atomic_ops/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
RECURSIVE_TARGETS	src/atomic_ops/ia32/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
RECURSIVE_TARGETS	src/atomic_ops/intel/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
RECURSIVE_TARGETS	src/atomic_ops/intel/ia32/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
RECURSIVE_TARGETS	src/atomic_ops/sparc/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
RECURSIVE_TARGETS	src/common/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
RECURSIVE_TARGETS	src/fc/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
RECURSIVE_TARGETS	src/sm/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
RECURSIVE_TARGETS	src/sm/smsh/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
RECURSIVE_TARGETS	src/sm/smsh/lib/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
RECURSIVE_TARGETS	src/sm/smsh/scripts/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
RECURSIVE_TARGETS	src/sthread/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
REGCOMP_I_H	src/common/regcomp_i.h	2;"	d
REGERROR_I_H	src/common/regerror_i.h	31;"	d
REGEX2_H	src/common/regex2.h	9;"	d
REGEX_CCLASS_H	src/common/regex_cclass.h	9;"	d
REGEX_CNAME_H	src/common/regex_cname.h	9;"	d
REGEX_H	src/common/regex.h	9;"	d
REGEX_INFINITY	src/common/regex_utils.h	60;"	d
REGEX_OUT	src/common/regex2.h	185;"	d
REGEX_POSIX_H	src/common/regex_posix.h	9;"	d
REGEX_UTILS_H	src/common/regex_utils.h	9;"	d
REGISTER	src/fc/nbox.cpp	64;"	d	file:
REGISTER	src/fc/nbox.cpp	66;"	d	file:
REG_ASSERT	src/common/regex.h	106;"	d
REG_ATOI	src/common/regex.h	108;"	d
REG_BACKR	src/common/regex.h	120;"	d
REG_BADBR	src/common/regex.h	101;"	d
REG_BADPAT	src/common/regex.h	93;"	d
REG_BADRPT	src/common/regex.h	104;"	d
REG_BASIC	src/common/regex.h	80;"	d
REG_DUMP	src/common/regex.h	87;"	d
REG_EBRACE	src/common/regex.h	100;"	d
REG_EBRACK	src/common/regex.h	98;"	d
REG_ECOLLATE	src/common/regex.h	94;"	d
REG_ECTYPE	src/common/regex.h	95;"	d
REG_EESCAPE	src/common/regex.h	96;"	d
REG_EMPTY	src/common/regex.h	105;"	d
REG_EPAREN	src/common/regex.h	99;"	d
REG_ERANGE	src/common/regex.h	102;"	d
REG_ESPACE	src/common/regex.h	103;"	d
REG_ESUBREG	src/common/regex.h	97;"	d
REG_EXTENDED	src/common/regex.h	81;"	d
REG_ICASE	src/common/regex.h	82;"	d
REG_INVARG	src/common/regex.h	107;"	d
REG_ITOA	src/common/regex.h	109;"	d
REG_LARGE	src/common/regex.h	119;"	d
REG_NEWLINE	src/common/regex.h	84;"	d
REG_NOMATCH	src/common/regex.h	92;"	d
REG_NOSPEC	src/common/regex.h	85;"	d
REG_NOSUB	src/common/regex.h	83;"	d
REG_NOTBOL	src/common/regex.h	115;"	d
REG_NOTEOL	src/common/regex.h	116;"	d
REG_OKAY	src/common/regex.h	91;"	d
REG_PEND	src/common/regex.h	86;"	d
REG_STARTEND	src/common/regex.h	117;"	d
REG_TRACE	src/common/regex.h	118;"	d
RELEASE_BUCKET_MUTEX	src/sm/lock_core.h	193;"	d
RELOCATE_RECORD_CALLBACK_FUNC	src/sm/sm.h	/^    typedef smlevel_0::RELOCATE_RECORD_CALLBACK_FUNC RELOCATE_RECORD_CALLBACK_FUNC;$/;"	t	class:ss_m
RELOCATE_RECORD_CALLBACK_FUNC	src/sm/sm_base.h	/^    typedef w_rc_t (*RELOCATE_RECORD_CALLBACK_FUNC) ($/;"	t	class:smlevel_0
REMOVE_RATIO	src/sm/rtree.h	/^const float  REMOVE_RATIO = (float)0.3;$/;"	v
REP	src/common/regcomp.cpp	973;"	d	file:
REQ	src/sm/bf_prefetch.cpp	115;"	d	file:
REQ	src/sm/bf_prefetch.cpp	82;"	d	file:
REQUIRE	src/common/regcomp.cpp	133;"	d	file:
RESTART_C	src/sm/restart.cpp	58;"	d	file:
RESTART_H	src/sm/restart.h	31;"	d
RESTART_S_H	src/sm/restart_s.h	31;"	d
RESULT_COMPARISON_FILES	src/common/tests/Makefile	/^RESULT_COMPARISON_FILES = \\$/;"	m
RESULT_COMPARISON_FILES	src/fc/tests/Makefile	/^RESULT_COMPARISON_FILES = stats2-out \\$/;"	m
RESULT_COMPARISON_FILES	src/sm/tests/Makefile	/^RESULT_COMPARISON_FILES = \\$/;"	m
RESULT_COMPARISON_FILES	src/sthread/tests/Makefile	/^RESULT_COMPARISON_FILES = thread3-out$/;"	m
RETURN	src/fc/w_debug.h	157;"	d
RETURN	src/fc/w_debug.h	169;"	d
RETURN	src/fc/w_debug.h	170;"	d
RETURN_RC	src/sm/pin.cpp	72;"	d	file:
RID_T	src/sm/sm_s.h	158;"	d
RLIMIT_AS	src/fc/w_rusage.h	85;"	d
RLIMIT_CORE	src/fc/w_rusage.h	82;"	d
RLIMIT_CPU	src/fc/w_rusage.h	78;"	d
RLIMIT_DATA	src/fc/w_rusage.h	80;"	d
RLIMIT_FSIZE	src/fc/w_rusage.h	79;"	d
RLIMIT_NOFILE	src/fc/w_rusage.h	83;"	d
RLIMIT_STACK	src/fc/w_rusage.h	81;"	d
RLIMIT_VMEM	src/fc/w_rusage.h	84;"	d
RLIM_INFINITY	src/fc/w_rusage.h	89;"	d
RLIM_NLIMITS	src/fc/w_rusage.h	87;"	d
RMM	Makefile	/^RMM = rm$/;"	m
RMM	config/Makefile	/^RMM = rm$/;"	m
RMM	src/Makefile	/^RMM = rm$/;"	m
RMM	src/atomic_ops/Makefile	/^RMM = rm$/;"	m
RMM	src/atomic_ops/asm_linkage/Makefile	/^RMM = rm$/;"	m
RMM	src/atomic_ops/asm_linkage/usr/Makefile	/^RMM = rm$/;"	m
RMM	src/atomic_ops/asm_linkage/usr/src/Makefile	/^RMM = rm$/;"	m
RMM	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^RMM = rm$/;"	m
RMM	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^RMM = rm$/;"	m
RMM	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^RMM = rm$/;"	m
RMM	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^RMM = rm$/;"	m
RMM	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^RMM = rm$/;"	m
RMM	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^RMM = rm$/;"	m
RMM	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^RMM = rm$/;"	m
RMM	src/atomic_ops/atomic_ops/Makefile	/^RMM = rm$/;"	m
RMM	src/atomic_ops/atomic_ops/amd64/Makefile	/^RMM = rm$/;"	m
RMM	src/atomic_ops/atomic_ops/i386/Makefile	/^RMM = rm$/;"	m
RMM	src/atomic_ops/atomic_ops/sparc/Makefile	/^RMM = rm$/;"	m
RMM	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^RMM = rm$/;"	m
RMM	src/atomic_ops/ia32/Makefile	/^RMM = rm$/;"	m
RMM	src/atomic_ops/ia32/sys/Makefile	/^RMM = rm$/;"	m
RMM	src/atomic_ops/intel/Makefile	/^RMM = rm$/;"	m
RMM	src/atomic_ops/intel/ia32/Makefile	/^RMM = rm$/;"	m
RMM	src/atomic_ops/intel/ia32/sys/Makefile	/^RMM = rm$/;"	m
RMM	src/atomic_ops/intel/sys/Makefile	/^RMM = rm$/;"	m
RMM	src/atomic_ops/sparc/Makefile	/^RMM = rm$/;"	m
RMM	src/atomic_ops/sparc/sys/Makefile	/^RMM = rm$/;"	m
RMM	src/common/Makefile	/^RMM = rm$/;"	m
RMM	src/common/tests/Makefile	/^RMM = rm$/;"	m
RMM	src/fc/Makefile	/^RMM = rm$/;"	m
RMM	src/fc/tests/Makefile	/^RMM = rm$/;"	m
RMM	src/sm/Makefile	/^RMM = rm$/;"	m
RMM	src/sm/smsh/Makefile	/^RMM = rm$/;"	m
RMM	src/sm/smsh/lib/Makefile	/^RMM = rm$/;"	m
RMM	src/sm/smsh/scripts/Makefile	/^RMM = rm$/;"	m
RMM	src/sm/tests/Makefile	/^RMM = rm$/;"	m
RMM	src/sthread/Makefile	/^RMM = rm$/;"	m
RMM	src/sthread/tests/Makefile	/^RMM = rm$/;"	m
RMM	tools/Makefile	/^RMM = rm$/;"	m
RODATA	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/asm_linkage.h	60;"	d
RODATA	src/atomic_ops/sparc/sys/asm_linkage.h	60;"	d
RSTOR_XMM_EPILOG	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	122;"	d
RSTOR_XMM_EPILOG	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	133;"	d
RSTOR_XMM_EPILOG	src/atomic_ops/ia32/sys/asm_linkage.h	122;"	d
RSTOR_XMM_EPILOG	src/atomic_ops/ia32/sys/asm_linkage.h	133;"	d
RSTOR_XMM_EPILOG	src/atomic_ops/intel/ia32/sys/asm_linkage.h	122;"	d
RSTOR_XMM_EPILOG	src/atomic_ops/intel/ia32/sys/asm_linkage.h	133;"	d
RTENTRY	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	217;"	d
RTENTRY	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/asm_linkage.h	171;"	d
RTENTRY	src/atomic_ops/ia32/sys/asm_linkage.h	217;"	d
RTENTRY	src/atomic_ops/intel/ia32/sys/asm_linkage.h	217;"	d
RTENTRY	src/atomic_ops/sparc/sys/asm_linkage.h	171;"	d
RTMCOUNT	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	173;"	d
RTMCOUNT	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/asm_linkage.h	125;"	d
RTMCOUNT	src/atomic_ops/ia32/sys/asm_linkage.h	173;"	d
RTMCOUNT	src/atomic_ops/intel/ia32/sys/asm_linkage.h	173;"	d
RTMCOUNT	src/atomic_ops/sparc/sys/asm_linkage.h	125;"	d
RTREE_C	src/sm/rtree.cpp	58;"	d	file:
RTREE_H	src/sm/rtree.h	31;"	d
RTREE_H	src/sm/sm_int_2.h	61;"	d
RTREE_H	src/sm/sm_int_2.h	68;"	d
RTREE_P_H	src/sm/rtree_p.h	31;"	d
RUNTIMEMAX	src/sthread/tests/pthread_test.cpp	84;"	d	file:
RUN_TEST1	src/common/tests/latch1.cpp	46;"	d	file:
RUN_TEST2	src/common/tests/latch1.cpp	47;"	d	file:
RUN_TEST3	src/common/tests/latch1.cpp	48;"	d	file:
RUSAGE_CHILDREN	src/fc/w_rusage.h	99;"	d
RUSAGE_SELF	src/fc/w_rusage.h	98;"	d
RemoteMsgPongTimes	src/sthread/tests/thread1.cpp	51;"	d	file:
RemoveFirst	src/fc/w_heap.h	/^T Heap<T, Cmp>::RemoveFirst()$/;"	f	class:Heap
RemoveN	src/fc/w_heap.h	/^T Heap<T, Cmp>::RemoveN(int i)$/;"	f	class:Heap
Removed	src/sm/tests/htab.cpp	/^    typedef enum { Zero, Init, Inserted, Evicted, Returned, Removed } Status;$/;"	e	enum:htab_tester::__anon97	file:
ReplaceAllHeadsWithLargest	src/fc/tests/heap.cpp	/^void ReplaceAllHeadsWithLargest(CharHeap& heap)$/;"	f
ReplaceAllHeadsWithSmallest	src/fc/tests/heap.cpp	/^void ReplaceAllHeadsWithSmallest(CharHeap& heap)$/;"	f
ReplacedFirst	src/fc/w_heap.h	/^inline void Heap<T, Cmp>::ReplacedFirst()$/;"	f	class:Heap
Returned	src/sm/tests/htab.cpp	/^    typedef enum { Zero, Init, Inserted, Evicted, Returned, Removed } Status;$/;"	e	enum:htab_tester::__anon97	file:
RightChild	src/fc/w_heap.h	/^inline int Heap<T, Cmp>::RightChild(int i) const$/;"	f	class:Heap
RightSibling	src/fc/w_heap.h	/^inline int Heap<T, Cmp>::RightSibling(int i) const$/;"	f	class:Heap
RunHeap	src/sm/newsort.cpp	/^typedef Heap<tape_t *, run_mgr> RunHeap;$/;"	t	file:
S	src/common/tests/mapp.cpp	/^typedef std::set<snum_t>  S;$/;"	t	file:
S	src/sm/tests/htab.cpp	/^    bf_core_m::Tstats S;$/;"	m	class:htab_tester	file:
SA	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/stack.h	114;"	d
SA	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/stack.h	123;"	d
SA	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h	122;"	d
SA	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h	133;"	d
SA	src/atomic_ops/ia32/sys/stack.h	114;"	d
SA	src/atomic_ops/ia32/sys/stack.h	123;"	d
SA	src/atomic_ops/intel/ia32/sys/stack.h	114;"	d
SA	src/atomic_ops/intel/ia32/sys/stack.h	123;"	d
SA	src/atomic_ops/sparc/sys/stack.h	122;"	d
SA	src/atomic_ops/sparc/sys/stack.h	133;"	d
SA32	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/stack.h	67;"	d
SA32	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h	76;"	d
SA32	src/atomic_ops/ia32/sys/stack.h	67;"	d
SA32	src/atomic_ops/intel/ia32/sys/stack.h	67;"	d
SA32	src/atomic_ops/sparc/sys/stack.h	76;"	d
SA64	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/stack.h	107;"	d
SA64	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h	110;"	d
SA64	src/atomic_ops/ia32/sys/stack.h	107;"	d
SA64	src/atomic_ops/intel/ia32/sys/stack.h	107;"	d
SA64	src/atomic_ops/sparc/sys/stack.h	110;"	d
SAFE_IO	src/sthread/tests/pthread_test.cpp	69;"	d	file:
SAFE_IO	src/sthread/tests/thread3.cpp	55;"	d	file:
SAFE_IO	src/sthread/tests/thread4.cpp	54;"	d	file:
SAVE_XMM_PROLOG	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	118;"	d
SAVE_XMM_PROLOG	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	127;"	d
SAVE_XMM_PROLOG	src/atomic_ops/ia32/sys/asm_linkage.h	118;"	d
SAVE_XMM_PROLOG	src/atomic_ops/ia32/sys/asm_linkage.h	127;"	d
SAVE_XMM_PROLOG	src/atomic_ops/intel/ia32/sys/asm_linkage.h	118;"	d
SAVE_XMM_PROLOG	src/atomic_ops/intel/ia32/sys/asm_linkage.h	127;"	d
SCAN_C	src/sm/scan.cpp	58;"	d	file:
SCAN_H	src/sm/scan.h	54;"	d
SCAN_METHOD_PROLOGUE	src/sm/prologue.h	95;"	d
SCAN_METHOD_PROLOGUE1	src/sm/scan.cpp	92;"	d	file:
SDESC_H	src/sm/sdesc.h	54;"	d
SDISK_H	src/sthread/sdisk.h	54;"	d
SDISK_UNIX_H	src/sthread/sdisk_unix.h	31;"	d
SECTOR_SIZE	src/sthread/tests/ioperf.cpp	53;"	d	file:
SEE	src/common/regcomp.cpp	124;"	d	file:
SEEK_AT_CUR	src/sthread/sdisk.h	/^        SEEK_AT_CUR=1,        \/\/ from current position$/;"	e	enum:sdisk_base_t::__anon146
SEEK_AT_CUR	src/sthread/sthread.h	/^    SEEK_AT_CUR = sdisk_base_t::SEEK_AT_CUR,$/;"	e	enum:sthread_base_t::__anon138
SEEK_AT_END	src/sthread/sdisk.h	/^        SEEK_AT_END=2        \/\/ from end-of-file $/;"	e	enum:sdisk_base_t::__anon146
SEEK_AT_END	src/sthread/sthread.h	/^    SEEK_AT_END = sdisk_base_t::SEEK_AT_END$/;"	e	enum:sthread_base_t::__anon138
SEEK_AT_SET	src/sthread/sdisk.h	/^        SEEK_AT_SET=0,        \/\/ absolute$/;"	e	enum:sdisk_base_t::__anon146
SEEK_AT_SET	src/sthread/sthread.h	/^    SEEK_AT_SET = sdisk_base_t::SEEK_AT_SET,$/;"	e	enum:sthread_base_t::__anon138
SEETWO	src/common/regcomp.cpp	125;"	d	file:
SEGMENT_SIZE	src/sm/log_core.h	/^    enum { SEGMENT_SIZE= 128 * BLOCK_SIZE };$/;"	e	enum:log_core::__anon83
SEGMENT_SIZE	src/sm/log_core.h	/^    enum { SEGMENT_SIZE= 256 * BLOCK_SIZE };$/;"	e	enum:log_core::__anon84
SET0	src/common/regexec.cpp	104;"	d	file:
SET0	src/common/regexec.cpp	125;"	d	file:
SET0	src/common/regexec.cpp	78;"	d	file:
SET1	src/common/regexec.cpp	105;"	d	file:
SET1	src/common/regexec.cpp	126;"	d	file:
SET1	src/common/regexec.cpp	79;"	d	file:
SETERROR	src/common/regcomp.cpp	132;"	d	file:
SETUP	src/common/regexec.cpp	112;"	d	file:
SETUP	src/common/regexec.cpp	135;"	d	file:
SETUP	src/common/regexec.cpp	86;"	d	file:
SET_MAKE	Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	config/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/atomic_ops/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/atomic_ops/asm_linkage/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/atomic_ops/asm_linkage/usr/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/atomic_ops/asm_linkage/usr/src/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/atomic_ops/atomic_ops/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/atomic_ops/atomic_ops/amd64/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/atomic_ops/atomic_ops/i386/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/atomic_ops/atomic_ops/sparc/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/atomic_ops/ia32/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/atomic_ops/ia32/sys/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/atomic_ops/intel/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/atomic_ops/intel/ia32/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/atomic_ops/intel/ia32/sys/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/atomic_ops/intel/sys/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/atomic_ops/sparc/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/atomic_ops/sparc/sys/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/common/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/common/tests/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/fc/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/fc/tests/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/sm/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/sm/smsh/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/sm/smsh/lib/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/sm/smsh/scripts/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/sm/tests/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/sthread/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/sthread/tests/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	tools/Makefile	/^SET_MAKE = $/;"	m
SET_SIZE	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	286;"	d
SET_SIZE	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/asm_linkage.h	240;"	d
SET_SIZE	src/atomic_ops/ia32/sys/asm_linkage.h	286;"	d
SET_SIZE	src/atomic_ops/intel/ia32/sys/asm_linkage.h	286;"	d
SET_SIZE	src/atomic_ops/sparc/sys/asm_linkage.h	240;"	d
SET_STH_STATS	src/sthread/sthread_stats.h	99;"	d
SET_TSTAT	src/sm/smthread.h	540;"	d
SET_TSTAT_SORT	src/sm/newsort.cpp	175;"	d	file:
SET_TSTAT_SORT	src/sm/newsort.cpp	182;"	d	file:
SET_TSTAT_SORT	src/sm/sort.cpp	104;"	d	file:
SET_TSTAT_SORT	src/sm/sort.cpp	97;"	d	file:
SH	src/common/basics.h	/^	static const lock_mode_t SH = w_base_t::SH;$/;"	m	namespace:locking
SH	src/fc/w_base.h	/^        SH,            \/* share (read)             *\/$/;"	e	enum:w_base_t::lock_mode_t
SHELL	Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	config/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	src/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	src/atomic_ops/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	src/atomic_ops/asm_linkage/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	src/atomic_ops/asm_linkage/usr/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	src/atomic_ops/asm_linkage/usr/src/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	src/atomic_ops/atomic_ops/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	src/atomic_ops/atomic_ops/amd64/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	src/atomic_ops/atomic_ops/i386/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	src/atomic_ops/atomic_ops/sparc/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	src/atomic_ops/ia32/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	src/atomic_ops/ia32/sys/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	src/atomic_ops/intel/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	src/atomic_ops/intel/ia32/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	src/atomic_ops/intel/ia32/sys/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	src/atomic_ops/intel/sys/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	src/atomic_ops/sparc/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	src/atomic_ops/sparc/sys/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	src/common/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	src/common/tests/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	src/fc/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	src/fc/tests/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	src/sm/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	src/sm/smsh/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	src/sm/smsh/lib/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	src/sm/smsh/scripts/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	src/sm/tests/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	src/sthread/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	src/sthread/tests/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	tools/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL_C	src/sm/smsh/shell.cpp	34;"	d	file:
SHELL_H	src/sm/smsh/shell.h	31;"	d
SHORE_ATOMICS_H	src/atomic_ops/atomic_ops.h	2;"	d
SHOWBASE	src/fc/tests/io.cpp	40;"	d	file:
SIX	src/common/basics.h	/^	static const lock_mode_t SIX = w_base_t::SIX;$/;"	m	namespace:locking
SIX	src/fc/w_base.h	/^        SIX,        \/* share with intention exclusive    *\/$/;"	e	enum:w_base_t::lock_mode_t
SIZEOF_PTHREAD_T	config/shore-config.h	413;"	d
SIZEOF_TOGGLE	src/sm/prologue.h	/^    enum        { SIZEOF_TOGGLE=32 };$/;"	e	enum:prologue_rc_t::__anon23
SIZE_INFO	src/sm/smsh/sm_sizeof.cpp	53;"	d	file:
SLOT_ACTIVE_COUNT	src/sm/log_core.cpp	/^enum { SLOT_ACTIVE_COUNT=1 }; \/\/charlie added change SLOT_ACTIVE_COUNT from 5 to 1$/;"	e	enum:__anon91	file:
SLOT_ARRAY_SIZE	src/sm/log_core.cpp	/^enum { SLOT_ARRAY_SIZE=256 };$/;"	e	enum:__anon90	file:
SLOT_AVAILABLE	src/sm/log_core.cpp	/^enum { SLOT_AVAILABLE=0,$/;"	e	enum:__anon92	file:
SLOT_COUNT	src/sm/bf_htab.h	/^    static const int SLOT_COUNT = 3;$/;"	m	class:bf_core_m::htab
SLOT_FINISHED	src/sm/log_core.cpp	/^	SLOT_FINISHED=-4$/;"	e	enum:__anon92	file:
SLOT_PENDING	src/sm/log_core.cpp	/^	SLOT_PENDING=-2,$/;"	e	enum:__anon92	file:
SLOT_UNUSED	src/sm/log_core.cpp	/^	SLOT_UNUSED=-1,$/;"	e	enum:__anon92	file:
SMFILE_C	src/sm/smfile.cpp	58;"	d	file:
SMINDEX_C	src/sm/smindex.cpp	58;"	d	file:
SMSTATS_H	src/sm/smstats.h	31;"	d
SMTHREAD_C	src/sm/smthread.cpp	58;"	d	file:
SMTHREAD_C	src/sm/vtable_smthread.cpp	34;"	d	file:
SMTHREAD_H	src/sm/smthread.h	54;"	d
SM_BASE_H	src/sm/sm_base.h	54;"	d
SM_C	src/sm/sm.cpp	58;"	d	file:
SM_DU_STATS_C	src/sm/sm_du_stats.cpp	34;"	d	file:
SM_DU_STATS_H	src/sm/sm_du_stats.h	31;"	d
SM_ESCALATION_H	src/sm/sm_escalation.h	31;"	d
SM_EXTENTSIZE	src/sm/sm_base.h	97;"	d
SM_EXTENTSIZE_IN_BYTES	src/sm/pmap.h	107;"	d
SM_H	src/sm/sm.h	54;"	d
SM_INT_0_H	src/sm/sm_int_0.h	31;"	d
SM_INT_1_H	src/sm/sm_int_1.h	31;"	d
SM_INT_2_H	src/sm/sm_int_2.h	31;"	d
SM_INT_3_H	src/sm/sm_int_3.h	31;"	d
SM_INT_4_H	src/sm/sm_int_4.h	31;"	d
SM_IO_H	src/sm/sm_io.h	54;"	d
SM_LEVEL	src/common/sm_vas.h	108;"	d
SM_LEVEL	src/sm/rtree.cpp	2784;"	d	file:
SM_LEVEL	src/sm/sm_int_0.h	38;"	d
SM_LEVEL	src/sm/sm_int_1.h	38;"	d
SM_LEVEL	src/sm/sm_int_2.h	38;"	d
SM_LEVEL	src/sm/sm_int_3.h	38;"	d
SM_LEVEL	src/sm/sm_int_4.h	38;"	d
SM_LEVEL	src/sm/smsh/out_of_log_space.cpp	25;"	d	file:
SM_LEVEL	src/sm/tests/log_exceed.cpp	42;"	d	file:
SM_LEVEL	src/sm/xct.cpp	62;"	d	file:
SM_LOG_PARTITIONS	src/sm/sm_base.h	100;"	d
SM_LOG_WARN_EXCEED_PERCENT	src/sm/sm.cpp	105;"	d	file:
SM_PAGESIZE	config/shore-config.h	420;"	d
SM_PROLOGUE_RC	src/sm/prologue.h	76;"	d
SM_SOURCE	src/common/sm_vas.h	107;"	d
SM_SOURCE	src/fc/nbox.cpp	34;"	d	file:
SM_SOURCE	src/sm/bf.cpp	58;"	d	file:
SM_SOURCE	src/sm/bf_prefetch.cpp	57;"	d	file:
SM_SOURCE	src/sm/btcursor.cpp	57;"	d	file:
SM_SOURCE	src/sm/btree.cpp	57;"	d	file:
SM_SOURCE	src/sm/btree_bl.cpp	57;"	d	file:
SM_SOURCE	src/sm/btree_impl.cpp	57;"	d	file:
SM_SOURCE	src/sm/btree_p.cpp	57;"	d	file:
SM_SOURCE	src/sm/chkpt.cpp	58;"	d	file:
SM_SOURCE	src/sm/chkpt_serial.cpp	57;"	d	file:
SM_SOURCE	src/sm/common_templates.cpp	57;"	d	file:
SM_SOURCE	src/sm/crash.cpp	39;"	d	file:
SM_SOURCE	src/sm/device.cpp	57;"	d	file:
SM_SOURCE	src/sm/dir.cpp	57;"	d	file:
SM_SOURCE	src/sm/file.cpp	57;"	d	file:
SM_SOURCE	src/sm/histo.cpp	57;"	d	file:
SM_SOURCE	src/sm/keyed.cpp	57;"	d	file:
SM_SOURCE	src/sm/lexify.cpp	107;"	d	file:
SM_SOURCE	src/sm/lgrec.cpp	34;"	d	file:
SM_SOURCE	src/sm/lid.cpp	34;"	d	file:
SM_SOURCE	src/sm/lock.cpp	58;"	d	file:
SM_SOURCE	src/sm/lock_core.cpp	59;"	d	file:
SM_SOURCE	src/sm/log.cpp	57;"	d	file:
SM_SOURCE	src/sm/log_core.cpp	61;"	d	file:
SM_SOURCE	src/sm/logrec.cpp	57;"	d	file:
SM_SOURCE	src/sm/logstub.cpp	34;"	d	file:
SM_SOURCE	src/sm/newsort.cpp	57;"	d	file:
SM_SOURCE	src/sm/page.cpp	58;"	d	file:
SM_SOURCE	src/sm/partition.cpp	59;"	d	file:
SM_SOURCE	src/sm/pin.cpp	57;"	d	file:
SM_SOURCE	src/sm/pmap.cpp	34;"	d	file:
SM_SOURCE	src/sm/ranges_p.cpp	35;"	d	file:
SM_SOURCE	src/sm/restart.cpp	57;"	d	file:
SM_SOURCE	src/sm/rtree.cpp	57;"	d	file:
SM_SOURCE	src/sm/scan.cpp	57;"	d	file:
SM_SOURCE	src/sm/sm-no-inline.cpp	27;"	d	file:
SM_SOURCE	src/sm/sm.cpp	57;"	d	file:
SM_SOURCE	src/sm/sm_du_stats.cpp	46;"	d	file:
SM_SOURCE	src/sm/sm_io.cpp	57;"	d	file:
SM_SOURCE	src/sm/sm_s.cpp	57;"	d	file:
SM_SOURCE	src/sm/smfile.cpp	57;"	d	file:
SM_SOURCE	src/sm/smindex.cpp	57;"	d	file:
SM_SOURCE	src/sm/smsh/out_of_log_space.cpp	26;"	d	file:
SM_SOURCE	src/sm/smthread.cpp	57;"	d	file:
SM_SOURCE	src/sm/sort.cpp	57;"	d	file:
SM_SOURCE	src/sm/tests/htab.cpp	29;"	d	file:
SM_SOURCE	src/sm/tests/lock_cache_test.cpp	39;"	d	file:
SM_SOURCE	src/sm/tests/log_exceed.cpp	43;"	d	file:
SM_SOURCE	src/sm/vol.cpp	57;"	d	file:
SM_SOURCE	src/sm/vtable_sm.cpp	34;"	d	file:
SM_SOURCE	src/sm/vtable_smthread.cpp	33;"	d	file:
SM_SOURCE	src/sm/vtable_xct.cpp	34;"	d	file:
SM_SOURCE	src/sm/xct.cpp	58;"	d	file:
SM_SOURCE	src/sm/zkeyed.cpp	70;"	d	file:
SM_STATS_GENFILES_CPP	src/sm/Makefile	/^SM_STATS_GENFILES_CPP = \\$/;"	m
SM_STATS_GENFILES_H	src/sm/Makefile	/^SM_STATS_GENFILES_H = \\$/;"	m
SM_STATS_T_COLLECT_ENUM_GEN_H	src/sm/sm_stats_t_collect_enum_gen.h	2;"	d
SM_STATS_T_COLLECT_GEN_CPP	src/sm/sm_stats_t_collect_gen.cpp	2;"	d	file:
SM_STATS_T_DEC_GEN_CPP	src/sm/sm_stats_t_dec_gen.cpp	2;"	d	file:
SM_STATS_T_INC_GEN_CPP	src/sm/sm_stats_t_inc_gen.cpp	2;"	d	file:
SM_STATS_T_MSG_GEN_H	src/sm/sm_stats_t_msg_gen.h	2;"	d
SM_STATS_T_OUT_GEN_CPP	src/sm/sm_stats_t_out_gen.cpp	2;"	d	file:
SM_STATS_T_STRUCT_GEN_H	src/sm/sm_stats_t_struct_gen.h	2;"	d
SM_S_H	src/sm/sm_s.h	54;"	d
SM_VAS_H	src/common/sm_vas.h	31;"	d
SM_VOL_RLOCK	src/sm/sm.cpp	188;"	d	file:
SM_VOL_RLOCK	src/sm/sm.cpp	195;"	d	file:
SM_VOL_RLOCK	src/sm/smindex.cpp	375;"	d	file:
SM_VOL_RLOCK	src/sm/smindex.cpp	381;"	d	file:
SM_VOL_WLOCK	src/sm/sm.cpp	187;"	d	file:
SM_VOL_WLOCK	src/sm/sm.cpp	194;"	d	file:
SM_VOL_WLOCK	src/sm/smindex.cpp	374;"	d	file:
SM_VOL_WLOCK	src/sm/smindex.cpp	380;"	d	file:
SM_VTABLE_ENUM_H	src/sm/sm_vtable_enum.h	31;"	d
SNAMES	src/common/regexec.cpp	120;"	d	file:
SNAMES	src/common/regexec.cpp	97;"	d	file:
SOP	src/common/regex2.h	98;"	d
SORT_C	src/sm/sort.cpp	58;"	d	file:
SORT_FUNCS_H	src/sm/smsh/sort_funcs.h	31;"	d
SORT_H	src/sm/sort.h	54;"	d
SORT_S_H	src/sm/sort_s.h	54;"	d
SOURCES	Makefile	/^SOURCES =$/;"	m
SOURCES	config/Makefile	/^SOURCES =$/;"	m
SOURCES	src/Makefile	/^SOURCES =$/;"	m
SOURCES	src/atomic_ops/Makefile	/^SOURCES = $(libatomic_ops_a_SOURCES)$/;"	m
SOURCES	src/atomic_ops/asm_linkage/Makefile	/^SOURCES =$/;"	m
SOURCES	src/atomic_ops/asm_linkage/usr/Makefile	/^SOURCES =$/;"	m
SOURCES	src/atomic_ops/asm_linkage/usr/src/Makefile	/^SOURCES =$/;"	m
SOURCES	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^SOURCES =$/;"	m
SOURCES	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^SOURCES =$/;"	m
SOURCES	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^SOURCES =$/;"	m
SOURCES	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^SOURCES =$/;"	m
SOURCES	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^SOURCES =$/;"	m
SOURCES	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^SOURCES =$/;"	m
SOURCES	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^SOURCES =$/;"	m
SOURCES	src/atomic_ops/atomic_ops/Makefile	/^SOURCES =$/;"	m
SOURCES	src/atomic_ops/atomic_ops/amd64/Makefile	/^SOURCES =$/;"	m
SOURCES	src/atomic_ops/atomic_ops/i386/Makefile	/^SOURCES =$/;"	m
SOURCES	src/atomic_ops/atomic_ops/sparc/Makefile	/^SOURCES =$/;"	m
SOURCES	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^SOURCES =$/;"	m
SOURCES	src/atomic_ops/ia32/Makefile	/^SOURCES =$/;"	m
SOURCES	src/atomic_ops/ia32/sys/Makefile	/^SOURCES =$/;"	m
SOURCES	src/atomic_ops/intel/Makefile	/^SOURCES =$/;"	m
SOURCES	src/atomic_ops/intel/ia32/Makefile	/^SOURCES =$/;"	m
SOURCES	src/atomic_ops/intel/ia32/sys/Makefile	/^SOURCES =$/;"	m
SOURCES	src/atomic_ops/intel/sys/Makefile	/^SOURCES =$/;"	m
SOURCES	src/atomic_ops/sparc/Makefile	/^SOURCES =$/;"	m
SOURCES	src/atomic_ops/sparc/sys/Makefile	/^SOURCES =$/;"	m
SOURCES	src/common/Makefile	/^SOURCES = $(libcommon_a_SOURCES)$/;"	m
SOURCES	src/common/tests/Makefile	/^SOURCES = $(bitmap_SOURCES) $(errcodes_SOURCES) $(kvl_SOURCES) \\$/;"	m
SOURCES	src/fc/Makefile	/^SOURCES = $(libfc_a_SOURCES)$/;"	m
SOURCES	src/fc/tests/Makefile	/^SOURCES = $(basic_sizes_SOURCES) $(bitvector_SOURCES) $(box_SOURCES) \\$/;"	m
SOURCES	src/sm/Makefile	/^SOURCES = $(libsm_a_SOURCES)$/;"	m
SOURCES	src/sm/smsh/Makefile	/^SOURCES = $(random_kick_SOURCES) $(smsh_SOURCES)$/;"	m
SOURCES	src/sm/smsh/lib/Makefile	/^SOURCES =$/;"	m
SOURCES	src/sm/smsh/scripts/Makefile	/^SOURCES =$/;"	m
SOURCES	src/sm/tests/Makefile	/^SOURCES = $(create_rec_SOURCES) $(file_scan_SOURCES) \\$/;"	m
SOURCES	src/sthread/Makefile	/^SOURCES = $(libsthread_a_SOURCES)$/;"	m
SOURCES	src/sthread/tests/Makefile	/^SOURCES = $(except_SOURCES) $(ioperf_SOURCES) $(mmap_SOURCES) \\$/;"	m
SOURCES	tools/Makefile	/^SOURCES =$/;"	m
SP	src/common/regex_engine.cpp	102;"	d	file:
SP	src/common/regex_engine.cpp	106;"	d	file:
SPATIAL_CMP_FUNC	src/sm/rtree.cpp	/^typedef int(*SPATIAL_CMP_FUNC)(const nbox_t&, const nbox_t&, nbox_t::sob_cmp_t);$/;"	t	file:
SPECIALIZE_CS	src/sthread/sthread.h	1069;"	d
SPLOG	src/fc/w_temp_alloc.cpp	45;"	d	file:
SPLOG	src/fc/w_temp_alloc.cpp	47;"	d	file:
SQL_POOL_DEBUG	src/fc/w_temp_alloc.cpp	42;"	d	file:
SQL_POOL_MMAP_LIMIT	src/fc/w_temp_alloc.cpp	39;"	d	file:
SRWLOCK_H	src/sthread/srwlock.h	75;"	d
SSH_CHECK_STACK	src/sm/smsh/shell.h	63;"	d
SSH_COMMAND_LINE	src/sm/smsh/smsh.cpp	/^        SSH_COMMAND_LINE,$/;"	e	enum:__anon76	file:
SSH_ERROR	src/sm/smsh/smsh.h	37;"	d
SSH_ERROR_H	src/sm/smsh/smsh_error.h	31;"	d
SSH_FAILURE	src/sm/smsh/smsh.cpp	/^        SSH_FAILURE,$/;"	e	enum:__anon76	file:
SSH_H	src/sm/smsh/smsh.h	31;"	d
SSH_MAX_ERROR	src/sm/smsh/smsh.cpp	/^        SSH_MAX_ERROR};$/;"	e	enum:__anon76	file:
SSH_MIN_ERROR	src/sm/smsh/smsh.cpp	/^enum {        SSH_MIN_ERROR = 50000,$/;"	e	enum:__anon76	file:
SSH_OS	src/sm/smsh/smsh.cpp	/^        SSH_OS,$/;"	e	enum:__anon76	file:
SSH_VERBOSE	src/sm/smsh/shell.h	65;"	d
SSM	src/sm/sm.cpp	/^ss_m* smlevel_4::SSM = 0;$/;"	m	class:smlevel_4	file:
SSM	src/sm/sm_int_4.h	/^    static ss_m*    SSM;    \/\/ we will change to lower case later$/;"	m	class:smlevel_4
SSMTEST	src/sm/crash.h	66;"	d
SSMTEST	src/sm/crash.h	71;"	d
STACK_ALIGN	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/stack.h	111;"	d
STACK_ALIGN	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/stack.h	120;"	d
STACK_ALIGN	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h	119;"	d
STACK_ALIGN	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h	130;"	d
STACK_ALIGN	src/atomic_ops/ia32/sys/stack.h	111;"	d
STACK_ALIGN	src/atomic_ops/ia32/sys/stack.h	120;"	d
STACK_ALIGN	src/atomic_ops/intel/ia32/sys/stack.h	111;"	d
STACK_ALIGN	src/atomic_ops/intel/ia32/sys/stack.h	120;"	d
STACK_ALIGN	src/atomic_ops/sparc/sys/stack.h	119;"	d
STACK_ALIGN	src/atomic_ops/sparc/sys/stack.h	130;"	d
STACK_ALIGN32	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/stack.h	64;"	d
STACK_ALIGN32	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h	74;"	d
STACK_ALIGN32	src/atomic_ops/ia32/sys/stack.h	64;"	d
STACK_ALIGN32	src/atomic_ops/intel/ia32/sys/stack.h	64;"	d
STACK_ALIGN32	src/atomic_ops/sparc/sys/stack.h	74;"	d
STACK_ALIGN64	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/stack.h	104;"	d
STACK_ALIGN64	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h	108;"	d
STACK_ALIGN64	src/atomic_ops/ia32/sys/stack.h	104;"	d
STACK_ALIGN64	src/atomic_ops/intel/ia32/sys/stack.h	104;"	d
STACK_ALIGN64	src/atomic_ops/sparc/sys/stack.h	108;"	d
STACK_BIAS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/stack.h	113;"	d
STACK_BIAS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/stack.h	122;"	d
STACK_BIAS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h	121;"	d
STACK_BIAS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h	132;"	d
STACK_BIAS	src/atomic_ops/ia32/sys/stack.h	113;"	d
STACK_BIAS	src/atomic_ops/ia32/sys/stack.h	122;"	d
STACK_BIAS	src/atomic_ops/intel/ia32/sys/stack.h	113;"	d
STACK_BIAS	src/atomic_ops/intel/ia32/sys/stack.h	122;"	d
STACK_BIAS	src/atomic_ops/sparc/sys/stack.h	121;"	d
STACK_BIAS	src/atomic_ops/sparc/sys/stack.h	132;"	d
STACK_BIAS32	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/stack.h	66;"	d
STACK_BIAS32	src/atomic_ops/ia32/sys/stack.h	66;"	d
STACK_BIAS32	src/atomic_ops/intel/ia32/sys/stack.h	66;"	d
STACK_BIAS64	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/stack.h	106;"	d
STACK_BIAS64	src/atomic_ops/ia32/sys/stack.h	106;"	d
STACK_BIAS64	src/atomic_ops/intel/ia32/sys/stack.h	106;"	d
STACK_ENTRY_ALIGN	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/stack.h	112;"	d
STACK_ENTRY_ALIGN	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/stack.h	121;"	d
STACK_ENTRY_ALIGN	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h	120;"	d
STACK_ENTRY_ALIGN	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h	131;"	d
STACK_ENTRY_ALIGN	src/atomic_ops/ia32/sys/stack.h	112;"	d
STACK_ENTRY_ALIGN	src/atomic_ops/ia32/sys/stack.h	121;"	d
STACK_ENTRY_ALIGN	src/atomic_ops/intel/ia32/sys/stack.h	112;"	d
STACK_ENTRY_ALIGN	src/atomic_ops/intel/ia32/sys/stack.h	121;"	d
STACK_ENTRY_ALIGN	src/atomic_ops/sparc/sys/stack.h	120;"	d
STACK_ENTRY_ALIGN	src/atomic_ops/sparc/sys/stack.h	131;"	d
STACK_ENTRY_ALIGN32	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/stack.h	65;"	d
STACK_ENTRY_ALIGN32	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h	75;"	d
STACK_ENTRY_ALIGN32	src/atomic_ops/ia32/sys/stack.h	65;"	d
STACK_ENTRY_ALIGN32	src/atomic_ops/intel/ia32/sys/stack.h	65;"	d
STACK_ENTRY_ALIGN32	src/atomic_ops/sparc/sys/stack.h	75;"	d
STACK_ENTRY_ALIGN64	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/stack.h	105;"	d
STACK_ENTRY_ALIGN64	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h	109;"	d
STACK_ENTRY_ALIGN64	src/atomic_ops/ia32/sys/stack.h	105;"	d
STACK_ENTRY_ALIGN64	src/atomic_ops/intel/ia32/sys/stack.h	105;"	d
STACK_ENTRY_ALIGN64	src/atomic_ops/sparc/sys/stack.h	109;"	d
STACK_GROWTH_DOWN	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/stack.h	156;"	d
STACK_GROWTH_DOWN	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h	69;"	d
STACK_GROWTH_DOWN	src/atomic_ops/ia32/sys/stack.h	156;"	d
STACK_GROWTH_DOWN	src/atomic_ops/intel/ia32/sys/stack.h	156;"	d
STACK_GROWTH_DOWN	src/atomic_ops/sparc/sys/stack.h	69;"	d
STACK_RESERVE	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/stack.h	115;"	d
STACK_RESERVE	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/stack.h	124;"	d
STACK_RESERVE	src/atomic_ops/ia32/sys/stack.h	115;"	d
STACK_RESERVE	src/atomic_ops/ia32/sys/stack.h	124;"	d
STACK_RESERVE	src/atomic_ops/intel/ia32/sys/stack.h	115;"	d
STACK_RESERVE	src/atomic_ops/intel/ia32/sys/stack.h	124;"	d
STACK_RESERVE32	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/stack.h	68;"	d
STACK_RESERVE32	src/atomic_ops/ia32/sys/stack.h	68;"	d
STACK_RESERVE32	src/atomic_ops/intel/ia32/sys/stack.h	68;"	d
STACK_RESERVE64	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/stack.h	108;"	d
STACK_RESERVE64	src/atomic_ops/ia32/sys/stack.h	108;"	d
STACK_RESERVE64	src/atomic_ops/intel/ia32/sys/stack.h	108;"	d
STACK_V9BIAS64	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h	134;"	d
STACK_V9BIAS64	src/atomic_ops/sparc/sys/stack.h	134;"	d
START	src/fc/tests/cuckoo.cpp	230;"	d	file:
START	src/sm/tests/file_scan_many.cpp	485;"	d	file:
START	src/sm/tests/htab.cpp	314;"	d	file:
STATESETUP	src/common/regexec.cpp	110;"	d	file:
STATESETUP	src/common/regexec.cpp	131;"	d	file:
STATESETUP	src/common/regexec.cpp	84;"	d	file:
STATETEARDOWN	src/common/regexec.cpp	111;"	d	file:
STATETEARDOWN	src/common/regexec.cpp	134;"	d	file:
STATETEARDOWN	src/common/regexec.cpp	85;"	d	file:
STATEVARS	src/common/regex_engine.cpp	/^    STATEVARS;$/;"	m	struct:match	file:
STATEVARS	src/common/regexec.cpp	109;"	d	file:
STATEVARS	src/common/regexec.cpp	130;"	d	file:
STATEVARS	src/common/regexec.cpp	83;"	d	file:
STCORE_PTHREAD_H	src/sthread/stcore_pthread.h	31;"	d
STDC_HEADERS	config/shore-config.h	431;"	d
STHREAD_GENFILES_CPP	src/sthread/Makefile	/^STHREAD_GENFILES_CPP = \\$/;"	m
STHREAD_GENFILES_H	src/sthread/Makefile	/^STHREAD_GENFILES_H = \\$/;"	m
STHREAD_H	src/sthread/sthread.h	87;"	d
STHREAD_STATS_COLLECT_ENUM_GEN_H	src/sthread/sthread_stats_collect_enum_gen.h	2;"	d
STHREAD_STATS_COLLECT_GEN_CPP	src/sthread/sthread_stats_collect_gen.cpp	2;"	d	file:
STHREAD_STATS_DEC_GEN_CPP	src/sthread/sthread_stats_dec_gen.cpp	2;"	d	file:
STHREAD_STATS_H	src/sthread/sthread_stats.h	54;"	d
STHREAD_STATS_INC_GEN_CPP	src/sthread/sthread_stats_inc_gen.cpp	2;"	d	file:
STHREAD_STATS_MSG_GEN_H	src/sthread/sthread_stats_msg_gen.h	2;"	d
STHREAD_STATS_OUT_GEN_CPP	src/sthread/sthread_stats_out_gen.cpp	2;"	d	file:
STHREAD_STATS_STRUCT_GEN_H	src/sthread/sthread_stats_struct_gen.h	2;"	d
STHREAD_VTABLE_ENUM_H	src/sthread/sthread_vtable_enum.h	31;"	d
STH_STATS	src/sthread/sthread_stats.h	97;"	d
STID_T	src/common/stid_t.h	58;"	d
STID_T_H	src/common/stid_t.h	31;"	d
STIME_H	src/fc/stime.h	31;"	d
STORE_LATCH_MGR_H	src/common/store_latch_manager.h	54;"	d
STR	src/fc/cpu_info.cpp	110;"	d	file:
STR	src/fc/tls.cpp	31;"	d	file:
STR2	src/fc/cpu_info.cpp	111;"	d	file:
STR2	src/fc/tls.cpp	32;"	d	file:
STRICT_F8_ALIGNMENT	src/sm/lexify.cpp	138;"	d	file:
STRICT_F8_ALIGNMENT	src/sm/lexify.cpp	141;"	d	file:
STRICT_F8_ALIGNMENT	src/sm/newsort.cpp	106;"	d	file:
STRICT_INT8_ALIGNMENT	src/sm/lexify.cpp	137;"	d	file:
STRICT_INT8_ALIGNMENT	src/sm/newsort.cpp	105;"	d	file:
STRINGMAX	src/sm/smsh/shell2.cpp	275;"	d	file:
STRINGMAX	src/sm/smsh/shell2.cpp	45;"	d	file:
STRINGMAX	src/sm/smsh/sort_funcs3.cpp	391;"	d	file:
STRINGMAX	src/sm/smsh/sort_funcs3.cpp	596;"	d	file:
STRINGMAX	src/sm/smsh/sort_funcs4.cpp	276;"	d	file:
STRIP	Makefile	/^STRIP = $/;"	m
STRIP	config/Makefile	/^STRIP = $/;"	m
STRIP	src/Makefile	/^STRIP = $/;"	m
STRIP	src/atomic_ops/Makefile	/^STRIP = $/;"	m
STRIP	src/atomic_ops/asm_linkage/Makefile	/^STRIP = $/;"	m
STRIP	src/atomic_ops/asm_linkage/usr/Makefile	/^STRIP = $/;"	m
STRIP	src/atomic_ops/asm_linkage/usr/src/Makefile	/^STRIP = $/;"	m
STRIP	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^STRIP = $/;"	m
STRIP	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^STRIP = $/;"	m
STRIP	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^STRIP = $/;"	m
STRIP	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^STRIP = $/;"	m
STRIP	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^STRIP = $/;"	m
STRIP	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^STRIP = $/;"	m
STRIP	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^STRIP = $/;"	m
STRIP	src/atomic_ops/atomic_ops/Makefile	/^STRIP = $/;"	m
STRIP	src/atomic_ops/atomic_ops/amd64/Makefile	/^STRIP = $/;"	m
STRIP	src/atomic_ops/atomic_ops/i386/Makefile	/^STRIP = $/;"	m
STRIP	src/atomic_ops/atomic_ops/sparc/Makefile	/^STRIP = $/;"	m
STRIP	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^STRIP = $/;"	m
STRIP	src/atomic_ops/ia32/Makefile	/^STRIP = $/;"	m
STRIP	src/atomic_ops/ia32/sys/Makefile	/^STRIP = $/;"	m
STRIP	src/atomic_ops/intel/Makefile	/^STRIP = $/;"	m
STRIP	src/atomic_ops/intel/ia32/Makefile	/^STRIP = $/;"	m
STRIP	src/atomic_ops/intel/ia32/sys/Makefile	/^STRIP = $/;"	m
STRIP	src/atomic_ops/intel/sys/Makefile	/^STRIP = $/;"	m
STRIP	src/atomic_ops/sparc/Makefile	/^STRIP = $/;"	m
STRIP	src/atomic_ops/sparc/sys/Makefile	/^STRIP = $/;"	m
STRIP	src/common/Makefile	/^STRIP = $/;"	m
STRIP	src/common/tests/Makefile	/^STRIP = $/;"	m
STRIP	src/fc/Makefile	/^STRIP = $/;"	m
STRIP	src/fc/tests/Makefile	/^STRIP = $/;"	m
STRIP	src/sm/Makefile	/^STRIP = $/;"	m
STRIP	src/sm/smsh/Makefile	/^STRIP = $/;"	m
STRIP	src/sm/smsh/lib/Makefile	/^STRIP = $/;"	m
STRIP	src/sm/smsh/scripts/Makefile	/^STRIP = $/;"	m
STRIP	src/sm/tests/Makefile	/^STRIP = $/;"	m
STRIP	src/sthread/Makefile	/^STRIP = $/;"	m
STRIP	src/sthread/tests/Makefile	/^STRIP = $/;"	m
STRIP	tools/Makefile	/^STRIP = $/;"	m
ST_BADADDR	src/sthread/st_error_def_gen.h	40;"	d
ST_BADFD	src/sthread/st_error_def_gen.h	39;"	d
ST_BADPATH	src/sthread/st_error_def_gen.h	38;"	d
ST_BREAKPOINT	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/trap.h	45;"	d
ST_BREAKPOINT	src/atomic_ops/sparc/sys/trap.h	45;"	d
ST_CLEAN_WINDOWS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/trap.h	48;"	d
ST_CLEAN_WINDOWS	src/atomic_ops/sparc/sys/trap.h	48;"	d
ST_DIV0	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/trap.h	46;"	d
ST_DIV0	src/atomic_ops/sparc/sys/trap.h	46;"	d
ST_DTRACE_PID	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/trap.h	74;"	d
ST_DTRACE_PID	src/atomic_ops/sparc/sys/trap.h	74;"	d
ST_DTRACE_PROBE	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/trap.h	75;"	d
ST_DTRACE_PROBE	src/atomic_ops/sparc/sys/trap.h	75;"	d
ST_DTRACE_RETURN	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/trap.h	76;"	d
ST_DTRACE_RETURN	src/atomic_ops/sparc/sys/trap.h	76;"	d
ST_EINFO_BAKW_GEN_H	src/sthread/st_einfo_bakw_gen.h	2;"	d
ST_EINFO_GEN_H	src/sthread/st_einfo_gen.h	2;"	d
ST_ERRMAX	src/sthread/st_error_def_gen.h	47;"	d
ST_ERRMIN	src/sthread/st_error_def_gen.h	46;"	d
ST_ERRMSG_GEN_H	src/sthread/st_errmsg_gen.h	2;"	d
ST_ERROR_DEF_GEN_H	src/sthread/st_error_def_gen.h	2;"	d
ST_ERROR_ENUM_GEN_H	src/sthread/st_error_enum_gen.h	2;"	d
ST_ERROR_GENFILES	src/sthread/Makefile	/^ST_ERROR_GENFILES = st_errmsg_gen.h\\$/;"	m
ST_FIX_ALIGN	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/trap.h	50;"	d
ST_FIX_ALIGN	src/atomic_ops/sparc/sys/trap.h	50;"	d
ST_FLUSH_WINDOWS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/trap.h	47;"	d
ST_FLUSH_WINDOWS	src/atomic_ops/sparc/sys/trap.h	47;"	d
ST_GETCC	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/trap.h	60;"	d
ST_GETCC	src/atomic_ops/sparc/sys/trap.h	60;"	d
ST_GETHRESTIME	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/trap.h	67;"	d
ST_GETHRESTIME	src/atomic_ops/sparc/sys/trap.h	67;"	d
ST_GETHRTIME	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/trap.h	64;"	d
ST_GETHRTIME	src/atomic_ops/sparc/sys/trap.h	64;"	d
ST_GETHRVTIME	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/trap.h	65;"	d
ST_GETHRVTIME	src/atomic_ops/sparc/sys/trap.h	65;"	d
ST_GETLGRP	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/trap.h	69;"	d
ST_GETLGRP	src/atomic_ops/sparc/sys/trap.h	69;"	d
ST_GETPSR	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/trap.h	62;"	d
ST_GETPSR	src/atomic_ops/sparc/sys/trap.h	62;"	d
ST_INT_OVERFLOW	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/trap.h	51;"	d
ST_INT_OVERFLOW	src/atomic_ops/sparc/sys/trap.h	51;"	d
ST_INUSE	src/sthread/st_error_def_gen.h	42;"	d
ST_INVAL	src/sthread/st_error_def_gen.h	41;"	d
ST_KMDB_BREAKPOINT	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/trap.h	79;"	d
ST_KMDB_BREAKPOINT	src/atomic_ops/sparc/sys/trap.h	79;"	d
ST_KMDB_TRAP	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/trap.h	78;"	d
ST_KMDB_TRAP	src/atomic_ops/sparc/sys/trap.h	78;"	d
ST_MON_BREAKPOINT	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/trap.h	80;"	d
ST_MON_BREAKPOINT	src/atomic_ops/sparc/sys/trap.h	80;"	d
ST_OK	src/sthread/st_error_def_gen.h	45;"	d
ST_OSYSCALL	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/trap.h	44;"	d
ST_OSYSCALL	src/atomic_ops/sparc/sys/trap.h	44;"	d
ST_RANGE_CHECK	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/trap.h	49;"	d
ST_RANGE_CHECK	src/atomic_ops/sparc/sys/trap.h	49;"	d
ST_SELFXCALL	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/trap.h	66;"	d
ST_SELFXCALL	src/atomic_ops/sparc/sys/trap.h	66;"	d
ST_SETCC	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/trap.h	61;"	d
ST_SETCC	src/atomic_ops/sparc/sys/trap.h	61;"	d
ST_SETPSR	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/trap.h	63;"	d
ST_SETPSR	src/atomic_ops/sparc/sys/trap.h	63;"	d
ST_SETV9STACK	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/trap.h	68;"	d
ST_SETV9STACK	src/atomic_ops/sparc/sys/trap.h	68;"	d
ST_SHORTIO	src/sthread/st_error_def_gen.h	43;"	d
ST_SHORTSEEK	src/sthread/st_error_def_gen.h	44;"	d
ST_SYSCALL	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/trap.h	52;"	d
ST_SYSCALL	src/atomic_ops/sparc/sys/trap.h	52;"	d
ST_TIMEOUT	src/sthread/st_error_def_gen.h	37;"	d
ST_TRANSACTION_FAILURE	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/trap.h	53;"	d
ST_TRANSACTION_FAILURE	src/atomic_ops/sparc/sys/trap.h	53;"	d
SUBDIRS	Makefile	/^SUBDIRS = src config $/;"	m
SUBDIRS	src/Makefile	/^SUBDIRS = \\$/;"	m
SUBDIRS	src/atomic_ops/Makefile	/^SUBDIRS = $(OSUBDIRS) $/;"	m
SUBDIRS	src/atomic_ops/asm_linkage/Makefile	/^SUBDIRS = usr$/;"	m
SUBDIRS	src/atomic_ops/asm_linkage/usr/Makefile	/^SUBDIRS = src$/;"	m
SUBDIRS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^SUBDIRS =$/;"	m
SUBDIRS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^SUBDIRS =$/;"	m
SUBDIRS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^SUBDIRS =$/;"	m
SUBDIRS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^SUBDIRS =$/;"	m
SUBDIRS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^SUBDIRS =$/;"	m
SUBDIRS	src/atomic_ops/atomic_ops/Makefile	/^SUBDIRS =$/;"	m
SUBDIRS	src/atomic_ops/ia32/Makefile	/^SUBDIRS =$/;"	m
SUBDIRS	src/atomic_ops/intel/Makefile	/^SUBDIRS =$/;"	m
SUBDIRS	src/atomic_ops/intel/ia32/Makefile	/^SUBDIRS =$/;"	m
SUBDIRS	src/atomic_ops/sparc/Makefile	/^SUBDIRS =$/;"	m
SUBDIRS	src/common/Makefile	/^SUBDIRS = tests$/;"	m
SUBDIRS	src/fc/Makefile	/^SUBDIRS = tests$/;"	m
SUBDIRS	src/sm/Makefile	/^SUBDIRS = tests smsh$/;"	m
SUBDIRS	src/sm/smsh/Makefile	/^SUBDIRS = scripts lib$/;"	m
SUBDIRS	src/sm/smsh/lib/Makefile	/^SUBDIRS = $/;"	m
SUBDIRS	src/sm/smsh/scripts/Makefile	/^SUBDIRS = $/;"	m
SUBDIRS	src/sthread/Makefile	/^SUBDIRS = tests$/;"	m
SWITCH	src/sm/rtree.cpp	/^SWITCH(int2_t& x, int2_t& y)$/;"	f
SYMBOLSFLAGS	Makefile	/^SYMBOLSFLAGS = -ggdb$/;"	m
SYMBOLSFLAGS	config/Makefile	/^SYMBOLSFLAGS = -ggdb$/;"	m
SYMBOLSFLAGS	src/Makefile	/^SYMBOLSFLAGS = -ggdb$/;"	m
SYMBOLSFLAGS	src/atomic_ops/Makefile	/^SYMBOLSFLAGS = -ggdb$/;"	m
SYMBOLSFLAGS	src/atomic_ops/asm_linkage/Makefile	/^SYMBOLSFLAGS = -ggdb$/;"	m
SYMBOLSFLAGS	src/atomic_ops/asm_linkage/usr/Makefile	/^SYMBOLSFLAGS = -ggdb$/;"	m
SYMBOLSFLAGS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^SYMBOLSFLAGS = -ggdb$/;"	m
SYMBOLSFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^SYMBOLSFLAGS = -ggdb$/;"	m
SYMBOLSFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^SYMBOLSFLAGS = -ggdb$/;"	m
SYMBOLSFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^SYMBOLSFLAGS = -ggdb$/;"	m
SYMBOLSFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^SYMBOLSFLAGS = -ggdb$/;"	m
SYMBOLSFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^SYMBOLSFLAGS = -ggdb$/;"	m
SYMBOLSFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^SYMBOLSFLAGS = -ggdb$/;"	m
SYMBOLSFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^SYMBOLSFLAGS = -ggdb$/;"	m
SYMBOLSFLAGS	src/atomic_ops/atomic_ops/Makefile	/^SYMBOLSFLAGS = -ggdb$/;"	m
SYMBOLSFLAGS	src/atomic_ops/atomic_ops/amd64/Makefile	/^SYMBOLSFLAGS = -ggdb$/;"	m
SYMBOLSFLAGS	src/atomic_ops/atomic_ops/i386/Makefile	/^SYMBOLSFLAGS = -ggdb$/;"	m
SYMBOLSFLAGS	src/atomic_ops/atomic_ops/sparc/Makefile	/^SYMBOLSFLAGS = -ggdb$/;"	m
SYMBOLSFLAGS	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^SYMBOLSFLAGS = -ggdb$/;"	m
SYMBOLSFLAGS	src/atomic_ops/ia32/Makefile	/^SYMBOLSFLAGS = -ggdb$/;"	m
SYMBOLSFLAGS	src/atomic_ops/ia32/sys/Makefile	/^SYMBOLSFLAGS = -ggdb$/;"	m
SYMBOLSFLAGS	src/atomic_ops/intel/Makefile	/^SYMBOLSFLAGS = -ggdb$/;"	m
SYMBOLSFLAGS	src/atomic_ops/intel/ia32/Makefile	/^SYMBOLSFLAGS = -ggdb$/;"	m
SYMBOLSFLAGS	src/atomic_ops/intel/ia32/sys/Makefile	/^SYMBOLSFLAGS = -ggdb$/;"	m
SYMBOLSFLAGS	src/atomic_ops/intel/sys/Makefile	/^SYMBOLSFLAGS = -ggdb$/;"	m
SYMBOLSFLAGS	src/atomic_ops/sparc/Makefile	/^SYMBOLSFLAGS = -ggdb$/;"	m
SYMBOLSFLAGS	src/atomic_ops/sparc/sys/Makefile	/^SYMBOLSFLAGS = -ggdb$/;"	m
SYMBOLSFLAGS	src/common/Makefile	/^SYMBOLSFLAGS = -ggdb$/;"	m
SYMBOLSFLAGS	src/common/tests/Makefile	/^SYMBOLSFLAGS = -ggdb$/;"	m
SYMBOLSFLAGS	src/fc/Makefile	/^SYMBOLSFLAGS = -ggdb$/;"	m
SYMBOLSFLAGS	src/fc/tests/Makefile	/^SYMBOLSFLAGS = -ggdb$/;"	m
SYMBOLSFLAGS	src/sm/Makefile	/^SYMBOLSFLAGS = -ggdb$/;"	m
SYMBOLSFLAGS	src/sm/smsh/Makefile	/^SYMBOLSFLAGS = -ggdb$/;"	m
SYMBOLSFLAGS	src/sm/smsh/lib/Makefile	/^SYMBOLSFLAGS = -ggdb$/;"	m
SYMBOLSFLAGS	src/sm/smsh/scripts/Makefile	/^SYMBOLSFLAGS = -ggdb$/;"	m
SYMBOLSFLAGS	src/sm/tests/Makefile	/^SYMBOLSFLAGS = -ggdb$/;"	m
SYMBOLSFLAGS	src/sthread/Makefile	/^SYMBOLSFLAGS = -ggdb$/;"	m
SYMBOLSFLAGS	src/sthread/tests/Makefile	/^SYMBOLSFLAGS = -ggdb$/;"	m
SYMBOLSFLAGS	tools/Makefile	/^SYMBOLSFLAGS = -ggdb$/;"	m
SYSDEFS_H	src/sm/sysdefs.h	31;"	d
Search	src/sm/histo.cpp	/^int SearchableHeap<T, Cmp>::Search(int i, const T& t)$/;"	f	class:SearchableHeap
SearchableHeap	src/sm/histo.cpp	/^SearchableHeap<T, Cmp>::SearchableHeap(const Cmp& cmpFunction, $/;"	f	class:SearchableHeap
SearchableHeap	src/sm/histo.h	/^class SearchableHeap :  public Heap<T,Cmp>$/;"	c
Second	src/fc/w_heap.h	/^const T& Heap<T, Cmp>::Second() const$/;"	f	class:Heap
SelectSmthreadsFunc	src/sm/smthread.cpp	/^    SelectSmthreadsFunc(SmthreadFunc& func) : f(func) {};$/;"	f	class:SelectSmthreadsFunc
SelectSmthreadsFunc	src/sm/smthread.cpp	/^class SelectSmthreadsFunc : public ThreadFunc$/;"	c	file:
SetDefaultEscalationThresholds	src/sm/xct.h	/^xct_t::SetDefaultEscalationThresholds()$/;"	f	class:xct_t
SetEscalationThresholds	src/sm/xct.h	/^xct_t::SetEscalationThresholds(w_base_t::int4_t toPage, $/;"	f	class:xct_t
SetLastMountLSN	src/sm/sm_io.h	/^io_m::SetLastMountLSN(lsn_t theLSN)$/;"	f	class:io_m
SiftDown	src/fc/w_heap.h	/^void Heap<T, Cmp>::SiftDown(int rootElem)$/;"	f	class:Heap
SiftUp	src/fc/w_heap.h	/^void Heap<T, Cmp>::SiftUp(int rootElem)$/;"	f	class:Heap
SleepTime	src/sthread/tests/thread1.cpp	/^int	SleepTime = 10000;		\/* 10 seconds *\/$/;"	v
SmFileMetaStats	src/sm/sm_du_stats.h	/^class SmFileMetaStats$/;"	c
SmFileMetaStats	src/sm/sm_du_stats.h	/^inline SmFileMetaStats::SmFileMetaStats()$/;"	f	class:SmFileMetaStats
SmStoreMetaStats	src/sm/sm_du_stats.h	/^class SmStoreMetaStats$/;"	c
SmStoreMetaStats	src/sm/sm_du_stats.h	/^inline SmStoreMetaStats::SmStoreMetaStats()$/;"	f	class:SmStoreMetaStats
SmThreadTypes	src/sm/smthread.h	/^    enum SmThreadTypes     {smThreadType = 1, smLastThreadType};$/;"	g	class:smthread_t
SmVolumeMetaStats	src/sm/sm_du_stats.h	/^class SmVolumeMetaStats$/;"	c
SmVolumeMetaStats	src/sm/sm_du_stats.h	/^inline SmVolumeMetaStats::SmVolumeMetaStats()$/;"	f	class:SmVolumeMetaStats
SmthreadFunc	src/sm/smthread.h	/^class SmthreadFunc {$/;"	c
SortOrder	src/sm/lexify.cpp	/^sortorder SortOrder;$/;"	v
StackOverflow	src/sthread/tests/thread1.cpp	/^int	StackOverflow = 0xa00110;	\/* check stack overflow by allocatings$/;"	v
Status	src/sm/tests/htab.cpp	/^    typedef enum { Zero, Init, Inserted, Evicted, Returned, Removed } Status;$/;"	t	class:htab_tester	typeref:enum:htab_tester::__anon97	file:
SthreadStats	src/sthread/sthread.cpp	/^class sthread_stats SthreadStats;$/;"	v	typeref:class:sthread_stats
T	src/sm/histo.cpp	482;"	d	file:
T	src/sm/histo.cpp	486;"	d	file:
TA	src/common/tests/vectors.cpp	91;"	d	file:
TARGET_FLAGS	Makefile	/^TARGET_FLAGS = -m64 -DARCH_LP64 $/;"	m
TARGET_FLAGS	config/Makefile	/^TARGET_FLAGS = -m64 -DARCH_LP64 $/;"	m
TARGET_FLAGS	src/Makefile	/^TARGET_FLAGS = -m64 -DARCH_LP64 $/;"	m
TARGET_FLAGS	src/atomic_ops/Makefile	/^TARGET_FLAGS = -m64 -DARCH_LP64 $/;"	m
TARGET_FLAGS	src/atomic_ops/asm_linkage/Makefile	/^TARGET_FLAGS = -m64 -DARCH_LP64 $/;"	m
TARGET_FLAGS	src/atomic_ops/asm_linkage/usr/Makefile	/^TARGET_FLAGS = -m64 -DARCH_LP64 $/;"	m
TARGET_FLAGS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^TARGET_FLAGS = -m64 -DARCH_LP64 $/;"	m
TARGET_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^TARGET_FLAGS = -m64 -DARCH_LP64 $/;"	m
TARGET_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^TARGET_FLAGS = -m64 -DARCH_LP64 $/;"	m
TARGET_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^TARGET_FLAGS = -m64 -DARCH_LP64 $/;"	m
TARGET_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^TARGET_FLAGS = -m64 -DARCH_LP64 $/;"	m
TARGET_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^TARGET_FLAGS = -m64 -DARCH_LP64 $/;"	m
TARGET_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^TARGET_FLAGS = -m64 -DARCH_LP64 $/;"	m
TARGET_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^TARGET_FLAGS = -m64 -DARCH_LP64 $/;"	m
TARGET_FLAGS	src/atomic_ops/atomic_ops/Makefile	/^TARGET_FLAGS = -m64 -DARCH_LP64 $/;"	m
TARGET_FLAGS	src/atomic_ops/atomic_ops/amd64/Makefile	/^TARGET_FLAGS = -m64 -DARCH_LP64 $/;"	m
TARGET_FLAGS	src/atomic_ops/atomic_ops/i386/Makefile	/^TARGET_FLAGS = -m64 -DARCH_LP64 $/;"	m
TARGET_FLAGS	src/atomic_ops/atomic_ops/sparc/Makefile	/^TARGET_FLAGS = -m64 -DARCH_LP64 $/;"	m
TARGET_FLAGS	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^TARGET_FLAGS = -m64 -DARCH_LP64 $/;"	m
TARGET_FLAGS	src/atomic_ops/ia32/Makefile	/^TARGET_FLAGS = -m64 -DARCH_LP64 $/;"	m
TARGET_FLAGS	src/atomic_ops/ia32/sys/Makefile	/^TARGET_FLAGS = -m64 -DARCH_LP64 $/;"	m
TARGET_FLAGS	src/atomic_ops/intel/Makefile	/^TARGET_FLAGS = -m64 -DARCH_LP64 $/;"	m
TARGET_FLAGS	src/atomic_ops/intel/ia32/Makefile	/^TARGET_FLAGS = -m64 -DARCH_LP64 $/;"	m
TARGET_FLAGS	src/atomic_ops/intel/ia32/sys/Makefile	/^TARGET_FLAGS = -m64 -DARCH_LP64 $/;"	m
TARGET_FLAGS	src/atomic_ops/intel/sys/Makefile	/^TARGET_FLAGS = -m64 -DARCH_LP64 $/;"	m
TARGET_FLAGS	src/atomic_ops/sparc/Makefile	/^TARGET_FLAGS = -m64 -DARCH_LP64 $/;"	m
TARGET_FLAGS	src/atomic_ops/sparc/sys/Makefile	/^TARGET_FLAGS = -m64 -DARCH_LP64 $/;"	m
TARGET_FLAGS	src/common/Makefile	/^TARGET_FLAGS = -m64 -DARCH_LP64 $/;"	m
TARGET_FLAGS	src/common/tests/Makefile	/^TARGET_FLAGS = -m64 -DARCH_LP64 $/;"	m
TARGET_FLAGS	src/fc/Makefile	/^TARGET_FLAGS = -m64 -DARCH_LP64 $/;"	m
TARGET_FLAGS	src/fc/tests/Makefile	/^TARGET_FLAGS = -m64 -DARCH_LP64 $/;"	m
TARGET_FLAGS	src/sm/Makefile	/^TARGET_FLAGS = -m64 -DARCH_LP64 $/;"	m
TARGET_FLAGS	src/sm/smsh/Makefile	/^TARGET_FLAGS = -m64 -DARCH_LP64 $/;"	m
TARGET_FLAGS	src/sm/smsh/lib/Makefile	/^TARGET_FLAGS = -m64 -DARCH_LP64 $/;"	m
TARGET_FLAGS	src/sm/smsh/scripts/Makefile	/^TARGET_FLAGS = -m64 -DARCH_LP64 $/;"	m
TARGET_FLAGS	src/sm/tests/Makefile	/^TARGET_FLAGS = -m64 -DARCH_LP64 $/;"	m
TARGET_FLAGS	src/sthread/Makefile	/^TARGET_FLAGS = -m64 -DARCH_LP64 $/;"	m
TARGET_FLAGS	src/sthread/tests/Makefile	/^TARGET_FLAGS = -m64 -DARCH_LP64 $/;"	m
TARGET_FLAGS	tools/Makefile	/^TARGET_FLAGS = -m64 -DARCH_LP64 $/;"	m
TB	src/common/tests/vectors.cpp	90;"	d	file:
TC	src/common/tests/vectors.cpp	92;"	d	file:
TCL_AV	src/sm/smsh/tcl_workaround.h	52;"	d
TCL_AV	src/sm/smsh/tcl_workaround.h	60;"	d
TCL_AV1	src/sm/smsh/tcl_workaround.h	53;"	d
TCL_AV1	src/sm/smsh/tcl_workaround.h	61;"	d
TCL_CVBUG	src/sm/smsh/tcl_workaround.h	51;"	d
TCL_CVBUG	src/sm/smsh/tcl_workaround.h	59;"	d
TCL_EXIT_ERROR_STRING	src/sm/smsh/tcl_thread.cpp	/^static const char *TCL_EXIT_ERROR_STRING = "!@#EXIT#@!";$/;"	v	file:
TCL_GETX	src/sm/smsh/tcl_workaround.h	57;"	d
TCL_GETX	src/sm/smsh/tcl_workaround.h	65;"	d
TCL_HANDLE_FSCAN_FAILURE	src/sm/smsh/shell.h	146;"	d
TCL_INCLUDE	Makefile	/^TCL_INCLUDE = \/scratch\/nhall\/tcl\/include$/;"	m
TCL_INCLUDE	config/Makefile	/^TCL_INCLUDE = \/scratch\/nhall\/tcl\/include$/;"	m
TCL_INCLUDE	src/Makefile	/^TCL_INCLUDE = \/scratch\/nhall\/tcl\/include$/;"	m
TCL_INCLUDE	src/atomic_ops/Makefile	/^TCL_INCLUDE = \/scratch\/nhall\/tcl\/include$/;"	m
TCL_INCLUDE	src/atomic_ops/asm_linkage/Makefile	/^TCL_INCLUDE = \/scratch\/nhall\/tcl\/include$/;"	m
TCL_INCLUDE	src/atomic_ops/asm_linkage/usr/Makefile	/^TCL_INCLUDE = \/scratch\/nhall\/tcl\/include$/;"	m
TCL_INCLUDE	src/atomic_ops/asm_linkage/usr/src/Makefile	/^TCL_INCLUDE = \/scratch\/nhall\/tcl\/include$/;"	m
TCL_INCLUDE	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^TCL_INCLUDE = \/scratch\/nhall\/tcl\/include$/;"	m
TCL_INCLUDE	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^TCL_INCLUDE = \/scratch\/nhall\/tcl\/include$/;"	m
TCL_INCLUDE	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^TCL_INCLUDE = \/scratch\/nhall\/tcl\/include$/;"	m
TCL_INCLUDE	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^TCL_INCLUDE = \/scratch\/nhall\/tcl\/include$/;"	m
TCL_INCLUDE	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^TCL_INCLUDE = \/scratch\/nhall\/tcl\/include$/;"	m
TCL_INCLUDE	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^TCL_INCLUDE = \/scratch\/nhall\/tcl\/include$/;"	m
TCL_INCLUDE	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^TCL_INCLUDE = \/scratch\/nhall\/tcl\/include$/;"	m
TCL_INCLUDE	src/atomic_ops/atomic_ops/Makefile	/^TCL_INCLUDE = \/scratch\/nhall\/tcl\/include$/;"	m
TCL_INCLUDE	src/atomic_ops/atomic_ops/amd64/Makefile	/^TCL_INCLUDE = \/scratch\/nhall\/tcl\/include$/;"	m
TCL_INCLUDE	src/atomic_ops/atomic_ops/i386/Makefile	/^TCL_INCLUDE = \/scratch\/nhall\/tcl\/include$/;"	m
TCL_INCLUDE	src/atomic_ops/atomic_ops/sparc/Makefile	/^TCL_INCLUDE = \/scratch\/nhall\/tcl\/include$/;"	m
TCL_INCLUDE	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^TCL_INCLUDE = \/scratch\/nhall\/tcl\/include$/;"	m
TCL_INCLUDE	src/atomic_ops/ia32/Makefile	/^TCL_INCLUDE = \/scratch\/nhall\/tcl\/include$/;"	m
TCL_INCLUDE	src/atomic_ops/ia32/sys/Makefile	/^TCL_INCLUDE = \/scratch\/nhall\/tcl\/include$/;"	m
TCL_INCLUDE	src/atomic_ops/intel/Makefile	/^TCL_INCLUDE = \/scratch\/nhall\/tcl\/include$/;"	m
TCL_INCLUDE	src/atomic_ops/intel/ia32/Makefile	/^TCL_INCLUDE = \/scratch\/nhall\/tcl\/include$/;"	m
TCL_INCLUDE	src/atomic_ops/intel/ia32/sys/Makefile	/^TCL_INCLUDE = \/scratch\/nhall\/tcl\/include$/;"	m
TCL_INCLUDE	src/atomic_ops/intel/sys/Makefile	/^TCL_INCLUDE = \/scratch\/nhall\/tcl\/include$/;"	m
TCL_INCLUDE	src/atomic_ops/sparc/Makefile	/^TCL_INCLUDE = \/scratch\/nhall\/tcl\/include$/;"	m
TCL_INCLUDE	src/atomic_ops/sparc/sys/Makefile	/^TCL_INCLUDE = \/scratch\/nhall\/tcl\/include$/;"	m
TCL_INCLUDE	src/common/Makefile	/^TCL_INCLUDE = \/scratch\/nhall\/tcl\/include$/;"	m
TCL_INCLUDE	src/common/tests/Makefile	/^TCL_INCLUDE = \/scratch\/nhall\/tcl\/include$/;"	m
TCL_INCLUDE	src/fc/Makefile	/^TCL_INCLUDE = \/scratch\/nhall\/tcl\/include$/;"	m
TCL_INCLUDE	src/fc/tests/Makefile	/^TCL_INCLUDE = \/scratch\/nhall\/tcl\/include$/;"	m
TCL_INCLUDE	src/sm/Makefile	/^TCL_INCLUDE = \/scratch\/nhall\/tcl\/include$/;"	m
TCL_INCLUDE	src/sm/smsh/Makefile	/^TCL_INCLUDE = \/scratch\/nhall\/tcl\/include$/;"	m
TCL_INCLUDE	src/sm/smsh/lib/Makefile	/^TCL_INCLUDE = \/scratch\/nhall\/tcl\/include$/;"	m
TCL_INCLUDE	src/sm/smsh/scripts/Makefile	/^TCL_INCLUDE = \/scratch\/nhall\/tcl\/include$/;"	m
TCL_INCLUDE	src/sm/tests/Makefile	/^TCL_INCLUDE = \/scratch\/nhall\/tcl\/include$/;"	m
TCL_INCLUDE	src/sthread/Makefile	/^TCL_INCLUDE = \/scratch\/nhall\/tcl\/include$/;"	m
TCL_INCLUDE	src/sthread/tests/Makefile	/^TCL_INCLUDE = \/scratch\/nhall\/tcl\/include$/;"	m
TCL_INCLUDE	tools/Makefile	/^TCL_INCLUDE = \/scratch\/nhall\/tcl\/include$/;"	m
TCL_LIB	Makefile	/^TCL_LIB = -L\/scratch\/nhall\/tcl\/lib -ltcl8.5$/;"	m
TCL_LIB	config/Makefile	/^TCL_LIB = -L\/scratch\/nhall\/tcl\/lib -ltcl8.5$/;"	m
TCL_LIB	src/Makefile	/^TCL_LIB = -L\/scratch\/nhall\/tcl\/lib -ltcl8.5$/;"	m
TCL_LIB	src/atomic_ops/Makefile	/^TCL_LIB = -L\/scratch\/nhall\/tcl\/lib -ltcl8.5$/;"	m
TCL_LIB	src/atomic_ops/asm_linkage/Makefile	/^TCL_LIB = -L\/scratch\/nhall\/tcl\/lib -ltcl8.5$/;"	m
TCL_LIB	src/atomic_ops/asm_linkage/usr/Makefile	/^TCL_LIB = -L\/scratch\/nhall\/tcl\/lib -ltcl8.5$/;"	m
TCL_LIB	src/atomic_ops/asm_linkage/usr/src/Makefile	/^TCL_LIB = -L\/scratch\/nhall\/tcl\/lib -ltcl8.5$/;"	m
TCL_LIB	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^TCL_LIB = -L\/scratch\/nhall\/tcl\/lib -ltcl8.5$/;"	m
TCL_LIB	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^TCL_LIB = -L\/scratch\/nhall\/tcl\/lib -ltcl8.5$/;"	m
TCL_LIB	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^TCL_LIB = -L\/scratch\/nhall\/tcl\/lib -ltcl8.5$/;"	m
TCL_LIB	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^TCL_LIB = -L\/scratch\/nhall\/tcl\/lib -ltcl8.5$/;"	m
TCL_LIB	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^TCL_LIB = -L\/scratch\/nhall\/tcl\/lib -ltcl8.5$/;"	m
TCL_LIB	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^TCL_LIB = -L\/scratch\/nhall\/tcl\/lib -ltcl8.5$/;"	m
TCL_LIB	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^TCL_LIB = -L\/scratch\/nhall\/tcl\/lib -ltcl8.5$/;"	m
TCL_LIB	src/atomic_ops/atomic_ops/Makefile	/^TCL_LIB = -L\/scratch\/nhall\/tcl\/lib -ltcl8.5$/;"	m
TCL_LIB	src/atomic_ops/atomic_ops/amd64/Makefile	/^TCL_LIB = -L\/scratch\/nhall\/tcl\/lib -ltcl8.5$/;"	m
TCL_LIB	src/atomic_ops/atomic_ops/i386/Makefile	/^TCL_LIB = -L\/scratch\/nhall\/tcl\/lib -ltcl8.5$/;"	m
TCL_LIB	src/atomic_ops/atomic_ops/sparc/Makefile	/^TCL_LIB = -L\/scratch\/nhall\/tcl\/lib -ltcl8.5$/;"	m
TCL_LIB	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^TCL_LIB = -L\/scratch\/nhall\/tcl\/lib -ltcl8.5$/;"	m
TCL_LIB	src/atomic_ops/ia32/Makefile	/^TCL_LIB = -L\/scratch\/nhall\/tcl\/lib -ltcl8.5$/;"	m
TCL_LIB	src/atomic_ops/ia32/sys/Makefile	/^TCL_LIB = -L\/scratch\/nhall\/tcl\/lib -ltcl8.5$/;"	m
TCL_LIB	src/atomic_ops/intel/Makefile	/^TCL_LIB = -L\/scratch\/nhall\/tcl\/lib -ltcl8.5$/;"	m
TCL_LIB	src/atomic_ops/intel/ia32/Makefile	/^TCL_LIB = -L\/scratch\/nhall\/tcl\/lib -ltcl8.5$/;"	m
TCL_LIB	src/atomic_ops/intel/ia32/sys/Makefile	/^TCL_LIB = -L\/scratch\/nhall\/tcl\/lib -ltcl8.5$/;"	m
TCL_LIB	src/atomic_ops/intel/sys/Makefile	/^TCL_LIB = -L\/scratch\/nhall\/tcl\/lib -ltcl8.5$/;"	m
TCL_LIB	src/atomic_ops/sparc/Makefile	/^TCL_LIB = -L\/scratch\/nhall\/tcl\/lib -ltcl8.5$/;"	m
TCL_LIB	src/atomic_ops/sparc/sys/Makefile	/^TCL_LIB = -L\/scratch\/nhall\/tcl\/lib -ltcl8.5$/;"	m
TCL_LIB	src/common/Makefile	/^TCL_LIB = -L\/scratch\/nhall\/tcl\/lib -ltcl8.5$/;"	m
TCL_LIB	src/common/tests/Makefile	/^TCL_LIB = -L\/scratch\/nhall\/tcl\/lib -ltcl8.5$/;"	m
TCL_LIB	src/fc/Makefile	/^TCL_LIB = -L\/scratch\/nhall\/tcl\/lib -ltcl8.5$/;"	m
TCL_LIB	src/fc/tests/Makefile	/^TCL_LIB = -L\/scratch\/nhall\/tcl\/lib -ltcl8.5$/;"	m
TCL_LIB	src/sm/Makefile	/^TCL_LIB = -L\/scratch\/nhall\/tcl\/lib -ltcl8.5$/;"	m
TCL_LIB	src/sm/smsh/Makefile	/^TCL_LIB = -L\/scratch\/nhall\/tcl\/lib -ltcl8.5$/;"	m
TCL_LIB	src/sm/smsh/lib/Makefile	/^TCL_LIB = -L\/scratch\/nhall\/tcl\/lib -ltcl8.5$/;"	m
TCL_LIB	src/sm/smsh/scripts/Makefile	/^TCL_LIB = -L\/scratch\/nhall\/tcl\/lib -ltcl8.5$/;"	m
TCL_LIB	src/sm/tests/Makefile	/^TCL_LIB = -L\/scratch\/nhall\/tcl\/lib -ltcl8.5$/;"	m
TCL_LIB	src/sthread/Makefile	/^TCL_LIB = -L\/scratch\/nhall\/tcl\/lib -ltcl8.5$/;"	m
TCL_LIB	src/sthread/tests/Makefile	/^TCL_LIB = -L\/scratch\/nhall\/tcl\/lib -ltcl8.5$/;"	m
TCL_LIB	tools/Makefile	/^TCL_LIB = -L\/scratch\/nhall\/tcl\/lib -ltcl8.5$/;"	m
TCL_SETRES	src/sm/smsh/tcl_workaround.h	55;"	d
TCL_SETRES	src/sm/smsh/tcl_workaround.h	63;"	d
TCL_SETV2	src/sm/smsh/tcl_workaround.h	54;"	d
TCL_SETV2	src/sm/smsh/tcl_workaround.h	62;"	d
TCL_SLIST	src/sm/smsh/tcl_workaround.h	56;"	d
TCL_SLIST	src/sm/smsh/tcl_workaround.h	64;"	d
TCL_THREAD_C	src/sm/smsh/tcl_thread.cpp	34;"	d	file:
TCL_THREAD_H	src/sm/smsh/tcl_thread.h	31;"	d
TCL_WORKAROUND_H	src/sm/smsh/tcl_workaround.h	2;"	d
TD	src/common/tests/vectors.cpp	89;"	d	file:
TEMPLATEFLAGS	Makefile	/^TEMPLATEFLAGS = $/;"	m
TEMPLATEFLAGS	config/Makefile	/^TEMPLATEFLAGS = $/;"	m
TEMPLATEFLAGS	src/Makefile	/^TEMPLATEFLAGS = $/;"	m
TEMPLATEFLAGS	src/atomic_ops/Makefile	/^TEMPLATEFLAGS = $/;"	m
TEMPLATEFLAGS	src/atomic_ops/asm_linkage/Makefile	/^TEMPLATEFLAGS = $/;"	m
TEMPLATEFLAGS	src/atomic_ops/asm_linkage/usr/Makefile	/^TEMPLATEFLAGS = $/;"	m
TEMPLATEFLAGS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^TEMPLATEFLAGS = $/;"	m
TEMPLATEFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^TEMPLATEFLAGS = $/;"	m
TEMPLATEFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^TEMPLATEFLAGS = $/;"	m
TEMPLATEFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^TEMPLATEFLAGS = $/;"	m
TEMPLATEFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^TEMPLATEFLAGS = $/;"	m
TEMPLATEFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^TEMPLATEFLAGS = $/;"	m
TEMPLATEFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^TEMPLATEFLAGS = $/;"	m
TEMPLATEFLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^TEMPLATEFLAGS = $/;"	m
TEMPLATEFLAGS	src/atomic_ops/atomic_ops/Makefile	/^TEMPLATEFLAGS = $/;"	m
TEMPLATEFLAGS	src/atomic_ops/atomic_ops/amd64/Makefile	/^TEMPLATEFLAGS = $/;"	m
TEMPLATEFLAGS	src/atomic_ops/atomic_ops/i386/Makefile	/^TEMPLATEFLAGS = $/;"	m
TEMPLATEFLAGS	src/atomic_ops/atomic_ops/sparc/Makefile	/^TEMPLATEFLAGS = $/;"	m
TEMPLATEFLAGS	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^TEMPLATEFLAGS = $/;"	m
TEMPLATEFLAGS	src/atomic_ops/ia32/Makefile	/^TEMPLATEFLAGS = $/;"	m
TEMPLATEFLAGS	src/atomic_ops/ia32/sys/Makefile	/^TEMPLATEFLAGS = $/;"	m
TEMPLATEFLAGS	src/atomic_ops/intel/Makefile	/^TEMPLATEFLAGS = $/;"	m
TEMPLATEFLAGS	src/atomic_ops/intel/ia32/Makefile	/^TEMPLATEFLAGS = $/;"	m
TEMPLATEFLAGS	src/atomic_ops/intel/ia32/sys/Makefile	/^TEMPLATEFLAGS = $/;"	m
TEMPLATEFLAGS	src/atomic_ops/intel/sys/Makefile	/^TEMPLATEFLAGS = $/;"	m
TEMPLATEFLAGS	src/atomic_ops/sparc/Makefile	/^TEMPLATEFLAGS = $/;"	m
TEMPLATEFLAGS	src/atomic_ops/sparc/sys/Makefile	/^TEMPLATEFLAGS = $/;"	m
TEMPLATEFLAGS	src/common/Makefile	/^TEMPLATEFLAGS = $/;"	m
TEMPLATEFLAGS	src/common/tests/Makefile	/^TEMPLATEFLAGS = $/;"	m
TEMPLATEFLAGS	src/fc/Makefile	/^TEMPLATEFLAGS = $/;"	m
TEMPLATEFLAGS	src/fc/tests/Makefile	/^TEMPLATEFLAGS = $/;"	m
TEMPLATEFLAGS	src/sm/Makefile	/^TEMPLATEFLAGS = $/;"	m
TEMPLATEFLAGS	src/sm/smsh/Makefile	/^TEMPLATEFLAGS = $/;"	m
TEMPLATEFLAGS	src/sm/smsh/lib/Makefile	/^TEMPLATEFLAGS = $/;"	m
TEMPLATEFLAGS	src/sm/smsh/scripts/Makefile	/^TEMPLATEFLAGS = $/;"	m
TEMPLATEFLAGS	src/sm/tests/Makefile	/^TEMPLATEFLAGS = $/;"	m
TEMPLATEFLAGS	src/sthread/Makefile	/^TEMPLATEFLAGS = $/;"	m
TEMPLATEFLAGS	src/sthread/tests/Makefile	/^TEMPLATEFLAGS = $/;"	m
TEMPLATEFLAGS	tools/Makefile	/^TEMPLATEFLAGS = $/;"	m
TEMPLATE_ARGS	src/fc/block_alloc.h	136;"	d
TEMPLATE_ARGS	src/fc/block_alloc.h	237;"	d
TEMPLATE_ARGS	src/fc/mem_block.cpp	42;"	d	file:
TEMPLATE_ARGS	src/fc/tests/memblock.cpp	36;"	d	file:
TEST	src/fc/tests/Makefile	/^TEST = testall$/;"	m
TEST1	src/fc/tests/stats2.cpp	39;"	d	file:
TEST2	src/fc/tests/stats2.cpp	40;"	d	file:
TESTS	src/common/tests/Makefile	/^TESTS = testall$/;"	m
TESTS	src/fc/tests/Makefile	/^TESTS = testall$/;"	m
TESTS	src/sm/smsh/Makefile	/^TESTS = test-short$/;"	m
TESTS	src/sm/tests/Makefile	/^TESTS = testall$/;"	m
TESTS	src/sthread/tests/Makefile	/^TESTS = testall$/;"	m
TEST_EXTENSIONS	src/common/tests/Makefile	/^TEST_EXTENSIONS =  .test$/;"	m
TEST_EXTENSIONS	src/fc/tests/Makefile	/^TEST_EXTENSIONS =  .test$/;"	m
TEST_EXTENSIONS	src/sm/smsh/Makefile	/^TEST_EXTENSIONS =  .test$/;"	m
TEST_EXTENSIONS	src/sm/tests/Makefile	/^TEST_EXTENSIONS =  .test$/;"	m
TEST_EXTENSIONS	src/sthread/tests/Makefile	/^TEST_EXTENSIONS =  .test$/;"	m
TEST_LOGS	src/common/tests/Makefile	/^TEST_LOGS = $(am__test_logs2:.test.log=.log)$/;"	m
TEST_LOGS	src/fc/tests/Makefile	/^TEST_LOGS = $(am__test_logs2:.test.log=.log)$/;"	m
TEST_LOGS	src/sm/smsh/Makefile	/^TEST_LOGS = $(am__test_logs2:.test.log=.log)$/;"	m
TEST_LOGS	src/sm/tests/Makefile	/^TEST_LOGS = $(am__test_logs2:.test.log=.log)$/;"	m
TEST_LOGS	src/sthread/tests/Makefile	/^TEST_LOGS = $(am__test_logs2:.test.log=.log)$/;"	m
TEST_LOG_COMPILE	src/common/tests/Makefile	/^TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \\$/;"	m
TEST_LOG_COMPILE	src/fc/tests/Makefile	/^TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \\$/;"	m
TEST_LOG_COMPILE	src/sm/smsh/Makefile	/^TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \\$/;"	m
TEST_LOG_COMPILE	src/sm/tests/Makefile	/^TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \\$/;"	m
TEST_LOG_COMPILE	src/sthread/tests/Makefile	/^TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \\$/;"	m
TEST_LOG_DRIVER	src/common/tests/Makefile	/^TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)\/config\/test-driver$/;"	m
TEST_LOG_DRIVER	src/fc/tests/Makefile	/^TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)\/config\/test-driver$/;"	m
TEST_LOG_DRIVER	src/sm/smsh/Makefile	/^TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)\/config\/test-driver$/;"	m
TEST_LOG_DRIVER	src/sm/tests/Makefile	/^TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)\/config\/test-driver$/;"	m
TEST_LOG_DRIVER	src/sthread/tests/Makefile	/^TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)\/config\/test-driver$/;"	m
TEST_STAT_COLLECT_ENUM_GEN_H	src/fc/tests/test_stat_collect_enum_gen.h	2;"	d
TEST_STAT_COLLECT_GEN_CPP	src/fc/tests/test_stat_collect_gen.cpp	2;"	d	file:
TEST_STAT_DEC_GEN_CPP	src/fc/tests/test_stat_dec_gen.cpp	2;"	d	file:
TEST_STAT_GENFILES	src/fc/tests/Makefile	/^TEST_STAT_GENFILES = test_stat_struct_gen.h \\$/;"	m
TEST_STAT_H	src/fc/tests/test_stat.h	31;"	d
TEST_STAT_INC_GEN_CPP	src/fc/tests/test_stat_inc_gen.cpp	2;"	d	file:
TEST_STAT_MSG_GEN_H	src/fc/tests/test_stat_msg_gen.h	2;"	d
TEST_STAT_OUT_GEN_CPP	src/fc/tests/test_stat_out_gen.cpp	2;"	d	file:
TEST_STAT_STRUCT_GEN_H	src/fc/tests/test_stat_struct_gen.h	2;"	d
TEST_SUITE_LOG	src/common/tests/Makefile	/^TEST_SUITE_LOG = test-suite.log$/;"	m
TEST_SUITE_LOG	src/fc/tests/Makefile	/^TEST_SUITE_LOG = test-suite.log$/;"	m
TEST_SUITE_LOG	src/sm/smsh/Makefile	/^TEST_SUITE_LOG = test-suite.log$/;"	m
TEST_SUITE_LOG	src/sm/tests/Makefile	/^TEST_SUITE_LOG = test-suite.log$/;"	m
TEST_SUITE_LOG	src/sthread/tests/Makefile	/^TEST_SUITE_LOG = test-suite.log$/;"	m
THERE	src/common/regcomp.cpp	142;"	d	file:
THERETHERE	src/common/regcomp.cpp	143;"	d	file:
THE_LOG	src/sm/log_core.h	/^    static          log_core *THE_LOG;$/;"	m	class:log_core
THING	src/fc/tests/container.cpp	/^        THING(int i) : _i(i) { _me = this; }$/;"	f	struct:THING
THING	src/fc/tests/container.cpp	/^struct  THING {$/;"	s	file:
TID_T_H	src/common/tid_t.h	55;"	d
TLS_STRUCT	src/fc/tls.h	200;"	d
TL_stats	src/sm/smthread.h	/^        inline sm_stats_info_t& TL_stats() { return *_TL_stats;}$/;"	f	struct:smthread_t::tcb_t
TL_stats	src/sm/smthread.h	/^    inline sm_stats_info_t& TL_stats() { $/;"	f	class:smthread_t
TL_stats_const	src/sm/smthread.h	/^        inline const sm_stats_info_t& TL_stats_const() const { $/;"	f	struct:smthread_t::tcb_t
TMP_GET_STAT	src/sthread/vtable_sthread.cpp	127;"	d	file:
TMP_NOFLAG	src/sm/xct.cpp	3270;"	d	file:
TOD_MAX	src/fc/stime.cpp	70;"	d	file:
TOD_MAX	src/fc/stime.cpp	72;"	d	file:
TRACECODE	config/shore-config.h	443;"	d
TRACEIT	src/sm/histo.cpp	467;"	d	file:
TRACE_IDX	src/sm/histo.cpp	/^static __thread int TRACE_IDX=0; \/\/ DEBUGGING$/;"	v	file:
TRACE_LINE	src/sm/histo.cpp	/^static __thread struct trace_info TRACE_LINE[TRACE_NUM]; \/\/ DEBUGGING$/;"	v	typeref:struct:trace_info	file:
TRACE_NUM	src/sm/histo.cpp	/^const int  TRACE_NUM=10;$/;"	v
TRACE_START_TERM	src/sthread/sthread.cpp	442;"	d	file:
TRACE_VERIFY	src/sm/smsh/sort_funcs.cpp	49;"	d	file:
TRS	src/sm/bf_prefetch.cpp	116;"	d	file:
TRS	src/sm/bf_prefetch.cpp	83;"	d	file:
TUNE_FLAGS	Makefile	/^TUNE_FLAGS = -mtune=nocona$/;"	m
TUNE_FLAGS	config/Makefile	/^TUNE_FLAGS = -mtune=nocona$/;"	m
TUNE_FLAGS	src/Makefile	/^TUNE_FLAGS = -mtune=nocona$/;"	m
TUNE_FLAGS	src/atomic_ops/Makefile	/^TUNE_FLAGS = -mtune=nocona$/;"	m
TUNE_FLAGS	src/atomic_ops/asm_linkage/Makefile	/^TUNE_FLAGS = -mtune=nocona$/;"	m
TUNE_FLAGS	src/atomic_ops/asm_linkage/usr/Makefile	/^TUNE_FLAGS = -mtune=nocona$/;"	m
TUNE_FLAGS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^TUNE_FLAGS = -mtune=nocona$/;"	m
TUNE_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^TUNE_FLAGS = -mtune=nocona$/;"	m
TUNE_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^TUNE_FLAGS = -mtune=nocona$/;"	m
TUNE_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^TUNE_FLAGS = -mtune=nocona$/;"	m
TUNE_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^TUNE_FLAGS = -mtune=nocona$/;"	m
TUNE_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^TUNE_FLAGS = -mtune=nocona$/;"	m
TUNE_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^TUNE_FLAGS = -mtune=nocona$/;"	m
TUNE_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^TUNE_FLAGS = -mtune=nocona$/;"	m
TUNE_FLAGS	src/atomic_ops/atomic_ops/Makefile	/^TUNE_FLAGS = -mtune=nocona$/;"	m
TUNE_FLAGS	src/atomic_ops/atomic_ops/amd64/Makefile	/^TUNE_FLAGS = -mtune=nocona$/;"	m
TUNE_FLAGS	src/atomic_ops/atomic_ops/i386/Makefile	/^TUNE_FLAGS = -mtune=nocona$/;"	m
TUNE_FLAGS	src/atomic_ops/atomic_ops/sparc/Makefile	/^TUNE_FLAGS = -mtune=nocona$/;"	m
TUNE_FLAGS	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^TUNE_FLAGS = -mtune=nocona$/;"	m
TUNE_FLAGS	src/atomic_ops/ia32/Makefile	/^TUNE_FLAGS = -mtune=nocona$/;"	m
TUNE_FLAGS	src/atomic_ops/ia32/sys/Makefile	/^TUNE_FLAGS = -mtune=nocona$/;"	m
TUNE_FLAGS	src/atomic_ops/intel/Makefile	/^TUNE_FLAGS = -mtune=nocona$/;"	m
TUNE_FLAGS	src/atomic_ops/intel/ia32/Makefile	/^TUNE_FLAGS = -mtune=nocona$/;"	m
TUNE_FLAGS	src/atomic_ops/intel/ia32/sys/Makefile	/^TUNE_FLAGS = -mtune=nocona$/;"	m
TUNE_FLAGS	src/atomic_ops/intel/sys/Makefile	/^TUNE_FLAGS = -mtune=nocona$/;"	m
TUNE_FLAGS	src/atomic_ops/sparc/Makefile	/^TUNE_FLAGS = -mtune=nocona$/;"	m
TUNE_FLAGS	src/atomic_ops/sparc/sys/Makefile	/^TUNE_FLAGS = -mtune=nocona$/;"	m
TUNE_FLAGS	src/common/Makefile	/^TUNE_FLAGS = -mtune=nocona$/;"	m
TUNE_FLAGS	src/common/tests/Makefile	/^TUNE_FLAGS = -mtune=nocona$/;"	m
TUNE_FLAGS	src/fc/Makefile	/^TUNE_FLAGS = -mtune=nocona$/;"	m
TUNE_FLAGS	src/fc/tests/Makefile	/^TUNE_FLAGS = -mtune=nocona$/;"	m
TUNE_FLAGS	src/sm/Makefile	/^TUNE_FLAGS = -mtune=nocona$/;"	m
TUNE_FLAGS	src/sm/smsh/Makefile	/^TUNE_FLAGS = -mtune=nocona$/;"	m
TUNE_FLAGS	src/sm/smsh/lib/Makefile	/^TUNE_FLAGS = -mtune=nocona$/;"	m
TUNE_FLAGS	src/sm/smsh/scripts/Makefile	/^TUNE_FLAGS = -mtune=nocona$/;"	m
TUNE_FLAGS	src/sm/tests/Makefile	/^TUNE_FLAGS = -mtune=nocona$/;"	m
TUNE_FLAGS	src/sthread/Makefile	/^TUNE_FLAGS = -mtune=nocona$/;"	m
TUNE_FLAGS	src/sthread/tests/Makefile	/^TUNE_FLAGS = -mtune=nocona$/;"	m
TUNE_FLAGS	tools/Makefile	/^TUNE_FLAGS = -mtune=nocona$/;"	m
TYPE_INFO	src/sm/smsh/sm_sizeof.cpp	52;"	d	file:
T_ALIGNMENT	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	59;"	d
T_ALIGNMENT	src/atomic_ops/ia32/sys/trap.h	59;"	d
T_ALIGNMENT	src/atomic_ops/intel/ia32/sys/trap.h	59;"	d
T_AST	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	76;"	d
T_AST	src/atomic_ops/ia32/sys/trap.h	76;"	d
T_AST	src/atomic_ops/intel/ia32/sys/trap.h	76;"	d
T_BOUNDFLT	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	48;"	d
T_BOUNDFLT	src/atomic_ops/ia32/sys/trap.h	48;"	d
T_BOUNDFLT	src/atomic_ops/intel/ia32/sys/trap.h	48;"	d
T_BPTFLT	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	46;"	d
T_BPTFLT	src/atomic_ops/ia32/sys/trap.h	46;"	d
T_BPTFLT	src/atomic_ops/intel/ia32/sys/trap.h	46;"	d
T_DBGENTR	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	62;"	d
T_DBGENTR	src/atomic_ops/ia32/sys/trap.h	62;"	d
T_DBGENTR	src/atomic_ops/intel/ia32/sys/trap.h	62;"	d
T_DBLFLT	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	51;"	d
T_DBLFLT	src/atomic_ops/ia32/sys/trap.h	51;"	d
T_DBLFLT	src/atomic_ops/intel/ia32/sys/trap.h	51;"	d
T_DTRACE_RET	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	67;"	d
T_DTRACE_RET	src/atomic_ops/ia32/sys/trap.h	67;"	d
T_DTRACE_RET	src/atomic_ops/intel/ia32/sys/trap.h	67;"	d
T_ENDPERR	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	63;"	d
T_ENDPERR	src/atomic_ops/ia32/sys/trap.h	63;"	d
T_ENDPERR	src/atomic_ops/intel/ia32/sys/trap.h	63;"	d
T_ENOEXTFLT	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	64;"	d
T_ENOEXTFLT	src/atomic_ops/ia32/sys/trap.h	64;"	d
T_ENOEXTFLT	src/atomic_ops/intel/ia32/sys/trap.h	64;"	d
T_EXTERRFLT	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	58;"	d
T_EXTERRFLT	src/atomic_ops/ia32/sys/trap.h	58;"	d
T_EXTERRFLT	src/atomic_ops/intel/ia32/sys/trap.h	58;"	d
T_EXTOVRFLT	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	52;"	d
T_EXTOVRFLT	src/atomic_ops/ia32/sys/trap.h	52;"	d
T_EXTOVRFLT	src/atomic_ops/intel/ia32/sys/trap.h	52;"	d
T_FASTTRAP	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	65;"	d
T_FASTTRAP	src/atomic_ops/ia32/sys/trap.h	65;"	d
T_FASTTRAP	src/atomic_ops/intel/ia32/sys/trap.h	65;"	d
T_FAULT	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	75;"	d
T_FAULT	src/atomic_ops/ia32/sys/trap.h	75;"	d
T_FAULT	src/atomic_ops/intel/ia32/sys/trap.h	75;"	d
T_FGETFP	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	96;"	d
T_FGETFP	src/atomic_ops/ia32/sys/trap.h	96;"	d
T_FGETFP	src/atomic_ops/intel/ia32/sys/trap.h	96;"	d
T_FNULL	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	95;"	d
T_FNULL	src/atomic_ops/ia32/sys/trap.h	95;"	d
T_FNULL	src/atomic_ops/intel/ia32/sys/trap.h	95;"	d
T_FSETFP	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	97;"	d
T_FSETFP	src/atomic_ops/ia32/sys/trap.h	97;"	d
T_FSETFP	src/atomic_ops/intel/ia32/sys/trap.h	97;"	d
T_GETHRESTIME	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	100;"	d
T_GETHRESTIME	src/atomic_ops/ia32/sys/trap.h	100;"	d
T_GETHRESTIME	src/atomic_ops/intel/ia32/sys/trap.h	100;"	d
T_GETHRTIME	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	98;"	d
T_GETHRTIME	src/atomic_ops/ia32/sys/trap.h	98;"	d
T_GETHRTIME	src/atomic_ops/intel/ia32/sys/trap.h	98;"	d
T_GETHRVTIME	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	99;"	d
T_GETHRVTIME	src/atomic_ops/ia32/sys/trap.h	99;"	d
T_GETHRVTIME	src/atomic_ops/intel/ia32/sys/trap.h	99;"	d
T_GETLGRP	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	101;"	d
T_GETLGRP	src/atomic_ops/ia32/sys/trap.h	101;"	d
T_GETLGRP	src/atomic_ops/intel/ia32/sys/trap.h	101;"	d
T_GPFLT	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	56;"	d
T_GPFLT	src/atomic_ops/ia32/sys/trap.h	56;"	d
T_GPFLT	src/atomic_ops/intel/ia32/sys/trap.h	56;"	d
T_ILLINST	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	49;"	d
T_ILLINST	src/atomic_ops/ia32/sys/trap.h	49;"	d
T_ILLINST	src/atomic_ops/intel/ia32/sys/trap.h	49;"	d
T_INT80	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	68;"	d
T_INT80	src/atomic_ops/ia32/sys/trap.h	68;"	d
T_INT80	src/atomic_ops/intel/ia32/sys/trap.h	68;"	d
T_INTERRUPT	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	74;"	d
T_INTERRUPT	src/atomic_ops/ia32/sys/trap.h	74;"	d
T_INTERRUPT	src/atomic_ops/intel/ia32/sys/trap.h	74;"	d
T_LASTFAST	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	103;"	d
T_LASTFAST	src/atomic_ops/ia32/sys/trap.h	103;"	d
T_LASTFAST	src/atomic_ops/intel/ia32/sys/trap.h	103;"	d
T_MCE	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	60;"	d
T_MCE	src/atomic_ops/ia32/sys/trap.h	60;"	d
T_MCE	src/atomic_ops/intel/ia32/sys/trap.h	60;"	d
T_NMIFLT	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	45;"	d
T_NMIFLT	src/atomic_ops/ia32/sys/trap.h	45;"	d
T_NMIFLT	src/atomic_ops/intel/ia32/sys/trap.h	45;"	d
T_NOEXTFLT	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	50;"	d
T_NOEXTFLT	src/atomic_ops/ia32/sys/trap.h	50;"	d
T_NOEXTFLT	src/atomic_ops/intel/ia32/sys/trap.h	50;"	d
T_OVFLW	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	47;"	d
T_OVFLW	src/atomic_ops/ia32/sys/trap.h	47;"	d
T_OVFLW	src/atomic_ops/intel/ia32/sys/trap.h	47;"	d
T_PGFLT	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	57;"	d
T_PGFLT	src/atomic_ops/ia32/sys/trap.h	57;"	d
T_PGFLT	src/atomic_ops/intel/ia32/sys/trap.h	57;"	d
T_SEGFLT	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	54;"	d
T_SEGFLT	src/atomic_ops/ia32/sys/trap.h	54;"	d
T_SEGFLT	src/atomic_ops/intel/ia32/sys/trap.h	54;"	d
T_SGLSTP	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	44;"	d
T_SGLSTP	src/atomic_ops/ia32/sys/trap.h	44;"	d
T_SGLSTP	src/atomic_ops/intel/ia32/sys/trap.h	44;"	d
T_SIMDFPE	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	61;"	d
T_SIMDFPE	src/atomic_ops/ia32/sys/trap.h	61;"	d
T_SIMDFPE	src/atomic_ops/intel/ia32/sys/trap.h	61;"	d
T_SOFTINT	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	69;"	d
T_SOFTINT	src/atomic_ops/ia32/sys/trap.h	69;"	d
T_SOFTINT	src/atomic_ops/intel/ia32/sys/trap.h	69;"	d
T_STKFLT	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	55;"	d
T_STKFLT	src/atomic_ops/ia32/sys/trap.h	55;"	d
T_STKFLT	src/atomic_ops/intel/ia32/sys/trap.h	55;"	d
T_SYSCALL	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	77;"	d
T_SYSCALL	src/atomic_ops/ia32/sys/trap.h	77;"	d
T_SYSCALL	src/atomic_ops/intel/ia32/sys/trap.h	77;"	d
T_SYSCALLINT	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	66;"	d
T_SYSCALLINT	src/atomic_ops/ia32/sys/trap.h	66;"	d
T_SYSCALLINT	src/atomic_ops/intel/ia32/sys/trap.h	66;"	d
T_TSSFLT	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	53;"	d
T_TSSFLT	src/atomic_ops/ia32/sys/trap.h	53;"	d
T_TSSFLT	src/atomic_ops/intel/ia32/sys/trap.h	53;"	d
T_ZERODIV	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	43;"	d
T_ZERODIV	src/atomic_ops/ia32/sys/trap.h	43;"	d
T_ZERODIV	src/atomic_ops/intel/ia32/sys/trap.h	43;"	d
TestAssert	src/sthread/tests/thread1.cpp	/^bool	TestAssert = false;$/;"	v
TestErrorInThread	src/sthread/tests/thread1.cpp	/^bool	TestErrorInThread = true;$/;"	v
TestFatal	src/sthread/tests/thread1.cpp	/^bool	TestFatal = false;$/;"	v
ThreadFunc	src/sthread/sthread.h	/^class ThreadFunc$/;"	c
Tstats	src/sm/bf_core.h	/^    typedef bf_htab_stats_t Tstats;$/;"	t	class:bf_core_m
U	src/sm/sm_s.h	/^        U = 'U',                \/\/ unsigned integer (1,2,4), compressed$/;"	e	enum:key_type_s::type_t
UC	src/fc/tests/rand.cpp	/^typedef unsigned char UC;$/;"	t	file:
UD	src/common/basics.h	/^	static const lock_mode_t UD = w_base_t::UD;$/;"	m	namespace:locking
UD	src/fc/w_base.h	/^        UD,            \/* update (allow no more readers)    *\/$/;"	e	enum:w_base_t::lock_mode_t
ULONGLONGCONSTANT	src/fc/w_base.cpp	83;"	d	file:
ULONGLONGCONSTANT	src/fc/w_input.cpp	250;"	d	file:
UMEMCMP_H	src/common/umemcmp.h	31;"	d
UMOF	src/sm/newsort.cpp	/^typedef ssm_sort::UMOF UMOF;$/;"	t	file:
UMOF	src/sm/sort_s.h	/^typedef w_rc_t (*UMOF)($/;"	t	namespace:ssm_sort
UNDO_FUDGE_FACTOR	src/sm/xct.cpp	104;"	d	file:
USEBOL	src/common/regex2.h	168;"	d
USEEOL	src/common/regex2.h	169;"	d
USER_STACK_SIZE	src/sthread/sthread_core_pthread.cpp	79;"	d	file:
USE_BARRIER	src/sm/smsh/tcl_thread.h	76;"	d
USE_BLOCK_ALLOC_FOR_LOCK_STRUCTS	src/sm/lock_core.cpp	67;"	d	file:
USE_BLOCK_ALLOC_FOR_W_ERROR_T	src/fc/w_error.h	69;"	d
USE_EMPTY_EXT_FOUND	src/sm/sm_io.cpp	1835;"	d	file:
USE_MAP_ALIGN	src/fc/dynarray.cpp	40;"	d	file:
USE_OBJECT_CACHE_FOR_XCT_IMPL	src/sm/xct.cpp	540;"	d	file:
USE_OCC_LOCK_HERE	src/common/store_latch_manager.h	97;"	d
USE_OCC_LOCK_HERE	src/sm/btree_latch_manager.h	103;"	d
USE_PHYSICAL_CPUS	src/fc/cpu_info.cpp	260;"	d	file:
USE_POSIX_TIME	src/fc/stime.h	70;"	d
USE_PTHREAD_MUTEX	src/sthread/sthread.h	521;"	d
USE_REGEX	src/fc/w_debug.h	133;"	d
USE_YIELD	src/sthread/sthread.cpp	1089;"	d	file:
USING_VALGRIND	src/fc/w_defines.h	100;"	d
USING_VALGRIND	src/fc/w_defines.h	104;"	d
US_SECOND	src/fc/stime.cpp	54;"	d	file:
Usage	tools/errors.pl	/^Usage: $progname [-d] [-e] filename...$/;"	l
Usage	tools/errors.pl	/^sub Usage$/;"	s
Usage	tools/logdef.pl	/^Usage: $progname [--help] logdef_file$/;"	l
Usage	tools/logdef.pl	/^sub Usage$/;"	s
Usage	tools/stats.pl	/^Usage: $progname [-v] [-C] [--enumOnly] [--help] inputfile...$/;"	l
Usage	tools/stats.pl	/^sub Usage$/;"	s
V	src/common/tests/vectors.cpp	/^void V(const vec_t &a, int b, int c, vec_t &d)$/;"	f
V9BIAS64	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h	106;"	d
V9BIAS64	src/atomic_ops/sparc/sys/stack.h	106;"	d
VALGRIND_HELP_H	src/fc/valgrind_help.h	31;"	d
VCPP_BUG_1	src/fc/w_workaround.h	358;"	d
VEC_T_C	src/common/kvl_t.cpp	38;"	d	file:
VEC_T_C	src/common/stid_t.cpp	38;"	d	file:
VEC_T_C	src/common/vec_mkchunk.cpp	39;"	d	file:
VEC_T_C	src/common/vec_t.cpp	61;"	d	file:
VEC_T_H	src/common/vec_t.h	54;"	d
VEC_t	src/common/vec_t.h	/^struct VEC_t {$/;"	s
VERSION	Makefile	/^VERSION = 7.0.0$/;"	m
VERSION	config/Makefile	/^VERSION = 7.0.0$/;"	m
VERSION	config/shore-config.h	449;"	d
VERSION	src/Makefile	/^VERSION = 7.0.0$/;"	m
VERSION	src/atomic_ops/Makefile	/^VERSION = 7.0.0$/;"	m
VERSION	src/atomic_ops/asm_linkage/Makefile	/^VERSION = 7.0.0$/;"	m
VERSION	src/atomic_ops/asm_linkage/usr/Makefile	/^VERSION = 7.0.0$/;"	m
VERSION	src/atomic_ops/asm_linkage/usr/src/Makefile	/^VERSION = 7.0.0$/;"	m
VERSION	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^VERSION = 7.0.0$/;"	m
VERSION	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^VERSION = 7.0.0$/;"	m
VERSION	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^VERSION = 7.0.0$/;"	m
VERSION	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^VERSION = 7.0.0$/;"	m
VERSION	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^VERSION = 7.0.0$/;"	m
VERSION	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^VERSION = 7.0.0$/;"	m
VERSION	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^VERSION = 7.0.0$/;"	m
VERSION	src/atomic_ops/atomic_ops/Makefile	/^VERSION = 7.0.0$/;"	m
VERSION	src/atomic_ops/atomic_ops/amd64/Makefile	/^VERSION = 7.0.0$/;"	m
VERSION	src/atomic_ops/atomic_ops/i386/Makefile	/^VERSION = 7.0.0$/;"	m
VERSION	src/atomic_ops/atomic_ops/sparc/Makefile	/^VERSION = 7.0.0$/;"	m
VERSION	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^VERSION = 7.0.0$/;"	m
VERSION	src/atomic_ops/ia32/Makefile	/^VERSION = 7.0.0$/;"	m
VERSION	src/atomic_ops/ia32/sys/Makefile	/^VERSION = 7.0.0$/;"	m
VERSION	src/atomic_ops/intel/Makefile	/^VERSION = 7.0.0$/;"	m
VERSION	src/atomic_ops/intel/ia32/Makefile	/^VERSION = 7.0.0$/;"	m
VERSION	src/atomic_ops/intel/ia32/sys/Makefile	/^VERSION = 7.0.0$/;"	m
VERSION	src/atomic_ops/intel/sys/Makefile	/^VERSION = 7.0.0$/;"	m
VERSION	src/atomic_ops/sparc/Makefile	/^VERSION = 7.0.0$/;"	m
VERSION	src/atomic_ops/sparc/sys/Makefile	/^VERSION = 7.0.0$/;"	m
VERSION	src/common/Makefile	/^VERSION = 7.0.0$/;"	m
VERSION	src/common/tests/Makefile	/^VERSION = 7.0.0$/;"	m
VERSION	src/fc/Makefile	/^VERSION = 7.0.0$/;"	m
VERSION	src/fc/tests/Makefile	/^VERSION = 7.0.0$/;"	m
VERSION	src/fc/w_defines.h	84;"	d
VERSION	src/sm/Makefile	/^VERSION = 7.0.0$/;"	m
VERSION	src/sm/smsh/Makefile	/^VERSION = 7.0.0$/;"	m
VERSION	src/sm/smsh/lib/Makefile	/^VERSION = 7.0.0$/;"	m
VERSION	src/sm/smsh/scripts/Makefile	/^VERSION = 7.0.0$/;"	m
VERSION	src/sm/tests/Makefile	/^VERSION = 7.0.0$/;"	m
VERSION	src/sthread/Makefile	/^VERSION = 7.0.0$/;"	m
VERSION	src/sthread/tests/Makefile	/^VERSION = 7.0.0$/;"	m
VERSION	tools/Makefile	/^VERSION = 7.0.0$/;"	m
VERSION_MASK	src/fc/atomic_container.h	/^    enum { VERSION_MASK=0x3 }; \/\/alas. few versions $/;"	e	enum:atomic_container::__anon104
VERSION_MASK	src/fc/atomic_container.h	/^    enum { VERSION_MASK=0x7 };$/;"	e	enum:atomic_container::__anon103
VGC	src/fc/valgrind_help.cpp	/^static valgrind_check VGC;$/;"	v	file:
VID_T	src/common/lid_t.h	/^typedef uint2_t VID_T;$/;"	t
VID_T_C	src/common/vid_t.cpp	34;"	d	file:
VID_T_H	src/common/vid_t.h	31;"	d
VOIDSSMTEST	src/sm/crash.h	67;"	d
VOIDSSMTEST	src/sm/crash.h	72;"	d
VOLUME_FORMAT	src/sm/sm.cpp	167;"	d	file:
VOL_C	src/sm/vol.cpp	58;"	d	file:
VOL_H	src/sm/vol.h	54;"	d
VTABLE_INFO_H	src/fc/vtable.h	31;"	d
VTABLE_SM_C	src/sm/vtable_sm.cpp	35;"	d	file:
Value	src/fc/w_heap.h	/^T& Heap<T, Cmp>::Value(int i)$/;"	f	class:Heap
VolidCnt	src/sm/xct.cpp	/^        VolidCnt() : unique_vols(0) {};$/;"	f	class:VolidCnt
VolidCnt	src/sm/xct.cpp	/^class VolidCnt {$/;"	c	file:
VolumeLock	src/sm/sm_io.h	/^    typedef mcs_rwlock VolumeLock;$/;"	t	class:io_m
VolumeLock	src/sm/vol.h	/^    typedef mcs_rwlock VolumeLock;$/;"	t	class:vol_t
WAITING	src/sm/log_core.cpp	/^} const WAITING = {{0,1,0}}, ABORT_ME = {{0,1,1}};$/;"	v	file:
WAIT_FOREVER	src/sm/smthread.h	/^    WAIT_FOREVER = sthread_t::WAIT_FOREVER,$/;"	e	enum:special_timeout_in_ms_t
WAIT_FOREVER	src/sthread/sthread.h	/^    WAIT_FOREVER     = -1,$/;"	e	enum:sthread_base_t::timeout_t
WAIT_IMMEDIATE	src/sm/smthread.h	/^    WAIT_IMMEDIATE = sthread_t::WAIT_IMMEDIATE,$/;"	e	enum:special_timeout_in_ms_t
WAIT_IMMEDIATE	src/sthread/sthread.h	/^    WAIT_IMMEDIATE     = 0, $/;"	e	enum:sthread_base_t::timeout_t
WAIT_NOT_USED	src/sthread/sthread.h	/^    WAIT_NOT_USED = -6 \/\/ indicates last negative number used by sthreads$/;"	e	enum:sthread_base_t::timeout_t
WAIT_SPECIFIED_BY_THREAD	src/sm/smthread.h	/^    WAIT_SPECIFIED_BY_THREAD = sthread_t::WAIT_SPECIFIED_BY_THREAD$/;"	e	enum:special_timeout_in_ms_t
WAIT_SPECIFIED_BY_THREAD	src/sthread/sthread.h	/^    WAIT_SPECIFIED_BY_THREAD     = -4, \/\/ used by lock manager$/;"	e	enum:sthread_base_t::timeout_t
WAIT_SPECIFIED_BY_XCT	src/sm/smthread.h	/^    WAIT_SPECIFIED_BY_XCT = sthread_t::WAIT_SPECIFIED_BY_XCT,$/;"	e	enum:special_timeout_in_ms_t
WAIT_SPECIFIED_BY_XCT	src/sthread/sthread.h	/^    WAIT_SPECIFIED_BY_XCT = -5, \/\/ used by lock manager$/;"	e	enum:sthread_base_t::timeout_t
WINDOWSIZE	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h	115;"	d
WINDOWSIZE	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h	126;"	d
WINDOWSIZE	src/atomic_ops/sparc/sys/stack.h	115;"	d
WINDOWSIZE	src/atomic_ops/sparc/sys/stack.h	126;"	d
WINDOWSIZE32	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h	64;"	d
WINDOWSIZE32	src/atomic_ops/sparc/sys/stack.h	64;"	d
WINDOWSIZE64	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h	102;"	d
WINDOWSIZE64	src/atomic_ops/sparc/sys/stack.h	102;"	d
WORDS	src/fc/w_bitvector.h	/^    enum { WORDS = (BITS+BITS_PER_WORD-1)\/BITS_PER_WORD };$/;"	e	enum:w_bitvector_t::__anon122
WORDS_BIGENDIAN	config/shore-config.h	458;"	d
WRITER	src/sthread/srwlock.h	/^    enum rwmode_t { NONE=0, WRITER=0x1, READER=0x2 };$/;"	e	enum:mcs_rwlock::rwmode_t
WRITER	src/sthread/sthread.h	/^    enum { WRITER=1, READER=2 };$/;"	e	enum:occ_rwlock::__anon142
W_ADDR	src/fc/w_base.h	254;"	d
W_AUTODEL_H	src/fc/w_autodel.h	54;"	d
W_BASE_H	src/fc/w_base.h	54;"	d
W_BITMAP_H	src/fc/w_bitmap.h	31;"	d
W_COERCE	src/fc/w_rc.h	759;"	d
W_COERCE_MSG	src/fc/w_rc.h	771;"	d
W_CUCKOOHASHFUNCS_H	src/fc/w_hashing.h	58;"	d
W_DEBUG_H	src/fc/w_debug.h	54;"	d
W_DEBUG_LEVEL	config/shore-config.h	467;"	d
W_DEBUG_LEVEL	src/fc/w_base.h	189;"	d
W_DEBUG_RC	config/shore-config.h	470;"	d
W_DEFINES_H	src/fc/w_defines.h	54;"	d
W_DO	src/fc/w_rc.h	660;"	d
W_DO_GOTO	src/fc/w_rc.h	702;"	d
W_DO_MSG	src/fc/w_rc.h	672;"	d
W_DO_PUSH	src/fc/w_rc.h	717;"	d
W_DO_PUSH_MSG	src/fc/w_rc.h	730;"	d
W_EDO	src/fc/w_rc.h	645;"	d
W_ENUM	src/fc/w_base.h	245;"	d
W_ERROR_H	src/fc/w_error.h	54;"	d
W_EXPECT	src/fc/w_rc.h	560;"	d
W_EXPECT	src/fc/w_rc.h	573;"	d
W_EXPECT_NOT	src/fc/w_rc.h	566;"	d
W_EXPECT_NOT	src/fc/w_rc.h	579;"	d
W_FATAL	src/fc/w_rc.h	783;"	d
W_FATAL_MSG	src/fc/w_rc.h	793;"	d
W_FATAL_RC	src/fc/w_rc.h	788;"	d
W_FORM	src/fc/w_workaround.h	336;"	d
W_FORM	src/fc/w_workaround.h	338;"	d
W_FORM2	src/fc/w_workaround.h	347;"	d
W_GCC_PREREQ	src/fc/w_workaround.h	82;"	d
W_GCC_THIS_VER	src/fc/w_workaround.h	75;"	d
W_GCC_THIS_VER	src/fc/w_workaround.h	77;"	d
W_GCC_VER	src/fc/w_workaround.h	72;"	d
W_GETTIMEOFDAY_H	src/fc/w_gettimeofday.h	31;"	d
W_H	src/fc/w.h	30;"	d
W_HASH_ARG	src/fc/w_hash.h	217;"	d
W_HASH_H	src/fc/w_hash.h	55;"	d
W_HEAP_H	src/fc/w_heap.h	31;"	d
W_IFDEBUG	src/fc/w_base.h	136;"	d
W_IFDEBUG	src/fc/w_base.h	139;"	d
W_IFDEBUG	src/fc/w_base.h	144;"	d
W_IFDEBUG	src/fc/w_base.h	149;"	d
W_IFDEBUG	src/fc/w_base.h	154;"	d
W_IFDEBUG	src/fc/w_base.h	159;"	d
W_IFDEBUG1	src/fc/w_base.h	101;"	d
W_IFDEBUG1	src/fc/w_base.h	104;"	d
W_IFDEBUG1	src/sm/logrec.cpp	/^alloc_file_page_log::undo(page_p* W_IFDEBUG1(already_fixed))$/;"	f	class:alloc_file_page_log
W_IFDEBUG1	src/sthread/io.cpp	/^void sthread_t::align_for_sm(size_t W_IFDEBUG1(requested_size))$/;"	f	class:sthread_t
W_IFDEBUG2	src/fc/w_base.h	109;"	d
W_IFDEBUG2	src/fc/w_base.h	112;"	d
W_IFDEBUG2	src/sm/newsort.cpp	/^        int W_IFDEBUG2(n))$/;"	f
W_IFDEBUG3	src/fc/w_base.h	117;"	d
W_IFDEBUG3	src/fc/w_base.h	120;"	d
W_IFDEBUG3	src/sm/newsort.cpp	/^void  tape_t::check_tape_file(bool W_IFDEBUG3(printall)) const$/;"	f	class:tape_t
W_IFDEBUG4	src/fc/w_base.h	125;"	d
W_IFDEBUG4	src/fc/w_base.h	128;"	d
W_IFDEBUG9	src/fc/w_base.h	132;"	d
W_IFDEBUG9	src/sm/logrec.cpp	/^btree_insert_log::undo(page_p* W_IFDEBUG9(page))$/;"	f	class:btree_insert_log
W_IFDEBUG9	src/sm/logrec.cpp	/^btree_remove_log::undo(page_p* W_IFDEBUG9(page))$/;"	f	class:btree_remove_log
W_IFDEBUG9	src/sm/logrec.cpp	/^comment_log::redo(page_p * W_IFDEBUG9(page))$/;"	f	class:comment_log
W_IFDEBUG9	src/sm/logrec.cpp	/^comment_log::undo(page_p * W_IFDEBUG9(page))$/;"	f	class:comment_log
W_IFDEBUG9	src/sm/logrec.cpp	/^rtree_insert_log::undo(page_p* W_IFDEBUG9(page))$/;"	f	class:rtree_insert_log
W_IFDEBUG9	src/sm/logrec.cpp	/^rtree_remove_log::undo(page_p* W_IFDEBUG9(page))$/;"	f	class:rtree_remove_log
W_IFDEBUG9	src/sm/logrec.cpp	/^void dismount_vol_log::redo(page_p* W_IFDEBUG9(page))$/;"	f	class:dismount_vol_log
W_IFDEBUG9	src/sm/logrec.cpp	/^void mount_vol_log::redo(page_p* W_IFDEBUG9(page))$/;"	f	class:mount_vol_log
W_IFEGCS	src/sm/sm.cpp	89;"	d	file:
W_IFEGCS	src/sm/sm.cpp	91;"	d	file:
W_IFNDEBUG	src/fc/w_base.h	137;"	d
W_IFNDEBUG	src/fc/w_base.h	140;"	d
W_IFNDEBUG	src/fc/w_base.h	145;"	d
W_IFNDEBUG	src/fc/w_base.h	150;"	d
W_IFNDEBUG	src/fc/w_base.h	155;"	d
W_IFNDEBUG	src/fc/w_base.h	162;"	d
W_IFNDEBUG1	src/fc/w_base.h	102;"	d
W_IFNDEBUG1	src/fc/w_base.h	105;"	d
W_IFNDEBUG2	src/fc/w_base.h	110;"	d
W_IFNDEBUG2	src/fc/w_base.h	113;"	d
W_IFNDEBUG3	src/fc/w_base.h	118;"	d
W_IFNDEBUG3	src/fc/w_base.h	121;"	d
W_IFNDEBUG4	src/fc/w_base.h	126;"	d
W_IFNDEBUG4	src/fc/w_base.h	129;"	d
W_IFNDEBUG9	src/fc/w_base.h	133;"	d
W_IFNTRACE	src/fc/w_base.h	169;"	d
W_IFNTRACE	src/fc/w_base.h	172;"	d
W_IFTRACE	src/fc/w_base.h	168;"	d
W_IFTRACE	src/fc/w_base.h	171;"	d
W_IFTRACE	src/sm/zkeyed.cpp	/^           const char *W_IFTRACE(string)) const$/;"	f
W_IGNORE	src/fc/w_rc.h	798;"	d
W_INCL_LIST_EX	src/fc/tests/list3.cpp	37;"	d	file:
W_KEYED_ARG	src/fc/w_list.h	578;"	d
W_LARGEFILE_AWARE_H	src/fc/largefile_aware.h	31;"	d
W_LIST_ARG	src/fc/w_list.h	408;"	d
W_LIST_H	src/fc/w_list.h	54;"	d
W_MINMAX_H	src/fc/w_minmax.h	31;"	d
W_NEWER_STL	src/fc/w_workaround.h	257;"	d
W_NO_TEMPLATE_FORWARD_DECLS	src/common/w_opaque.h	50;"	d
W_OPAQUE_H	src/common/w_opaque.h	31;"	d
W_RC_H	src/fc/w_rc.h	54;"	d
W_RETURN_RC_MSG	src/fc/w_rc.h	628;"	d
W_RUSAGE_H	src/fc/w_rusage.h	31;"	d
W_SOURCE	src/fc/w_base.cpp	57;"	d	file:
W_SOURCE	src/fc/w_bitmap.cpp	34;"	d	file:
W_SOURCE	src/fc/w_error.cpp	63;"	d	file:
W_SOURCE	src/fc/w_input.cpp	34;"	d	file:
W_SOURCE	src/fc/w_listm.cpp	34;"	d	file:
W_SOURCE	src/fc/w_rc.cpp	61;"	d	file:
W_SPACE	src/fc/w_base.h	177;"	d
W_SPACE	src/fc/w_base.h	179;"	d
W_STAT_H	src/fc/w_stat.h	31;"	d
W_STREAM_H	src/fc/w_stream.h	31;"	d
W_STRSTREAM_H	src/fc/w_strstream.h	54;"	d
W_STRSTREAM_NEED_SETB	src/fc/w_strstream.h	193;"	d
W_STRSTREAM_NEED_SETB	src/fc/w_strstream.h	225;"	d
W_TCL_VER	src/sm/smsh/tcl_workaround.h	42;"	d
W_THIS_TCL_VER	src/sm/smsh/tcl_workaround.h	44;"	d
W_TRACE	config/shore-config.h	478;"	d
W_UNIX	src/fc/w_base.h	83;"	d
W_UNUSED	src/fc/w_base.h	97;"	d
W_USE_COMPAT_STRSTREAM	config/shore-config.h	483;"	d
W_VOID	src/sm/lock.cpp	70;"	d	file:
W_WARNINGS	Makefile	/^W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated $/;"	m
W_WARNINGS	config/Makefile	/^W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated $/;"	m
W_WARNINGS	src/Makefile	/^W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated $/;"	m
W_WARNINGS	src/atomic_ops/Makefile	/^W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated $/;"	m
W_WARNINGS	src/atomic_ops/asm_linkage/Makefile	/^W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated $/;"	m
W_WARNINGS	src/atomic_ops/asm_linkage/usr/Makefile	/^W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated $/;"	m
W_WARNINGS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated $/;"	m
W_WARNINGS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated $/;"	m
W_WARNINGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated $/;"	m
W_WARNINGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated $/;"	m
W_WARNINGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated $/;"	m
W_WARNINGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated $/;"	m
W_WARNINGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated $/;"	m
W_WARNINGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated $/;"	m
W_WARNINGS	src/atomic_ops/atomic_ops/Makefile	/^W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated $/;"	m
W_WARNINGS	src/atomic_ops/atomic_ops/amd64/Makefile	/^W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated $/;"	m
W_WARNINGS	src/atomic_ops/atomic_ops/i386/Makefile	/^W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated $/;"	m
W_WARNINGS	src/atomic_ops/atomic_ops/sparc/Makefile	/^W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated $/;"	m
W_WARNINGS	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated $/;"	m
W_WARNINGS	src/atomic_ops/ia32/Makefile	/^W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated $/;"	m
W_WARNINGS	src/atomic_ops/ia32/sys/Makefile	/^W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated $/;"	m
W_WARNINGS	src/atomic_ops/intel/Makefile	/^W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated $/;"	m
W_WARNINGS	src/atomic_ops/intel/ia32/Makefile	/^W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated $/;"	m
W_WARNINGS	src/atomic_ops/intel/ia32/sys/Makefile	/^W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated $/;"	m
W_WARNINGS	src/atomic_ops/intel/sys/Makefile	/^W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated $/;"	m
W_WARNINGS	src/atomic_ops/sparc/Makefile	/^W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated $/;"	m
W_WARNINGS	src/atomic_ops/sparc/sys/Makefile	/^W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated $/;"	m
W_WARNINGS	src/common/Makefile	/^W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated $/;"	m
W_WARNINGS	src/common/tests/Makefile	/^W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated $/;"	m
W_WARNINGS	src/fc/Makefile	/^W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated $/;"	m
W_WARNINGS	src/fc/tests/Makefile	/^W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated $/;"	m
W_WARNINGS	src/sm/Makefile	/^W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated $/;"	m
W_WARNINGS	src/sm/smsh/Makefile	/^W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated $/;"	m
W_WARNINGS	src/sm/smsh/lib/Makefile	/^W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated $/;"	m
W_WARNINGS	src/sm/smsh/scripts/Makefile	/^W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated $/;"	m
W_WARNINGS	src/sm/tests/Makefile	/^W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated $/;"	m
W_WARNINGS	src/sthread/Makefile	/^W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated $/;"	m
W_WARNINGS	src/sthread/tests/Makefile	/^W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated $/;"	m
W_WARNINGS	tools/Makefile	/^W_WARNINGS = $(GCC_WARN_FLAGS) -Wno-deprecated $/;"	m
W_WORKAROUND_H	src/fc/w_workaround.h	54;"	d
W_bf_htab_stats_t	src/sm/bf_htab_stats_t_struct_gen.h	71;"	d
W_sm_stats_t	src/sm/sm_stats_t_struct_gen.h	298;"	d
W_sthread_stats	src/sthread/sthread_stats_struct_gen.h	56;"	d
W_test_stat	src/fc/tests/test_stat_struct_gen.h	60;"	d
Word	src/fc/w_bitvector.h	/^    typedef unsigned long Word;$/;"	t	class:w_bitvector_t
XCT_C	src/sm/smsh/out_of_log_space.cpp	27;"	d	file:
XCT_C	src/sm/tests/log_exceed.cpp	44;"	d	file:
XCT_C	src/sm/vtable_xct.cpp	35;"	d	file:
XCT_C	src/sm/xct.cpp	59;"	d	file:
XCT_DEPENDENT_H	src/sm/xct_dependent.h	31;"	d
XCT_H	src/sm/xct.h	54;"	d
XFERSIZE	src/sm/partition.h	/^    enum { XFERSIZE = 8192 };$/;"	e	enum:partition_t::__anon33
XMM_ALIGN	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	114;"	d
XMM_ALIGN	src/atomic_ops/ia32/sys/asm_linkage.h	114;"	d
XMM_ALIGN	src/atomic_ops/intel/ia32/sys/asm_linkage.h	114;"	d
XMM_SIZE	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	113;"	d
XMM_SIZE	src/atomic_ops/ia32/sys/asm_linkage.h	113;"	d
XMM_SIZE	src/atomic_ops/intel/ia32/sys/asm_linkage.h	113;"	d
XTABLE	src/fc/w_input.cpp	/^typedef enum states XTABLE[no_charclass][no_state];$/;"	t	typeref:enum:states	file:
X_DO	src/sm/xct.h	718;"	d
X_DO	src/sm/xct.h	722;"	d
X_DO1	src/sm/xct.h	707;"	d
X_LOG_COMMENT_ON	src/sm/xct.h	72;"	d
X_LOG_COMMENT_ON	src/sm/xct.h	79;"	d
XctPtrHeap	src/sm/restart.cpp	/^typedef class Heap<xct_t*, CmpXctUndoLsns> XctPtrHeap;$/;"	t	typeref:class:Heap	file:
Xget_dstatsnoaudit	src/sm/smsh/lib/smsh.tcl	/^proc Xget_dstatsnoaudit {volid au} {$/;"	p
YES_INLINE_FLAGS	Makefile	/^YES_INLINE_FLAGS = -finline-functions$/;"	m
YES_INLINE_FLAGS	config/Makefile	/^YES_INLINE_FLAGS = -finline-functions$/;"	m
YES_INLINE_FLAGS	src/Makefile	/^YES_INLINE_FLAGS = -finline-functions$/;"	m
YES_INLINE_FLAGS	src/atomic_ops/Makefile	/^YES_INLINE_FLAGS = -finline-functions$/;"	m
YES_INLINE_FLAGS	src/atomic_ops/asm_linkage/Makefile	/^YES_INLINE_FLAGS = -finline-functions$/;"	m
YES_INLINE_FLAGS	src/atomic_ops/asm_linkage/usr/Makefile	/^YES_INLINE_FLAGS = -finline-functions$/;"	m
YES_INLINE_FLAGS	src/atomic_ops/asm_linkage/usr/src/Makefile	/^YES_INLINE_FLAGS = -finline-functions$/;"	m
YES_INLINE_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^YES_INLINE_FLAGS = -finline-functions$/;"	m
YES_INLINE_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^YES_INLINE_FLAGS = -finline-functions$/;"	m
YES_INLINE_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^YES_INLINE_FLAGS = -finline-functions$/;"	m
YES_INLINE_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^YES_INLINE_FLAGS = -finline-functions$/;"	m
YES_INLINE_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^YES_INLINE_FLAGS = -finline-functions$/;"	m
YES_INLINE_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^YES_INLINE_FLAGS = -finline-functions$/;"	m
YES_INLINE_FLAGS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^YES_INLINE_FLAGS = -finline-functions$/;"	m
YES_INLINE_FLAGS	src/atomic_ops/atomic_ops/Makefile	/^YES_INLINE_FLAGS = -finline-functions$/;"	m
YES_INLINE_FLAGS	src/atomic_ops/atomic_ops/amd64/Makefile	/^YES_INLINE_FLAGS = -finline-functions$/;"	m
YES_INLINE_FLAGS	src/atomic_ops/atomic_ops/i386/Makefile	/^YES_INLINE_FLAGS = -finline-functions$/;"	m
YES_INLINE_FLAGS	src/atomic_ops/atomic_ops/sparc/Makefile	/^YES_INLINE_FLAGS = -finline-functions$/;"	m
YES_INLINE_FLAGS	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^YES_INLINE_FLAGS = -finline-functions$/;"	m
YES_INLINE_FLAGS	src/atomic_ops/ia32/Makefile	/^YES_INLINE_FLAGS = -finline-functions$/;"	m
YES_INLINE_FLAGS	src/atomic_ops/ia32/sys/Makefile	/^YES_INLINE_FLAGS = -finline-functions$/;"	m
YES_INLINE_FLAGS	src/atomic_ops/intel/Makefile	/^YES_INLINE_FLAGS = -finline-functions$/;"	m
YES_INLINE_FLAGS	src/atomic_ops/intel/ia32/Makefile	/^YES_INLINE_FLAGS = -finline-functions$/;"	m
YES_INLINE_FLAGS	src/atomic_ops/intel/ia32/sys/Makefile	/^YES_INLINE_FLAGS = -finline-functions$/;"	m
YES_INLINE_FLAGS	src/atomic_ops/intel/sys/Makefile	/^YES_INLINE_FLAGS = -finline-functions$/;"	m
YES_INLINE_FLAGS	src/atomic_ops/sparc/Makefile	/^YES_INLINE_FLAGS = -finline-functions$/;"	m
YES_INLINE_FLAGS	src/atomic_ops/sparc/sys/Makefile	/^YES_INLINE_FLAGS = -finline-functions$/;"	m
YES_INLINE_FLAGS	src/common/Makefile	/^YES_INLINE_FLAGS = -finline-functions$/;"	m
YES_INLINE_FLAGS	src/common/tests/Makefile	/^YES_INLINE_FLAGS = -finline-functions$/;"	m
YES_INLINE_FLAGS	src/fc/Makefile	/^YES_INLINE_FLAGS = -finline-functions$/;"	m
YES_INLINE_FLAGS	src/fc/tests/Makefile	/^YES_INLINE_FLAGS = -finline-functions$/;"	m
YES_INLINE_FLAGS	src/sm/Makefile	/^YES_INLINE_FLAGS = -finline-functions$/;"	m
YES_INLINE_FLAGS	src/sm/smsh/Makefile	/^YES_INLINE_FLAGS = -finline-functions$/;"	m
YES_INLINE_FLAGS	src/sm/smsh/lib/Makefile	/^YES_INLINE_FLAGS = -finline-functions$/;"	m
YES_INLINE_FLAGS	src/sm/smsh/scripts/Makefile	/^YES_INLINE_FLAGS = -finline-functions$/;"	m
YES_INLINE_FLAGS	src/sm/tests/Makefile	/^YES_INLINE_FLAGS = -finline-functions$/;"	m
YES_INLINE_FLAGS	src/sthread/Makefile	/^YES_INLINE_FLAGS = -finline-functions$/;"	m
YES_INLINE_FLAGS	src/sthread/tests/Makefile	/^YES_INLINE_FLAGS = -finline-functions$/;"	m
YES_INLINE_FLAGS	tools/Makefile	/^YES_INLINE_FLAGS = -finline-functions$/;"	m
ZERO_INIT	src/fc/w_defines.h	102;"	d
ZERO_INIT	src/fc/w_defines.h	106;"	d
ZERO_INIT	src/fc/w_defines.h	96;"	d
ZKEYED_C	src/sm/zkeyed.cpp	71;"	d	file:
ZKEYED_H	src/sm/zkeyed.h	31;"	d
Zero	src/sm/tests/htab.cpp	/^    typedef enum { Zero, Init, Inserted, Evicted, Returned, Removed } Status;$/;"	e	enum:htab_tester::__anon97	file:
_1thread_log	src/sm/xct.h	/^    mutable queue_based_lock_t   _1thread_log;$/;"	m	class:xct_t
_1thread_log_me	src/sm/smthread.h	/^        queue_based_lock_t::ext_qnode _1thread_log_me;$/;"	m	struct:smthread_t::tcb_t
_1thread_xct	src/sm/xct.h	/^        queue_based_lock_t     _1thread_xct;$/;"	m	struct:xct_t::xct_core
_1thread_xct_me	src/sm/smthread.h	/^        queue_based_lock_t::ext_qnode _1thread_xct_me;$/;"	m	struct:smthread_t::tcb_t
_ALIGN_F8	src/sm/lexify.cpp	151;"	d	file:
_ALIGN_F8	src/sm/lexify.cpp	153;"	d	file:
_ALIGN_F8	src/sm/newsort.cpp	109;"	d	file:
_ALIGN_F8	src/sm/newsort.cpp	112;"	d	file:
_ALIGN_IU8	src/sm/lexify.cpp	145;"	d	file:
_ALIGN_IU8	src/sm/lexify.cpp	147;"	d	file:
_ALIGN_IU8	src/sm/newsort.cpp	110;"	d	file:
_ALIGN_IU8	src/sm/newsort.cpp	113;"	d	file:
_AllocateBucket	src/sm/dir.cpp	/^sdesc_cache_t::_AllocateBucket(uint4_t bucket)$/;"	f	class:sdesc_cache_t
_AllocateBucketArray	src/sm/dir.cpp	/^sdesc_cache_t::_AllocateBucketArray(int newSize)$/;"	f	class:sdesc_cache_t
_BITNOT	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	60;"	d
_BITNOT	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	73;"	d
_BITNOT	src/atomic_ops/ia32/sys/asm_linkage.h	60;"	d
_BITNOT	src/atomic_ops/ia32/sys/asm_linkage.h	73;"	d
_BITNOT	src/atomic_ops/intel/ia32/sys/asm_linkage.h	60;"	d
_BITNOT	src/atomic_ops/intel/ia32/sys/asm_linkage.h	73;"	d
_Base	src/fc/w_compat_strstream.h	/^  typedef basic_streambuf<char, _Traits> _Base;$/;"	t	class:shore_compat::strstreambuf
_CONST	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	59;"	d
_CONST	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	72;"	d
_CONST	src/atomic_ops/ia32/sys/asm_linkage.h	59;"	d
_CONST	src/atomic_ops/ia32/sys/asm_linkage.h	72;"	d
_CONST	src/atomic_ops/intel/ia32/sys/asm_linkage.h	59;"	d
_CONST	src/atomic_ops/intel/ia32/sys/asm_linkage.h	72;"	d
_DATA_ACCESS_HISTOGRAM_H	src/sm/data_access_histogram.h	37;"	d
_DoubleBucketArray	src/sm/dir.cpp	/^sdesc_cache_t::_DoubleBucketArray()$/;"	f	class:sdesc_cache_t
_GNU_SOURCE	src/sthread/sdisk_unix.cpp	75;"	d	file:
_IA32_SYS_ASM_LINKAGE_H	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	28;"	d
_IA32_SYS_ASM_LINKAGE_H	src/atomic_ops/ia32/sys/asm_linkage.h	28;"	d
_IA32_SYS_ASM_LINKAGE_H	src/atomic_ops/intel/ia32/sys/asm_linkage.h	28;"	d
_IA32_SYS_STACK_H	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/stack.h	28;"	d
_IA32_SYS_STACK_H	src/atomic_ops/ia32/sys/stack.h	28;"	d
_IA32_SYS_STACK_H	src/atomic_ops/intel/ia32/sys/stack.h	28;"	d
_IA32_SYS_TRAP_H	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/trap.h	31;"	d
_IA32_SYS_TRAP_H	src/atomic_ops/ia32/sys/trap.h	31;"	d
_IA32_SYS_TRAP_H	src/atomic_ops/intel/ia32/sys/trap.h	31;"	d
_INCLUDE_XOPEN_SOURCE	src/common/regex_posix.h	20;"	d
_INT64_TYPE	src/atomic_ops/atomic_ops.h	47;"	d
_INT64_TYPE	src/atomic_ops/atomic_ops.h	61;"	d
_INT64_TYPE_DEFINED	src/atomic_ops/atomic_ops.h	48;"	d
_INT64_TYPE_DEFINED	src/atomic_ops/atomic_ops.h	62;"	d
_KEY_RANGES_MAP_H	src/sm/key_ranges_map.h	40;"	d
_KeyCmp	src/sm/newsort.cpp	/^run_mgr::_KeyCmp(const meta_header_t *_k1, const meta_header_t* _k2) const$/;"	f	class:run_mgr
_M	src/sm/newsort.cpp	/^    int                _M;$/;"	m	class:ssm_sort::run_mgr	file:
_MUL	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	61;"	d
_MUL	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/asm_linkage.h	74;"	d
_MUL	src/atomic_ops/ia32/sys/asm_linkage.h	61;"	d
_MUL	src/atomic_ops/ia32/sys/asm_linkage.h	74;"	d
_MUL	src/atomic_ops/intel/ia32/sys/asm_linkage.h	61;"	d
_MUL	src/atomic_ops/intel/ia32/sys/asm_linkage.h	74;"	d
_M_alloc	src/fc/w_compat_strstream.cpp	/^char* strstreambuf::_M_alloc(size_t n)$/;"	f	class:shore_compat::strstreambuf
_M_alloc_fun	src/fc/w_compat_strstream.h	/^  void* (*_M_alloc_fun)(size_t);$/;"	m	class:shore_compat::strstreambuf
_M_buf	src/fc/w_compat_strstream.h	/^  strstreambuf _M_buf;$/;"	m	class:shore_compat::istrstream
_M_buf	src/fc/w_compat_strstream.h	/^  strstreambuf _M_buf;$/;"	m	class:shore_compat::ostrstream
_M_free	src/fc/w_compat_strstream.cpp	/^void strstreambuf::_M_free(char* p)$/;"	f	class:shore_compat::strstreambuf
_M_free_fun	src/fc/w_compat_strstream.h	/^  void  (*_M_free_fun)(void*);$/;"	m	class:shore_compat::strstreambuf
_M_setup	src/fc/w_compat_strstream.cpp	/^void strstreambuf::_M_setup(char* get, char* put, streamsize n)$/;"	f	class:shore_compat::strstreambuf
_NRUNS	src/sm/newsort.cpp	/^    int                _NRUNS;$/;"	m	class:ssm_sort::run_mgr	file:
_NTAPES	src/sm/newsort.cpp	/^    int                _NTAPES; \/\/ # input tapes + 1 output tape$/;"	m	class:ssm_sort::run_mgr	file:
_QuickSort	src/sm/newsort.cpp	/^run_mgr::_QuickSort( $/;"	f	class:run_mgr
_SLASH	src/sm/log.cpp	/^const char log_m::_SLASH = '\/';$/;"	m	class:log_m	file:
_SLASH	src/sm/log.h	/^    static const char    _SLASH; $/;"	m	class:log_m
_SYS_ASM_LINKAGE_H	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/asm_linkage.h	28;"	d
_SYS_ASM_LINKAGE_H	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/asm_linkage.h	28;"	d
_SYS_ASM_LINKAGE_H	src/atomic_ops/intel/sys/asm_linkage.h	28;"	d
_SYS_ASM_LINKAGE_H	src/atomic_ops/sparc/sys/asm_linkage.h	28;"	d
_SYS_ATOMIC_H	src/atomic_ops/atomic_ops_builtin.h	2;"	d
_SYS_ATOMIC_H	src/atomic_ops/atomic_ops_impl.h	28;"	d
_SYS_RESOURCE_H	src/fc/w_rusage.h	63;"	d
_SYS_STACK_H	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/stack.h	28;"	d
_SYS_STACK_H	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/stack.h	28;"	d
_SYS_STACK_H	src/atomic_ops/intel/sys/stack.h	28;"	d
_SYS_STACK_H	src/atomic_ops/sparc/sys/stack.h	28;"	d
_SYS_TRAP_H	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/trap.h	28;"	d
_SYS_TRAP_H	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/trap.h	27;"	d
_SYS_TRAP_H	src/atomic_ops/intel/sys/trap.h	28;"	d
_SYS_TRAP_H	src/atomic_ops/sparc/sys/trap.h	27;"	d
_TCL_CVBUG	src/sm/smsh/tcl_workaround.h	48;"	d
_TL_stats	src/sm/smthread.h	/^        sm_stats_info_t*  _TL_stats; \/\/ thread-local stats$/;"	m	struct:smthread_t::tcb_t
_Traits	src/fc/w_compat_strstream.h	/^  typedef char_traits<char>              _Traits;$/;"	t	class:shore_compat::strstreambuf
__ATOMIC_CONTAINER	src/fc/atomic_container.h	25;"	d
__ATOMIC_TRASH_STACK	src/fc/atomic_class_pool.h	25;"	d
__CPU_INFO_H	src/fc/cpu_info.h	2;"	d
__DYNARRAY_H	src/fc/dynarray.h	25;"	d
__ERRLOG_C__	src/fc/errlog.cpp	34;"	d	file:
__GNU_LIBRARY__	src/sm/smsh/smsh.cpp	59;"	d	file:
__MEM_BLOCK_H	src/fc/mem_block.h	25;"	d
__SGI_STL_STRSTREAM_W_COMPAT_	src/fc/w_compat_strstream.h	34;"	d
__STIME_TESTER__	src/fc/tests/ntime.cpp	38;"	d	file:
__TEST_ME_H	src/fc/tests/test_me.h	54;"	d
__TLS_H	src/fc/tls.h	26;"	d
__UTIL_STOPWATCH_H	src/sm/tests/stopwatch.h	25;"	d
__W_RAND_H	src/fc/w_rand.h	25;"	d
__W_TEMP_ALLOC_H	src/fc/w_temp_alloc.h	25;"	d
__attribute__	src/sm/lexify.cpp	75;"	d	file:
__c	src/fc/errlog.cpp	/^static char __c;$/;"	v	file:
__cleanup__	src/fc/w_form.cpp	/^} __cleanup__;$/;"	v	typeref:struct:form_cleanup
__const_len	src/sm/newsort.cpp	/^    const smsize_t&         __const_len(int k) const{ $/;"	f	class:meta_header_t
__const_off	src/sm/newsort.cpp	/^    const smsize_t&         __const_off(int k) const{ $/;"	f	class:meta_header_t
__cpu_info_init	src/fc/cpu_info.h	/^} __cpu_info_init;$/;"	v	typeref:struct:cpu_info_init
__find_page_in_heap	src/sm/histo.cpp	/^histoid_t::__find_page_in_heap($/;"	f	class:histoid_t
__len	src/sm/newsort.cpp	/^    smsize_t&         __len(int k) { return __persistent_part._lenoff[k<<1]; }$/;"	f	class:meta_header_t
__magic1	src/fc/errlog.h	/^    unsigned int     __magic1;$/;"	m	class:logstream
__magic2	src/fc/errlog.h	/^    unsigned int     __magic2;$/;"	m	class:logstream
__metarecs	src/sm/smthread.h	/^        int __metarecs;$/;"	m	struct:smthread_t::tcb_t
__metarecs_in	src/sm/smthread.h	/^        int __metarecs_in;$/;"	m	struct:smthread_t::tcb_t
__off	src/sm/newsort.cpp	/^    smsize_t&         __off(int k) { return __persistent_part._lenoff[(k<<1)+1]; }$/;"	f	class:meta_header_t
__ordinal	src/sm/smthread.h	/^        ordinal_number_t __ordinal;$/;"	m	struct:smthread_t::tcb_t
__persistent_part	src/sm/newsort.cpp	/^    } __persistent_part;$/;"	m	class:meta_header_t	typeref:struct:meta_header_t::_persistent	file:
__printit	src/sm/smsh/shell.cpp	/^__printit(const char *what, vtable_t  &x) {$/;"	f	file:
__propagate_insert	src/sm/rtree.cpp	/^rtree_m::__propagate_insert($/;"	f	class:rtree_m
__propagate_remove	src/sm/rtree.cpp	/^rtree_m::__propagate_remove($/;"	f	class:rtree_m
__rng_init	src/sthread/sthread.cpp	/^  __rng_init() {$/;"	f	struct:__rng_init
__rng_init	src/sthread/sthread.cpp	/^struct __rng_init {$/;"	s	file:
__saved_sdesc_cache_t	src/sm/xct.h	/^    sdesc_cache_t*                __saved_sdesc_cache_t;$/;"	m	class:xct_t
__saved_sdesc_owner	src/sm/xct.h	/^    bool 			 __saved_sdesc_owner;$/;"	m	class:xct_t
__shared	src/sm/smsh/tcl_thread.cpp	/^    __shared( int fd) : stdin_hdl(fd)$/;"	f	class:__shared
__shared	src/sm/smsh/tcl_thread.cpp	/^class  __shared {$/;"	c	file:
__split_page	src/sm/btree_impl.cpp	/^btree_impl::__split_page($/;"	f	class:btree_impl
__start	src/sthread/sthread.cpp	/^void    sthread_t::__start(void *arg)$/;"	f	class:sthread_t
__stats	src/sm/xct.h	/^    sm_stats_info_t*             __stats; \/\/ allocated by user$/;"	m	class:xct_t
__strtou8	src/fc/w_base.cpp	/^__strtou8(        $/;"	f	file:
__toggle_data	src/sm/prologue.h	/^    long        __toggle_data[SIZEOF_TOGGLE\/sizeof(long)];$/;"	m	class:prologue_rc_t
__umemcmp	src/common/umemcmp.h	/^inline int __umemcmp(const unsigned char* p, const unsigned char* q, int n)$/;"	f
__unsafe_begin_acquire	src/sthread/mcs_lock.h	/^	qnode* __unsafe_begin_acquire(qnode* me) {$/;"	f	struct:mcs_lock
__unsafe_end_acquire	src/sthread/mcs_lock.h	/^	void* __unsafe_end_acquire(qnode* me, qnode* pred) {$/;"	f	struct:mcs_lock
_abort	src/sm/xct.cpp	/^xct_t::_abort()$/;"	f	class:xct_t
_abort_xct	src/sm/sm.cpp	/^ss_m::_abort_xct(sm_stats_info_t*&             _stats)$/;"	f	class:ss_m
_aborted	src/sm/newsort.cpp	/^    bool        _aborted;       \/\/ because xct state changed, presumably$/;"	m	class:ssm_sort::run_mgr	file:
_access	src/sm/dir.cpp	/^dir_vol_m::_access(const stid_t& stid, sinfo_s& si)$/;"	f	class:dir_vol_m
_acquire	src/common/latch.cpp	/^w_rc_t latch_t::_acquire(latch_mode_t new_mode, $/;"	f	class:latch_t
_acquire	src/fc/block_alloc.h	/^    T* _acquire() {$/;"	f	struct:object_cache
_acquire	src/sm/log_core.cpp	/^log_core::_acquire() $/;"	f	class:log_core
_acquire_1thread_log_depth	src/sm/xct.h	/^    volatile int                 _acquire_1thread_log_depth;  $/;"	m	class:xct_t
_acquire_block	src/fc/block_alloc.cpp	/^dynpool::mblock* dynpool::_acquire_block() {$/;"	f	class:dynpool
_acquire_block	src/fc/block_alloc.h	/^dynpool::mblock* object_cache<T,TF,M>::cache_pool::_acquire_block() {$/;"	f	class:object_cache::cache_pool
_acquire_block	src/fc/tests/memblock.cpp	/^    virtual block*     _acquire_block() {$/;"	f	struct:test_block_pool
_acquire_buffer_space	src/sm/log_core.cpp	/^void log_core::_acquire_buffer_space(insert_info* info, long recsize)$/;"	f	class:log_core
_acquire_buffer_space_for_each	src/sm/log_core.cpp	/^void log_core::_acquire_buffer_space_for_each(insert_info* info, long recsize)$/;"	f	class:log_core
_acquire_count	src/fc/tests/memblock.cpp	/^    size_t        _acquire_count;$/;"	m	struct:test_block_pool	file:
_activate	src/sm/bf_prefetch.h	/^    pthread_cond_t             _activate; \/\/ paired with _prefetch_mutex$/;"	m	class:bf_prefetch_thread_t
_activate_cond	src/sm/bf.cpp	/^    pthread_cond_t              _activate_cond; \/\/ paired with _cleaner_mutex$/;"	m	class:bf_cleaner_thread_t	file:
_activate_impl	src/sm/bf.cpp	/^bf_cleaner_thread_t::_activate_impl(bool \/*force*\/, bool retire)$/;"	f	class:bf_cleaner_thread_t
_active	src/fc/atomic_container.h	/^    ptr* volatile _active;$/;"	m	class:atomic_container
_active_count	src/sthread/sthread.h	/^    unsigned int volatile _active_count;$/;"	m	struct:occ_rwlock
_active_slots	src/sm/log_core.h	/^    long _active_slots;$/;"	m	class:log_core
_add_dummies	src/sm/newsort.cpp	/^    void _add_dummies() {$/;"	f	class:phase_mgr	file:
_add_new_indirect	src/sm/lgrec.cpp	/^lg_tag_indirect_h::_add_new_indirect(lpid_t& new_pid)$/;"	f	class:lg_tag_indirect_h
_add_page	src/sm/btree_bl.cpp	/^btsink_t::_add_page(const int i, shpid_t pid0)$/;"	f	class:btsink_t
_add_partition	src/sm/smindex.cpp	/^rc_t ss_m::_add_partition(stid_t stid, const vec_t& key, const bool bIgnoreLatches,$/;"	f	class:ss_m
_add_partition_init	src/sm/smindex.cpp	/^rc_t ss_m::_add_partition_init(stid_t stid, const vec_t& key,$/;"	f	class:ss_m
_add_when_writer_leaves	src/sthread/srwlock.cpp	/^void mcs_rwlock::_add_when_writer_leaves(int delta) $/;"	f	class:mcs_rwlock
_adj	src/fc/w_list.h	/^    uint4_t            _adj;$/;"	m	class:w_list_base_t
_ages	src/sm/data_access_histogram.h	/^    uint _ages;$/;"	m	class:data_access_histogram
_alignAddr	src/sm/newsort.cpp	/^    static char *   _alignAddr(char *cp) { \/* align to 8 bytes *\/$/;"	f	class:limited_space
_align_offset	src/fc/dynarray.h	/^    size_t _align_offset;$/;"	m	struct:dynvector
_all	src/fc/w_debug.h	/^        enum { _all = 0x1, _none = 0x2 };$/;"	e	enum:w_debug::__anon102
_alloc	src/sm/key_ranges_map.h	/^    bool _alloc;$/;"	m	class:foo
_alloc_mrbt_page	src/sm/file.cpp	/^file_m::_alloc_mrbt_page($/;"	f	class:file_m
_alloc_page	src/sm/btree_impl.cpp	/^btree_impl::_alloc_page($/;"	f	class:btree_impl
_alloc_page	src/sm/file.cpp	/^file_m::_alloc_page($/;"	f	class:file_m
_alloc_page	src/sm/rtree.cpp	/^rtree_m::_alloc_page($/;"	f	class:rtree_m
_alloc_pages	src/sm/sm_io.cpp	/^io_m::_alloc_pages($/;"	f	class:io_m
_alloc_pages_with_vol_mutex	src/sm/sm_io.cpp	/^io_m::_alloc_pages_with_vol_mutex($/;"	f	class:io_m
_allocate_slot	src/sm/log_core.cpp	/^void log_core::_allocate_slot(long idx) {$/;"	f	class:log_core
_already_locked	src/sm/xct.h	/^	bool _already_locked;$/;"	m	struct:xct_i::maybe_lock
_anchor	src/sm/xct.cpp	/^    xct_link _anchor;$/;"	m	struct:xct_list	file:
_anchor	src/sm/xct.h	/^     lsn_t                       _anchor;$/;"	m	class:xct_t
_anchor	src/sm/xct.h	/^    lsn_t _anchor;$/;"	m	class:auto_release_anchor_t
_and_compensate	src/sm/xct.h	/^    bool _and_compensate;$/;"	m	class:auto_release_anchor_t
_append_ext_list	src/sm/vol.cpp	/^vol_t::_append_ext_list(snum_t snum, extnum_t prev, extnum_t count, $/;"	f	class:vol_t
_append_large	src/sm/file.cpp	/^file_m::_append_large(file_p& page, slotid_t slot, const vec_t& data)$/;"	f	class:file_m
_append_mrbt_rec	src/sm/smfile.cpp	/^ss_m::_append_mrbt_rec(const rid_t& rid, const vec_t& data,$/;"	f	class:ss_m
_append_rec	src/sm/smfile.cpp	/^ss_m::_append_rec(const rid_t& rid, const vec_t& data)$/;"	f	class:ss_m
_append_to_large_pages	src/sm/file.cpp	/^file_m::_append_to_large_pages(int num_pages, const lpid_t new_pages[],$/;"	f	class:file_m
_apply_fake_disk_latency	src/sm/vol.h	/^    bool             _apply_fake_disk_latency;$/;"	m	class:vol_t
_arg	src/sm/smthread.h	/^    void* const        _arg;$/;"	m	class:smthread_t
_argc	src/fc/vtable.h	/^    int _argc;$/;"	m	class:vtable_names_init_t
_argc	src/sm/tests/create_rec.cpp	/^        int        _argc;$/;"	m	class:smthread_user_t	file:
_argc	src/sm/tests/log_exceed.cpp	/^        int        _argc;$/;"	m	class:smthread_user_t	file:
_argc	src/sm/tests/mrbtrees_test.cpp	/^  int        _argc;$/;"	m	class:smthread_main_t	file:
_argc	src/sm/tests/rtree_example.cpp	/^        int        _argc;$/;"	m	class:smthread_user_t	file:
_argc	src/sm/tests/sort_stream.cpp	/^        int        _argc;$/;"	m	class:smthread_user_t	file:
_argc	src/sm/tests/vtable_example.cpp	/^        int        _argc;$/;"	m	class:smthread_user_t	file:
_argv	src/fc/vtable.h	/^    const char * const * _argv;$/;"	m	class:vtable_names_init_t
_argv	src/sm/tests/create_rec.cpp	/^        char        **_argv;$/;"	m	class:smthread_user_t	file:
_argv	src/sm/tests/log_exceed.cpp	/^        char        **_argv;$/;"	m	class:smthread_user_t	file:
_argv	src/sm/tests/mrbtrees_test.cpp	/^  char        **_argv;$/;"	m	class:smthread_main_t	file:
_argv	src/sm/tests/rtree_example.cpp	/^        char        **_argv;$/;"	m	class:smthread_user_t	file:
_argv	src/sm/tests/sort_stream.cpp	/^        char        **_argv;$/;"	m	class:smthread_user_t	file:
_argv	src/sm/tests/vtable_example.cpp	/^        char        **_argv;$/;"	m	class:smthread_user_t	file:
_arr	src/fc/block_alloc.h	/^    dynarray 		_arr;$/;"	m	struct:dynpool
_arr	src/fc/dynarray.h	/^    dynarray _arr;$/;"	m	struct:dynvector
_arr	src/fc/w_rand.h	/^    uint32_t _arr[R];$/;"	m	struct:w_rand
_arr_end	src/fc/block_alloc.h	/^    size_t		_arr_end;$/;"	m	struct:dynpool
_array	src/fc/vtable.h	/^    vtable_t&            _array; \/\/ uses vtable_t::operator[]$/;"	m	class:vtable_func
_array_alias	src/fc/vtable.h	/^    char*          _array_alias;$/;"	m	class:vtable_t
_ascending	src/sm/sort_s.h	/^    bool    _ascending;    \/\/ ascending, set_ascending$/;"	m	class:ssm_sort::sort_keys_t
_assign	src/fc/w_rc.h	/^    w_rc_t &_assign(w_error_t* other) {$/;"	f	class:w_rc_t
_at	src/fc/block_alloc.h	/^dynpool::mblock* dynpool::_at(size_t i) {$/;"	f	class:dynpool
_at	src/fc/dynarray.h	/^    ptr _at(size_t idx) const {$/;"	f	struct:dynvector
_attempt_write	src/sthread/srwlock.cpp	/^bool mcs_rwlock::_attempt_write(unsigned int expected) $/;"	f	class:mcs_rwlock
_avg	src/sm/bf_htab.h	/^    int      _avg;$/;"	m	class:bf_core_m::htab
_avg_hit_rate	src/fc/mem_block.h	/^    double        _avg_hit_rate;$/;"	m	struct:memory_block::block_list
_axis	src/sm/rtree.cpp	/^    int             _axis;$/;"	m	struct:sort_context	file:
_bIgnoreLatches	src/sm/scan.h	/^    bool                 _bIgnoreLatches;$/;"	m	class:scan_index_i
_bIgnoreLatches	src/sm/scan.h	/^    bool             _bIgnoreLatches;$/;"	m	class:scan_file_i
_bIgnoreLatches	src/sm/tests/mrbtrees_test.cpp	/^  bool        _bIgnoreLatches; \/\/ indicates whether to ignore latches or not $/;"	m	class:smthread_main_t	file:
_bIgnoreLocks	src/sm/tests/mrbtrees_test.cpp	/^  bool        _bIgnoreLocks; \/\/ indicates whether to ignore locks or not$/;"	m	class:smthread_main_t	file:
_backgroundflush	src/sm/sm.cpp	/^option_t* smlevel_0::_backgroundflush = NULL;$/;"	m	class:smlevel_0	file:
_backgroundflush	src/sm/sm_base.h	/^    static option_t* _backgroundflush;$/;"	m	class:smlevel_0
_backup	src/fc/atomic_container.h	/^    ptr* volatile _backup;$/;"	m	class:atomic_container
_backward	src/sm/btcursor.h	/^    bool            _backward; \/\/ for backward scans$/;"	m	class:bt_cursor_t
_backwards	src/fc/w_list.h	/^    bool                _backwards;$/;"	m	class:w_list_i
_bar	src/sm/smsh/tcl_thread.cpp	/^    pthread_barrier_t *_bar;$/;"	m	class:barrier_t	file:
_base	src/common/vec_t.h	/^    vec_pair_t*        _base;        \/\/ pointer to beginning of _pair or malloced$/;"	m	struct:VEC_t
_base	src/fc/dynarray.h	/^    char* _base;$/;"	m	struct:dynarray
_begin	src/sm/bf_core.cpp	/^    long _begin;$/;"	m	struct:bf_core_m::init_thread_t	file:
_begin_xct	src/sm/sm.cpp	/^ss_m::_begin_xct(sm_stats_info_t *_stats, tid_t& tid, timeout_in_ms timeout)$/;"	f	class:ss_m
_begin_xct_mutex	src/sm/sm.cpp	/^static sm_vol_rwlock_t          _begin_xct_mutex;$/;"	v	file:
_begin_xct_mutex	src/sm/smindex.cpp	/^static sm_vol_rwlock_t          _begin_xct_mutex;$/;"	v	file:
_bfc	src/sm/bf_core.cpp	/^    bf_core_m* _bfc;$/;"	m	struct:bf_core_m::init_thread_t	file:
_bfc_mutex	src/sm/bf_core.cpp	/^queue_based_lock_t      bf_core_m::_bfc_mutex;$/;"	m	class:bf_core_m	file:
_bfc_mutex	src/sm/bf_core.h	/^    static queue_based_lock_t   _bfc_mutex; \/\/ never needs long lock $/;"	m	class:bf_core_m
_bfm	src/sm/tests/htab.cpp	/^    bf_m *     _bfm;$/;"	m	class:htab_tester	file:
_bits	src/fc/mem_block.h	/^    block_bits        _bits;$/;"	m	struct:memory_block::block
_bkt	src/fc/w_hash.h	/^    uint4_t                   _bkt;$/;"	m	class:w_hash_i
_blist	src/fc/block_alloc.h	/^    memory_block::block_list _blist;$/;"	m	struct:block_pool
_block	src/sm/partition.cpp	/^    char _block[log_core::BLOCK_SIZE];$/;"	m	class:block_of_zeroes	file:
_block	src/sthread/sthread.cpp	/^sthread_t::_block($/;"	f	class:sthread_t
_block_cnt	src/sthread/tests/ioperf.cpp	/^    int                 _block_cnt;$/;"	m	class:io_thread_t	file:
_block_lock	src/common/latch.h	/^    pthread_mutex_t             _block_lock; \/\/ paired w\/ _blocked_list$/;"	m	class:latch_t
_block_size	src/fc/block_alloc.h	/^    size_t _block_size;$/;"	m	struct:blob_pool
_block_size	src/sthread/tests/ioperf.cpp	/^    size_t        _block_size;$/;"	m	class:io_thread_t	file:
_blocked_list	src/common/latch.h	/^    sthread_priority_list_t     _blocked_list; \/\/ paired w\/ _block_lock$/;"	m	class:latch_t
_blocking	src/common/latch.h	/^    bool                        _blocking;   \/\/ true-> on _blocked_list$/;"	m	class:latch_t
_blocking	src/sm/lock_x.h	/^    bool            _blocking;      \/\/ the thread trying to satisfy$/;"	m	class:xct_lock_info_t
_body	src/sm/keyed.h	/^    char*    _body()    const    { return ((char*) &_hdr) + sizeof(_hdr); }$/;"	f	class:keyrec_t
_body_large	src/sm/pin.cpp	/^const char* pin_i::_body_large()$/;"	f	class:pin_i
_bodybuf	src/sm/sort_s.h	/^    const void*   _bodybuf;$/;"	m	class:ssm_sort::object_t
_bodyfact	src/sm/sort_s.h	/^    factory_t*    _bodyfact;$/;"	m	class:ssm_sort::object_t
_bodylen	src/sm/sort_s.h	/^    smsize_t      _bodylen;$/;"	m	class:ssm_sort::object_t
_bodysize	src/sm/newsort.cpp	/^        smsize_t                 _bodysize; \/\/ length of body if carrying object$/;"	m	struct:meta_header_t::_persistent	file:
_booleans	src/sm/newsort.cpp	/^        booleans_t            _booleans;$/;"	m	struct:meta_header_t::_persistent	file:
_bound1	src/sm/btcursor.h	/^    cvec_t*            _bound1;$/;"	m	class:bt_cursor_t
_bound1_buf	src/sm/btcursor.h	/^    char*            _bound1_buf;$/;"	m	class:bt_cursor_t
_bound1_tmp	src/sm/btcursor.h	/^    cvec_t            _bound1_tmp; \/\/ used if cond1 is not$/;"	m	class:bt_cursor_t
_bound2	src/sm/btcursor.h	/^    cvec_t*            _bound2;$/;"	m	class:bt_cursor_t
_bound2_buf	src/sm/btcursor.h	/^    char*            _bound2_buf;$/;"	m	class:bt_cursor_t
_bound2_tmp	src/sm/btcursor.h	/^    cvec_t            _bound2_tmp; \/\/ used if cond2 is not$/;"	m	class:bt_cursor_t
_btcursor	src/sm/scan.h	/^    bt_cursor_t*         _btcursor;$/;"	m	class:scan_index_i
_bucketArraySize	src/sm/sdesc.h	/^    w_base_t::uint4_t        _bucketArraySize;\/\/ # entries in the malloced array$/;"	m	class:sdesc_cache_t
_buckets	src/sm/log_core.cpp	/^	bucket_map _buckets;$/;"	m	struct:histo	file:
_buf	src/fc/w_defines.h	/^  char _buf[N+__alignof__(uintptr_t)];$/;"	m	class:allocaN
_buf	src/fc/w_strstream.h	/^    char    *_buf;$/;"	m	class:w_ostrstream_buf
_buf	src/fc/w_temp_alloc.h	/^        char *_buf;$/;"	m	struct:w_temp_alloc::ptr
_buf	src/sm/log_core.h	/^    char*                _buf; \/\/ log buffer: _segsize buffer into which$/;"	m	class:log_core
_buf	src/sm/rtree.cpp	/^    page_s* _buf;$/;"	m	class:rtwork_p	file:
_buf	src/sm/sort_s.h	/^    const void*    _buf;   \/\/ buf to be deallocated -- key$/;"	m	class:ssm_sort::skey_t
_buf	src/sthread/tests/ioperf.cpp	/^    char*        _buf;$/;"	m	class:io_thread_t	file:
_buf_epoch	src/sm/log_core.h	/^    epoch		 _buf_epoch;$/;"	m	class:log_core
_buf_hiwat	src/sm/newsort.cpp	/^    smsize_t        _buf_hiwat;     \/\/ original size of scratch buffer in bytes$/;"	m	class:limited_space	file:
_buf_size	src/fc/w_strstream.h	/^    size_t    _buf_size;$/;"	m	class:w_ostrstream_buf
_buffer	src/fc/errlog.h	/^    char *            _buffer; \/\/ default is static buffer$/;"	m	class:ErrLog
_buffer_sz	src/sm/newsort.cpp	/^    smsize_t        _buffer_sz;     \/\/ original size of scratch buffer in bytes$/;"	m	class:limited_space	file:
_bufpool	src/sm/bf_core.cpp	/^page_s*                 bf_core_m::_bufpool = 0;$/;"	m	class:bf_core_m	file:
_bufpool	src/sm/bf_core.h	/^    static page_s*              _bufpool; \/\/ array of size _num_bufs$/;"	m	class:bf_core_m
_bufpoolsize	src/sm/sm.cpp	/^option_t* ss_m::_bufpoolsize = NULL;$/;"	m	class:ss_m	file:
_bufpoolsize	src/sm/sm.h	/^    static option_t* _bufpoolsize;$/;"	m	class:ss_m
_bufsize	src/fc/errlog.h	/^    size_t            _bufsize; $/;"	m	class:ErrLog
_bufsz	src/fc/w_temp_alloc.h	/^        size_t _bufsz;$/;"	m	struct:w_temp_alloc::ptr
_buftab	src/sm/bf_core.cpp	/^bfcb_t*                 bf_core_m::_buftab = 0;$/;"	m	class:bf_core_m	file:
_buftab	src/sm/bf_core.h	/^    static bfcb_t*              _buftab; \/\/ array of size _num_bufs$/;"	m	class:bf_core_m
_bulkld_index	src/sm/smindex.cpp	/^ss_m::_bulkld_index($/;"	f	class:ss_m
_bulkld_md_index	src/sm/smindex.cpp	/^ss_m::_bulkld_md_index($/;"	f	class:ss_m
_bytes_last_page	src/sm/file.cpp	/^file_m::_bytes_last_page(smsize_t rec_sz)$/;"	f	class:file_m
_cache	src/sm/vol.h	/^        cache          _cache;$/;"	m	class:vol_t::ext_cache_t
_cached_sdesc	src/sm/scan.h	/^    sdesc_t              _cached_sdesc;$/;"	m	class:append_file_i
_callback_epilogue	src/sm/sort_s.h	/^    void      _callback_epilogue() const {$/;"	f	class:ssm_sort::object_t
_callback_prologue	src/sm/sort_s.h	/^    void      _callback_prologue() const {$/;"	f	class:ssm_sort::object_t
_capacity	src/fc/dynarray.h	/^    size_t _capacity;$/;"	m	struct:dynarray
_carry_obj	src/sm/sort_s.h	/^    bool    _carry_obj;    \/\/ set_for_file, carry_obj, set_carry_obj$/;"	m	class:ssm_sort::sort_keys_t
_cat	src/sm/logrec.h	/^    u_char             _cat;  \/\/ category_t$/;"	m	class:logrec_t
_cb_keycmp	src/sm/sort_s.h	/^        CF              _cb_keycmp;  \/\/ comparison$/;"	m	class:ssm_sort::sort_keys_t::key_meta_t
_cb_keyinfo	src/sm/sort_s.h	/^        CSKF            _cb_keyinfo; \/\/ get location\/copy\/derived$/;"	m	class:ssm_sort::sort_keys_t::key_meta_t
_cb_lexify_index_key	src/sm/sort_s.h	/^    CSKF    _cb_lexify_index_key;    \/\/ set_for_index, index key lexify$/;"	m	class:ssm_sort::sort_keys_t
_cb_lexify_index_key_cookie	src/sm/sort_s.h	/^    key_cookie_t _cb_lexify_index_key_cookie;    \/\/ set_for_index$/;"	m	class:ssm_sort::sort_keys_t
_cb_marshal	src/sm/sort_s.h	/^    MOF        _cb_marshal;    \/\/ set_object_marshal$/;"	m	class:ssm_sort::sort_keys_t
_cb_marshal_cookie	src/sm/sort_s.h	/^    key_cookie_t _cb_marshal_cookie;    \/\/ set_object_marshal$/;"	m	class:ssm_sort::sort_keys_t
_cb_unmarshal	src/sm/sort_s.h	/^    UMOF    _cb_unmarshal;    \/\/ set_object_marshal$/;"	m	class:ssm_sort::sort_keys_t
_cc	src/sm/btcursor.h	/^    smlevel_0::concurrency_t    _cc;$/;"	m	class:bt_cursor_t
_cc	src/sm/scan.h	/^    concurrency_t        _cc;$/;"	m	class:scan_index_i
_cc	src/sm/scan.h	/^    concurrency_t        _cc;$/;"	m	class:scan_rt_i
_cc	src/sm/scan.h	/^    concurrency_t    _cc;  \/\/ concurrency control$/;"	m	class:scan_file_i
_cc_alg_option	src/sm/sm.cpp	/^option_t* ss_m::_cc_alg_option = NULL;$/;"	m	class:ss_m	file:
_cc_alg_option	src/sm/sm.h	/^    static option_t* _cc_alg_option;$/;"	m	class:ss_m
_ceil	src/sm/log_core.h	/^    static long         _ceil(long offset, long block_size) $/;"	f	class:log_core
_chain_xct	src/sm/sm.cpp	/^ss_m::_chain_xct($/;"	f	class:ss_m
_change_blocks	src/fc/mem_block.cpp	/^void block_list::_change_blocks(size_t chip_size, size_t chip_count, size_t block_size)$/;"	f	class:memory_block::block_list
_check_deadlock	src/sm/lock_core.cpp	/^lock_core_m::_check_deadlock(xct_t* self, $/;"	f	class:lock_core_m
_check_failed	src/fc/valgrind_help.h	/^    int  _check_failed;$/;"	m	class:valgrind_check
_check_flag	src/sthread/tests/ioperf.cpp	/^    bool        _check_flag;$/;"	m	class:io_thread_t	file:
_check_latches	src/sm/btree_impl.cpp	/^_check_latches(int line, uint _nsh, uint _nex, uint _max,$/;"	f
_check_lsn	src/sm/pin.h	/^    void         _check_lsn() const {w_assert2(up_to_date());}$/;"	f	class:pin_i
_check_lsn	src/sm/pin.h	/^    void         _check_lsn() const {}$/;"	f	class:pin_i
_check_reserve	src/sm/page.cpp	/^inline void page_s::space_t::_check_reserve()$/;"	f	class:page_s::space_t
_check_version	src/sm/log.cpp	/^log_m::_check_version(uint4_t major, uint4_t minor)$/;"	f	class:log_m
_checked	src/sm/page.h	/^        unsigned char        _checked;$/;"	m	class:page_p::page_bucket_info_t
_checkpinstats	src/sm/smsh/lib/smsh.tcl	/^proc _checkpinstats {n msg} {$/;"	p
_checksd	src/sm/newsort.cpp	/^    inline void _checksd() const {}$/;"	f	class:tape_t
_checksd	src/sm/newsort.cpp	/^    void     _checksd() const {$/;"	f	class:tape_t
_child	src/sm/btree_p.h	/^    shpid_t            _child;$/;"	m	class:btrec_t
_chip_count	src/fc/block_alloc.h	/^    size_t		_chip_count;$/;"	m	struct:dynpool
_chip_count	src/fc/block_alloc.h	/^    size_t _chip_count;$/;"	m	struct:blob_pool
_chip_size	src/fc/block_alloc.h	/^    size_t		_chip_size;$/;"	m	struct:dynpool
_chip_size	src/fc/block_alloc.h	/^    size_t _chip_size;$/;"	m	struct:blob_pool
_chkpt_count	src/sm/chkpt.h	/^    long             _chkpt_count;$/;"	m	class:chkpt_m
_chkpt_mutex	src/sm/chkpt_serial.cpp	/^static occ_rwlock _chkpt_mutex;$/;"	v	file:
_chkpt_thread	src/sm/chkpt.h	/^    chkpt_thread_t*  _chkpt_thread;$/;"	m	class:chkpt_m
_class_link	src/sthread/sthread.h	/^    w_link_t                    _class_link;    \/\/ used in _class_list,$/;"	m	class:sthread_t
_class_list	src/sthread/sthread.cpp	/^sthread_list_t*         sthread_t::_class_list = 0;$/;"	m	class:sthread_t	file:
_class_list	src/sthread/sthread.h	/^    static sthread_list_t* _class_list;$/;"	m	class:sthread_t
_class_list_lock	src/sthread/sthread.cpp	/^pthread_mutex_t sthread_t::_class_list_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	m	class:sthread_t	file:
_class_list_lock	src/sthread/sthread.cpp	/^queue_based_lock_t      sthread_t::_class_list_lock;$/;"	m	class:sthread_t	file:
_class_list_lock	src/sthread/sthread.h	/^    static pthread_mutex_t _class_list_lock; \/\/ for protecting _class_list$/;"	m	class:sthread_t
_class_list_lock	src/sthread/sthread.h	/^    static queue_based_lock_t _class_list_lock; \/\/ for protecting _class_list$/;"	m	class:sthread_t
_class_name	src/common/option.h	/^    char*                _class_name;$/;"	m	class:option_group_t
_clean_buf	src/sm/bf.cpp	/^bf_m::_clean_buf($/;"	f	class:bf_m
_clean_segment	src/sm/bf.cpp	/^bf_m::_clean_segment($/;"	f	class:bf_m
_cleaner_mutex	src/sm/bf.cpp	/^    pthread_mutex_t             _cleaner_mutex; \/\/ paired with _activate_cond$/;"	m	class:bf_cleaner_thread_t	file:
_cleaner_threads	src/sm/bf.cpp	/^cleaner_thread_list_t*             bf_m::_cleaner_threads = 0;$/;"	m	class:bf_m	file:
_cleaner_threads	src/sm/bf.h	/^                                        _cleaner_threads;$/;"	m	class:bf_m
_cleaner_threads_list_mutex	src/sm/bf.cpp	/^queue_based_block_lock_t           bf_m::_cleaner_threads_list_mutex;  $/;"	m	class:bf_m	file:
_cleaner_threads_list_mutex	src/sm/bf.h	/^    static queue_based_block_lock_t        _cleaner_threads_list_mutex;  $/;"	m	class:bf_m
_cleaner_threshold	src/sm/bf.cpp	/^    int                         _cleaner_threshold; \/\/ (my own)$/;"	m	class:bf_cleaner_thread_t	file:
_clear_meta_buffers	src/sm/newsort.cpp	/^run_mgr::_clear_meta_buffers(bool deletethem) $/;"	f	class:run_mgr
_clone	src/fc/w_rc.cpp	/^w_error_t *w_rc_t::_clone() const $/;"	f	class:w_rc_t
_close_min	src/sm/log_core.cpp	/^log_core::_close_min(partition_number_t n)$/;"	f	class:log_core
_closelogfile	src/fc/errlog.cpp	/^ErrLog::_closelogfile() $/;"	f	class:ErrLog
_clr_flag	src/sm/btree_p.cpp	/^btree_p::_clr_flag(flag_t f, bool compensate)$/;"	f	class:btree_p
_clr_state	src/sm/partition.h	/^    void               _clr_state(w_base_t::uint4_t m) { _mask &= ~m ; }$/;"	f	class:partition_t
_cnt	src/common/vec_t.h	/^    int                _cnt;$/;"	m	struct:VEC_t
_cnt	src/fc/w_hash.h	/^    uint4_t                        _cnt;$/;"	m	class:w_hash_t
_cnt	src/fc/w_list.h	/^    uint4_t            _cnt;$/;"	m	class:w_list_base_t
_cnt	src/sm/dir.h	/^    int         _cnt;$/;"	m	class:dir_vol_m
_commit	src/sm/xct.cpp	/^xct_t::_commit(uint4_t flags,lsn_t* plastlsn)$/;"	f	class:xct_t
_commit_xct	src/sm/sm.cpp	/^ss_m::_commit_xct(sm_stats_info_t*& _stats, bool lazy,$/;"	f	class:ss_m
_comp_lock	src/sm/log_core.h	/^    tatas_lock           _comp_lock;$/;"	m	class:log_core
_compensate	src/sm/xct.cpp	/^xct_t::_compensate(const lsn_t& lsn, bool undoable)$/;"	f	class:xct_t
_compress	src/sm/page.cpp	/^page_p::_compress(slotid_t idx)$/;"	f	class:page_p
_compute_high_low	src/sm/newsort.cpp	/^    void _compute_high_low() {$/;"	f	class:phase_mgr	file:
_compute_level	src/sm/newsort.cpp	/^fib_t::_compute_level(int level, int *_last, int *_next)$/;"	f	class:fib_t
_cond	src/sm/chkpt.cpp	/^    pthread_cond_t     _cond;$/;"	m	struct:old_xct_tracker	file:
_cond1	src/sm/btcursor.h	/^    cmp_t            _cond1;$/;"	m	class:bt_cursor_t
_cond2	src/sm/btcursor.h	/^    cmp_t            _cond2;$/;"	m	class:bt_cursor_t
_constraint	src/sm/prologue.h	/^    xct_constraint_t  _constraint;$/;"	m	class:prologue_rc_t
_construct	src/sm/newsort.cpp	/^object_t::_construct(const void *hdr, smsize_t hdrlen, factory_t* hf,$/;"	f	class:object_t
_construct	src/sm/newsort.cpp	/^object_t::_construct(file_p& fp, slotid_t slot)$/;"	f	class:object_t
_construct	src/sm/sort_s.h	/^    void      _construct($/;"	f	class:ssm_sort::skey_t
_construct	src/sm/sort_s.h	/^    void    _construct($/;"	f	class:ssm_sort::skey_t
_construct_once	src/sm/sm.cpp	/^ss_m::_construct_once($/;"	f	class:ss_m
_contended	src/sm/lock_x.h	/^        bool             _contended;$/;"	m	struct:lock_head_t::my_lock
_convert_mode	src/sm/lock_x.h	/^    lmode_t           _convert_mode; \/\/ if in convert wait, mode desired $/;"	m	class:lock_request_t
_convert_to_large_indirect	src/sm/file.cpp	/^file_m::_convert_to_large_indirect(file_p& page, slotid_t slot,$/;"	f	class:file_m
_cookie	src/sm/sort_s.h	/^        key_cookie_t    _cookie;$/;"	m	class:ssm_sort::sort_keys_t::key_meta_t
_coord_handle	src/sm/xct.h	/^        server_handle_t*          _coord_handle; \/\/ ignored for now$/;"	m	struct:xct_t::xct_core
_copy	src/sm/page.cpp	/^page_p::_copy(const page_p& p) $/;"	f	class:page_p
_copy	src/sm/sort_s.h	/^ssm_sort::sort_keys_t::_copy(const sort_keys_t &old) $/;"	f	class:ssm_sort::sort_keys_t
_copy_out_large_obj	src/sm/sort.cpp	/^_copy_out_large_obj($/;"	f	file:
_copy_to_buffer	src/sm/log_core.cpp	/^lsn_t log_core::_copy_to_buffer(logrec_t &rec, long pos, long recsize, insert_info* info)$/;"	f	class:log_core
_core	src/sm/bf.cpp	/^bf_core_m*                         bf_m::_core = 0;$/;"	m	class:bf_m	file:
_core	src/sm/bf.h	/^    static bf_core_m*           _core;$/;"	m	class:bf_m
_core	src/sm/lock.h	/^    lock_core_m*                _core;$/;"	m	class:lock_m
_core	src/sm/xct.h	/^     xct_core*                   _core;$/;"	m	class:xct_t
_core	src/sthread/sthread.h	/^    sthread_core_t *            _core;        \/\/ registers, stack, etc$/;"	m	class:sthread_t
_count	src/common/latch.h	/^    int          _count;$/;"	m	class:latch_holder_t
_count	src/sm/bf_core.h	/^    int _count;$/;"	m	class:bfcb_unused_list
_count	src/sm/bf_htab.h	/^        int                   _count;$/;"	m	class:bf_core_m::htab::bucket
_count	src/sm/chkpt.cpp	/^    long             _count;$/;"	m	struct:old_xct_tracker	file:
_count	src/sm/pmap.h	/^    enum    { _count = smlevel_0::ext_sz };$/;"	e	enum:Pmap::__anon38
_count_get	src/sm/newsort.cpp	/^    int             _count_get;$/;"	m	class:tape_t	file:
_count_put	src/sm/newsort.cpp	/^    int             _count_put;$/;"	m	class:tape_t	file:
_counts	src/sm/vol.h	/^        count_map      _counts; \/\/ count per store$/;"	m	class:vol_t::ext_cache_t
_cpp_vector	src/sm/newsort.cpp	/^} _cpp_vector;$/;"	v	typeref:class:cpp_char_factory_t
_create_assoc	src/sm/smindex.cpp	/^ss_m::_create_assoc($/;"	f	class:ss_m
_create_buf	src/sm/newsort.cpp	/^limited_space::_create_buf() $/;"	f	class:limited_space
_create_dir	src/sm/dir.cpp	/^dir_vol_m::_create_dir(vid_t vid)$/;"	f	class:dir_vol_m
_create_file	src/sm/smfile.cpp	/^ss_m::_create_file(vid_t vid, stid_t& fid,$/;"	f	class:ss_m
_create_index	src/sm/smindex.cpp	/^ss_m::_create_index($/;"	f	class:ss_m
_create_master_chkpt_contents	src/sm/log.cpp	/^log_m::_create_master_chkpt_contents($/;"	f	class:log_m
_create_master_chkpt_string	src/sm/log.cpp	/^log_m::_create_master_chkpt_string($/;"	f	class:log_m
_create_md_assoc	src/sm/smindex.cpp	/^ss_m::_create_md_assoc(stid_t stid, const nbox_t& key, const vec_t& el)$/;"	f	class:ss_m
_create_md_index	src/sm/smindex.cpp	/^ss_m::_create_md_index($/;"	f	class:ss_m
_create_mr_assoc	src/sm/smindex.cpp	/^rc_t ss_m::_create_mr_assoc(const stid_t&        stid, $/;"	f	class:ss_m
_create_mr_index	src/sm/smindex.cpp	/^rc_t ss_m::_create_mr_index(vid_t                   vid, $/;"	f	class:ss_m
_create_mrbt_file	src/sm/smfile.cpp	/^ss_m::_create_mrbt_file(vid_t vid, stid_t& fid,$/;"	f	class:ss_m
_create_mrbt_rec	src/sm/file.cpp	/^file_m::_create_mrbt_rec($/;"	f	class:file_m
_create_mrbt_rec	src/sm/smfile.cpp	/^ss_m::_create_mrbt_rec(const stid_t& fid, const vec_t& hdr, smsize_t len_hint, $/;"	f	class:ss_m
_create_mrbt_rec_in_page	src/sm/smfile.cpp	/^ss_m::_create_mrbt_rec_in_page(const stid_t& fid, file_p& page, const vec_t& hdr, smsize_t len_hint, $/;"	f	class:ss_m
_create_mrbt_rec_in_slot	src/sm/file.cpp	/^file_m::_create_mrbt_rec_in_slot($/;"	f	class:file_m
_create_rec	src/sm/file.cpp	/^file_m::_create_rec($/;"	f	class:file_m
_create_rec	src/sm/smfile.cpp	/^ss_m::_create_rec(const stid_t& fid, const vec_t& hdr, smsize_t len_hint, $/;"	f	class:ss_m
_create_rec_in_slot	src/sm/file.cpp	/^file_m::_create_rec_in_slot($/;"	f	class:file_m
_create_store	src/sm/sm_io.cpp	/^io_m::_create_store($/;"	f	class:io_m
_create_tmpfile	src/sm/newsort.cpp	/^tape_t::_create_tmpfile(vid_t v)$/;"	f	class:tape_t
_create_vol	src/sm/sm.cpp	/^ss_m::_create_vol(const char* dev_name, const lvid_t& lvid, $/;"	f	class:ss_m
_cref	src/sm/lgrec.h	/^    lg_tag_chunks_s&    _cref;        \/\/ chunk handle$/;"	m	class:lg_tag_chunks_h
_cur	src/common/latch.cpp	/^        latch_holder_t* _cur;$/;"	m	struct:holder_list::iterator	file:
_cur_epoch	src/sm/log_core.h	/^    epoch                _cur_epoch;$/;"	m	class:log_core
_cur_xd	src/sm/xct.h	/^    xct_link* _cur_xd;$/;"	m	struct:xct_i
_curr	src/fc/vtable.h	/^    int                  _curr;$/;"	m	class:vtable_func
_curr	src/fc/w_list.h	/^    T*                  _curr;$/;"	m	class:w_list_i
_curr_index	src/sm/log_core.h	/^    partition_index_t   _curr_index; \/\/ index of partition$/;"	m	class:log_core
_curr_lsn	src/sm/log.h	/^    lsn_t                   _curr_lsn;$/;"	m	class:log_m
_curr_num	src/sm/log_core.h	/^    partition_number_t  _curr_num;   \/\/ partition number$/;"	m	class:log_core
_current_errors	src/fc/valgrind_help.h	/^    int  _current_errors;$/;"	m	class:valgrind_check
_cursor	src/sm/scan.h	/^    pin_i            _cursor;$/;"	m	class:scan_file_i
_cursor	src/sm/scan.h	/^    rt_cursor_t*         _cursor;$/;"	m	class:scan_rt_i
_d	src/fc/errlog.cpp	/^}_d;$/;"	v	typeref:class:errlog_dummy
_d_scratch	src/sm/newsort.cpp	/^    double *        _d_scratch;     \/\/ 8-byte-aligned scratch buffer$/;"	m	class:limited_space	file:
_danger	src/sthread/sthread.h	/^    void *                      _danger;$/;"	m	class:sthread_t
_data	src/common/lsn.h	/^    w_base_t::uint8_t        _data;$/;"	m	class:lsn_t
_data	src/common/tid_t.h	/^    datum_t        _data;$/;"	m	class:tid_t
_data	src/fc/mem_block.h	/^    char        _data[EMPTY_ARRAY_DIM];$/;"	m	struct:memory_block::block
_data	src/fc/tests/memblock.cpp	/^    std::vector<char>    _data;$/;"	m	struct:test_block_pool	file:
_data	src/sm/logrec.h	/^    char            _data[data_sz + sizeof(lsn_t)];$/;"	m	class:logrec_t
_data_page	src/sm/pin.cpp	/^lgdata_p& pin_i::_data_page() const $/;"	f	class:pin_i
_data_page_alias	src/sm/pin.h	/^    char            _data_page_alias[PAGE_ALIAS_LGDATA];$/;"	m	class:pin_i
_data_size	src/fc/tests/memblock.cpp	/^    long        _data_size;$/;"	m	struct:test_block_pool	file:
_data_start	src/fc/tests/memblock.cpp	/^    char*        _data_start;$/;"	m	struct:test_block_pool	file:
_debuginfo	src/sm/crash.cpp	/^struct debuginfo _debuginfo = {$/;"	v	typeref:struct:debuginfo	file:
_decay	src/fc/w_temp_alloc.h	/^        struct _decay {$/;"	s	struct:w_temp_alloc::ptr
_decay_const	src/fc/w_temp_alloc.h	/^        struct _decay_const {$/;"	s	struct:w_temp_alloc::ptr
_deep_copy	src/sm/sort_s.h	/^    bool    _deep_copy;    \/\/ set_for_index, set_for_file$/;"	m	class:ssm_sort::sort_keys_t
_default_buf	src/fc/w_strstream.h	/^    char    _default_buf[default_buf_size];$/;"	m	class:w_ostrstream_buf
_default_value	src/common/option.h	/^    const char*        _default_value;                \/\/ default value$/;"	m	class:option_t
_deletePartitionByKey	src/sm/key_ranges_map.cpp	/^w_rc_t key_ranges_map::_deletePartitionByKey(const foo& kv,$/;"	f	class:key_ranges_map
_delete_partition	src/sm/smindex.cpp	/^rc_t ss_m::_delete_partition(stid_t stid, const vec_t& key,$/;"	f	class:ss_m
_delete_partition	src/sm/smindex.cpp	/^rc_t ss_m::_delete_partition(stid_t stid, lpid_t& root2,$/;"	f	class:ss_m
_dependent_list	src/sm/xct.h	/^    w_list_t<xct_dependent_t,queue_based_lock_t>    _dependent_list;$/;"	m	class:xct_t
_depth	src/sm/sm_base.h	/^    int _depth;$/;"	m	struct:check_compensated_op_nesting
_depth_of_acquires	src/sm/sm_base.h	/^    int _depth_of_acquires;$/;"	m	struct:check_compensated_op_nesting
_description	src/common/option.h	/^    const char*        _description;                \/\/ description string$/;"	m	class:option_t
_design_no	src/sm/tests/mrbtrees_test.cpp	/^  int         _design_no; \/\/ 1-regular\/2-part\/3-leaf (which mrbt design)$/;"	m	class:smthread_main_t	file:
_destination	src/fc/errlog.h	/^    LoggingDestination    _destination;$/;"	m	class:ErrLog
_destroy_all_assoc	src/sm/smindex.cpp	/^ss_m::_destroy_all_assoc(const stid_t& stid, const vec_t& key, $/;"	f	class:ss_m
_destroy_all_histograms	src/sm/smindex.cpp	/^rc_t ss_m::_destroy_all_histograms()$/;"	f	class:ss_m
_destroy_assoc	src/sm/smindex.cpp	/^ss_m::_destroy_assoc($/;"	f	class:ss_m
_destroy_file	src/sm/smfile.cpp	/^ss_m::_destroy_file(const stid_t& fid)$/;"	f	class:ss_m
_destroy_index	src/sm/smindex.cpp	/^ss_m::_destroy_index(const stid_t& iid)$/;"	f	class:ss_m
_destroy_latches	src/common/store_latch_manager.cpp	/^void store_latch_manager::_destroy_latches(stid_t const &store) $/;"	f	class:store_latch_manager
_destroy_latches	src/sm/btree_latch_manager.cpp	/^void btree_latch_manager::_destroy_latches(lpid_t const &root) $/;"	f	class:btree_latch_manager
_destroy_md_assoc	src/sm/smindex.cpp	/^ss_m::_destroy_md_assoc(stid_t stid, const nbox_t& key, const vec_t& el)$/;"	f	class:ss_m
_destroy_md_index	src/sm/smindex.cpp	/^ss_m::_destroy_md_index(const stid_t& iid)$/;"	f	class:ss_m
_destroy_mr_all_assoc	src/sm/smindex.cpp	/^rc_t ss_m::_destroy_mr_all_assoc(const stid_t& stid, const vec_t& key, int& num,$/;"	f	class:ss_m
_destroy_mr_assoc	src/sm/smindex.cpp	/^rc_t ss_m::_destroy_mr_assoc(const stid_t  &      stid, $/;"	f	class:ss_m
_destroy_mr_index	src/sm/smindex.cpp	/^rc_t ss_m::_destroy_mr_index(const stid_t& iid)$/;"	f	class:ss_m
_destroy_mrbt_rec	src/sm/smfile.cpp	/^ss_m::_destroy_mrbt_rec(const rid_t& rid,$/;"	f	class:ss_m
_destroy_n_swap_file	src/sm/smfile.cpp	/^ss_m::_destroy_n_swap_file(const stid_t& old_fid, const stid_t& new_fid)$/;"	f	class:ss_m
_destroy_rec	src/sm/smfile.cpp	/^ss_m::_destroy_rec(const rid_t& rid, const bool bIgnoreLocks)$/;"	f	class:ss_m
_destroy_temps	src/sm/dir.cpp	/^dir_vol_m::_destroy_temps(vid_t vid)$/;"	f	class:dir_vol_m
_destruct_once	src/sm/sm.cpp	/^ss_m::_destruct_once()$/;"	f	class:ss_m
_dev_name	src/sm/sm_io.cpp	/^io_m::_dev_name(vid_t vid)$/;"	f	class:io_m
_device_name	src/sm/tests/create_rec.cpp	/^        const char *_device_name;$/;"	m	class:smthread_user_t	file:
_device_name	src/sm/tests/log_exceed.cpp	/^        const char *_device_name;$/;"	m	class:smthread_user_t	file:
_device_name	src/sm/tests/mrbtrees_test.cpp	/^  const char *_device_name;$/;"	m	class:smthread_main_t	file:
_device_name	src/sm/tests/rtree_example.cpp	/^        const char *_device_name;$/;"	m	class:smthread_user_t	file:
_device_name	src/sm/tests/sort_stream.cpp	/^        const char *_device_name;$/;"	m	class:smthread_user_t	file:
_device_name	src/sm/tests/vtable_example.cpp	/^        const char *_device_name;$/;"	m	class:smthread_user_t	file:
_device_quota_KB	src/sm/vol.h	/^    sm_diskaddr_t       _device_quota_KB;$/;"	m	class:volhdr_t
_devname	src/sm/vol.h	/^    char             _devname[max_devname];$/;"	m	class:vol_t
_dfs_search	src/sm/rtree.cpp	/^rtree_m::_dfs_search($/;"	f	class:rtree_m
_dir	src/sm/dir.h	/^    dir_vol_m        _dir;$/;"	m	class:dir_m
_dirty	src/sm/bf_s.h	/^    bool        _dirty;          \/\/ true if page is dirty$/;"	m	class:bfcb_t
_dirty_threshold	src/sm/bf.cpp	/^    static int                  _dirty_threshold;$/;"	m	class:bf_cleaner_thread_t	file:
_dirty_threshold	src/sm/bf.cpp	/^int bf_cleaner_thread_t::_dirty_threshold = 20; $/;"	m	class:bf_cleaner_thread_t	file:
_discard_all	src/sm/bf.cpp	/^bf_m::_discard_all()$/;"	f	class:bf_m
_disk_buffer	src/sthread/sthread.h	/^    static char *        _disk_buffer;$/;"	m	class:sthread_t
_disk_buffer_disalignment	src/sthread/sthread.h	/^    static int           _disk_buffer_disalignment;$/;"	m	class:sthread_t
_disk_buffer_size	src/sthread/sthread.h	/^    static size_t        _disk_buffer_size;$/;"	m	class:sthread_t
_disks	src/sthread/io.cpp	/^sdisk_t         **sthread_t::_disks = 0;$/;"	m	class:sthread_t	file:
_disks	src/sthread/sthread.h	/^    static    sdisk_t        **_disks;$/;"	m	class:sthread_t
_dismount	src/sm/dir.cpp	/^dir_vol_m::_dismount(vid_t vid, bool flush, bool dismount_if_locked)$/;"	f	class:dir_vol_m
_dismount	src/sm/sm_io.cpp	/^io_m::_dismount(vid_t vid, bool flush)$/;"	f	class:io_m
_dismount_all	src/sm/dir.cpp	/^dir_vol_m::_dismount_all(bool flush, bool dismount_if_locked)$/;"	f	class:dir_vol_m
_dismount_all	src/sm/sm_io.cpp	/^io_m::_dismount_all(bool flush)$/;"	f	class:io_m
_dismount_dev	src/sm/sm.cpp	/^ss_m::_dismount_dev(const char* device, bool dismount_if_locked)$/;"	f	class:ss_m
_dispatch	src/sm/smsh/shell.cpp	/^_dispatch(const cmd_t *_cmd,$/;"	f
_do_prefetch	src/sm/scan.h	/^    bool              _do_prefetch;$/;"	m	class:scan_file_i
_done	src/sthread/tests/thread1.cpp	/^	pthread_cond_t	_done;$/;"	m	class:wait_for_t	file:
_downgrade	src/common/latch.cpp	/^latch_t::_downgrade(latch_holder_t* me)$/;"	f	class:latch_t
_draw	src/sm/rtree.cpp	/^rtree_m::_draw($/;"	f	class:rtree_m
_draw_rtree	src/sm/smindex.cpp	/^ss_m::_draw_rtree(const stid_t& stid, ostream &s)$/;"	f	class:ss_m
_dummy1	src/sm/sort_s.h	/^        fill1            _dummy1;$/;"	m	class:ssm_sort::sort_keys_t::key_meta_t
_dummy2	src/sm/sort_s.h	/^        fill2            _dummy2;$/;"	m	class:ssm_sort::sort_keys_t::key_meta_t
_dummy4valgrind	src/sthread/sthread.h	/^    fill4                       _dummy4valgrind;$/;"	m	class:sthread_t
_dump	src/sm/lock_core.cpp	/^lock_core_m::_dump(ostream &o)$/;"	f	class:lock_core_m
_dump	src/sm/smthread.cpp	/^smthread_t::_dump(ostream &o) const$/;"	f	class:smthread_t
_dump	src/sthread/sthread.cpp	/^void sthread_t::_dump(ostream &o) const$/;"	f	class:sthread_t
_durable_lsn	src/sm/log.h	/^    lsn_t                   _durable_lsn;$/;"	m	class:log_m
_duration	src/sm/lock_x.h	/^    duration_t        _duration;    \/\/ lock duration$/;"	m	class:lock_request_t
_e	src/fc/errlog_s.h	/^    ErrLog *_e;$/;"	m	struct:ErrLogInfo
_el	src/common/vec_t.h	/^    vec_t _el; \/\/ to give the element if it's already determined (for the 1st design)$/;"	m	struct:el_filler
_el_size	src/common/vec_t.h	/^    size_t _el_size; \/\/ the size of the element$/;"	m	struct:el_filler
_elem	src/sm/btree_p.h	/^    cvec_t            _elem;$/;"	m	class:btrec_t
_elems_in_bucket	src/sm/sdesc.h	/^    w_base_t::uint4_t        _elems_in_bucket(int i) const { return min_sdesc << i; }$/;"	f	class:sdesc_cache_t
_elen	src/sm/btcursor.h	/^    int                _elen;$/;"	m	class:bt_cursor_t
_end	src/common/latch.cpp	/^    holder_list::iterator _end;$/;"	m	class:holder_search	file:
_end	src/fc/w_input.cpp	/^        _end, error, no_hex, no_state };$/;"	e	enum:states	file:
_end	src/sm/bf_core.cpp	/^    long _end;$/;"	m	struct:bf_core_m::init_thread_t	file:
_end	src/sm/log_core.h	/^    long volatile        _end; \/\/ byte number of insertion point$/;"	m	class:log_core
_end_key	src/sm/tests/mrbtrees_test.cpp	/^  int _end_key;  $/;"	m	class:smthread_scanner_t	file:
_end_key	src/sm/tests/mrbtrees_test.cpp	/^  int _end_key;$/;"	m	class:smthread_creator_t	file:
_end_xd	src/sm/xct.h	/^    xct_link* _end_xd;$/;"	m	struct:xct_i
_endserial	src/sm/dir.cpp	/^sdesc_cache_t::_endserial() const$/;"	f	class:sdesc_cache_t
_enter_2pc	src/sm/sm.cpp	/^ss_m::_enter_2pc(const gtid_t &gtid)$/;"	f	class:ss_m
_entry	src/fc/vtable.h	/^    char*          _entry[1];$/;"	m	class:vtable_row_t
_eof	src/sm/btcursor.h	/^    bool            _eof; \/\/ no element left$/;"	m	class:bt_cursor_t
_eof	src/sm/scan.h	/^    bool                 _eof;$/;"	m	class:scan_index_i
_eof	src/sm/scan.h	/^    bool             _eof;$/;"	m	class:scan_file_i
_eof	src/sm/scan.h	/^    bool            _eof;$/;"	m	class:scan_rt_i
_eop	src/sm/partition.h	/^    fileoff_t             _eop; $/;"	m	class:partition_t
_epid	src/sm/vol.h	/^    lpid_t           _epid;$/;"	m	class:vol_t
_epid	src/sm/vol.h	/^    shpid_t             _epid;        \/\/ extent pid$/;"	m	class:volhdr_t
_err	src/fc/w_rc.h	/^    mutable w_error_t*     _err;$/;"	m	class:w_rc_t
_error	src/sthread/tests/ioperf.cpp	/^    bool        _error;$/;"	m	class:io_thread_t	file:
_error_codes_added	src/common/option.cpp	/^bool option_group_t::_error_codes_added = false;$/;"	m	class:option_group_t	file:
_error_codes_added	src/common/option.h	/^    static bool        _error_codes_added;$/;"	m	class:option_group_t
_error_log	src/sm/sm.cpp	/^option_t* ss_m::_error_log = NULL;$/;"	m	class:ss_m	file:
_error_log	src/sm/sm.h	/^    static option_t* _error_log;$/;"	m	class:ss_m
_error_loglevel	src/sm/sm.cpp	/^option_t* ss_m::_error_loglevel = NULL;$/;"	m	class:ss_m	file:
_error_loglevel	src/sm/sm.h	/^    static option_t* _error_loglevel;$/;"	m	class:ss_m
_error_occurred	src/sm/scan.h	/^    rc_t            _error_occurred;$/;"	m	class:scan_rt_i
_error_occurred	src/sm/scan.h	/^    w_rc_t               _error_occurred;$/;"	m	class:scan_index_i
_error_occurred	src/sm/scan.h	/^    w_rc_t           _error_occurred;$/;"	m	class:scan_file_i
_errors_last_check	src/fc/valgrind_help.h	/^    int  _errors_last_check;$/;"	m	class:valgrind_check
_expose_lock	src/sm/log_core.h	/^    mcs_lock		 _expose_lock;$/;"	m	class:log_core
_ext_size	src/sm/vol.h	/^    extnum_t            _ext_size;$/;"	m	class:volhdr_t
_extent	src/sm/tests/lock_cache_test.cpp	/^extid_t  _extent;$/;"	v
_extent	src/sm/tests/lockid_test.cpp	/^extid_t  _extent;$/;"	v
_f	src/sm/bf_prefetch.h	/^    int                _f; \/\/ index being fetched$/;"	m	class:bf_prefetch_thread_t
_f	src/sm/newsort.cpp	/^    int*        _f;        \/\/ distribution of runs to tapes$/;"	m	class:phase_mgr	file:
_f	src/sm/newsort.cpp	/^    int*        _f;$/;"	m	class:fib_t	file:
_f1	src/sm/sdesc.h	/^    fill1        _f1;                \/\/ keep it 8 byte aligned and leave$/;"	m	struct:sinfo_s
_f2	src/sm/sdesc.h	/^    fill2        _f2;            \/\/ room for future expansion$/;"	m	struct:sinfo_s
_f3	src/sm/sdesc.h	/^    fill4        _f3;        $/;"	m	struct:sinfo_s
_fact	src/sm/sort_s.h	/^    factory_t*    _fact;$/;"	m	class:ssm_sort::skey_t
_fake	src/sm/xct.cpp	/^    bool 	_fake;$/;"	m	struct:xct_link	file:
_fake_block	src/fc/mem_block.h	/^    block        _fake_block;$/;"	m	struct:memory_block::block_list
_fake_disk_latency	src/sm/vol.h	/^    int              _fake_disk_latency;     $/;"	m	class:vol_t
_fd	src/fc/valgrind_help.cpp	/^    int _fd;$/;"	m	class:dummyfile	file:
_fd	src/sthread/sdisk_unix.h	/^    int    _fd;$/;"	m	class:sdisk_unix_t
_fd	src/sthread/tests/ioperf.cpp	/^    int         _fd;$/;"	m	class:io_thread_t	file:
_fetch	src/sm/scan.cpp	/^scan_index_i::_fetch($/;"	f	class:scan_index_i
_fetch	src/sm/scan.cpp	/^scan_rt_i::_fetch(nbox_t& key, void* el, smsize_t& elen, bool& eof, bool skip)$/;"	f	class:scan_rt_i
_fhdl_app	src/sm/partition.h	/^    int                   _fhdl_app;$/;"	m	class:partition_t
_fhdl_rd	src/sm/partition.h	/^    int                   _fhdl_rd;$/;"	m	class:partition_t
_fib	src/sm/newsort.cpp	/^    const fib_t* _fib;$/;"	m	class:phase_mgr	file:
_fid	src/sm/tests/create_rec.cpp	/^        stid_t      _fid;$/;"	m	class:smthread_user_t	file:
_fid	src/sm/tests/log_exceed.cpp	/^        stid_t      _fid;$/;"	m	class:smthread_user_t	file:
_fid	src/sm/tests/mrbtrees_test.cpp	/^    stid_t _fid;$/;"	m	struct:el_filler_utest	file:
_fid	src/sm/tests/mrbtrees_test.cpp	/^  stid_t      _fid; \/\/ id of the file the records are created$/;"	m	class:smthread_main_t	file:
_fid	src/sm/tests/rtree_example.cpp	/^        stid_t      _fid;$/;"	m	class:smthread_user_t	file:
_fid	src/sm/tests/sort_stream.cpp	/^        stid_t      _fid;$/;"	m	class:smthread_user_t	file:
_fid	src/sm/tests/vtable_example.cpp	/^        stid_t      _fid;$/;"	m	class:smthread_user_t	file:
_file	src/fc/errlog.h	/^    FILE*             _file;        \/\/ if local file logging is used$/;"	m	class:ErrLog
_file	src/sm/sm_base.h	/^    const char *const _file;$/;"	m	struct:check_compensated_op_nesting
_fileName	src/common/option.h	/^    const char*           _fileName;$/;"	m	class:option_file_scan_t
_file_sort	src/sm/sort.h	/^    bool              _file_sort;    \/\/ true if sorting a file$/;"	m	class:sort_stream_i
_fill	src/sm/logrec.cpp	/^    fill2          _fill;$/;"	m	class:page_init_t	file:
_fill1	src/sm/smthread.h	/^        fill1            _fill1;        $/;"	m	struct:smthread_t::tcb_t
_fill1	src/sm/tests/file_scan_many.cpp	/^	fill1       _fill1;$/;"	m	struct:file_info_t	file:
_fill2	src/sm/page_s.h	/^    fill2      _fill2;  $/;"	m	class:page_s
_fill2	src/sm/smthread.h	/^        fill2            _fill2;        $/;"	m	struct:smthread_t::tcb_t
_fill2	src/sm/tests/file_scan_many.cpp	/^	fill2       _fill2;$/;"	m	struct:file_info_t	file:
_fill2b	src/sm/page_s.h	/^    fill2      _fill2b;        $/;"	m	class:page_s
_filler	src/sm/sm_io.h	/^        fill2                _filler; \/\/ for purify$/;"	m	class:store_operation_param
_find	src/sm/device.cpp	/^device_s* device_m::_find(const char* dev_name)$/;"	f	class:device_m
_find	src/sm/device.cpp	/^device_s* device_m::_find(const devid_t& devid)$/;"	f	class:device_m
_find	src/sm/sm_io.cpp	/^io_m::_find(vid_t vid)$/;"	f	class:io_m
_find_and_grab	src/sm/sm_io.cpp	/^io_m::_find_and_grab(vid_t vid, lock_state* _me,$/;"	f	class:io_m
_find_and_lock_free_slot	src/sm/file.cpp	/^file_p::_find_and_lock_free_slot($/;"	f	class:file_p
_find_assoc	src/sm/smindex.cpp	/^ss_m::_find_assoc($/;"	f	class:ss_m
_find_lock_head_in_chain	src/sm/lock_core.cpp	/^lock_core_m::_find_lock_head_in_chain($/;"	f	class:lock_core_m
_find_md_assoc	src/sm/smindex.cpp	/^ss_m::_find_md_assoc($/;"	f	class:ss_m
_find_mr_assoc	src/sm/smindex.cpp	/^rc_t ss_m::_find_mr_assoc(const stid_t&         stid, $/;"	f	class:ss_m
_find_page_and_create_mrbt_rec	src/sm/smfile.cpp	/^ss_m::_find_page_and_create_mrbt_rec(const stid_t& fid, const lpid_t& leaf, const vec_t& hdr,$/;"	f	class:ss_m
_find_page_return_info	src/sm/histo.cpp	/^histoid_t::_find_page_return_info($/;"	f	class:histoid_t
_find_root	src/sm/dir.cpp	/^rc_t dir_vol_m::_find_root(vid_t vid, int &i)$/;"	f	class:dir_vol_m
_find_slotted_mrbt_page_with_space	src/sm/file.cpp	/^file_m::_find_slotted_mrbt_page_with_space($/;"	f	class:file_m
_find_slotted_page_with_space	src/sm/file.cpp	/^file_m::_find_slotted_page_with_space($/;"	f	class:file_m
_fingerprint	src/sm/smthread.h	/^    short              _fingerprint[FINGER_BITS]; \/\/ dreadlocks$/;"	m	class:smthread_t
_fingerprint_map	src/sm/smthread.h	/^    atomic_thread_map_t  _fingerprint_map; \/\/ map containing only fingerprint$/;"	m	class:smthread_t
_finished	src/sm/scan.h	/^    bool                 _finished;$/;"	m	class:scan_index_i
_finished	src/sm/scan.h	/^    bool            _finished;$/;"	m	class:scan_rt_i
_first	src/common/latch.cpp	/^    latch_holder_t* &_first;$/;"	m	class:holder_list	file:
_first_lsn	src/sm/xct.h	/^    lsn_t                        _first_lsn;$/;"	m	class:xct_t
_first_page	src/sm/newsort.cpp	/^    shpid_t          _first_page;$/;"	m	class:run_t	file:
_first_rid	src/sm/tests/mrbtrees_test.cpp	/^  rid_t       _first_rid; \/\/ rid of record with key 0$/;"	m	class:smthread_main_t	file:
_first_run	src/sm/newsort.cpp	/^    int             _first_run;$/;"	m	class:tape_t	file:
_first_slot	src/sm/newsort.cpp	/^    slotid_t         _first_slot;$/;"	m	class:run_t	file:
_fix	src/sm/bf.cpp	/^bf_m::_fix($/;"	f	class:bf_m
_fix	src/sm/page.cpp	/^page_p::_fix($/;"	f	class:page_p
_fix_error	src/sm/bf_prefetch.h	/^    w_rc_t            _fix_error;$/;"	m	class:bf_prefetch_thread_t
_fix_error_i	src/sm/bf_prefetch.h	/^    int                _fix_error_i;$/;"	m	class:bf_prefetch_thread_t
_fixed	src/sm/btree_impl.h	/^    bool           _fixed;$/;"	m	class:tree_latch
_flags	src/fc/w_debug.h	/^        char *_flags;$/;"	m	class:w_debug
_flags	src/sm/file.cpp	/^    store_flag_t _flags;$/;"	m	class:alloc_file_page_filter_t	file:
_flags	src/sm/pin.h	/^    w_base_t::uint4_t    _flags;  \/\/ this cannot be flags_t since it uses$/;"	m	class:pin_i
_flags	src/sthread/sdisk_unix.h	/^    int _flags;$/;"	m	class:sdisk_unix_t
_floor	src/sm/log_core.h	/^    static long         _floor(long offset, long block_size) $/;"	f	class:log_core
_flush	src/fc/errlog.cpp	/^ErrLog::_flush(bool $/;"	f	class:ErrLog
_flushX	src/sm/log_core.cpp	/^log_core::_flushX(lsn_t start_lsn, $/;"	f	class:log_core
_flush_cond	src/sm/log_core.h	/^    pthread_cond_t       _flush_cond;  \/\/ paird with _wait_flush_lock$/;"	m	class:log_core
_flush_daemon	src/sm/log_core.h	/^    sthread_t*           _flush_daemon;$/;"	m	class:log_core
_flush_daemon_running	src/sm/log_core.h	/^    bool volatile        _flush_daemon_running; \/\/ for asserts only$/;"	m	class:log_core
_flush_lock	src/sm/log_core.h	/^    tatas_lock           _flush_lock;$/;"	m	class:log_core
_flush_logbuf	src/sm/xct.cpp	/^xct_t::_flush_logbuf()$/;"	f	class:xct_t
_flush_lsn	src/sm/log_core.h	/^    lsn_t                _flush_lsn;$/;"	m	class:log_core
_fname	src/sthread/tests/ioperf.cpp	/^    const char*        _fname;$/;"	m	class:io_thread_t	file:
_foo_keys	src/sm/data_access_histogram.h	/^    key_values _foo_keys;$/;"	m	class:data_access_histogram
_fookeys	src/sm/key_ranges_map.h	/^    vector<foo*> _fookeys;$/;"	m	class:key_ranges_map
_for_index	src/sm/sort_s.h	/^    bool    _for_index;    \/\/ set_for_index, is_for_index$/;"	m	class:ssm_sort::sort_keys_t
_force_vote_readonly	src/sm/sm.cpp	/^ss_m::_force_vote_readonly()$/;"	f	class:ss_m
_forced_readonly	src/sm/xct.h	/^        bool                      _forced_readonly;$/;"	m	struct:xct_t::xct_core
_forked	src/sthread/sthread.h	/^    volatile bool               _forked;$/;"	m	class:sthread_t
_format	src/sm/page.cpp	/^page_p::_format(const lpid_t& pid, tag_t tag, $/;"	f	class:page_p
_format_version	src/sm/vol.h	/^    w_base_t::uint4_t   _format_version;$/;"	m	class:volhdr_t
_found_in_table	src/sm/histo.h	/^    bool        _found_in_table;$/;"	m	class:histoid_remove_t
_found_in_table	src/sm/histo.h	/^    bool        _found_in_table;$/;"	m	class:histoid_update_t
_fp	src/sm/sort_s.h	/^    file_p*      _fp;$/;"	m	class:ssm_sort::object_t
_frame	src/sm/bf_s.h	/^    page_s*     _frame;          \/\/ pointer to the frame$/;"	m	class:bfcb_t
_free_all	src/sm/sort.h	/^    void _free_all() { $/;"	f	class:chunk_mgr_t
_free_ext_cache	src/sm/vol.h	/^    ext_cache_t              _free_ext_cache;$/;"	m	class:vol_t
_free_ext_list	src/sm/vol.cpp	/^vol_t::_free_ext_list(extnum_t ext, snum_t snum)$/;"	f	class:vol_t
_free_list	src/fc/block_alloc.h	/^    std::deque<mblock*>	_free_list;$/;"	m	struct:dynpool
_free_page	src/sm/file.cpp	/^file_m::_free_page(file_p& page, const bool bIgnoreLatches)$/;"	f	class:file_m
_free_page	src/sm/sm_io.cpp	/^io_m::_free_page(const lpid_t& pid, vol_t *v, bool check_store_membership)$/;"	f	class:io_m
_freelist	src/common/latch.cpp	/^    latch_holder_t* &_freelist;$/;"	m	class:holder_search	file:
_freelist	src/fc/tests/memblock.cpp	/^    std::vector<block*>    _freelist;$/;"	m	struct:test_block_pool	file:
_gen_log_warnings	src/sm/smthread.h	/^    bool            _gen_log_warnings;$/;"	m	class:smthread_t
_get	src/fc/mem_block.cpp	/^char* block::_get(size_t index, size_t chip_size) {$/;"	f	class:memory_block::block
_get_const	src/fc/vtable.h	/^    const char *_get_const(int a) const {$/;"	f	class:vtable_row_t
_get_du_statistics	src/sm/sm.cpp	/^ss_m::_get_du_statistics( const stid_t& stpgid, sm_du_stats_t& du, bool audit)$/;"	f	class:ss_m
_get_du_statistics	src/sm/sm.cpp	/^ss_m::_get_du_statistics(vid_t vid, sm_du_stats_t& du, bool audit)$/;"	f	class:ss_m
_get_file_meta_stats	src/sm/sm.cpp	/^ss_m::_get_file_meta_stats($/;"	f	class:ss_m
_get_hdr_lsn	src/sm/pin.cpp	/^const lsn_t& pin_i::_get_hdr_lsn() const { return _hdr_page().lsn(); }$/;"	f	class:pin_i
_get_hdr_page	src/sm/pin.h	/^    file_p*     _get_hdr_page() const { $/;"	f	class:pin_i
_get_hdr_page_no_lsn_check	src/sm/pin.h	/^    file_p*     _get_hdr_page_no_lsn_check() const {$/;"	f	class:pin_i
_get_index	src/sm/log_core.cpp	/^log_core::_get_index(uint4_t n) const$/;"	f	class:log_core
_get_lvid	src/sm/sm_io.cpp	/^io_m::_get_lvid(const char* dev_name, lvid_t& lvid)$/;"	f	class:io_m
_get_min_size	src/sm/log_core.h	/^    fileoff_t       _get_min_size() const {$/;"	f	class:log_core
_get_range_map	src/sm/smindex.cpp	/^rc_t ss_m::_get_range_map(stid_t stid, key_ranges_map*& rangemap)$/;"	f	class:ss_m
_get_row	src/fc/vtable.cpp	/^vtable_t::_get_row(int i) const {$/;"	f	class:vtable_t
_get_store_info	src/sm/smindex.cpp	/^rc_t ss_m::_get_store_info(stid_t stid, sinfo_s& sinfo)$/;"	f	class:ss_m
_get_store_info	src/sm/smindex.cpp	/^ss_m::_get_store_info($/;"	f	class:ss_m
_get_store_property	src/sm/smfile.cpp	/^ss_m::_get_store_property($/;"	f	class:ss_m
_get_vid	src/sm/sm_io.cpp	/^io_m::_get_vid(const lvid_t& lvid)$/;"	f	class:io_m
_get_volume_meta_stats	src/sm/sm.cpp	/^ss_m::_get_volume_meta_stats(vid_t vid, SmVolumeMetaStats& volume_stats, concurrency_t cc)$/;"	f	class:ss_m
_get_volume_quota	src/sm/sm_io.cpp	/^io_m::_get_volume_quota(vid_t vid, smksize_t& quota_KB, smksize_t& quota_used_KB, uint4_t &used)$/;"	f	class:io_m
_global_stats_	src/sm/smstats.cpp	/^    sm_stats_info_t _global_stats_;$/;"	m	namespace:local_ns	file:
_global_stats_mutex	src/sm/smstats.cpp	/^    static queue_based_block_lock_t _global_stats_mutex;$/;"	m	namespace:local_ns	file:
_global_tid	src/sm/xct.h	/^        gtid_t *                  _global_tid; \/\/ null if not participating$/;"	m	struct:xct_t::xct_core
_grab_mutex	src/sm/histo.cpp	/^histoid_t::_grab_mutex() const$/;"	f	class:histoid_t
_grab_mutex_cond	src/sm/histo.cpp	/^histoid_t::_grab_mutex_cond(bool& got) const$/;"	f	class:histoid_t
_granularities	src/sm/data_access_histogram.h	/^    gran_map _granularities;$/;"	m	class:data_access_histogram
_grow	src/common/vec_t.cpp	/^void cvec_t::_grow(int total_cnt)$/;"	f	class:cvec_t
_grow	src/sm/sort_s.h	/^ssm_sort::sort_keys_t::_grow(int i) $/;"	f	class:ssm_sort::sort_keys_t
_grow_tree	src/sm/btree_impl.cpp	/^btree_impl::_grow_tree(btree_p& rp, const bool bIgnoreLatches)        $/;"	f	class:btree_impl
_h	src/sm/histo.h	/^    histoid_t*    _h;$/;"	m	class:histoid_remove_t
_h	src/sm/histo.h	/^    histoid_t*    _h;$/;"	m	class:histoid_update_t
_h_size	src/sm/rtree.cpp	/^static const int _h_size = 20;        \/\/ expansion factors for 20 fills$/;"	v	file:
_hand	src/sm/bf_core.cpp	/^int                bf_core_m::_hand = 0; \/\/ hand of clock$/;"	m	class:bf_core_m	file:
_hand	src/sm/bf_core.h	/^    static int                  _hand; \/\/ clock hand$/;"	m	class:bf_core_m
_handle_dup_keys	src/sm/btree_bl.cpp	/^btree_impl::_handle_dup_keys($/;"	f	class:btree_impl
_has_index_key	src/sm/newsort.cpp	/^            _has_index_key=0x2, $/;"	e	enum:meta_header_t::_persistent::__anon77	file:
_hash	src/sm/bf_htab.h	/^    w_hashing::hash2    _hash[HASH_COUNT];$/;"	m	class:bf_core_m::htab
_hash	src/sm/bf_s.h	/^    int4_t       volatile    _hash;        \/\/ and what was the hash value?$/;"	m	class:bfcb_t
_hash2	src/fc/tests/cuckoo.cpp	/^w_hashing::hash2        _hash2[HASH_COUNT];$/;"	v
_hash_func	src/sm/bf_s.h	/^    int4_t       _hash_func; \/\/ which hash function was this frame placed with?$/;"	m	class:bfcb_t
_have_mutex	src/sm/histo.cpp	/^histoid_t::_have_mutex() const$/;"	f	class:histoid_t
_hdr	src/sm/btree_p.h	/^btree_p::_hdr() const$/;"	f	class:btree_p
_hdr	src/sm/keyed.h	/^    hdr_s     _hdr;$/;"	m	class:keyrec_t
_hdr	src/sm/rtree_p.h	/^rtree_base_p::_hdr() const$/;"	f	class:rtree_base_p
_hdr	src/sm/rtree_p.h	/^rtree_base_p::_hdr()$/;"	f	class:rtree_base_p
_hdr_exts	src/sm/vol.h	/^    extnum_t            _hdr_exts;$/;"	m	class:volhdr_t
_hdr_exts	src/sm/vol.h	/^    uint             _hdr_exts;$/;"	m	class:vol_t
_hdr_lsn	src/sm/pin.h	/^    lsn_t                 _hdr_lsn;$/;"	m	class:pin_i
_hdr_page	src/sm/pin.cpp	/^file_p&        pin_i::_hdr_page() const $/;"	f	class:pin_i
_hdr_page_alias	src/sm/pin.h	/^    char            _hdr_page_alias[PAGE_ALIAS_FILE];$/;"	m	class:pin_i
_hdr_pages	src/sm/vol.h	/^    shpid_t             _hdr_pages;   \/\/ # pages in hdr (we might not use$/;"	m	class:volhdr_t
_hdr_pages	src/sm/vol.h	/^    uint             _hdr_pages;$/;"	m	class:vol_t
_hdr_size	src/sm/page.h	/^    enum { _hdr_size = (page_sz - data_sz - 2 * sizeof (slot_t )) };$/;"	e	enum:page_p::__anon73
_hdr_sz	src/sm/page_s.h	/^        _hdr_sz = (0$/;"	e	enum:page_s::__anon78
_hdrbuf	src/sm/sort_s.h	/^    const void*   _hdrbuf;$/;"	m	class:ssm_sort::object_t
_hdrfact	src/sm/sort_s.h	/^    factory_t*    _hdrfact;$/;"	m	class:ssm_sort::object_t
_hdrlen	src/sm/sort_s.h	/^    smsize_t      _hdrlen;$/;"	m	class:ssm_sort::object_t
_hdrsize	src/sm/newsort.cpp	/^        smsize_t                 _hdrsize; \/\/ length of hdr if carrying object$/;"	m	struct:meta_header_t::_persistent	file:
_height	src/sm/btree_bl.cpp	/^    uint2_t        _height;        \/\/ height of the tree$/;"	m	class:btsink_t	file:
_held	src/sthread/mcs_lock.h	/^		mcs_lock* _held;$/;"	m	struct:mcs_lock::ext_qnode
_held	src/sthread/sthread.h	/^        w_pthread_lock_t* _held;$/;"	m	struct:w_pthread_lock_t::ext_qnode
_high	src/sm/newsort.cpp	/^    int         _high;$/;"	m	class:phase_mgr	file:
_histo_ext_cache	src/sm/vol.h	/^    mutable histo_extent_cache     _histo_ext_cache;$/;"	m	class:vol_t
_histogram	src/sm/bf.cpp	/^    static int *      _histogram;$/;"	m	class:bf_cleaner_thread_t	file:
_histogram	src/sm/bf.cpp	/^int *bf_cleaner_thread_t::_histogram = 0;$/;"	m	class:bf_cleaner_thread_t	file:
_histogram_lock	src/sm/data_access_histogram.h	/^    occ_rwlock _histogram_lock;$/;"	m	class:data_access_histogram
_histoid	src/sm/sdesc.h	/^    histoid_t*             _histoid;$/;"	m	class:sdesc_t
_histoid_mutex	src/sm/histo.h	/^    mutable queue_based_lock_t _histoid_mutex;$/;"	m	class:histoid_t
_hit_count	src/fc/mem_block.h	/^    size_t        _hit_count;$/;"	m	struct:memory_block::block_list
_holder	src/sm/lock_x.h	/^        sthread_t*         _holder;$/;"	m	struct:lock_head_t::my_lock
_holder	src/sthread/sthread.h	/^    volatile holder_type_t _holder;$/;"	m	struct:tatas_lock
_holder	src/sthread/sthread.h	/^    w_pthread_lock_t *  _holder;$/;"	m	struct:w_pthread_lock_t
_holders	src/common/latch.cpp	/^    holder_list _holders;$/;"	m	class:holder_search	file:
_holders	src/common/latch.cpp	/^    holder_list _holders;$/;"	m	class:holders_print	file:
_holders	src/sthread/srwlock.h	/^    unsigned int volatile _holders; \/\/ 2*readers + writer$/;"	m	class:mcs_rwlock
_hotbit	src/sm/bf_s.h	/^    int4_t      _hotbit;\/\/ copy of refbit for use by the cleaner algorithm$/;"	m	class:bfcb_t
_htab	src/fc/w_hash.h	/^    const w_hash_t<T,LOCK, K>&     _htab;$/;"	m	class:w_hash_i
_htab	src/sm/bf_core.cpp	/^bf_core_m::htab*        bf_core_m::_htab = 0;$/;"	m	class:bf_core_m	file:
_htab	src/sm/bf_core.h	/^    static htab*                _htab;$/;"	m	class:bf_core_m
_htab	src/sm/lock_core.h	/^    bucket_t*          _htab;$/;"	m	class:lock_core_m
_htab_cache	src/sm/bf_core.h	/^    static bfcb_t* volatile*    _htab_cache;$/;"	m	class:bf_core_m
_htab_markers	src/sm/bf_core.h	/^    static void* volatile*      _htab_markers;$/;"	m	class:bf_core_m
_htabsz	src/sm/lock_core.h	/^    uint4_t            _htabsz;$/;"	m	class:lock_core_m
_hugetlbfs_path	src/sm/sm.cpp	/^option_t* ss_m::_hugetlbfs_path = NULL;$/;"	m	class:ss_m	file:
_hugetlbfs_path	src/sm/sm.h	/^    static option_t* _hugetlbfs_path;$/;"	m	class:ss_m
_i	src/fc/tests/container.cpp	/^        int    _i;$/;"	m	struct:THING	file:
_i	src/sm/xct.cpp	/^        sthread_base_t::id_t                 _i;$/;"	m	class:PrintSmthreadById	file:
_i2pid	src/sm/tests/htab.cpp	/^    lpid_t  *_i2pid; \/\/ indexed by i $/;"	m	class:htab_tester	file:
_id	src/common/tests/latch1.cpp	/^    int _id;$/;"	m	struct:latch_thread_id_t	file:
_id	src/sm/extent.h	/^    extid_t             _id;$/;"	m	class:extlink_i
_ident	src/fc/errlog.h	/^    const char *         _ident; \/\/ identity for syslog & local use$/;"	m	class:ErrLog
_ident	src/fc/errlog_s.h	/^    simple_string _ident; \/\/ identity for syslog & local use$/;"	m	struct:ErrLogInfo
_idx	src/sm/rtree.cpp	/^    int2_t _idx;$/;"	m	class:rtld_cache_t	file:
_ifid	src/sm/newsort.cpp	/^    stid_t             _ifid;$/;"	m	class:ssm_sort::run_mgr	file:
_ikeysize	src/sm/newsort.cpp	/^        smsize_t                 _ikeysize; \/\/ index key length$/;"	m	struct:meta_header_t::_persistent	file:
_in_bp	src/sm/sort_s.h	/^    bool        _in_bp; \/\/ in buffer pool or in memory$/;"	m	class:ssm_sort::object_t
_in_compensated_op	src/sm/xct.h	/^     volatile int                _in_compensated_op; $/;"	m	class:xct_t
_in_hash_table	src/sm/histo.h	/^    bool         _in_hash_table() const {$/;"	f	class:histoid_t
_in_hdr	src/sm/sort_s.h	/^    bool         _in_hdr;$/;"	m	class:ssm_sort::key_location_t
_in_hdr	src/sm/sort_s.h	/^    bool        _in_hdr;$/;"	m	class:ssm_sort::skey_t
_in_htab	src/sm/bf_core.cpp	/^bf_core_m::_in_htab(const bfcb_t* e) const$/;"	f	class:bf_core_m
_in_large_object	src/sm/newsort.cpp	/^    bool                   _in_large_object; \/\/ true -> we're$/;"	m	class:blob	file:
_in_obj	src/sm/sort_s.h	/^    bool        _in_obj; \/\/ else in mem$/;"	m	class:ssm_sort::skey_t
_in_sm	src/sm/smthread.h	/^        bool    _in_sm;      \/\/ thread is in sm ss_m:: function$/;"	m	struct:smthread_t::tcb_t
_in_use	src/fc/vtable.h	/^    int            _in_use;$/;"	m	class:vtable_row_t
_include_nulls	src/sm/btcursor.h	/^    bool            _include_nulls; $/;"	m	class:bt_cursor_t
_include_nulls	src/sm/rtree_p.h	/^    bool     _include_nulls;$/;"	m	class:rt_cursor_t
_incr_page_write	src/sm/bf.cpp	/^bf_m::_incr_page_write(int number, bool bg)$/;"	f	class:bf_m
_index	src/sm/data_access_histogram.h	/^    uint _index;$/;"	m	class:data_access_histogram
_index	src/sm/partition.h	/^    partition_index_t     _index; $/;"	m	class:partition_t
_index_id	src/sm/tests/mrbtrees_test.cpp	/^  stid_t      _index_id; \/\/ id of the btree index$/;"	m	class:smthread_main_t	file:
_index_key	src/sm/newsort.cpp	/^    sm_skey_t                _index_key;$/;"	m	class:meta_header_t	file:
_indirect	src/sm/rtree_p.h	/^    shpid_t* _indirect[ftstk_chunk];$/;"	m	class:ftstk_t
_info	src/sm/bf_prefetch.h	/^    struct frame_info        *_info;$/;"	m	class:bf_prefetch_thread_t	typeref:struct:bf_prefetch_thread_t::frame_info
_info	src/sm/histo.h	/^    pginfo_t    _info;$/;"	m	class:histoid_remove_t
_info	src/sm/histo.h	/^    pginfo_t    _info;$/;"	m	class:histoid_update_t
_inherited	src/sm/sdesc.h	/^    bool		   _inherited;$/;"	m	class:sdesc_t
_init	src/sm/bf_prefetch.cpp	/^bf_prefetch_thread_t::_init(int i)$/;"	f	class:bf_prefetch_thread_t
_init	src/sm/logrec.cpp	/^    page_init_t   _init;$/;"	m	class:page_format_t	file:
_init	src/sm/scan.cpp	/^rc_t scan_file_i::_init(bool for_append) $/;"	f	class:scan_file_i
_init	src/sm/scan.cpp	/^scan_index_i::_init($/;"	f	class:scan_index_i
_init	src/sm/scan.cpp	/^void scan_rt_i::_init(nbox_t::sob_cmp_t c, const nbox_t& qbox)$/;"	f	class:scan_rt_i
_init1	src/fc/errlog.cpp	/^ErrLog::_init1()$/;"	f	class:ErrLog
_init2	src/fc/errlog.cpp	/^ErrLog::_init2()$/;"	f	class:ErrLog
_init_constructor	src/sm/pin.cpp	/^void pin_i::_init_constructor()$/;"	f	class:pin_i
_init_constructor	src/sm/scan.cpp	/^append_file_i::_init_constructor()$/;"	f	class:append_file_i
_init_store_histo	src/sm/sm_io.cpp	/^io_m::_init_store_histo(store_histo_t *h, const stid_t& stid,$/;"	f	class:io_m
_initialize_device	src/sm/tests/create_rec.cpp	/^        bool        _initialize_device;$/;"	m	class:smthread_user_t	file:
_initialize_device	src/sm/tests/log_exceed.cpp	/^        bool        _initialize_device;$/;"	m	class:smthread_user_t	file:
_initialize_device	src/sm/tests/mrbtrees_test.cpp	/^  bool        _initialize_device; \/\/ indicates whether we should initialize the device and create a new file$/;"	m	class:smthread_main_t	file:
_initialize_device	src/sm/tests/rtree_example.cpp	/^        bool        _initialize_device;$/;"	m	class:smthread_user_t	file:
_initialize_device	src/sm/tests/sort_stream.cpp	/^        bool        _initialize_device;$/;"	m	class:smthread_user_t	file:
_initialize_device	src/sm/tests/vtable_example.cpp	/^        bool        _initialize_device;$/;"	m	class:smthread_user_t	file:
_initialize_fingerprint	src/sm/smthread.cpp	/^void smthread_t::_initialize_fingerprint()$/;"	f	class:smthread_t
_initialized	src/sm/log_core.cpp	/^bool       log_core::_initialized = false;$/;"	m	class:log_core	file:
_initialized	src/sm/log_core.h	/^    static bool          _initialized;$/;"	m	class:log_core
_input	src/common/option.h	/^        istream                &_input;$/;"	m	class:option_stream_scan_t
_insert	src/sm/bf_htab.cpp	/^bool bf_core_m::htab::_insert(bfcb_t* t, bfcb_t* &moved)$/;"	f	class:bf_core_m::htab
_insert	src/sm/btree.cpp	/^btree_m::_insert($/;"	f	class:btree_m
_insert	src/sm/btree_impl.cpp	/^btree_impl::_insert($/;"	f	class:btree_impl
_insert	src/sm/dir.cpp	/^dir_vol_m::_insert(const stid_t& stid, const sinfo_s& si)$/;"	f	class:dir_vol_m
_insert_attribute	src/fc/vtable.h	/^    char *_insert_attribute(int a) {$/;"	f	class:vtable_row_t
_insert_lock	src/sm/log_core.h	/^    queue_based_lock_t   _insert_lock; \/\/ synchronize concurrent log inserts$/;"	m	class:log_core
_insert_store_pages	src/sm/histo.cpp	/^histoid_t::_insert_store_pages(const stid_t& s) $/;"	f	class:histoid_t
_inserted	src/fc/vtable.cpp	/^vtable_row_t::_inserted(int a) {$/;"	f	class:vtable_row_t
_instance_cnt	src/sm/sm.cpp	/^int ss_m::_instance_cnt = 0;$/;"	m	class:ss_m	file:
_instance_cnt	src/sm/sm.h	/^    static int _instance_cnt;$/;"	m	class:ss_m
_invalidate	src/sm/newsort.cpp	/^skey_t::_invalidate() $/;"	f	class:skey_t
_invalidate	src/sm/sort_s.h	/^    void    _invalidate() {$/;"	f	class:ssm_sort::object_t
_iref	src/sm/lgrec.h	/^    lg_tag_indirect_s&    _iref;        \/\/ indirect handle$/;"	m	class:lg_tag_indirect_h
_is_alloc_page_of	src/sm/vol.cpp	/^bool vol_t::_is_alloc_page_of($/;"	f	class:vol_t
_is_compressed	src/sm/btree_bl.cpp	/^    bool        _is_compressed; \/\/ prefix compression turned on?$/;"	m	class:btsink_t	file:
_is_dup	src/sm/newsort.cpp	/^            _is_dup=0x1, $/;"	e	enum:meta_header_t::_persistent::__anon77	file:
_is_fixed	src/sm/file.cpp	/^    bool         _is_fixed;$/;"	m	class:alloc_file_page_filter_t	file:
_is_large	src/common/vec_t.h	/^    bool _is_large() const {return _base != &_pair[0];}$/;"	f	class:cvec_t
_is_local	src/sm/data_access_histogram.h	/^    bool _is_local;$/;"	m	class:data_access_histogram
_is_plp	src/sthread/srwlock.h	/^    bool _is_plp;$/;"	m	class:mcs_rwlock
_is_raw	src/sm/vol.h	/^    bool             _is_raw;   \/\/ notes if volume is a raw device$/;"	m	class:vol_t
_is_reader	src/sthread/srwlock.h	/^    bool _is_reader;$/;"	m	class:mcs_rwlock
_is_running	src/sm/bf.cpp	/^    bool              _is_running;$/;"	m	class:bf_cleaner_thread_t	file:
_is_special	src/sthread/tests/ioperf.cpp	/^    bool         _is_special;$/;"	m	class:io_thread_t	file:
_is_valid_ext	src/sm/vol.h	/^inline bool vol_t::_is_valid_ext(extnum_t e) const$/;"	f	class:vol_t
_is_valid_page_of	src/sm/vol.cpp	/^bool vol_t::_is_valid_page_of(const lpid_t &pid, snum_t s) const $/;"	f	class:vol_t
_it	src/common/latch.cpp	/^    holder_list::iterator _it;$/;"	m	class:holder_search	file:
_iter	src/fc/w_hash.h	/^    w_list_i<T,LOCK>         _iter;$/;"	m	class:w_hash_i
_join_slot	src/sm/log_core.cpp	/^log_core::insert_info* log_core::_join_slot(long &idx, long &start, long size) {$/;"	f	class:log_core
_kc	src/sm/btcursor.h	/^    const key_type_s*        _kc;$/;"	m	class:bt_cursor_t
_kc_buf_double	src/sm/smthread.h	/^        double  _kc_buf_double[smlevel_0::page_sz\/sizeof(double)]; \/\/ not initialized$/;"	m	struct:smthread_t::tcb_t
_kc_buf_double_d	src/sm/smthread.h	/^	double  _kc_buf_double_d[smlevel_0::page_sz\/sizeof(double)]; \/\/ not initialized$/;"	m	struct:smthread_t::tcb_t
_kc_vec	src/sm/smthread.h	/^        cvec_t  _kc_vec;$/;"	m	struct:smthread_t::tcb_t
_kc_vec_d	src/sm/smthread.h	/^        cvec_t  _kc_vec_d;$/;"	m	struct:smthread_t::tcb_t
_keep_orig_file	src/sm/sort_s.h	/^    bool    _keep_orig_file;\/\/ set_for_index, set_for_file, set_keep_orig$/;"	m	class:ssm_sort::sort_keys_t
_key	src/sm/btree_p.h	/^    cvec_t            _key;$/;"	m	class:btrec_t
_key1	src/sm/newsort.cpp	/^    const char*            _key1;$/;"	m	class:blob	file:
_keyRangesMap	src/sm/key_ranges_map.h	/^    KRMap _keyRangesMap;$/;"	m	class:key_ranges_map
_key_match	src/sm/rtree.cpp	/^rtree_p::_key_match(const nbox_t& key, int slot, bool include_nulls,$/;"	f	class:rtree_p
_key_offset	src/fc/w_hash.h	/^    uint4_t                        _key_offset;$/;"	m	class:w_hash_t
_key_offset	src/fc/w_list.h	/^    w_base_t::uint4_t        _key_offset;$/;"	m	class:w_keyed_list_t
_keycmp	src/sm/newsort.cpp	/^    CF             _keycmp(int i) const { return info.keycmp(i); }$/;"	f	class:ssm_sort::run_mgr	file:
_keyof	src/fc/w_hash.h	/^    const K&                       _keyof(const T& t) const  {$/;"	f	class:w_hash_t
_kick_count	src/sm/bf.cpp	/^    int                         _kick_count;$/;"	m	class:bf_cleaner_thread_t	file:
_kicked	src/sm/chkpt.cpp	/^    bool                _kicked;$/;"	m	class:chkpt_thread_t	file:
_klen	src/sm/btcursor.h	/^    int                _klen;$/;"	m	class:bt_cursor_t
_label	src/common/option.h	/^        const char            *_label;$/;"	m	class:option_stream_scan_t
_last1	src/sm/newsort.cpp	/^    smsize_t               _last1; \/\/ end of comparision$/;"	m	class:blob	file:
_lastAccessBucket	src/sm/sdesc.h	/^    w_base_t::uint4_t        _lastAccessBucket;\/\/ last sdesc allocated$/;"	m	class:sdesc_cache_t
_lastAccessBucketIndex	src/sm/sdesc.h	/^    w_base_t::uint4_t        _lastAccessBucketIndex;        \/\/ last sdesc allocated$/;"	m	class:sdesc_cache_t
_lastMountLSN	src/sm/sm_io.cpp	/^lsn_t                    io_m::_lastMountLSN = lsn_t::null;$/;"	m	class:io_m	file:
_lastMountLSN	src/sm/sm_io.h	/^    static lsn_t                _lastMountLSN;$/;"	m	class:io_m
_last_extent	src/sm/vol.cpp	/^vol_t::_last_extent(snum_t snum, extnum_t &ext, $/;"	f	class:vol_t
_last_indirect	src/sm/lgrec.cpp	/^shpid_t lg_tag_indirect_h::_last_indirect()  const$/;"	f	class:lg_tag_indirect_h
_last_log	src/sm/xct.h	/^    logrec_t*                    _last_log;    \/\/ last log generated by xct$/;"	m	class:xct_t
_last_lsn	src/sm/xct.h	/^    lsn_t                        _last_lsn;$/;"	m	class:xct_t
_last_page	src/sm/newsort.cpp	/^    shpid_t          _last_page;$/;"	m	class:run_t	file:
_last_page_cache	src/sm/vol.h	/^    mutable page_cache       _last_page_cache;$/;"	m	class:vol_t
_last_pid	src/sm/lgrec.cpp	/^shpid_t lg_tag_indirect_h::_last_pid() const$/;"	f	class:lg_tag_indirect_h
_last_pid	src/sm/lgrec.h	/^    shpid_t     _last_pid()      const  $/;"	f	class:lg_tag_chunks_h
_last_pid	src/sm/sdesc.h	/^    shpid_t                _last_pid; \/\/ absolute, not approx$/;"	m	class:sdesc_t
_last_rid	src/sm/tests/mrbtrees_test.cpp	/^  rid_t       _last_rid;  \/\/ rid of record with key _num_rec (for test 2)$/;"	m	class:smthread_main_t	file:
_last_run	src/sm/newsort.cpp	/^    int             _last_run; \/\/ really first run after last run$/;"	m	class:tape_t	file:
_last_skip_lsn	src/sm/partition.h	/^    lsn_t                 _last_skip_lsn;$/;"	m	class:partition_t
_last_slot	src/sm/newsort.cpp	/^    slotid_t         _last_slot;$/;"	m	class:run_t	file:
_laststring	src/sm/smsh/shell2.cpp	/^int _laststring[] = { 0xffffffff, 0x0 };$/;"	v
_latch	src/common/latch.h	/^    latch_t*     _latch;$/;"	m	class:latch_holder_t
_latch	src/sm/btree_impl.h	/^    latch_t&       _latch;$/;"	m	class:tree_latch
_latch_lock	src/common/store_latch_manager.h	/^    occ_rwlock _latch_lock;$/;"	m	class:store_latch_manager
_latch_lock	src/common/store_latch_manager.h	/^    queue_based_lock_t _latch_lock;$/;"	m	class:store_latch_manager
_latch_lock	src/sm/btree_latch_manager.h	/^    Lock _latch_lock;$/;"	m	class:btree_latch_manager
_latches	src/common/store_latch_manager.h	/^    latch_map _latches ;$/;"	m	class:store_latch_manager
_latches	src/sm/btree_latch_manager.h	/^    btree_latch_map _latches ;$/;"	m	class:btree_latch_manager
_leaf_pages	src/sm/btree_bl.cpp	/^    uint4_t        _leaf_pages;        \/\/ total # of leaf pages$/;"	m	class:btsink_t	file:
_left	src/sm/newsort.cpp	/^    smsize_t        _left;          \/\/ how much left in the scratch buffer$/;"	m	class:limited_space	file:
_left_most	src/sm/btree_bl.cpp	/^    shpid_t        _left_most[20];        \/\/ id of left most page in each level$/;"	m	class:btsink_t	file:
_len	src/sm/key_ranges_map.h	/^    uint4_t _len;$/;"	m	class:foo
_len	src/sm/logrec.h	/^    uint2_t            _len;  \/\/ length of the log record$/;"	m	class:logrec_t
_len	src/sm/pin.h	/^    smsize_t             _len;$/;"	m	class:pin_i
_len1	src/sm/newsort.cpp	/^    smsize_t               _len1;$/;"	m	class:blob	file:
_length	src/common/w_opaque.h	/^    uint4_t         _length;$/;"	m	class:opaque_quantity
_length	src/sm/smsh/shell.h	/^    int _length;$/;"	m	struct:typed_value
_length	src/sm/sort_s.h	/^    smsize_t     _length;$/;"	m	class:ssm_sort::key_location_t
_length	src/sm/sort_s.h	/^    smsize_t    _length;$/;"	m	class:ssm_sort::skey_t
_lenoff	src/sm/newsort.cpp	/^        smsize_t                 _lenoff[max_keys_handled*2];$/;"	m	struct:meta_header_t::_persistent	file:
_level	src/fc/errlog.h	/^    LogPriority         _level;$/;"	m	class:ErrLog
_level	src/sm/newsort.cpp	/^    int         _level; \/\/ number of passes with fixed-size runs$/;"	m	class:phase_mgr	file:
_levelLocation	src/common/option.h	/^    char**                 _levelLocation;$/;"	m	class:option_group_t
_levels	src/sm/newsort.cpp	/^    int         _levels;$/;"	m	class:fib_t	file:
_lgmeta	src/sm/newsort.cpp	/^        smsize_t                 _lgmeta; \/\/ length of lgmetadata if large and$/;"	m	struct:meta_header_t::_persistent	file:
_lgmetadata	src/sm/newsort.cpp	/^    sm_skey_t                _lgmetadata; \/\/ not really a key but ok$/;"	m	class:meta_header_t	file:
_lgpage	src/sm/newsort.cpp	/^    lgdata_p      _lgpage; \/\/ for large-object handling$/;"	m	class:tape_t	file:
_line	src/common/option.h	/^        char                  *_line;$/;"	m	class:option_stream_scan_t
_line	src/sm/sm_base.h	/^    int _line;$/;"	m	struct:check_compensated_op_nesting
_line	src/sm/xct.h	/^    int    _line; \/\/ for debugging$/;"	m	class:auto_release_anchor_t
_lineNum	src/common/option.h	/^        int                   _lineNum;$/;"	m	class:option_stream_scan_t
_link	src/common/option.h	/^    w_link_t        _link;                        \/\/ link list of options $/;"	m	class:option_t
_link	src/sm/bf.cpp	/^    w_link_t                    _link;$/;"	m	class:bf_cleaner_thread_t	file:
_link	src/sm/chkpt.cpp	/^        w_link_t _link;$/;"	m	struct:old_xct_tracker::dependent	file:
_link	src/sm/smsh/tcl_thread.cpp	/^    w_link_t _link;$/;"	m	class:barrier_t	file:
_link	src/sm/xct.h	/^    w_link_t    _link;$/;"	m	class:stid_list_elem_t
_link	src/sm/xct_dependent.h	/^    w_link_t    _link;$/;"	m	class:xct_dependent_t
_link	src/sthread/sthread.h	/^    w_link_t                    _link;        \/\/ protected by _wait_lock$/;"	m	class:sthread_t
_link_after_merge	src/sm/btree_impl.cpp	/^rc_t btree_impl::_link_after_merge(const lpid_t& root,$/;"	f	class:btree_impl
_link_offset	src/fc/w_hash.h	/^    uint4_t                        _link_offset;$/;"	m	class:w_hash_t
_linkof	src/fc/w_hash.h	/^    w_link_t&                       _linkof(T& t) const  {$/;"	f	class:w_hash_t
_list	src/fc/vtable.h	/^    char           *_list;$/;"	m	class:vtable_row_t
_list	src/fc/w_list.h	/^    const w_list_t<T, LOCK>*        _list;$/;"	m	class:w_list_i
_list	src/fc/w_list.h	/^    w_list_base_t*        _list;$/;"	m	class:w_link_t
_list	src/sm/chkpt.cpp	/^    w_list_t<dependent, unsafe_list_dummy_lock_t> _list;$/;"	m	struct:old_xct_tracker	file:
_list	src/sm/newsort.cpp	/^    run_t*          _list;$/;"	m	class:tape_t	file:
_list	src/sm/sm_io.cpp	/^    std::list<extnum_t> _list;$/;"	m	class:autoerase_t	file:
_list_end	src/fc/vtable.h	/^    char           *_list_end;$/;"	m	class:vtable_row_t
_lmode	src/sm/pin.h	/^    lock_mode_t           _lmode;  \/\/ current locked state$/;"	m	class:pin_i
_loadStores	src/sm/xct.h	/^        w_list_t<stid_list_elem_t,queue_based_lock_t>    _loadStores;$/;"	m	struct:xct_t::xct_core
_local_cmp	src/sm/sort.cpp	/^static PFC _local_cmp;$/;"	v	file:
_locate_page	src/sm/file.cpp	/^file_m::_locate_page(const rid_t& rid, file_p& page, latch_mode_t mode)$/;"	f	class:file_m
_lock	src/common/latch.h	/^    mutable srwlock_t     _lock;$/;"	m	class:latch_t
_lock	src/fc/block_alloc.h	/^    pthread_mutex_t	_lock;$/;"	m	struct:dynpool
_lock	src/sm/bf_htab.h	/^        tatas_lock            _lock;$/;"	m	class:bf_core_m::htab::bucket
_lock	src/sm/chkpt.cpp	/^    pthread_mutex_t    _lock;$/;"	m	struct:old_xct_tracker	file:
_lock	src/sm/lock.cpp	/^lock_m::_lock($/;"	f	class:lock_m
_lock	src/sm/xct.h	/^    maybe_lock _lock;$/;"	m	struct:xct_i
_lock	src/sthread/sthread.h	/^        occ_rwlock* _lock;$/;"	m	struct:occ_rwlock::occ_rlock
_lock	src/sthread/sthread.h	/^        occ_rwlock* _lock;$/;"	m	struct:occ_rwlock::occ_wlock
_lock	src/sthread/tests/thread1.cpp	/^	pthread_mutex_t	_lock;$/;"	m	class:wait_for_t	file:
_lockEscalateToPageThreshold	src/sm/sm.cpp	/^option_t* ss_m::_lockEscalateToPageThreshold = NULL;$/;"	m	class:ss_m	file:
_lockEscalateToPageThreshold	src/sm/sm.h	/^    static option_t* _lockEscalateToPageThreshold;$/;"	m	class:ss_m
_lockEscalateToStoreThreshold	src/sm/sm.cpp	/^option_t* ss_m::_lockEscalateToStoreThreshold = NULL;$/;"	m	class:ss_m	file:
_lockEscalateToStoreThreshold	src/sm/sm.h	/^    static option_t* _lockEscalateToStoreThreshold;$/;"	m	class:ss_m
_lockEscalateToVolumeThreshold	src/sm/sm.cpp	/^option_t* ss_m::_lockEscalateToVolumeThreshold = NULL;$/;"	m	class:ss_m	file:
_lockEscalateToVolumeThreshold	src/sm/sm.h	/^    static option_t* _lockEscalateToVolumeThreshold;$/;"	m	class:ss_m
_lock_cache	src/sm/lock_x.h	/^    lock_cache_t<lock_cache_size,(lockid_t::cached_granularity+1)>    _lock_cache;$/;"	m	class:xct_lock_info_t
_lock_cache_enable	src/sm/xct.h	/^        bool                   _lock_cache_enable;$/;"	m	struct:xct_t::xct_core
_lock_hierarchy	src/sm/smthread.h	/^        lockid_t          *_lock_hierarchy;$/;"	m	struct:smthread_t::tcb_t
_lock_info	src/sm/lock_x.h	/^    xct_lock_info_t*  _lock_info;    \/\/ owning xct\/agent. SLI makes$/;"	m	class:lock_request_t
_lock_info	src/sm/xct.h	/^        xct_lock_info_t*       _lock_info;$/;"	m	struct:xct_t::xct_core
_lock_level	src/sm/lock_x.h	/^    lockid_t::name_space_t _lock_level;$/;"	m	class:xct_lock_info_t
_locked	src/fc/atomic_container.h	/^    unsigned volatile _locked;$/;"	m	class:atomic_container
_locktablesize	src/sm/sm.cpp	/^option_t* ss_m::_locktablesize = NULL;$/;"	m	class:ss_m	file:
_locktablesize	src/sm/sm.h	/^    static option_t* _locktablesize;$/;"	m	class:ss_m
_locs	src/sm/sort_s.h	/^    key_location_t* _locs;$/;"	m	class:ssm_sort::sort_keys_t
_log	src/fc/errlog.h	/^    ErrLog*        _log;$/;"	m	class:logstream
_log	src/sm/log_core.cpp	/^	log_core* _log;$/;"	m	class:flush_daemon_thread_t	file:
_log2_block_size	src/fc/block_alloc.h	/^    size_t		_log2_block_size;$/;"	m	struct:dynpool
_log_buf	src/sm/xct.h	/^    logrec_t*                    _log_buf;$/;"	m	class:xct_t
_log_bytes_ready	src/sm/xct.h	/^    fileoff_t                    _log_bytes_ready; \/\/ avail for insert\/reserv$/;"	m	class:xct_t
_log_bytes_rsvd	src/sm/xct.h	/^    fileoff_t                    _log_bytes_rsvd; \/\/ reserved for rollback$/;"	m	class:xct_t
_log_bytes_used	src/sm/xct.h	/^    fileoff_t                    _log_bytes_used; \/\/ total used by the xct$/;"	m	class:xct_t
_log_corruption	src/sm/log.h	/^    bool                    _log_corruption;$/;"	m	class:log_m
_log_me_node	src/sm/smthread.h	/^        queue_based_block_lock_t::ext_qnode _log_me_node;$/;"	m	struct:smthread_t::tcb_t
_log_prefix	src/sm/log.cpp	/^const char log_m::_log_prefix[] = "log.";$/;"	m	class:log_m	file:
_log_prefix	src/sm/log.h	/^    static const char    _log_prefix[];$/;"	m	class:log_m
_log_space_waiters	src/sm/log_core.cpp	/^std::deque<log_core::waiting_xct*> log_core::_log_space_waiters;$/;"	m	class:log_core	file:
_log_space_waiters	src/sm/log_core.h	/^	static std::deque<log_core::waiting_xct*> _log_space_waiters;$/;"	m	class:log_core
_log_warn_percent	src/sm/sm.cpp	/^option_t* ss_m::_log_warn_percent = NULL;$/;"	m	class:ss_m	file:
_log_warn_percent	src/sm/sm.h	/^    static option_t* _log_warn_percent;$/;"	m	class:ss_m
_logbufsize	src/sm/sm.cpp	/^option_t* ss_m::_logbufsize = NULL;$/;"	m	class:ss_m	file:
_logbufsize	src/sm/sm.h	/^    static option_t* _logbufsize;$/;"	m	class:ss_m
_logdir	src/sm/log.cpp	/^char       log_m::_logdir[max_devname];$/;"	m	class:log_m	file:
_logdir	src/sm/log.h	/^    static char          _logdir[max_devname];$/;"	m	class:log_m
_logdir	src/sm/sm.cpp	/^option_t* ss_m::_logdir = NULL;$/;"	m	class:ss_m	file:
_logdir	src/sm/sm.h	/^    static option_t* _logdir;$/;"	m	class:ss_m
_logging	src/sm/sm.cpp	/^option_t* ss_m::_logging = NULL;$/;"	m	class:ss_m	file:
_logging	src/sm/sm.h	/^    static option_t* _logging;$/;"	m	class:ss_m
_logsize	src/sm/sm.cpp	/^option_t* ss_m::_logsize = NULL;$/;"	m	class:ss_m	file:
_logsize	src/sm/sm.h	/^    static option_t* _logsize;$/;"	m	class:ss_m
_lookup	src/sm/bf_htab.cpp	/^bool bf_core_m::htab::_lookup(const lpid_t &pid) const$/;"	f	class:bf_core_m::htab
_lookup	src/sm/btree_impl.cpp	/^btree_impl::_lookup($/;"	f	class:btree_impl
_lookup_harsh	src/sm/bf_htab.cpp	/^bfcb_t *bf_core_m::htab::_lookup_harsh(bfpid_t const &pid) const$/;"	f	class:bf_core_m::htab
_low	src/sm/newsort.cpp	/^    int         _low;$/;"	m	class:phase_mgr	file:
_lsn	src/sm/bf.cpp	/^    lsn_t                       _lsn;$/;"	m	class:bf_filter_lsn_t	file:
_lsn	src/sm/btcursor.h	/^    lsn_t            _lsn;$/;"	m	class:bt_cursor_t
_lsn_ck	src/sm/logrec.h	/^    lsn_t*            _lsn_ck() const {$/;"	f	class:logrec_t
_lvid	src/sm/tests/create_rec.cpp	/^        lvid_t      _lvid;  $/;"	m	class:smthread_user_t	file:
_lvid	src/sm/tests/log_exceed.cpp	/^        lvid_t      _lvid;  $/;"	m	class:smthread_user_t	file:
_lvid	src/sm/tests/mrbtrees_test.cpp	/^  lvid_t      _lvid;  $/;"	m	class:smthread_main_t	file:
_lvid	src/sm/tests/rtree_example.cpp	/^        lvid_t      _lvid;  $/;"	m	class:smthread_user_t	file:
_lvid	src/sm/tests/sort_stream.cpp	/^        lvid_t      _lvid;  $/;"	m	class:smthread_user_t	file:
_lvid	src/sm/tests/vtable_example.cpp	/^        lvid_t      _lvid;  $/;"	m	class:smthread_user_t	file:
_lvid	src/sm/vol.h	/^    lvid_t              _lvid;$/;"	m	class:volhdr_t
_lvid	src/sm/vol.h	/^    lvid_t           _lvid;$/;"	m	class:vol_t
_m	src/sm/key_ranges_map.h	/^    char* _m;$/;"	m	class:foo
_magic	src/fc/errlog.h	/^    unsigned int _magic;$/;"	m	class:ErrLog
_main_thread	src/sthread/sthread.cpp	/^sthread_t*              sthread_t::_main_thread = 0;$/;"	m	class:sthread_t	file:
_main_thread	src/sthread/sthread.h	/^    static sthread_t*    _main_thread; $/;"	m	class:sthread_t
_make_equal_partitions	src/sm/smindex.cpp	/^rc_t ss_m::_make_equal_partitions(stid_t stid, const vec_t& minKey,$/;"	f	class:ss_m
_make_master_name	src/sm/log.cpp	/^log_m::_make_master_name($/;"	f	class:log_m
_make_store_flag	src/sm/sm.cpp	/^ss_m::_make_store_flag(store_property_t property)$/;"	f	class:ss_m
_make_store_property	src/sm/dir.cpp	/^dir_vol_m::_make_store_property(store_flag_t flag)$/;"	f	class:dir_vol_m
_map_lock	src/sm/smthread.h	/^    mutable srwlock_t   _map_lock;$/;"	m	class:atomic_thread_map_t
_marker_	src/sm/sort.cpp	/^static const int _marker_ = min_int4; $/;"	v	file:
_mask	src/fc/rand48.cpp	/^unsigned48_t rand48::_mask(unsigned48_t x)  const$/;"	f	class:rand48
_mask	src/fc/w_hash.h	/^    uint4_t                        _mask;$/;"	m	class:w_hash_t
_mask	src/sm/partition.h	/^    w_base_t::uint4_t     _mask;$/;"	m	class:partition_t
_mask	src/sm/sort_s.h	/^        w_base_t::int1_t _mask;$/;"	m	class:ssm_sort::sort_keys_t::key_meta_t
_master_lsn	src/sm/log.h	/^    lsn_t                   _master_lsn;$/;"	m	class:log_m
_master_prefix	src/sm/log.cpp	/^const char log_m::_master_prefix[] = "chk."; \/\/ same size as _log_prefix$/;"	m	class:log_m	file:
_master_prefix	src/sm/log.h	/^    static const char    _master_prefix[];$/;"	m	class:log_m
_maxLevels	src/common/option.h	/^    int                        _maxLevels;$/;"	m	class:option_group_t
_maxLineLen	src/common/option.h	/^        enum { _maxLineLen = 2000 };$/;"	e	enum:option_stream_scan_t::__anon8
_max_cnt	src/common/vec_t.h	/^    int  _max_cnt() const {$/;"	f	class:cvec_t
_max_limit	src/sm/bf_htab.h	/^    mutable int _max_limit; \/\/ max depth descended$/;"	m	class:bf_core_m::htab
_maxruns	src/sm/newsort.cpp	/^    int             _maxruns;$/;"	m	class:tape_t	file:
_maybe_inherit	src/sm/lock_core.cpp	/^lock_core_m::_maybe_inherit(lock_request_t* request, bool is_ancestor) {$/;"	f	class:lock_core_m
_me	src/fc/tests/container.cpp	/^        THING *_me;$/;"	m	struct:THING	file:
_me	src/sthread/auto_release.h	/^    w_pthread_lock_t::ext_qnode*    _me;$/;"	m	class:auto_release_t
_me1	src/sm/smthread.h	/^        queue_based_lock_t::ext_qnode _me1;$/;"	m	struct:smthread_t::tcb_t
_me2	src/sm/smthread.h	/^        queue_based_lock_t::ext_qnode _me2;$/;"	m	struct:smthread_t::tcb_t
_me3	src/sm/smthread.h	/^        queue_based_lock_t::ext_qnode _me3;$/;"	m	struct:smthread_t::tcb_t
_merge	src/sm/newsort.cpp	/^run_mgr::_merge($/;"	f	class:run_mgr
_merge_trees	src/sm/btree_impl.cpp	/^btree_impl::_merge_trees($/;"	f	class:btree_impl
_meta	src/sm/newsort.cpp	/^    meta_header_t *_meta;$/;"	m	class:tape_t	file:
_meta	src/sm/sort_s.h	/^    key_meta_t*     _meta;$/;"	m	class:ssm_sort::sort_keys_t
_meta_malloced	src/sm/newsort.cpp	/^    bool        _meta_malloced;$/;"	m	class:ssm_sort::run_mgr	file:
_metafp	src/sm/newsort.cpp	/^    file_p         _metafp;        \/\/ for first page of each run (meta-records)$/;"	m	class:tape_t	file:
_minFreeBucket	src/sm/sdesc.h	/^    w_base_t::uint4_t        _minFreeBucket;$/;"	m	class:sdesc_cache_t
_minFreeBucketIndex	src/sm/sdesc.h	/^    w_base_t::uint4_t        _minFreeBucketIndex;$/;"	m	class:sdesc_cache_t
_min_chkpt_rec_lsn	src/sm/log.h	/^    lsn_t                   _min_chkpt_rec_lsn;$/;"	m	class:log_m
_min_copy_rec_lsn	src/sm/bf.cpp	/^    lsn_t                 _min_copy_rec_lsn;$/;"	m	struct:bf_page_writer_control_t	file:
_min_free_ext_num	src/sm/vol.h	/^    extnum_t         _min_free_ext_num;$/;"	m	class:vol_t
_mode	src/common/latch.h	/^    latch_mode_t _mode;$/;"	m	class:latch_holder_t
_mode	src/sm/bf_prefetch.h	/^    latch_mode_t        _mode;$/;"	m	struct:bf_prefetch_thread_t::frame_info
_mode	src/sm/btcursor.h	/^    lock_mode_t            _mode;$/;"	m	class:bt_cursor_t
_mode	src/sm/btree_impl.h	/^    latch_mode_t   _mode;$/;"	m	class:tree_latch
_mode	src/sm/lock_x.h	/^    lmode_t           _mode;        \/\/ mode requested (and granted)$/;"	m	class:lock_request_t
_mode	src/sm/page.h	/^    latch_mode_t                _mode;$/;"	m	class:page_p
_mode	src/sm/scan.h	/^    lock_mode_t          _mode;$/;"	m	class:scan_index_i
_mount	src/sm/dir.cpp	/^dir_vol_m::_mount(const char* const devname, vid_t vid)$/;"	f	class:dir_vol_m
_mount_dev	src/sm/sm.cpp	/^ss_m::_mount_dev(const char* device, u_int& vol_cnt, vid_t local_vid)$/;"	f	class:ss_m
_move_recs_l	src/sm/btree_impl.cpp	/^btree_impl::_move_recs_l($/;"	f	class:btree_impl
_move_recs_p	src/sm/btree_impl.cpp	/^btree_impl::_move_recs_p($/;"	f	class:btree_impl
_mr_insert	src/sm/btree_impl.cpp	/^btree_impl::_mr_insert($/;"	f	class:btree_impl
_ms	src/sthread/tests/thread4.cpp	/^	unsigned _ms;$/;"	m	class:timer_thread_t	file:
_msec_disk_delay	src/sm/sm_io.cpp	/^uint4_t                  io_m::_msec_disk_delay = 0;$/;"	m	class:io_m	file:
_msec_disk_delay	src/sm/sm_io.h	/^    static w_base_t::uint4_t    _msec_disk_delay;$/;"	m	class:io_m
_must_compare_in_pieces	src/sm/newsort.cpp	/^            _must_compare_in_pieces = 0x8  \/\/ NB: uses 5 bits!$/;"	e	enum:meta_header_t::_persistent::__anon77	file:
_mutex	src/sm/vol.h	/^    mutable VolumeLock _mutex;   $/;"	m	class:vol_t
_mutex	src/sthread/sthread.h	/^    pthread_mutex_t     _mutex; \/\/ w_pthread_lock_t blocks on this$/;"	m	struct:w_pthread_lock_t
_n	src/sm/bf_prefetch.h	/^    int                _n;$/;"	m	class:bf_prefetch_thread_t
_n_partition	src/sm/log_core.cpp	/^log_core::_n_partition(partition_number_t n) const$/;"	f	class:log_core
_nallocs	src/sm/newsort.cpp	/^   static int _nallocs;$/;"	m	class:cpp_char_factory_t	file:
_nallocs	src/sm/newsort.cpp	/^int cpp_char_factory_t::_nallocs =0;$/;"	m	class:cpp_char_factory_t	file:
_name	src/common/option.h	/^    const char*        _name;                        \/\/ name of the option$/;"	m	class:option_t
_name	src/sm/smsh/tcl_thread.cpp	/^    char *_name;$/;"	m	class:barrier_t	file:
_name	src/sthread/sthread.h	/^    char        _name[NAME_ARRAY];$/;"	m	class:sthread_name_t
_name	src/sthread/sthread.h	/^    sthread_name_t        _name;$/;"	m	class:sthread_named_base_t
_nblocks	src/sthread/tests/ioperf.cpp	/^    int         _nblocks;$/;"	m	class:io_thread_t	file:
_nbytes	src/fc/atomic_class_pool.h	/^    uint const _nbytes;$/;"	m	struct:atomic_preallocated_pool
_ndirty	src/sm/bf.cpp	/^    static int                  _ndirty;$/;"	m	class:bf_cleaner_thread_t	file:
_ndirty	src/sm/bf.cpp	/^int bf_cleaner_thread_t::_ndirty = 0;$/;"	m	class:bf_cleaner_thread_t	file:
_needs_flushed	src/sm/log_core.h	/^    long volatile _needs_flushed;$/;"	m	class:log_core
_new_node	src/sm/rtree.cpp	/^rtree_m::_new_node($/;"	f	class:rtree_m
_new_sort_file	src/sm/newsort.cpp	/^ss_m::_new_sort_file($/;"	f	class:ss_m
_next	src/common/latch.h	/^    latch_holder_t* _next;$/;"	m	class:latch_holder_t
_next	src/fc/mem_block.h	/^    block*         _next;$/;"	m	struct:memory_block::block
_next	src/fc/tests/container.cpp	/^        THING * _next;$/;"	m	struct:THING	file:
_next	src/fc/w_error.h	/^    w_error_t*                   _next;$/;"	m	class:w_error_t
_next	src/fc/w_list.h	/^    w_link_t*            _next;$/;"	m	class:w_link_t
_next	src/fc/w_list.h	/^    w_link_t*           _next;$/;"	m	class:w_list_i
_next	src/fc/w_rc.h	/^    w_error_t const    *_next;$/;"	m	class:w_rc_i
_next	src/sm/lock_x.h	/^    lock_head_t*     _next;$/;"	m	class:lock_head_t
_next	src/sm/log_core.cpp	/^	mcs_lock::qnode* _next;$/;"	m	struct:hacked_qnode	file:
_next	src/sm/scan.cpp	/^scan_file_i::_next(pin_i*& pin_ptr, smsize_t start, bool& eof)$/;"	f	class:scan_file_i
_next	src/sm/xct.cpp	/^    xct_link*	_next;$/;"	m	struct:xct_link	file:
_next	src/sthread/mcs_lock.h	/^		qnode* _next;$/;"	m	struct:mcs_lock::qnode
_next_free	src/sm/bf_s.h	/^    bfcb_t*     _next_free;    \/\/ used by the (singly-linked) freelist$/;"	m	class:bfcb_t
_next_id	src/sthread/sthread.cpp	/^w_base_t::uint4_t       sthread_t::_next_id = MAIN_THREAD_ID;$/;"	m	class:sthread_t	file:
_next_id	src/sthread/sthread.h	/^    static uint4_t        _next_id;    \/\/ unique id generator$/;"	m	class:sthread_t
_next_meta_rid	src/sm/newsort.cpp	/^    w_rc_t        _next_meta_rid() {$/;"	f	class:tape_t	file:
_next_pid	src/sm/scan.h	/^    lpid_t           _next_pid;$/;"	m	class:scan_file_i
_next_root	src/sm/btcursor.h	/^    int _next_root;$/;"	m	class:bt_cursor_t
_next_run	src/sm/newsort.cpp	/^    int                _next_run; \/\/ first run# after last valid run#$/;"	m	class:ssm_sort::run_mgr	file:
_next_tape	src/sm/newsort.cpp	/^run_mgr::_next_tape() $/;"	f	class:run_mgr
_nfree	src/sm/page_s.h	/^        page_bytes_t    _nfree;        \/\/ free space counter$/;"	m	class:page_s::space_t
_nfrees	src/sm/newsort.cpp	/^   static int _nfrees;$/;"	m	class:cpp_char_factory_t	file:
_nfrees	src/sm/newsort.cpp	/^int cpp_char_factory_t::_nfrees =0;$/;"	m	class:cpp_char_factory_t	file:
_nkc	src/sm/btcursor.h	/^    int                _nkc;$/;"	m	class:bt_cursor_t
_nkeys	src/sm/newsort.cpp	/^        uint1_t                _nkeys;   \/\/1 byte$/;"	m	struct:meta_header_t::_persistent	file:
_nkeys	src/sm/sort_s.h	/^    int        _nkeys;        \/\/ constructor $/;"	m	class:ssm_sort::sort_keys_t
_noblock	src/sm/lock_x.h	/^    bool             _noblock;$/;"	m	class:xct_lock_info_t
_node	src/sthread/mcs_lock.h	/^		qnode _node;$/;"	m	struct:mcs_lock::ext_qnode
_node_state	src/sm/xct.cpp	/^    int		_node_state;$/;"	m	struct:xct_link	file:
_none	src/fc/w_debug.h	/^        enum { _all = 0x1, _none = 0x2 };$/;"	e	enum:w_debug::__anon102
_none	src/sm/newsort.cpp	/^} _none;$/;"	v	typeref:class:no_factory_t
_normalize	src/fc/stime.cpp	/^void stime_t::_normalize()$/;"	f	class:stime_t
_normalize	src/fc/tests/ntime.cpp	/^    void    _normalize() { stime_t::_normalize(); }$/;"	f	class:stime_test_t
_nreg	src/fc/w_error.cpp	/^w_base_t::uint4_t        w_error_t::_nreg = 1;$/;"	m	class:w_error_t	file:
_nreg	src/fc/w_error.h	/^    static uint4_t               _nreg;$/;"	m	class:w_error_t
_nrsvd	src/sm/page_s.h	/^        page_bytes_t    _nrsvd;        \/\/ reserved space counter$/;"	m	class:page_s::space_t
_num	src/sm/partition.h	/^    partition_number_t    _num;$/;"	m	class:partition_t
_numLevels	src/common/option.h	/^    int                        _numLevels;$/;"	m	class:option_group_t
_numPartitions	src/sm/key_ranges_map.h	/^    uint  _numPartitions;$/;"	m	class:key_ranges_map
_numValidBuckets	src/sm/sdesc.h	/^    w_base_t::uint4_t        _numValidBuckets;\/\/ # valid entries$/;"	m	class:sdesc_cache_t
_num_allocated_buckets	src/sm/sdesc.h	/^    w_base_t::uint4_t        _num_allocated_buckets() const { $/;"	f	class:sdesc_cache_t
_num_buckets	src/sm/sdesc.h	/^    w_base_t::uint4_t        _num_buckets() const { return _numValidBuckets; }$/;"	f	class:sdesc_cache_t
_num_bufs	src/sm/bf_core.cpp	/^int                     bf_core_m::_num_bufs = 0;$/;"	m	class:bf_core_m	file:
_num_bufs	src/sm/bf_core.h	/^    static int                  _num_bufs;$/;"	m	class:bf_core_m
_num_children	src/sm/lock_x.h	/^    int4_t            _num_children; \/\/ number of child objects obtained$/;"	m	class:lock_request_t
_num_exts	src/sm/vol.h	/^    extnum_t            _num_exts;$/;"	m	class:volhdr_t
_num_exts	src/sm/vol.h	/^    extnum_t         _num_exts;$/;"	m	class:vol_t
_num_page_writers	src/sm/sm.cpp	/^option_t* ss_m::_num_page_writers = NULL;$/;"	m	class:ss_m	file:
_num_page_writers	src/sm/sm.h	/^    static option_t* _num_page_writers;$/;"	m	class:ss_m
_num_pages	src/sm/btree_bl.cpp	/^    uint4_t        _num_pages;        \/\/ total # of pages$/;"	m	class:btsink_t	file:
_num_parts	src/sm/tests/mrbtrees_test.cpp	/^  int         _num_parts; \/\/ how many partitions to create (for test 6 - #threads created to work on each partition)$/;"	m	class:smthread_main_t	file:
_num_rec	src/sm/tests/create_rec.cpp	/^        int         _num_rec;$/;"	m	class:smthread_user_t	file:
_num_rec	src/sm/tests/log_exceed.cpp	/^        int         _num_rec;$/;"	m	class:smthread_user_t	file:
_num_rec	src/sm/tests/mrbtrees_test.cpp	/^  int         _num_rec;  \/\/ number of records to insert (it inserts one extra record for test 2)$/;"	m	class:smthread_main_t	file:
_num_rec	src/sm/tests/rtree_example.cpp	/^        int         _num_rec;$/;"	m	class:smthread_user_t	file:
_num_rec	src/sm/tests/sort_stream.cpp	/^        int         _num_rec;$/;"	m	class:smthread_user_t	file:
_num_rec	src/sm/tests/vtable_example.cpp	/^        int         _num_rec;$/;"	m	class:smthread_user_t	file:
_numslots	src/sm/newsort.cpp	/^    int                _numslots;$/;"	m	class:ssm_sort::run_mgr	file:
_obj	src/sm/sort_s.h	/^    const object_t*    _obj;     $/;"	m	class:ssm_sort::skey_t
_occ	src/sm/dir.h	/^    occ_rwlock        _occ; \/\/ allow all readers unless a writer arrives$/;"	m	class:dir_vol_m
_off	src/sm/sort_s.h	/^    smsize_t     _off;$/;"	m	class:ssm_sort::key_location_t
_offset	src/fc/atomic_container.h	/^    offset_typ const _offset;$/;"	m	class:atomic_container
_offset	src/sm/sort_s.h	/^    smsize_t    _offset; \/\/ into buf or object of start of key$/;"	m	class:ssm_sort::skey_t
_offset	src/sthread/tests/ioperf.cpp	/^    fileoff_t        _offset;$/;"	m	class:io_thread_t	file:
_old	src/sm/page.h	/^        space_bucket_t        _old;$/;"	m	class:page_p::page_bucket_info_t
_old_epoch	src/sm/log_core.h	/^    epoch                _old_epoch;$/;"	m	class:log_core
_old_pid	src/sm/bf_s.h	/^    bfpid_t     _old_pid;        \/\/ previous page in the frame$/;"	m	class:bfcb_t
_old_pid_valid	src/sm/bf_s.h	/^    bool        _old_pid_valid;  \/\/ is the previous page in-transit-out?$/;"	m	class:bfcb_t
_old_pool	src/fc/w_temp_alloc.h	/^        pool *_old_pool;$/;"	m	struct:w_temp_alloc::pool_swap
_old_rec_lsn	src/sm/bf_s.h	/^    lsn_t        _old_rec_lsn;     \/\/ valid if the page is being cleaned$/;"	m	class:bfcb_t
_old_space	src/sm/histo.h	/^    smsize_t    _old_space;$/;"	m	class:histoid_update_t
_once	src/sm/sort.h	/^    bool              _once;        \/\/ one pass write to result file$/;"	m	class:sort_stream_i
_op	src/sm/sm_io.h	/^        uint2_t                _op;$/;"	m	class:store_operation_param
_opaque	src/common/w_opaque.h	/^    unsigned char _opaque[LEN];$/;"	m	class:opaque_quantity
_open_partition	src/sm/log_core.cpp	/^log_core::_open_partition(partition_number_t  __num, $/;"	f	class:log_core
_open_partition_for_append	src/sm/log_core.h	/^    partition_t *       _open_partition_for_append(partition_number_t n, $/;"	f	class:log_core
_open_partition_for_read	src/sm/log_core.h	/^    partition_t *       _open_partition_for_read(partition_number_t n, $/;"	f	class:log_core
_openlogfile	src/fc/errlog.cpp	/^ErrLog::_openlogfile($/;"	f	class:ErrLog
_optList	src/common/option.h	/^        option_group_t        *_optList;$/;"	m	class:option_stream_scan_t
_optList	src/common/option.h	/^    option_group_t        *_optList;$/;"	m	class:option_file_scan_t
_options	src/common/option.h	/^    w_list_t<option_t,unsafe_list_dummy_lock_t>  _options;$/;"	m	class:option_group_t
_options	src/sm/sm.cpp	/^option_group_t* ss_m::_options = NULL;$/;"	m	class:ss_m	file:
_options	src/sm/sm.h	/^    static option_group_t* _options;$/;"	m	class:ss_m
_options	src/sm/tests/create_rec.cpp	/^        option_group_t* _options;$/;"	m	class:smthread_user_t	file:
_options	src/sm/tests/log_exceed.cpp	/^        option_group_t* _options;$/;"	m	class:smthread_user_t	file:
_options	src/sm/tests/mrbtrees_test.cpp	/^  option_group_t* _options;$/;"	m	class:smthread_main_t	file:
_options	src/sm/tests/rtree_example.cpp	/^        option_group_t* _options;$/;"	m	class:smthread_user_t	file:
_options	src/sm/tests/sort_stream.cpp	/^        option_group_t* _options;$/;"	m	class:smthread_user_t	file:
_options	src/sm/tests/vtable_example.cpp	/^        option_group_t* _options;$/;"	m	class:smthread_user_t	file:
_order	src/sm/newsort.cpp	/^    int         _order;        \/\/ number of "tapes" including output tape$/;"	m	class:phase_mgr	file:
_order	src/sm/newsort.cpp	/^    int         _order;$/;"	m	class:fib_t	file:
_ordinal	src/sm/newsort.cpp	/^        ordinal_number_t        _ordinal; \/\/ 4-8 bytes - to make it a$/;"	m	struct:meta_header_t::_persistent	file:
_origfp	src/sm/newsort.cpp	/^    file_p         _origfp;        \/\/ for preparing pages of pieces() $/;"	m	class:tape_t	file:
_ototal	src/sm/newsort.cpp	/^    int         _ototal; \/\/ original total # runs in the whole mess$/;"	m	class:phase_mgr	file:
_out	src/sm/dir.cpp	/^    ostringstream _out;$/;"	m	struct:pretty_printer	file:
_out	src/sm/lock_core.cpp	/^    ostringstream _out;$/;"	m	struct:pretty_printer	file:
_output_metarec	src/sm/newsort.cpp	/^run_mgr::_output_metarec($/;"	f	class:run_mgr
_ov_treat	src/sm/rtree.cpp	/^rtree_m::_ov_treat($/;"	f	class:rtree_m
_owner	src/fc/mem_block.h	/^    block_list*     _owner;$/;"	m	struct:memory_block::block
_owner	src/fc/w_error.h	/^    pthread_t                    _owner;$/;"	m	class:w_error_t
_owner	src/sm/chkpt.cpp	/^        old_xct_tracker* _owner;$/;"	m	struct:old_xct_tracker::dependent	file:
_owner	src/sm/partition.h	/^    log_core*             _owner;$/;"	m	class:partition_t
_owner	src/sm/xct.cpp	/^    xct_t*	_owner;$/;"	m	struct:xct_link	file:
_p	src/sm/newsort.cpp	/^    int*        _p; \/\/ penultimate level$/;"	m	class:fib_t	file:
_p	src/sm/sm_escalation.h	/^    w_base_t::int4_t _p;$/;"	m	class:sm_escalation_t
_p1	src/sm/newsort.cpp	/^    pin_i                  _p1;$/;"	m	class:blob	file:
_padding	src/sthread/mcs_lock.h	/^		int _padding;$/;"	m	struct:mcs_lock::qnode
_padding2	src/sm/log_core.h	/^    long _padding2[16];$/;"	m	class:log_core
_padding3	src/sm/log_core.h	/^    long _padding3[16];$/;"	m	class:log_core
_padding4	src/sm/log_core.h	/^    long _padding4[16];$/;"	m	class:log_core
_padding5	src/sm/log_core.h	/^    long _padding5[16];    $/;"	m	class:log_core
_page	src/sm/bf_prefetch.h	/^    page_p                _page;$/;"	m	struct:bf_prefetch_thread_t::frame_info
_page	src/sm/btree_bl.cpp	/^    btree_p        _page[20];        \/\/ a stack of pages (path) from root$/;"	m	class:btsink_t	file:
_page	src/sm/extent.h	/^    extlink_p           _page;$/;"	m	class:extlink_i
_page	src/sm/extent.h	/^    stnode_p            _page;$/;"	m	class:stnode_i
_page	src/sm/file.cpp	/^    file_p&      _page;$/;"	m	class:alloc_file_page_filter_t	file:
_page	src/sm/histo.h	/^    file_p*        _page;$/;"	m	class:histoid_remove_t
_page	src/sm/histo.h	/^    file_p*        _page;$/;"	m	class:histoid_update_t
_page	src/sm/lgrec.h	/^    const file_p&    _page;        \/\/ page handle$/;"	m	class:lg_tag_chunks_h
_page	src/sm/lgrec.h	/^    const file_p&    _page;    \/\/ page handle$/;"	m	class:lg_tag_indirect_h
_page	src/sm/newsort.cpp	/^        shpid_t                _page;    \/\/4 bytes$/;"	m	struct:meta_header_t::_persistent	file:
_page	src/sm/scan.cpp	/^file_p&   append_file_i::_page() $/;"	f	class:append_file_i
_page_alias	src/sm/scan.h	/^    char                 _page_alias[PAGE_ALIAS_FILE];$/;"	m	class:append_file_i
_page_cache_find	src/sm/vol.h	/^    bool                     _page_cache_find(snum_t s) const {$/;"	f	class:vol_t
_page_check_map	src/sm/smthread.h	/^        char    _page_check_map[SM_PAGESIZE]; \/\/ a little bigger than needed$/;"	m	struct:smthread_t::tcb_t
_page_cnt	src/sm/lgrec.h	/^    uint4_t        _page_cnt;    \/\/ current # of pages in rec$/;"	m	class:lg_tag_indirect_h
_page_count	src/sm/bf_transit_bucket.h	/^    int            _page_count;$/;"	m	class:transit_bucket_t
_page_flag	src/sm/logrec.cpp	/^    uint2_t        _page_flag;$/;"	m	class:page_init_t	file:
_page_lock_mode	src/sm/scan.h	/^    lock_mode_t      _page_lock_mode;$/;"	m	class:scan_file_i
_page_mutex	src/sm/bf_core.h	/^    pthread_mutex_t _page_mutex; \/\/initiazlied by constructor$/;"	m	class:page_write_mutex_t
_page_sz	src/sm/vol.h	/^    int              _page_sz;  \/\/ page size in bytes$/;"	m	class:vol_t
_page_sz	src/sm/vol.h	/^    w_base_t::uint4_t   _page_sz;    \/\/ page size in bytes$/;"	m	class:volhdr_t
_page_tag	src/sm/logrec.cpp	/^    uint2_t        _page_tag;$/;"	m	class:page_init_t	file:
_page_tag	src/sm/logrec.h	/^    uint2_t             _page_tag; \/\/ page_p::tag_t 2 bytes$/;"	m	class:logrec_t
_page_writer_count	src/sm/bf.cpp	/^    static int        _page_writer_count;$/;"	m	class:bf_cleaner_thread_t	file:
_page_writer_count	src/sm/bf.cpp	/^int bf_cleaner_thread_t::_page_writer_count = 1;$/;"	m	class:bf_cleaner_thread_t	file:
_page_writers	src/sm/bf.cpp	/^    page_writer_thread_t*       _page_writers;$/;"	m	class:bf_cleaner_thread_t	file:
_pagebound	src/sm/tests/htab.cpp	/^    signed48_t _pagebound;$/;"	m	class:htab_tester	file:
_pages	src/sm/bf_transit_bucket.h	/^    bfpid_t        _pages[MAX_IN_TRANSIT];$/;"	m	class:transit_bucket_t
_pages_on_last_indirect	src/sm/lgrec.h	/^inline uint4_t lg_tag_indirect_h::_pages_on_last_indirect() const$/;"	f	class:lg_tag_indirect_h
_pages_with_space	src/sm/sdesc.h	/^    map< lpid_t, shpid_t > _pages_with_space;$/;"	m	class:sdesc_t
_pair	src/common/vec_t.h	/^    vec_pair_t         _pair[MAX_SMALL_VEC_SIZE];$/;"	m	struct:VEC_t
_parse_master_chkpt_contents	src/sm/log.cpp	/^log_m::_parse_master_chkpt_contents($/;"	f	class:log_m
_parse_master_chkpt_string	src/sm/log.cpp	/^log_m::_parse_master_chkpt_string($/;"	f	class:log_m
_part	src/sm/log_core.h	/^    partition_t         _part[PARTITION_COUNT];$/;"	m	class:log_core
_partition	src/sm/log_core.cpp	/^log_core::_partition(partition_index_t i) const$/;"	f	class:log_core
_partition_data_size	src/sm/log.h	/^    fileoff_t               _partition_data_size;$/;"	m	class:log_m
_partition_lock	src/sm/log.h	/^    mutable queue_based_block_lock_t _partition_lock;$/;"	m	class:log_m
_partition_size	src/sm/log.h	/^    fileoff_t               _partition_size;$/;"	m	class:log_m
_partitions	src/sm/sdesc.h	/^    key_ranges_map _partitions;$/;"	m	class:sdesc_t
_partitions_filled	src/sm/sdesc.h	/^    bool _partitions_filled;$/;"	m	class:sdesc_t
_path	src/sthread/sdisk_unix.h	/^    char _path[256];$/;"	m	class:sdisk_unix_t
_peek	src/sm/partition.cpp	/^partition_t::_peek($/;"	f	class:partition_t
_persistent	src/sm/newsort.cpp	/^        NORET _persistent() :$/;"	f	struct:meta_header_t::_persistent
_persistent	src/sm/newsort.cpp	/^        NORET _persistent(const _persistent &other) :$/;"	f	struct:meta_header_t::_persistent
_persistent	src/sm/newsort.cpp	/^    struct _persistent {$/;"	s	class:meta_header_t	file:
_pg	src/sm/rtree.cpp	/^    rtree_p _pg;$/;"	m	class:rtwork_p	file:
_pgid	src/sm/page_h.h	/^    shpid_t        _pgid;$/;"	m	class:pginfo_t
_phase	src/sm/newsort.cpp	/^    phase_mgr*         _phase;$/;"	m	class:ssm_sort::run_mgr	file:
_pick_branch	src/sm/rtree.cpp	/^rtree_m::_pick_branch($/;"	f	class:rtree_m
_pid	src/sm/bf_prefetch.h	/^    lpid_t               _pid;$/;"	m	struct:bf_prefetch_thread_t::frame_info
_pid	src/sm/bf_s.h	/^    bfpid_t     _pid;            \/\/ page currently stored in the frame$/;"	m	class:bfcb_t
_pid	src/sm/btcursor.h	/^    lpid_t            _pid;$/;"	m	class:bt_cursor_t
_pid	src/sm/btree_impl.h	/^    lpid_t         _pid;$/;"	m	class:tree_latch
_pid	src/sm/file.cpp	/^    lpid_t       _pid;$/;"	m	class:alloc_file_page_filter_t	file:
_pid	src/sm/lgrec.cpp	/^shpid_t lg_tag_chunks_h::_pid(uint4_t pid_num) const$/;"	f	class:lg_tag_chunks_h
_pid	src/sm/lgrec.cpp	/^shpid_t lg_tag_indirect_h::_pid(uint4_t pid_num) const$/;"	f	class:lg_tag_indirect_h
_pid2info	src/sm/tests/htab.cpp	/^    pidinfo *_pid2info; \/\/ indexed by pid$/;"	m	class:htab_tester	file:
_pin	src/sm/pin.cpp	/^rc_t pin_i::_pin(const rid_t& rid, $/;"	f	class:pin_i
_pin	src/sm/pin.cpp	/^rc_t pin_i::_pin(const rid_t& rid, smsize_t start, $/;"	f	class:pin_i
_pin_cnt	src/sm/bf_s.h	/^    int4_t volatile     _pin_cnt;        \/\/ count of pins on the page$/;"	m	class:bfcb_t
_pin_cnt_change	src/sm/prologue.h	/^    int               _pin_cnt_change;$/;"	m	class:prologue_rc_t
_pin_data	src/sm/pin.cpp	/^rc_t pin_i::_pin_data()$/;"	f	class:pin_i
_pl1	src/sm/newsort.cpp	/^    smsize_t               _pl1; \/\/ pinned\/available length$/;"	m	class:blob	file:
_pool	src/fc/block_alloc.h	/^    Pool _pool;$/;"	m	struct:blob_pool
_pool	src/fc/block_alloc.h	/^    Pool _pool;$/;"	m	struct:block_alloc
_pool	src/fc/block_alloc.h	/^    Pool _pool;$/;"	m	struct:object_cache
_pool	src/fc/mem_block.h	/^    block_pool*        _pool;$/;"	m	struct:memory_block::block_list
_pool	src/fc/w_temp_alloc.h	/^        fixed_pool _pool;$/;"	m	struct:w_temp_alloc::fixed_pool_swap
_popc	src/fc/mem_block.cpp	/^size_t        block_bits::_popc(bitmap bm) {$/;"	f	class:memory_block::block_bits
_possible_values	src/common/option.h	/^    const char*        _possible_values;        \/\/ example possible values$/;"	m	class:option_t
_pp	src/sm/page.h	/^    page_s*                     _pp;$/;"	m	class:page_p
_prefetch	src/sm/scan.h	/^    bf_prefetch_thread_t*    _prefetch;$/;"	m	class:scan_file_i
_prefetch	src/sm/sm.cpp	/^option_t* ss_m::_prefetch = NULL;$/;"	m	class:ss_m	file:
_prefetch	src/sm/sm.h	/^    static option_t* _prefetch;$/;"	m	class:ss_m
_prefetch_mutex	src/sm/bf_prefetch.h	/^    pthread_mutex_t            _prefetch_mutex; \/\/ paired with _activate$/;"	m	class:bf_prefetch_thread_t
_prefix_bytes	src/sm/btree_p.h	/^    int                _prefix_bytes;$/;"	m	class:btrec_t
_prep	src/sm/sort_s.h	/^ssm_sort::sort_keys_t::_prep(int key) $/;"	f	class:ssm_sort::sort_keys_t
_prepare_key	src/sm/newsort.cpp	/^run_mgr::_prepare_key($/;"	f	class:run_mgr
_prepare_xct	src/sm/sm.cpp	/^ss_m::_prepare_xct(sm_stats_info_t*& _stats, vote_t &v)$/;"	f	class:ss_m
_prev	src/common/latch.h	/^    latch_holder_t* _prev;$/;"	m	class:latch_holder_t
_prev	src/fc/w_list.h	/^    w_link_t*            _prev;$/;"	m	class:w_link_t
_prev	src/sm/logrec.h	/^    lsn_t               _prev;     \/\/ (xct)previous logrec of this xct$/;"	m	class:logrec_t
_prime	src/sm/log_core.cpp	/^log_core::_prime(int fd, fileoff_t start, lsn_t next) $/;"	f	class:log_core
_prime_cache	src/sm/sm_io.cpp	/^io_m::_prime_cache(vol_t *v, snum_t s)$/;"	f	class:io_m
_primed_for_input	src/sm/newsort.cpp	/^    bool           _primed_for_input; \/\/ false: meta isn't up-to-date$/;"	m	class:tape_t	file:
_primed_for_output	src/sm/newsort.cpp	/^    bool           _primed_for_output; $/;"	m	class:tape_t	file:
_print_index	src/sm/smindex.cpp	/^ss_m::_print_index(const stid_t& stid)$/;"	f	class:ss_m
_print_level	src/sm/newsort.cpp	/^    void _print_level(ostream& o, int *row) const {$/;"	f	class:fib_t	file:
_print_md_index	src/sm/smindex.cpp	/^ss_m::_print_md_index(stid_t stid)$/;"	f	class:ss_m
_print_mr_index	src/sm/smindex.cpp	/^rc_t ss_m::_print_mr_index(const stid_t& stid)$/;"	f	class:ss_m
_prio	src/fc/errlog.h	/^    LogPriority     _prio;$/;"	m	class:logstream
_priority	src/sthread/sthread.h	/^    priority_t                  _priority;     \/\/ thread priority$/;"	m	class:sthread_t
_private_store_flags	src/sm/page_s.h	/^    w_base_t::uint4_t    _private_store_flags;        \/\/ page_p::store_flag_t$/;"	m	class:page_s
_proc	src/sm/smthread.h	/^    st_proc_t* const   _proc;$/;"	m	class:smthread_t
_propagate	src/sm/btree_impl.cpp	/^btree_impl::_propagate($/;"	f	class:btree_impl
_propagate_insert	src/sm/rtree.cpp	/^rtree_m::_propagate_insert($/;"	f	class:rtree_m
_propagate_remove	src/sm/rtree.cpp	/^rtree_m::_propagate_remove($/;"	f	class:rtree_m
_propagate_split	src/sm/btree_impl.cpp	/^btree_impl::_propagate_split($/;"	f	class:btree_impl
_property	src/sm/sort.h	/^    sm_store_property_t _property;    \/\/ property for the result file$/;"	m	class:sort_stream_i
_ps	src/fc/w_temp_alloc.h	/^        pool_swap _ps;$/;"	m	struct:w_temp_alloc::fixed_pool_swap
_ps1	src/sm/newsort.cpp	/^    smsize_t               _ps1; \/\/ start -- offset into page$/;"	m	class:blob	file:
_ptr	src/fc/w_temp_alloc.h	/^    ptr _ptr;$/;"	m	struct:w_temp_alloc
_ptr	src/sm/xct.cpp	/^    xct_lock_info_t* _ptr;$/;"	m	struct:lock_info_ptr	file:
_ptrace_level	src/sm/sm.cpp	/^uint smlevel_0::_ptrace_level = 0;$/;"	m	class:smlevel_0	file:
_ptrace_level	src/sm/sm_base.h	/^    static uint     _ptrace_level;$/;"	m	class:smlevel_0
_ptrace_lock	src/sm/sm.cpp	/^mcs_lock smlevel_0::_ptrace_lock;$/;"	m	class:smlevel_0	file:
_ptrace_lock	src/sm/sm_base.h	/^    static mcs_lock _ptrace_lock;$/;"	m	class:smlevel_0
_ptrace_out	src/sm/sm_base.h	/^    static ofstream _ptrace_out;$/;"	m	class:smlevel_0
_pwc	src/sm/bf.cpp	/^    bf_page_writer_control_t    _pwc;$/;"	m	class:bf_cleaner_thread_t	file:
_pwc	src/sm/bf.cpp	/^    bf_page_writer_control_t* _pwc;$/;"	m	class:page_writer_thread_t	file:
_pwc_lock	src/sm/bf.cpp	/^    pthread_mutex_t _pwc_lock; \/\/ paired with _wake_master and _wake_slaves$/;"	m	struct:bf_page_writer_control_t	file:
_quark_marker	src/sm/lock_x.h	/^    lock_request_t*  _quark_marker;$/;"	m	class:xct_lock_info_t
_query_implicit	src/sm/lock.cpp	/^rc_t lock_m::_query_implicit($/;"	f	class:lock_m
_queue	src/sm/lock_x.h	/^    request_list_t                       _queue;$/;"	m	class:lock_head_t
_quota	src/sm/tests/create_rec.cpp	/^        smsize_t    _quota;$/;"	m	class:smthread_user_t	file:
_quota	src/sm/tests/log_exceed.cpp	/^        smsize_t    _quota;$/;"	m	class:smthread_user_t	file:
_quota	src/sm/tests/mrbtrees_test.cpp	/^  smsize_t    _quota;$/;"	m	class:smthread_main_t	file:
_quota	src/sm/tests/rtree_example.cpp	/^        smsize_t    _quota;$/;"	m	class:smthread_user_t	file:
_quota	src/sm/tests/sort_stream.cpp	/^        smsize_t    _quota;$/;"	m	class:smthread_user_t	file:
_quota	src/sm/tests/vtable_example.cpp	/^        smsize_t    _quota;$/;"	m	class:smthread_user_t	file:
_range_accesses	src/sm/data_access_histogram.h	/^    ranges_hist _range_accesses;$/;"	m	class:data_access_histogram
_range_cnt	src/fc/w_error.cpp	/^w_base_t::uint4_t        w_error_t::_range_cnt[w_error_t::max_range] = {$/;"	m	class:w_error_t	file:
_range_cnt	src/fc/w_error.h	/^    static uint4_t               _range_cnt[max_range];$/;"	m	class:w_error_t
_range_name	src/fc/w_error.cpp	/^const char *w_error_t::_range_name[w_error_t::max_range]= { $/;"	m	class:w_error_t	file:
_range_name	src/fc/w_error.h	/^    static const char *          _range_name[max_range];$/;"	m	class:w_error_t
_range_start	src/fc/w_error.cpp	/^w_error_t::info_t*        w_error_t::_range_start[w_error_t::max_range] = {$/;"	m	class:w_error_t	file:
_range_start	src/fc/w_error.h	/^    static const info_t*         _range_start[max_range];$/;"	m	class:w_error_t
_rc	src/sm/prologue.h	/^    rc_t              _rc;$/;"	m	class:prologue_rc_t
_rce	src/sthread/sthread.h	/^    w_rc_t::errcode_t           _rce;        \/\/ used in block\/unblock$/;"	m	class:sthread_t
_read_cond	src/sthread/sthread.h	/^    pthread_cond_t _read_cond; \/\/ paired w\/ _read_write_mutex$/;"	m	struct:occ_rwlock
_read_lock	src/sthread/sthread.h	/^    occ_rlock _read_lock;$/;"	m	struct:occ_rwlock
_read_master	src/sm/log.cpp	/^log_m::_read_master( $/;"	f	class:log_m
_read_only	src/sm/xct.h	/^        bool                      _read_only;$/;"	m	struct:xct_t::xct_core
_read_write_mutex	src/sthread/sthread.h	/^    pthread_mutex_t _read_write_mutex; \/\/ paired w\/ _read_cond, _write_cond$/;"	m	struct:occ_rwlock
_readbuf	src/sm/log_core.h	/^    char*               _readbuf;$/;"	m	class:log_core
_readbuf	src/sm/partition.cpp	/^partition_t::_readbuf() { return _owner->readbuf(); }$/;"	f	class:partition_t
_rec	src/sm/pin.h	/^    record_t*            _rec;$/;"	m	class:pin_i
_rec	src/sm/sort_s.h	/^    record_t*    _rec;$/;"	m	class:ssm_sort::object_t
_rec_in_run	src/sm/newsort.cpp	/^run_mgr::_rec_in_run($/;"	f	class:run_mgr
_rec_lock_mode	src/sm/scan.h	/^    lock_mode_t      _rec_lock_mode;$/;"	m	class:scan_file_i
_rec_lsn	src/sm/bf_s.h	/^    lsn_t       _rec_lsn;        \/\/ recovery lsn$/;"	m	class:bfcb_t
_rec_size	src/sm/tests/create_rec.cpp	/^        smsize_t    _rec_size;$/;"	m	class:smthread_user_t	file:
_rec_size	src/sm/tests/log_exceed.cpp	/^        smsize_t    _rec_size;$/;"	m	class:smthread_user_t	file:
_rec_size	src/sm/tests/mrbtrees_test.cpp	/^    smsize_t _rec_size;$/;"	m	struct:el_filler_utest	file:
_rec_size	src/sm/tests/mrbtrees_test.cpp	/^  smsize_t    _rec_size; \/\/ size of each record$/;"	m	class:smthread_main_t	file:
_rec_size	src/sm/tests/rtree_example.cpp	/^        smsize_t    _rec_size;$/;"	m	class:smthread_user_t	file:
_rec_size	src/sm/tests/sort_stream.cpp	/^        smsize_t    _rec_size;$/;"	m	class:smthread_user_t	file:
_rec_size	src/sm/tests/vtable_example.cpp	/^        smsize_t    _rec_size;$/;"	m	class:smthread_user_t	file:
_recompute	src/sm/newsort.cpp	/^    bool        _recompute;$/;"	m	class:ssm_sort::run_mgr	file:
_recover_2pc	src/sm/sm.cpp	/^ss_m::_recover_2pc(const gtid_t &gtid,        $/;"	f	class:ss_m
_recover_pages_in_ext	src/sm/sm_io.cpp	/^io_m::_recover_pages_in_ext(vid_t volid, $/;"	f	class:io_m
_redo_tid	src/sm/restart.cpp	/^tid_t                restart_m::_redo_tid;$/;"	m	class:restart_m	file:
_redo_tid	src/sm/restart.h	/^    static tid_t                _redo_tid;$/;"	m	class:restart_m
_ref_count	src/sm/lock_x.h	/^    int               _ref_count;$/;"	m	class:lock_request_t
_refbit	src/sm/bf_s.h	/^    int4_t      _refbit;\/\/ ref count (for strict clock algorithm)$/;"	m	class:bfcb_t
_refbit	src/sm/page.h	/^    int                         _refbit;$/;"	m	class:page_p
_reformat_log	src/sm/sm.cpp	/^option_t* ss_m::_reformat_log = NULL;$/;"	m	class:ss_m	file:
_reformat_log	src/sm/sm.h	/^    static option_t* _reformat_log;$/;"	m	class:ss_m
_registered	src/sm/xct_dependent.h	/^    bool        _registered;$/;"	m	class:xct_dependent_t
_reinsert	src/sm/rtree.cpp	/^rtree_m::_reinsert($/;"	f	class:rtree_m
_release	src/common/latch.cpp	/^latch_t::_release(latch_holder_t* me)$/;"	f	class:latch_t
_release_block	src/fc/block_alloc.cpp	/^void dynpool::_release_block(mblock* b) {$/;"	f	class:dynpool
_release_block	src/fc/block_alloc.h	/^void object_cache<T,TF,M>::cache_pool::_release_block(mblock* b) {$/;"	f	class:object_cache::cache_pool
_release_block	src/fc/tests/memblock.cpp	/^    virtual void     _release_block(block* b) {$/;"	f	struct:test_block_pool
_release_count	src/fc/tests/memblock.cpp	/^    size_t        _release_count;$/;"	m	struct:test_block_pool	file:
_release_lock	src/sm/lock_core.cpp	/^lock_core_m::_release_lock(lock_request_t* request, bool force$/;"	f	class:lock_core_m
_release_mutex	src/sm/histo.cpp	/^histoid_t::_release_mutex() const$/;"	f	class:histoid_t
_relocate_recs_l	src/sm/btree_impl.cpp	/^btree_impl::_relocate_recs_l($/;"	f	class:btree_impl
_relocate_recs_p	src/sm/btree_impl.cpp	/^btree_impl::_relocate_recs_p($/;"	f	class:btree_impl
_remove	src/sm/bf_core.cpp	/^bf_core_m::_remove(bfcb_t*& p)$/;"	f	class:bf_core_m
_remove	src/sm/btree.cpp	/^btree_m::_remove($/;"	f	class:btree_m
_remove	src/sm/btree_impl.cpp	/^btree_impl::_remove($/;"	f	class:btree_impl
_remove	src/sm/dir.cpp	/^dir_vol_m::_remove(const stid_t& stid)$/;"	f	class:dir_vol_m
_remove_dup_nulls	src/sm/sort_s.h	/^    bool    _remove_dup_nulls; \/\/ set_null_unique$/;"	m	class:ssm_sort::sort_keys_t
_remove_dups	src/sm/sort_s.h	/^    bool    _remove_dups;    \/\/ set_unique$/;"	m	class:ssm_sort::sort_keys_t
_repin	src/sm/pin.cpp	/^rc_t pin_i::_repin(lock_mode_t lmode,$/;"	f	class:pin_i
_replace	src/sm/newsort.cpp	/^object_t::_replace(const object_t& other)$/;"	f	class:object_t
_replace	src/sm/newsort.cpp	/^skey_t::_replace(const skey_t&other)$/;"	f	class:skey_t
_replace_out	src/sm/bf.cpp	/^bf_m::_replace_out(bfcb_t* b)$/;"	f	class:bf_m
_replace_relative_to_obj	src/sm/newsort.cpp	/^skey_t::_replace_relative_to_obj(const object_t &o, const skey_t&other)$/;"	f	class:skey_t
_requests_allocated	src/sm/lock_core.h	/^    int                _requests_allocated; \/\/ currently-allocated requests.$/;"	m	class:lock_core_m
_required	src/common/option.h	/^    bool        _required;                \/\/ must option be set$/;"	m	class:option_t
_reservations_active	src/sm/log_core.h	/^    bool                 _reservations_active;$/;"	m	class:log_core
_reserved_space	src/fc/tls.h	/^    long _reserved_space[ARRAY_SIZE];$/;"	m	struct:tls_tricks::tls_blob
_reset	src/sm/file.cpp	/^void  alloc_file_page_filter_t::_reset()$/;"	f	class:alloc_file_page_filter_t
_reset_point	src/sm/newsort.cpp	/^    char *          _reset_point;   \/\/ between sort phases, we reset to here$/;"	m	class:limited_space	file:
_restart	src/sm/smsh/lib/smsh.tcl	/^proc _restart { a } {$/;"	p
_retire	src/sm/bf.cpp	/^    bool              _retire;$/;"	m	class:bf_cleaner_thread_t	file:
_retire	src/sm/bf_prefetch.h	/^    bool                       _retire;$/;"	m	class:bf_prefetch_thread_t
_retire	src/sm/chkpt.cpp	/^    bool                _retire;$/;"	m	class:chkpt_thread_t	file:
_retire_awaken_cond	src/sm/chkpt.cpp	/^    pthread_cond_t      _retire_awaken_cond; \/\/ paried with _retire_awaken_lock$/;"	m	class:chkpt_thread_t	file:
_retire_awaken_lock	src/sm/chkpt.cpp	/^    pthread_mutex_t     _retire_awaken_lock; \/\/ paired with _retire_awaken_cond$/;"	m	class:chkpt_thread_t	file:
_rewind	src/sm/newsort.cpp	/^tape_t::_rewind(bool create_new)$/;"	f	class:tape_t
_rflag	src/sm/page_s.h	/^        page_bytes_t    _rflag; $/;"	m	class:page_s::space_t
_rid	src/sm/pin.h	/^    rid_t                _rid;$/;"	m	class:pin_i
_rid1	src/sm/newsort.cpp	/^    rid_t                  _rid1;$/;"	m	class:blob	file:
_rng	src/sthread/sthread.h	/^    w_rand                      _rng;$/;"	m	class:sthread_t
_rollback_work	src/sm/sm.cpp	/^ss_m::_rollback_work(const sm_save_point_t& sp)$/;"	f	class:ss_m
_rolling_back	src/sm/xct.h	/^    bool                         _rolling_back;$/;"	m	class:xct_t
_root	src/sm/btcursor.h	/^    lpid_t            _root;$/;"	m	class:bt_cursor_t
_root	src/sm/btree_bl.cpp	/^    lpid_t        _root;                \/\/ root of the btree$/;"	m	class:btsink_t	file:
_root	src/sm/dir.h	/^    lpid_t         _root[max];$/;"	m	class:dir_vol_m
_root	src/sm/extent.h	/^    lpid_t              _root;$/;"	m	class:extlink_i
_root	src/sm/extent.h	/^    lpid_t              _root;$/;"	m	class:stnode_i
_root_locks	src/sm/data_access_histogram.h	/^    root_locks _root_locks;$/;"	m	class:data_access_histogram
_roots	src/sm/btcursor.h	/^    vector<lpid_t> _roots;$/;"	m	class:bt_cursor_t
_rows	src/fc/vtable.h	/^    int            _rows;$/;"	m	class:vtable_t
_rows_filled	src/fc/vtable.h	/^    int            _rows_filled;$/;"	m	class:vtable_t
_rowsize_attributes	src/fc/vtable.h	/^    int            _rowsize_attributes; \/\/#strings$/;"	m	class:vtable_t
_rowsize_bytes	src/fc/vtable.h	/^    int            _rowsize_bytes;\/\/#string * sizeof string$/;"	m	class:vtable_t
_rtrec_t_dummy_	src/sm/rtree_p.h	/^class _rtrec_t_dummy_ {$/;"	c
_rtree_stats	src/sm/smindex.cpp	/^ss_m::_rtree_stats(const stid_t& stid, rtree_stats_t& stat,$/;"	f	class:ss_m
_run	src/sthread/tests/except.cpp	/^void except_thread_t::_run()$/;"	f	class:except_thread_t
_rw_flag	src/sthread/tests/ioperf.cpp	/^    char        _rw_flag;$/;"	m	class:io_thread_t	file:
_rwlock	src/sm/key_ranges_map.h	/^    occ_rwlock _rwlock;$/;"	m	class:key_ranges_map
_s	src/fc/errlog_s.h	/^    const char *_s;$/;"	m	class:simple_string
_s	src/sm/sm_escalation.h	/^    w_base_t::int4_t _s;$/;"	m	class:sm_escalation_t
_s1	src/sm/newsort.cpp	/^    smsize_t               _s1;        \/\/ start offset into record$/;"	m	class:blob	file:
_sanity_check	src/sm/log_core.cpp	/^log_core::_sanity_check() const$/;"	f	class:log_core
_satisfy	src/sm/btree_impl.cpp	/^btree_impl::_satisfy($/;"	f	class:btree_impl
_save_pin_count	src/sm/newsort.cpp	/^    int                    _save_pin_count;$/;"	m	class:blob	file:
_save_pin_count	src/sm/newsort.cpp	/^    int         _save_pin_count;$/;"	m	class:ssm_sort::run_mgr	file:
_save_pin_count	src/sm/sort_s.h	/^    int     _save_pin_count;$/;"	m	class:ssm_sort::object_t
_save_work	src/sm/sm.cpp	/^ss_m::_save_work(sm_save_point_t& sp)$/;"	f	class:ss_m
_scan	src/sm/bf.cpp	/^bf_m::_scan(const bf_filter_t& filter, bool write_dirty, bool discard)$/;"	f	class:bf_m
_scan_file	src/sm/tests/mrbtrees_test.cpp	/^  int         _scan_file; \/\/ the number of times to scan the file and get an average scan time$/;"	m	class:smthread_main_t	file:
_scan_uint8	src/fc/w_input.cpp	/^w_base_t::_scan_uint8($/;"	f	class:w_base_t
_scavenge_cond	src/sm/log_core.h	/^	pthread_cond_t      _scavenge_cond;$/;"	m	class:log_core
_scavenge_lock	src/sm/log_core.h	/^	pthread_mutex_t     _scavenge_lock;$/;"	m	class:log_core
_scramble_key	src/sm/btree.cpp	/^btree_m::_scramble_key($/;"	f	class:btree_m
_scratch	src/sm/newsort.cpp	/^    char *          _scratch;       \/\/ ptr to unused portion of scratch buffer$/;"	m	class:limited_space	file:
_scratch_space	src/sm/newsort.cpp	/^    limited_space &    _scratch_space;$/;"	m	class:ssm_sort::run_mgr	file:
_sd	src/sm/newsort.cpp	/^    sdesc_t*      _sd;$/;"	m	class:tape_t	file:
_sdesc_cache	src/sm/smthread.h	/^        sdesc_cache_t     *_sdesc_cache;$/;"	m	struct:smthread_t::tcb_t
_sdescsBuckets	src/sm/sdesc.h	/^    sdesc_t**                _sdescsBuckets; \/\/ array of cached sdesc_t$/;"	m	class:sdesc_cache_t
_search	src/sm/btree_impl.cpp	/^btree_impl::_search($/;"	f	class:btree_impl
_search	src/sm/rtree.cpp	/^rtree_m::_search($/;"	f	class:rtree_m
_segment	src/sm/bf.cpp	/^    int                          _segment;$/;"	m	class:bf_filter_sweep_old_t	file:
_segsize	src/sm/log_core.h	/^    long                 _segsize; \/\/ log buffer size$/;"	m	class:log_core
_self	src/common/tests/latch1.cpp	/^    latch_thread_id_t     _self;$/;"	m	class:latch_thread_t	file:
_sentinel	src/fc/w_temp_alloc.cpp	/^static sentinel_pool _sentinel;$/;"	v	file:
_serialize	src/sm/dir.cpp	/^sdesc_cache_t::_serialize() const$/;"	f	class:sdesc_cache_t
_set	src/common/option.h	/^    bool        _set;                        \/\/ option has been set$/;"	m	class:option_t
_setFunc	src/common/option.h	/^    OptionSetFunc _setFunc;$/;"	m	class:option_t
_set_coordinator	src/sm/sm.cpp	/^ss_m::_set_coordinator(const server_handle_t &h)$/;"	f	class:ss_m
_set_dirty	src/sm/bf.cpp	/^bf_m::_set_dirty(bfcb_t* b)$/;"	f	class:bf_m
_set_fhdl_app	src/sm/partition.h	/^    void              _set_fhdl_app(int fd) {$/;"	f	class:partition_t
_set_flag	src/sm/btree_p.cpp	/^btree_p::_set_flag( flag_t f, bool compensate)$/;"	f	class:btree_p
_set_last_skip_lsn	src/sm/partition.h	/^    void              _set_last_skip_lsn(const lsn_t &l) { _last_skip_lsn = l;}$/;"	f	class:partition_t
_set_loc	src/sm/sort_s.h	/^    void _set_loc(int key, smsize_t off, smsize_t len) {$/;"	f	class:ssm_sort::sort_keys_t
_set_lsn	src/sm/pin.cpp	/^inline void         pin_i::_set_lsn() {$/;"	f	class:pin_i
_set_lsn	src/sm/pin.h	/^    void         _set_lsn() {}$/;"	f	class:pin_i
_set_lsn_for_scan	src/sm/pin.h	/^    void         _set_lsn_for_scan() {}$/;"	f	class:pin_i
_set_lsn_for_scan	src/sm/scan.cpp	/^inline void         pin_i::_set_lsn_for_scan() {$/;"	f	class:pin_i
_set_mask	src/sm/sort_s.h	/^    void _set_mask(int key,$/;"	f	class:ssm_sort::sort_keys_t
_set_option_lock_escalate_to_page	src/sm/sm.cpp	/^rc_t ss_m::_set_option_lock_escalate_to_page(option_t* opt, const char* value, ostream* err_stream)$/;"	f	class:ss_m
_set_option_lock_escalate_to_store	src/sm/sm.cpp	/^rc_t ss_m::_set_option_lock_escalate_to_store(option_t* opt, const char* value, ostream* err_stream)$/;"	f	class:ss_m
_set_option_lock_escalate_to_volume	src/sm/sm.cpp	/^rc_t ss_m::_set_option_lock_escalate_to_volume(option_t* opt, const char* value, ostream* err_stream)$/;"	f	class:ss_m
_set_option_logsize	src/sm/sm.cpp	/^rc_t ss_m::_set_option_logsize($/;"	f	class:ss_m
_set_size	src/sm/log_core.cpp	/^void log_core::_set_size(fileoff_t size) $/;"	f	class:log_core
_set_state	src/sm/partition.h	/^    void               _set_state(w_base_t::uint4_t m) { _mask |= m ; }$/;"	f	class:partition_t
_set_store_flags	src/sm/sm_io.cpp	/^io_m::_set_store_flags(const stid_t& stid, store_flag_t flags, bool sync_volume)$/;"	f	class:io_m
_set_store_property	src/sm/smfile.cpp	/^ss_m::_set_store_property($/;"	f	class:ss_m
_setdebuginfo	src/sm/crash.cpp	/^_setdebuginfo($/;"	f
_shift_compress	src/sm/page.cpp	/^page_p::_shift_compress(slotid_t from, $/;"	f	class:page_p
_shpid	src/sm/logrec.h	/^    shpid_t             _shpid; \/\/ 4 bytes$/;"	m	class:logrec_t
_shrink_tree	src/sm/btree_impl.cpp	/^btree_impl::_shrink_tree(btree_p& rp, const bool bIgnoreLatches)        			 $/;"	f	class:btree_impl
_shutting_down	src/sm/log_core.h	/^    bool volatile        _shutting_down;$/;"	m	class:log_core
_sinfo	src/sm/sdesc.h	/^    sinfo_s                _sinfo;$/;"	m	class:sdesc_t
_size	src/common/vec_t.h	/^    size_t             _size;$/;"	m	struct:VEC_t
_size	src/fc/block_alloc.h	/^size_t dynpool::_size() const {$/;"	f	class:dynpool
_size	src/fc/dynarray.h	/^    size_t _size; \/\/ element count, not bytes!!$/;"	m	struct:dynvector
_size	src/fc/dynarray.h	/^    size_t _size;$/;"	m	struct:dynarray
_size	src/fc/vtable.h	/^    size_t _size;$/;"	m	class:vtable_names_init_t
_size	src/sm/bf_htab.h	/^    int      _size;$/;"	m	class:bf_core_m::htab
_size	src/sm/partition.h	/^    fileoff_t             _size;$/;"	m	class:partition_t
_size	src/sm/pmap.h	/^    enum    { _size = smlevel_0::ext_map_sz_in_bytes };$/;"	e	enum:Pmap::__anon39
_skip	src/sm/partition.cpp	/^partition_t::_skip(const lsn_t &ll, int fd)$/;"	f	class:partition_t
_skip_log	src/sm/log_core.h	/^    skip_log*           _skip_log;$/;"	m	class:log_core
_skip_nulls	src/sm/scan.h	/^    bool                 _skip_nulls;$/;"	m	class:scan_index_i
_skip_nulls	src/sm/scan.h	/^    bool            _skip_nulls;$/;"	m	class:scan_rt_i
_skip_one_slot	src/sm/btree_impl.cpp	/^btree_impl::_skip_one_slot($/;"	f	class:btree_impl
_sleeping	src/sthread/sthread.h	/^    volatile bool               _sleeping;$/;"	m	class:sthread_t
_sli_enabled	src/sm/lock_x.h	/^    bool			_sli_enabled; \/\/ does the user want to use sli?$/;"	m	class:xct_lock_info_t
_sli_purged	src/sm/lock_x.h	/^    bool			_sli_purged;$/;"	m	class:xct_lock_info_t
_sli_sdesc_cache	src/sm/lock_x.h	/^    sdesc_cache_t*		_sli_sdesc_cache;$/;"	m	class:xct_lock_info_t
_sli_status	src/sm/lock_x.h	/^    sli_status_t		_sli_status;$/;"	m	class:lock_request_t
_slot	src/sm/btcursor.h	/^    int                _slot;$/;"	m	class:bt_cursor_t
_slot	src/sm/btree_bl.cpp	/^    slotid_t        _slot[20];        \/\/ current slot in each page of the path$/;"	m	class:btsink_t	file:
_slot	src/sm/newsort.cpp	/^        slotid_t               _slot;    \/\/2 bytes$/;"	m	struct:meta_header_t::_persistent	file:
_slot_array	src/sm/log_core.cpp	/^	insert_info* _slot_array;$/;"	m	struct:log_core::insert_info_array	file:
_slot_array	src/sm/log_core.h	/^    insert_info_array* _slot_array;$/;"	m	class:log_core
_slot_mark	src/sm/log_core.cpp	/^	long _slot_mark;$/;"	m	struct:log_core::insert_info_array	file:
_slots	src/sm/bf_htab.h	/^        bfcb_t* volatile      _slots[SLOT_COUNT];$/;"	m	class:bf_core_m::htab::bucket
_slots	src/sm/log_core.h	/^    insert_info* volatile* _slots;$/;"	m	class:log_core
_slots	src/sm/page_s.h	/^    } _slots;$/;"	m	class:page_s	typeref:union:page_s::slot_array
_slow_acquire	src/fc/mem_block.cpp	/^void* block_list::_slow_acquire(size_t chip_size, size_t chip_count, size_t block_size)$/;"	f	class:memory_block::block_list
_smthread_block	src/sm/smthread.cpp	/^w_rc_t::errcode_t  smthread_t::_smthread_block($/;"	f	class:smthread_t
_smthread_unblock	src/sm/smthread.cpp	/^w_rc_t    smthread_t::_smthread_unblock(w_rc_t::errcode_t e)$/;"	f	class:smthread_t
_snum	src/sm/logrec.h	/^    snum_t              _snum; \/\/ 4 bytes$/;"	m	class:logrec_t
_snum	src/sm/sm_io.h	/^        snum_t                _snum;$/;"	m	class:store_operation_param
_socket_count	src/sm/btree_latch_manager.h	/^    long _socket_count;$/;"	m	class:btree_latch_manager
_socket_latch_locks	src/sm/btree_latch_manager.h	/^    Lock* _socket_latch_locks;$/;"	m	class:btree_latch_manager
_socket_latches	src/sm/btree_latch_manager.h	/^    btree_latch_map* _socket_latches;$/;"	m	class:btree_latch_manager
_sort_cmp_area_	src/sm/rtree.cpp	/^_sort_cmp_area_(const void* k1, const void* k2)$/;"	f	file:
_sort_cmp_axis_	src/sm/rtree.cpp	/^_sort_cmp_axis_(const void* k1, const void* k2)$/;"	f	file:
_sort_context_lock	src/sm/rtree.cpp	/^    queue_based_block_lock_t _sort_context_lock;$/;"	m	struct:sort_context	file:
_sort_file	src/sm/newsort.cpp	/^ss_m::_sort_file($/;"	f	class:ss_m
_sort_file	src/sm/sort.cpp	/^ss_m::_sort_file(const stid_t& fid, vid_t vid, stid_t& sfid,$/;"	f	class:ss_m
_sort_key	src/sm/newsort.cpp	/^    sm_skey_t                _sort_key[max_keys_handled];$/;"	m	class:meta_header_t	file:
_space	src/sm/btcursor.h	/^    char*            _space;$/;"	m	class:bt_cursor_t
_space_available	src/sm/log.h	/^    fileoff_t volatile      _space_available; \/\/ how many unreserved bytes left$/;"	m	class:log_m
_space_cond	src/sm/log.h	/^    pthread_cond_t          _space_cond; \/\/ tied to _space_lock$/;"	m	class:log_m
_space_last_page	src/sm/file.cpp	/^file_m::_space_last_page(smsize_t rec_sz)$/;"	f	class:file_m
_space_left	src/sm/page_h.h	/^    smsize_t    _space_left;$/;"	m	class:pginfo_t
_space_lock	src/sm/log.h	/^    pthread_mutex_t         _space_lock; \/\/ tied to _space_cond$/;"	m	class:log_m
_space_rsvd_for_chkpt	src/sm/log.h	/^    fileoff_t volatile      _space_rsvd_for_chkpt; \/\/ cat we run a chkpt now?$/;"	m	class:log_m
_spaces	src/sm/sort_s.h	/^    int        _spaces;    \/\/ _grow$/;"	m	class:ssm_sort::sort_keys_t
_spatial_cmp	src/sm/sort.cpp	/^static int _spatial_cmp(uint4_t klen1, const void* kval1, uint4_t klen2,$/;"	f	file:
_spatial_rcmp	src/sm/sort.cpp	/^static int _spatial_rcmp(uint4_t klen1, const void* kval1, uint4_t klen2,$/;"	f	file:
_spid	src/sm/vol.h	/^    lpid_t           _spid;$/;"	m	class:vol_t
_spid	src/sm/vol.h	/^    shpid_t             _spid;        \/\/ store pid$/;"	m	class:volhdr_t
_spin_on_count	src/sm/sm-no-inline.cpp	/^long log_core::_spin_on_count(long volatile* count, long bound) {$/;"	f	class:log_core
_spin_on_epoch	src/sm/sm-no-inline.cpp	/^void log_core::_spin_on_epoch(long old_end) {$/;"	f	class:log_core
_spin_on_readers	src/sthread/no-inline.cpp	/^void mcs_rwlock::_spin_on_readers() $/;"	f	class:mcs_rwlock
_spin_on_writer	src/sthread/no-inline.cpp	/^void mcs_rwlock::_spin_on_writer() $/;"	f	class:mcs_rwlock
_splen	src/sm/btcursor.h	/^    int                _splen;$/;"	m	class:bt_cursor_t
_split_leaf	src/sm/btree_impl.cpp	/^btree_impl::_split_leaf($/;"	f	class:btree_impl
_split_leaf_and_relocate_recs	src/sm/btree_impl.cpp	/^btree_impl::_split_leaf_and_relocate_recs($/;"	f	class:btree_impl
_split_page	src/sm/rtree.cpp	/^rtree_m::_split_page($/;"	f	class:rtree_m
_split_tree	src/sm/btree_impl.cpp	/^btree_impl::_split_tree($/;"	f	class:btree_impl
_stable	src/sm/sort_s.h	/^    bool    _stable;    \/\/ set_stable, is_stable$/;"	m	class:ssm_sort::sort_keys_t
_stack_size	src/sthread/sthread.h	/^    size_t                      _stack_size;$/;"	m	class:sthread_t
_start	src/sm/log_core.h	/^    long volatile        _start; \/\/ byte number of oldest unwritten byte$/;"	m	class:log_core
_start	src/sm/partition.h	/^    fileoff_t             _start;$/;"	m	class:partition_t
_start	src/sm/pin.h	/^    smsize_t             _start;$/;"	m	class:pin_i
_start	src/sthread/sthread.cpp	/^void sthread_t::_start()$/;"	f	class:sthread_t
_start_cond	src/sthread/sthread.h	/^    pthread_cond_t *            _start_cond; \/\/ paired w\/ _start_terminate_lock$/;"	m	class:sthread_t
_start_frame	src/sthread/sthread.h	/^    void *                      _start_frame;$/;"	m	class:sthread_t
_start_key	src/sm/tests/mrbtrees_test.cpp	/^  int _start_key;$/;"	m	class:smthread_creator_t	file:
_start_key	src/sm/tests/mrbtrees_test.cpp	/^  int _start_key;$/;"	m	class:smthread_scanner_t	file:
_start_rid	src/sm/tests/create_rec.cpp	/^        rid_t       _start_rid;$/;"	m	class:smthread_user_t	file:
_start_rid	src/sm/tests/log_exceed.cpp	/^        rid_t       _start_rid;$/;"	m	class:smthread_user_t	file:
_start_rid	src/sm/tests/rtree_example.cpp	/^        rid_t       _start_rid;$/;"	m	class:smthread_user_t	file:
_start_rid	src/sm/tests/sort_stream.cpp	/^        rid_t       _start_rid;$/;"	m	class:smthread_user_t	file:
_start_rid	src/sm/tests/vtable_example.cpp	/^        rid_t       _start_rid;$/;"	m	class:smthread_user_t	file:
_start_terminate_lock	src/sthread/sthread.h	/^    pthread_mutex_t*            _start_terminate_lock; \/\/ _start_cond, _terminate_cond, _forked$/;"	m	class:sthread_t
_state	src/fc/rand48.h	/^    unsigned48_t _state;$/;"	m	class:rand48
_state	src/fc/w_rand.h	/^    uint32_t _state;$/;"	m	struct:w_rand
_state	src/sm/lock_x.h	/^    lock_base_t::status_t  _state;        \/\/ lock state$/;"	m	class:lock_request_t
_state	src/sm/log_core.cpp	/^	uint64_t _state;$/;"	m	struct:hacked_qnode	file:
_state	src/sm/xct.h	/^        state_t                   _state;$/;"	m	struct:xct_t::xct_core
_stats	src/sm/rtree.cpp	/^rtree_m::_stats($/;"	f	class:rtree_m
_status	src/sm/bf_prefetch.h	/^        prefetch_status_t       _status; \/\/ indicates request satisfied$/;"	m	struct:bf_prefetch_thread_t::frame_info
_status	src/sthread/sthread.h	/^    volatile status_t           _status;    \/\/ thread status$/;"	m	class:sthread_t
_stid	src/sm/bf.cpp	/^    stid_t                      _stid;$/;"	m	class:bf_filter_store_t	file:
_stid	src/sm/scan.h	/^    stid_t               _stid;$/;"	m	class:scan_index_i
_stid	src/sm/sdesc.h	/^    stid_t                 _stid;   \/\/ identifies stores $/;"	m	class:sdesc_t
_stid	src/sm/sm_s.h	/^    stid_t        _stid;$/;"	m	class:lpid_t
_stime_t	src/fc/stime.cpp	/^typedef    struct timespec _stime_t;$/;"	t	typeref:struct:timespec	file:
_stime_t	src/fc/stime.cpp	/^typedef struct timeval    _stime_t;$/;"	t	typeref:struct:timeval	file:
_stk	src/sm/rtree_p.h	/^    rtstk_entry         _stk[max_rtstk_sz];$/;"	m	class:rtstk_t
_stk	src/sm/rtree_p.h	/^    shpid_t _stk[ftstk_chunk];$/;"	m	class:ftstk_t
_store	src/fc/tests/cuckoo.cpp	/^    uint   _store;$/;"	m	struct:bfpid_t	file:
_store	src/sm/newsort.cpp	/^    snum_t          _store;$/;"	m	class:tape_t	file:
_store	src/sm/sm_io.cpp	/^    snum_t _store;$/;"	m	class:autoerase_t	file:
_store	src/sm/tests/htab.cpp	/^    uint       _store;$/;"	m	class:htab_tester	file:
_store_flag	src/sm/logrec.cpp	/^    uint2_t        _store_flag; \/\/ store_flag_t  in sm_base.h$/;"	m	class:page_init_t	file:
_store_flags	src/sm/bf_s.h	/^    w_base_t::uint4_t _store_flags; \/\/ a copy of what's in the page, alas$/;"	m	class:bfcb_t
_storesToFree	src/sm/xct.h	/^        w_list_t<stid_list_elem_t,queue_based_lock_t>    _storesToFree;$/;"	m	struct:xct_t::xct_core
_string_rcmp	src/sm/sort.cpp	/^_string_rcmp(uint4_t klen1, const void* kval1, uint4_t klen2, const void* kval2)$/;"	f	file:
_strip_filename	src/fc/w_debug.h	146;"	d
_swap	src/sm/newsort.cpp	/^    void _swap(int*& a, int*& b) {$/;"	f	class:fib_t	file:
_sync_logbuf	src/sm/xct.cpp	/^xct_t::_sync_logbuf(bool block)$/;"	f	class:xct_t
_t_test_typed_btree	src/sm/smsh/shell2.cpp	/^_t_test_typed_btree($/;"	f	file:
_tab	src/fc/w_hash.h	/^    w_list_t<T, LOCK>*             _tab;$/;"	m	class:w_hash_t
_tab	src/sm/device.h	/^    w_list_t<device_s,queue_based_lock_t> _tab;$/;"	m	class:device_m
_table	src/sm/bf_htab.h	/^    bucket* _table;$/;"	m	class:bf_core_m::htab
_table	src/sm/bf_prefetch.cpp	/^bf_prefetch_thread_t::_table[$/;"	m	class:bf_prefetch_thread_t	file:
_table	src/sm/bf_prefetch.h	/^        _table[pf_max_unused_status][pf_max_unused_event];$/;"	m	class:bf_prefetch_thread_t
_table_hash	src/sm/lock_core.cpp	/^lock_core_m::_table_hash(uint4_t id) const$/;"	f	class:lock_core_m
_table_lock	src/sm/device.cpp	/^queue_based_lock_t  device_m::_table_lock;$/;"	m	class:device_m	file:
_table_lock	src/sm/device.h	/^    static queue_based_lock_t             _table_lock;$/;"	m	class:device_m
_tail	src/fc/mem_block.h	/^    block*        _tail;$/;"	m	struct:memory_block::block_list
_tail	src/fc/w_list.h	/^    w_link_t            _tail;$/;"	m	class:w_list_base_t
_tail	src/sm/xct.cpp	/^    xct_link* volatile _tail;$/;"	m	struct:xct_list	file:
_tail	src/sthread/mcs_lock.h	/^	qnode* volatile _tail;$/;"	m	struct:mcs_lock
_tape_number	src/sm/newsort.cpp	/^    int              _tape_number;$/;"	m	class:tape_t	file:
_tapes	src/sm/newsort.cpp	/^    tape_t*            _tapes;$/;"	m	class:ssm_sort::run_mgr	file:
_target	src/sm/newsort.cpp	/^    int         _target; \/\/ target tape# for output$/;"	m	class:phase_mgr	file:
_tb_cond	src/sm/bf_transit_bucket.h	/^    pthread_cond_t _tb_cond;$/;"	m	class:transit_bucket_t
_tb_mutex	src/sm/bf_transit_bucket.h	/^    pthread_mutex_t _tb_mutex; \/\/ paired with _tb_cond$/;"	m	class:transit_bucket_t
_tcb	src/sm/smthread.h	/^    tcb_t              _tcb;$/;"	m	class:smthread_t
_teardown	src/sm/xct.cpp	/^xct_t::_teardown(bool is_chaining) {$/;"	f	class:xct_t
_terminated	src/sthread/sthread.h	/^    bool                        _terminated; \/\/ protects against double calls$/;"	m	class:sthread_t
_test_no	src/sm/tests/mrbtrees_test.cpp	/^  int         _test_no; \/\/ test to execute$/;"	m	class:smthread_main_t	file:
_the_xct	src/sm/prologue.h	/^    xct_t *           _the_xct; \/\/ attached xct when we constructed prologue$/;"	m	class:prologue_rc_t
_thread	src/sm/lock_x.h	/^    smthread_t*       _thread;        \/\/ thread to wakeup when serviced $/;"	m	class:lock_request_t
_thread_initialized	src/fc/tls.h	/^    static __thread bool _thread_initialized;$/;"	m	class:tls_tricks::tls_manager
_threadid	src/common/latch.h	/^    sthread_t*   _threadid; \/\/ REMOVE ME (for debuging)$/;"	m	class:latch_holder_t
_threads_attached	src/sm/xct.h	/^        volatile int           _threads_attached; $/;"	m	struct:xct_t::xct_core
_tid	src/sm/lock_x.h	/^    tid_t           _tid;     $/;"	m	class:xct_lock_info_t
_tid	src/sm/logrec.h	/^    tid_t               _tid;      \/\/ (xct)tid of this xct$/;"	m	class:logrec_t
_tid	src/sm/page_s.h	/^        tid_t    _tid;        \/\/ youngest xct contributing to _nrsvd$/;"	m	class:page_s::space_t
_tid	src/sm/sm.h	/^    tid_t            _tid;$/;"	m	class:sm_quark_t
_tid	src/sm/sm.h	/^    tid_t            _tid;$/;"	m	class:sm_save_point_t
_tid	src/sm/xct.cpp	/^    tid_t	_tid;$/;"	m	struct:xct_link	file:
_time	src/fc/stime.h	/^    struct    timespec    _time;$/;"	m	class:stime_t	typeref:struct:stime_t::timespec
_timeout	src/sm/xct.h	/^        timeout_in_ms          _timeout; \/\/ default timeout value for lock reqs$/;"	m	struct:xct_t::xct_core
_tmp	src/sm/dir.cpp	/^    string _tmp;$/;"	m	struct:pretty_printer	file:
_tmp	src/sm/lock_core.cpp	/^    string _tmp;$/;"	m	struct:pretty_printer	file:
_toggle	src/sm/prologue.h	/^    xct_log_switch_t* _toggle;$/;"	m	class:prologue_rc_t
_top	src/fc/w_hash.h	/^    uint4_t                        _top;$/;"	m	class:w_hash_t
_top	src/sm/btree_bl.cpp	/^    int         _top;                \/\/ top of the stack$/;"	m	class:btsink_t	file:
_top	src/sm/rtree.cpp	/^    int                 _top;$/;"	m	class:rtld_stk_t	file:
_top	src/sm/rtree_p.h	/^    int2_t             _top;$/;"	m	class:rtstk_t
_top	src/sm/rtree_p.h	/^    int2_t _top;$/;"	m	class:ftstk_t
_total	src/sm/newsort.cpp	/^    int                _total;$/;"	m	class:fib_t	file:
_total	src/sm/newsort.cpp	/^    int         _total; \/\/ total # runs in the whole mess$/;"	m	class:phase_mgr	file:
_total_bytes	src/sthread/tests/ioperf.cpp	/^    int         _total_bytes;$/;"	m	class:io_thread_t	file:
_total_count	src/common/latch.h	/^    w_base_t::uint4_t            _total_count;$/;"	m	class:latch_t
_total_slots	src/sm/log_core.cpp	/^	long _total_slots;$/;"	m	struct:log_core::insert_info_array	file:
_trace_cnt	src/fc/w_error.h	/^    uint4_t                      _trace_cnt;$/;"	m	class:w_error_t
_trace_file	src/fc/w_error.h	/^    const char*                  _trace_file[max_trace];$/;"	m	class:w_error_t
_trace_level	src/fc/w_debug.h	/^        int            _trace_level;$/;"	m	class:w_debug
_trace_line	src/fc/w_error.h	/^    uint4_t                      _trace_line[max_trace];$/;"	m	class:w_error_t
_transit_buckets	src/sm/bf_core.cpp	/^transit_bucket_t   transit_bucket_t::_transit_buckets[$/;"	m	class:transit_bucket_t	file:
_transit_buckets	src/sm/bf_transit_bucket.h	/^    static transit_bucket_t   _transit_buckets[NUM_TRANSIT_BUCKETS];$/;"	m	class:transit_bucket_t
_traverse	src/sm/btree_impl.cpp	/^btree_impl::_traverse($/;"	f	class:btree_impl
_traverse	src/sm/rtree.cpp	/^rtree_m::_traverse($/;"	f	class:rtree_m
_tries	src/sm/tests/htab.cpp	/^    int        _tries;$/;"	m	class:htab_tester	file:
_truncate_large	src/sm/file.cpp	/^file_m::_truncate_large(file_p& page, slotid_t slot, uint4_t amount)$/;"	f	class:file_m
_truncate_mrbt_rec	src/sm/smfile.cpp	/^ss_m::_truncate_mrbt_rec(const rid_t& rid, smsize_t amount, bool& should_forward,$/;"	f	class:ss_m
_truncate_rec	src/sm/smfile.cpp	/^ss_m::_truncate_rec(const rid_t& rid, smsize_t amount, bool& should_forward)$/;"	f	class:ss_m
_try_initialize_fingerprint	src/sm/smthread.cpp	/^bool smthread_t::_try_initialize_fingerprint() $/;"	f	class:smthread_t
_type	src/sm/logrec.h	/^    u_char             _type; \/\/ kind_t (included from logtype_gen.h)$/;"	m	class:logrec_t
_u	src/fc/w_stat.h	/^    }_u;$/;"	m	class:w_stat_t	typeref:union:w_stat_t::__anon109
_u	src/sm/sm_io.h	/^        } _u;$/;"	m	class:store_operation_param	typeref:union:store_operation_param::__anon66
_u	src/sm/smsh/shell.h	/^    } _u; $/;"	m	struct:typed_value	typeref:union:typed_value::__anon75
_unblock	src/sthread/sthread.cpp	/^sthread_t::_unblock(w_rc_t::errcode_t e)$/;"	f	class:sthread_t
_unblock_flag	src/sthread/sthread.h	/^    volatile bool               _unblock_flag; \/\/ used internally by _block()$/;"	m	class:sthread_t
_unblocked	src/sm/smthread.h	/^    volatile bool   _unblocked;$/;"	m	class:smthread_t
_undo_alloc_file_page	src/sm/file.cpp	/^file_m::_undo_alloc_file_page(file_p& page)$/;"	f	class:file_m
_undo_nxt	src/sm/xct.h	/^    lsn_t                        _undo_nxt;$/;"	m	class:xct_t
_uninitialize_fingerprint	src/sm/smthread.cpp	/^void smthread_t::_uninitialize_fingerprint() $/;"	f	class:smthread_t
_unique	src/sm/btcursor.h	/^    bool            _unique;$/;"	m	class:bt_cursor_t
_unique	src/sm/sort.h	/^    bool   _unique;    \/\/ unique sort$/;"	m	class:run_scan_t
_unix_fd	src/sm/vol.h	/^    int              _unix_fd;$/;"	m	class:vol_t
_unlink	src/sm/btree_p.cpp	/^btree_p::_unlink(btree_p &rsib, const bool bIgnoreLatches)$/;"	f	class:btree_p
_unscramble_key	src/sm/btree.cpp	/^btree_m::_unscramble_key($/;"	f	class:btree_m
_unused	src/sm/bf_core.cpp	/^bfcb_unused_list        bf_core_m::_unused;$/;"	m	class:bf_core_m	file:
_unused	src/sm/bf_core.h	/^    static bfcb_unused_list     _unused; \/\/ NOTE: this cache IS USED; it$/;"	m	class:bf_core_m
_update	src/fc/rand48.cpp	/^unsigned48_t rand48::_update() $/;"	f	class:rand48
_update	src/sm/btree_impl.cpp	/^btree_impl::_update($/;"	f	class:btree_impl
_update_cache	src/sm/lock_core.cpp	/^lock_core_m::_update_cache(xct_lock_info_t* the_xlinfo, const lockid_t& name, lmode_t m) $/;"	f	class:lock_core_m
_update_epochs	src/sm/log_core.cpp	/^bool log_core::_update_epochs(insert_info* info, bool attempt_abort) {$/;"	f	class:log_core
_update_ext_histo	src/sm/sm_io.cpp	/^io_m::_update_ext_histo(const lpid_t& pid, space_bucket_t b)$/;"	f	class:io_m
_update_mr_assoc	src/sm/smindex.cpp	/^rc_t ss_m::_update_mr_assoc(const stid_t&       stid, $/;"	f	class:ss_m
_update_mrbt_rec	src/sm/smfile.cpp	/^ss_m::_update_mrbt_rec(const rid_t& rid, smsize_t start, const vec_t& data,$/;"	f	class:ss_m
_update_mrbt_rec_hdr	src/sm/smfile.cpp	/^ss_m::_update_mrbt_rec_hdr(const rid_t& rid, smsize_t start, const vec_t& hdr,$/;"	f	class:ss_m
_update_owner	src/sm/btree_impl.cpp	/^rc_t btree_impl::_update_owner(const lpid_t& new_owner,$/;"	f	class:btree_impl
_update_rec	src/sm/smfile.cpp	/^ss_m::_update_rec(const rid_t& rid, smsize_t start, const vec_t& data,$/;"	f	class:ss_m
_update_rec_hdr	src/sm/smfile.cpp	/^ss_m::_update_rec_hdr(const rid_t& rid, smsize_t start, const vec_t& hdr,$/;"	f	class:ss_m
_updating_operations	src/sm/xct.h	/^        volatile int           _updating_operations; $/;"	m	struct:xct_t::xct_core
_urgent	src/sm/bf.cpp	/^    bool _urgent;$/;"	m	class:bf_filter_sweep_old_t	file:
_urgent	src/sm/bf.cpp	/^  bool                          _urgent;$/;"	m	class:bf_filter_sweep_t	file:
_usable_chips	src/fc/mem_block.h	/^    bitmap        _usable_chips; \/\/ available as of last recycling (1thr)$/;"	m	struct:memory_block::block_bits
_v	src/sm/sm_escalation.h	/^    w_base_t::int4_t _v; \/\/ save old values$/;"	m	class:sm_escalation_t
_v	src/sm/sm_io.cpp	/^    vol_t* _v;$/;"	m	class:autoerase_t	file:
_valid	src/sm/sort_s.h	/^    bool        _valid; $/;"	m	class:ssm_sort::skey_t
_valid	src/sm/sort_s.h	/^    bool        _valid;$/;"	m	class:ssm_sort::object_t
_value	src/common/option.h	/^    char*        _value;                        \/\/ value for the option$/;"	m	class:option_t
_value1	src/sm/sm_io.h	/^                uint2_t                _value1;$/;"	m	struct:store_operation_param::__anon66::__anon67
_value2	src/sm/sm_io.h	/^                uint2_t                _value2;$/;"	m	struct:store_operation_param::__anon66::__anon67
_version_major	src/sm/log.cpp	/^uint4_t const log_m::_version_major = 4;$/;"	m	class:log_m	file:
_version_major	src/sm/log.h	/^    static uint4_t const _version_major;$/;"	m	class:log_m
_version_minor	src/sm/log.cpp	/^uint4_t const log_m::_version_minor = 0;$/;"	m	class:log_m	file:
_version_minor	src/sm/log.h	/^    static uint4_t const _version_minor;$/;"	m	class:log_m
_victim	src/sm/prologue.h	/^    xct_t*            _victim;$/;"	m	class:prologue_rc_t
_victimize	src/sm/histo.cpp	/^histoid_t::_victimize(int howmany) $/;"	f	class:histoid_t
_vid	src/sm/bf.cpp	/^    vid_t                       _vid;$/;"	m	class:bf_filter_vol_t	file:
_vid	src/sm/logrec.h	/^    vid_t               _vid;   \/\/ 2 bytes$/;"	m	class:logrec_t
_vid	src/sm/tests/create_rec.cpp	/^        vid_t       _vid;$/;"	m	class:smthread_user_t	file:
_vid	src/sm/tests/log_exceed.cpp	/^        vid_t       _vid;$/;"	m	class:smthread_user_t	file:
_vid	src/sm/tests/mrbtrees_test.cpp	/^  vid_t       _vid;$/;"	m	class:smthread_main_t	file:
_vid	src/sm/tests/rtree_example.cpp	/^        vid_t       _vid;$/;"	m	class:smthread_user_t	file:
_vid	src/sm/tests/sort_stream.cpp	/^        vid_t       _vid;$/;"	m	class:smthread_user_t	file:
_vid	src/sm/tests/vtable_example.cpp	/^        vid_t       _vid;$/;"	m	class:smthread_user_t	file:
_vid	src/sm/vol.h	/^    vid_t            _vid;$/;"	m	class:vol_t
_vol	src/fc/tests/cuckoo.cpp	/^    uint2_t _vol;$/;"	m	struct:bfpid_t	file:
_vol	src/sm/bf.cpp	/^    vid_t                        _vol;$/;"	m	class:bf_filter_sweep_old_t	file:
_vol	src/sm/bf.cpp	/^    vid_t                       _vol;$/;"	m	class:bf_filter_sweep_t	file:
_vol	src/sm/bf.cpp	/^    vid_t             _vol;$/;"	m	class:bf_cleaner_thread_t	file:
_vol	src/sm/newsort.cpp	/^    vid_t           _vol;$/;"	m	class:tape_t	file:
_vol	src/sm/tests/htab.cpp	/^    uint2_t    _vol;$/;"	m	class:htab_tester	file:
_vote	src/sm/xct.h	/^        vote_t                    _vote;$/;"	m	struct:xct_t::xct_core
_w	src/sthread/sthread.cpp	/^  array _w;$/;"	m	struct:__rng_init	file:
_w_force_shore_regcomp	src/common/regcomp.cpp	/^int &_w_force_shore_regcomp=w_force_shore_regexec; \/\/ GROT$/;"	v
_w_force_shore_regerror	src/common/regerror.cpp	/^int &_w_force_shore_regerror=w_force_shore_regcomp; \/\/ GROT$/;"	v
_w_force_shore_regexec	src/common/regexec.cpp	/^int &_w_force_shore_regexec=w_force_shore_regerror; \/\/ GROT$/;"	v
_w_temp_alloc_new	src/fc/w_temp_alloc.h	/^static struct _w_temp_alloc_new {$/;"	s
_wait_cond	src/sm/log_core.h	/^    pthread_cond_t       _wait_cond;  \/\/ paired with _wait_flush_lock$/;"	m	class:log_core
_wait_cond	src/sthread/sthread.h	/^    pthread_cond_t              _wait_cond; \/\/ posted when thread should unblock$/;"	m	class:sthread_t
_wait_flush_lock	src/sm/log_core.h	/^    pthread_mutex_t      _wait_flush_lock; $/;"	m	class:log_core
_wait_for_expose	src/sm/log_core.cpp	/^bool log_core::_wait_for_expose(insert_info* info, bool attempt_abort) {$/;"	f	class:log_core
_wait_lock	src/sthread/sthread.h	/^    pthread_mutex_t             _wait_lock; \/\/ paired with _wait_cond, also$/;"	m	class:sthread_t
_wait_map	src/sm/lock_x.h	/^    atomic_thread_map_t  _wait_map; \/\/ for dreadlocks DLD$/;"	m	class:xct_lock_info_t
_wait_request	src/sm/lock_x.h	/^    lock_request_t* _wait_request;  \/\/ lock waited for a thread of this xct $/;"	m	class:xct_lock_info_t
_waiters_cond	src/sm/xct.h	/^        pthread_cond_t            _waiters_cond;  \/\/ paired with _waiters_mutex$/;"	m	struct:xct_t::xct_core
_waiters_mutex	src/sm/xct.h	/^        mutable pthread_mutex_t   _waiters_mutex;  \/\/ paired with _waiters_cond$/;"	m	struct:xct_t::xct_core
_waiting	src/sm/smthread.h	/^    bool            _waiting;$/;"	m	class:smthread_t
_waiting	src/sthread/mcs_lock.h	/^		int _waiting;$/;"	m	struct:mcs_lock::qnode
_waiting_for_flush	src/sm/log_core.h	/^    long volatile        _waiting_for_flush;$/;"	m	class:log_core
_waiting_for_space	src/sm/log.h	/^    bool                    _waiting_for_space; $/;"	m	class:log_m
_waiting_for_space	src/sm/log_core.h	/^    long volatile        _waiting_for_space; $/;"	m	class:log_core
_wake_master	src/sm/bf.cpp	/^    pthread_cond_t _wake_master; \/\/ page_write_threads signal this to$/;"	m	struct:bf_page_writer_control_t	file:
_wake_slaves	src/sm/bf.cpp	/^    pthread_cond_t _wake_slaves; \/\/ bf_cleaner_thread signals this to$/;"	m	struct:bf_page_writer_control_t	file:
_warn_on	src/sm/xct.h	/^        bool                   _warn_on;$/;"	m	struct:xct_t::xct_core
_was_fixed	src/sm/file.cpp	/^    bool         _was_fixed;$/;"	m	class:alloc_file_page_filter_t	file:
_way	src/sm/newsort.cpp	/^    int         _way;  \/\/ have an n-way merge at this point$/;"	m	class:phase_mgr	file:
_whole_object	src/sm/newsort.cpp	/^    sm_object_t              _whole_object;$/;"	m	class:meta_header_t	file:
_write_cond	src/sthread/sthread.h	/^    pthread_cond_t _write_cond; \/\/ paired w\/ _read_write_mutex$/;"	m	struct:occ_rwlock
_write_lock	src/sthread/sthread.h	/^    occ_wlock _write_lock;$/;"	m	struct:occ_rwlock
_write_master	src/sm/log.cpp	/^log_m::_write_master(lsn_t l, lsn_t min) $/;"	f	class:log_m
_write_out	src/sm/bf.cpp	/^bf_m::_write_out(const page_s* pbuf, uint4_t cnt)$/;"	f	class:bf_m
_x	src/sm/sm_io.cpp	/^    xct_t *_x;$/;"	m	class:io_m::auto_leave_and_trx_release_t	file:
_x	src/sm/sm_io.h	/^        xct_t *_x;$/;"	m	class:io_m::auto_leave_t
_xct	src/sm/xct.h	/^    xct_t*        _xct;$/;"	m	class:xct_auto_abort_t
_xct_ended	src/sm/xct.cpp	/^xct_t::_xct_ended(xct_end_type type) {$/;"	f	class:xct_t
_xct_ended	src/sm/xct.h	/^        volatile int      _xct_ended; \/\/ used for self-checking (assertions) only$/;"	m	struct:xct_t::xct_core
_xct_log	src/sm/smthread.h	/^        xct_log_t*        _xct_log;$/;"	m	struct:smthread_t::tcb_t
_xct_log_off	src/sm/xct.h	/^    bool         _xct_log_off;$/;"	m	class:xct_log_t
_xct_rsvd	src/sm/page_s.h	/^        page_bytes_t    _xct_rsvd;    \/\/ amt of space contributed by _tid to _nrsvd$/;"	m	class:page_s::space_t
_xct_state	src/sm/prologue.h	/^    xct_state_t       _xct_state;$/;"	m	class:prologue_rc_t
_xct_t_me_node	src/sm/smthread.h	/^        queue_based_lock_t::ext_qnode _xct_t_me_node;$/;"	m	struct:smthread_t::tcb_t
_xd	src/sm/restart.cpp	/^    xct_t*                        _xd;$/;"	m	class:sm_undo_thread_t	file:
_xd	src/sm/sm_base.h	/^    xct_t* _xd;$/;"	m	struct:check_compensated_op_nesting
_xd	src/sm/xct.h	/^    xct_t* _xd;$/;"	m	class:auto_release_anchor_t
_xd	src/sm/xct_dependent.h	/^    xct_t *     _xd;$/;"	m	class:xct_dependent_t
_xlink	src/sm/xct.h	/^    xct_link*			 _xlink;$/;"	m	class:xct_t
_xlist	src/sm/xct.cpp	/^} _xlist;$/;"	v	typeref:struct:xct_list
_xlist_mutex_node	src/sm/smthread.h	/^        queue_based_lock_t::ext_qnode _xlist_mutex_node;$/;"	m	struct:smthread_t::tcb_t
_zombie_chips	src/fc/mem_block.h	/^    bitmap volatile    _zombie_chips; \/\/ deallocations since last recycling (racy)$/;"	m	struct:memory_block::block_bits
a	src/common/tests/vectors.cpp	/^const char *a = "aaaaaaaaaa";$/;"	v
a	src/fc/w_hashing.h	/^    u64 a;$/;"	m	class:w_hashing::uhash
a	src/fc/w_hashing.h	/^    uhash a; $/;"	m	class:w_hashing::hash2
abort	src/fc/w_base.cpp	/^void    w_base_t::abort()$/;"	f	class:w_base_t
abort	src/sm/xct.cpp	/^xct_t::abort(bool save_stats_structure \/* = false *\/)$/;"	f	class:xct_t
abort	src/sm/xct.h	/^    rc_t abort() {W_DO(_xct->abort()); return RCOK;}$/;"	f	class:xct_auto_abort_t
abort_xct	src/sm/sm.cpp	/^ss_m::abort_xct()$/;"	f	class:ss_m
abort_xct	src/sm/sm.cpp	/^ss_m::abort_xct(sm_stats_info_t*&             _stats)$/;"	f	class:ss_m
abort_xct_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t abort_xct_cnt;$/;"	v
abortable_xct	src/sm/prologue.h	/^        abortable_xct   \/\/ active or prepared $/;"	e	enum:prologue_rc_t::xct_state_t
aborttest	src/sm/crash.cpp	/^aborttest() $/;"	f
abs_builddir	Makefile	/^abs_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_builddir	config/Makefile	/^abs_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config$/;"	m
abs_builddir	src/Makefile	/^abs_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src$/;"	m
abs_builddir	src/atomic_ops/Makefile	/^abs_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops$/;"	m
abs_builddir	src/atomic_ops/asm_linkage/Makefile	/^abs_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/asm_linkage$/;"	m
abs_builddir	src/atomic_ops/asm_linkage/usr/Makefile	/^abs_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/asm_linkage\/usr$/;"	m
abs_builddir	src/atomic_ops/asm_linkage/usr/src/Makefile	/^abs_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/asm_linkage\/usr\/src$/;"	m
abs_builddir	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^abs_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/asm_linkage\/usr\/src\/uts$/;"	m
abs_builddir	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^abs_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/intel$/;"	m
abs_builddir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^abs_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/intel\/ia32$/;"	m
abs_builddir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^abs_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/intel\/ia32\/sys$/;"	m
abs_builddir	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^abs_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/intel\/sys$/;"	m
abs_builddir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^abs_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/sparc$/;"	m
abs_builddir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^abs_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/sparc\/sys$/;"	m
abs_builddir	src/atomic_ops/atomic_ops/Makefile	/^abs_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/atomic_ops$/;"	m
abs_builddir	src/atomic_ops/atomic_ops/amd64/Makefile	/^abs_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/atomic_ops\/amd64$/;"	m
abs_builddir	src/atomic_ops/atomic_ops/i386/Makefile	/^abs_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/atomic_ops\/i386$/;"	m
abs_builddir	src/atomic_ops/atomic_ops/sparc/Makefile	/^abs_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/atomic_ops\/sparc$/;"	m
abs_builddir	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^abs_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/atomic_ops\/sparcv9$/;"	m
abs_builddir	src/atomic_ops/ia32/Makefile	/^abs_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/intel\/ia32$/;"	m
abs_builddir	src/atomic_ops/ia32/sys/Makefile	/^abs_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/intel\/ia32\/sys$/;"	m
abs_builddir	src/atomic_ops/intel/Makefile	/^abs_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/intel$/;"	m
abs_builddir	src/atomic_ops/intel/ia32/Makefile	/^abs_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/intel\/ia32$/;"	m
abs_builddir	src/atomic_ops/intel/ia32/sys/Makefile	/^abs_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/intel\/ia32\/sys$/;"	m
abs_builddir	src/atomic_ops/intel/sys/Makefile	/^abs_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/intel\/sys$/;"	m
abs_builddir	src/atomic_ops/sparc/Makefile	/^abs_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/sparc$/;"	m
abs_builddir	src/atomic_ops/sparc/sys/Makefile	/^abs_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/sparc\/sys$/;"	m
abs_builddir	src/common/Makefile	/^abs_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/common$/;"	m
abs_builddir	src/common/tests/Makefile	/^abs_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/common\/tests$/;"	m
abs_builddir	src/fc/Makefile	/^abs_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/fc$/;"	m
abs_builddir	src/fc/tests/Makefile	/^abs_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/fc\/tests$/;"	m
abs_builddir	src/sm/Makefile	/^abs_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/sm$/;"	m
abs_builddir	src/sm/smsh/Makefile	/^abs_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/sm\/smsh$/;"	m
abs_builddir	src/sm/smsh/lib/Makefile	/^abs_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/sm\/smsh\/lib$/;"	m
abs_builddir	src/sm/smsh/scripts/Makefile	/^abs_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/sm\/smsh\/scripts$/;"	m
abs_builddir	src/sm/tests/Makefile	/^abs_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/sm\/tests$/;"	m
abs_builddir	src/sthread/Makefile	/^abs_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/sthread$/;"	m
abs_builddir	src/sthread/tests/Makefile	/^abs_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/sthread\/tests$/;"	m
abs_builddir	tools/Makefile	/^abs_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/tools$/;"	m
abs_srcdir	Makefile	/^abs_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_srcdir	config/Makefile	/^abs_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config$/;"	m
abs_srcdir	src/Makefile	/^abs_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src$/;"	m
abs_srcdir	src/atomic_ops/Makefile	/^abs_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops$/;"	m
abs_srcdir	src/atomic_ops/asm_linkage/Makefile	/^abs_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/asm_linkage$/;"	m
abs_srcdir	src/atomic_ops/asm_linkage/usr/Makefile	/^abs_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/asm_linkage\/usr$/;"	m
abs_srcdir	src/atomic_ops/asm_linkage/usr/src/Makefile	/^abs_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/asm_linkage\/usr\/src$/;"	m
abs_srcdir	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^abs_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/asm_linkage\/usr\/src\/uts$/;"	m
abs_srcdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^abs_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/intel$/;"	m
abs_srcdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^abs_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/intel\/ia32$/;"	m
abs_srcdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^abs_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/intel\/ia32\/sys$/;"	m
abs_srcdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^abs_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/intel\/sys$/;"	m
abs_srcdir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^abs_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/sparc$/;"	m
abs_srcdir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^abs_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/sparc\/sys$/;"	m
abs_srcdir	src/atomic_ops/atomic_ops/Makefile	/^abs_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/atomic_ops$/;"	m
abs_srcdir	src/atomic_ops/atomic_ops/amd64/Makefile	/^abs_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/atomic_ops\/amd64$/;"	m
abs_srcdir	src/atomic_ops/atomic_ops/i386/Makefile	/^abs_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/atomic_ops\/i386$/;"	m
abs_srcdir	src/atomic_ops/atomic_ops/sparc/Makefile	/^abs_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/atomic_ops\/sparc$/;"	m
abs_srcdir	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^abs_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/atomic_ops\/sparcv9$/;"	m
abs_srcdir	src/atomic_ops/ia32/Makefile	/^abs_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/intel\/ia32$/;"	m
abs_srcdir	src/atomic_ops/ia32/sys/Makefile	/^abs_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/intel\/ia32\/sys$/;"	m
abs_srcdir	src/atomic_ops/intel/Makefile	/^abs_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/intel$/;"	m
abs_srcdir	src/atomic_ops/intel/ia32/Makefile	/^abs_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/intel\/ia32$/;"	m
abs_srcdir	src/atomic_ops/intel/ia32/sys/Makefile	/^abs_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/intel\/ia32\/sys$/;"	m
abs_srcdir	src/atomic_ops/intel/sys/Makefile	/^abs_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/intel\/sys$/;"	m
abs_srcdir	src/atomic_ops/sparc/Makefile	/^abs_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/sparc$/;"	m
abs_srcdir	src/atomic_ops/sparc/sys/Makefile	/^abs_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/sparc\/sys$/;"	m
abs_srcdir	src/common/Makefile	/^abs_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/common$/;"	m
abs_srcdir	src/common/tests/Makefile	/^abs_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/common\/tests$/;"	m
abs_srcdir	src/fc/Makefile	/^abs_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/fc$/;"	m
abs_srcdir	src/fc/tests/Makefile	/^abs_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/fc\/tests$/;"	m
abs_srcdir	src/sm/Makefile	/^abs_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/sm$/;"	m
abs_srcdir	src/sm/smsh/Makefile	/^abs_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/sm\/smsh$/;"	m
abs_srcdir	src/sm/smsh/lib/Makefile	/^abs_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/sm\/smsh\/lib$/;"	m
abs_srcdir	src/sm/smsh/scripts/Makefile	/^abs_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/sm\/smsh\/scripts$/;"	m
abs_srcdir	src/sm/tests/Makefile	/^abs_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/sm\/tests$/;"	m
abs_srcdir	src/sthread/Makefile	/^abs_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/sthread$/;"	m
abs_srcdir	src/sthread/tests/Makefile	/^abs_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/src\/sthread\/tests$/;"	m
abs_srcdir	tools/Makefile	/^abs_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/tools$/;"	m
abs_top_builddir	Makefile	/^abs_top_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_builddir	config/Makefile	/^abs_top_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_builddir	src/Makefile	/^abs_top_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_builddir	src/atomic_ops/Makefile	/^abs_top_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_builddir	src/atomic_ops/asm_linkage/Makefile	/^abs_top_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_builddir	src/atomic_ops/asm_linkage/usr/Makefile	/^abs_top_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_builddir	src/atomic_ops/asm_linkage/usr/src/Makefile	/^abs_top_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_builddir	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^abs_top_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_builddir	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^abs_top_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_builddir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^abs_top_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_builddir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^abs_top_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_builddir	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^abs_top_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_builddir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^abs_top_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_builddir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^abs_top_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_builddir	src/atomic_ops/atomic_ops/Makefile	/^abs_top_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_builddir	src/atomic_ops/atomic_ops/amd64/Makefile	/^abs_top_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_builddir	src/atomic_ops/atomic_ops/i386/Makefile	/^abs_top_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_builddir	src/atomic_ops/atomic_ops/sparc/Makefile	/^abs_top_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_builddir	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^abs_top_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_builddir	src/atomic_ops/ia32/Makefile	/^abs_top_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_builddir	src/atomic_ops/ia32/sys/Makefile	/^abs_top_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_builddir	src/atomic_ops/intel/Makefile	/^abs_top_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_builddir	src/atomic_ops/intel/ia32/Makefile	/^abs_top_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_builddir	src/atomic_ops/intel/ia32/sys/Makefile	/^abs_top_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_builddir	src/atomic_ops/intel/sys/Makefile	/^abs_top_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_builddir	src/atomic_ops/sparc/Makefile	/^abs_top_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_builddir	src/atomic_ops/sparc/sys/Makefile	/^abs_top_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_builddir	src/common/Makefile	/^abs_top_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_builddir	src/common/tests/Makefile	/^abs_top_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_builddir	src/fc/Makefile	/^abs_top_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_builddir	src/fc/tests/Makefile	/^abs_top_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_builddir	src/sm/Makefile	/^abs_top_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_builddir	src/sm/smsh/Makefile	/^abs_top_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_builddir	src/sm/smsh/lib/Makefile	/^abs_top_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_builddir	src/sm/smsh/scripts/Makefile	/^abs_top_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_builddir	src/sm/tests/Makefile	/^abs_top_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_builddir	src/sthread/Makefile	/^abs_top_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_builddir	src/sthread/tests/Makefile	/^abs_top_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_builddir	tools/Makefile	/^abs_top_builddir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_srcdir	Makefile	/^abs_top_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_srcdir	config/Makefile	/^abs_top_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_srcdir	src/Makefile	/^abs_top_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_srcdir	src/atomic_ops/Makefile	/^abs_top_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_srcdir	src/atomic_ops/asm_linkage/Makefile	/^abs_top_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_srcdir	src/atomic_ops/asm_linkage/usr/Makefile	/^abs_top_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_srcdir	src/atomic_ops/asm_linkage/usr/src/Makefile	/^abs_top_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_srcdir	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^abs_top_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_srcdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^abs_top_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_srcdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^abs_top_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_srcdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^abs_top_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_srcdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^abs_top_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_srcdir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^abs_top_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_srcdir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^abs_top_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_srcdir	src/atomic_ops/atomic_ops/Makefile	/^abs_top_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_srcdir	src/atomic_ops/atomic_ops/amd64/Makefile	/^abs_top_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_srcdir	src/atomic_ops/atomic_ops/i386/Makefile	/^abs_top_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_srcdir	src/atomic_ops/atomic_ops/sparc/Makefile	/^abs_top_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_srcdir	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^abs_top_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_srcdir	src/atomic_ops/ia32/Makefile	/^abs_top_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_srcdir	src/atomic_ops/ia32/sys/Makefile	/^abs_top_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_srcdir	src/atomic_ops/intel/Makefile	/^abs_top_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_srcdir	src/atomic_ops/intel/ia32/Makefile	/^abs_top_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_srcdir	src/atomic_ops/intel/ia32/sys/Makefile	/^abs_top_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_srcdir	src/atomic_ops/intel/sys/Makefile	/^abs_top_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_srcdir	src/atomic_ops/sparc/Makefile	/^abs_top_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_srcdir	src/atomic_ops/sparc/sys/Makefile	/^abs_top_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_srcdir	src/common/Makefile	/^abs_top_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_srcdir	src/common/tests/Makefile	/^abs_top_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_srcdir	src/fc/Makefile	/^abs_top_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_srcdir	src/fc/tests/Makefile	/^abs_top_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_srcdir	src/sm/Makefile	/^abs_top_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_srcdir	src/sm/smsh/Makefile	/^abs_top_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_srcdir	src/sm/smsh/lib/Makefile	/^abs_top_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_srcdir	src/sm/smsh/scripts/Makefile	/^abs_top_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_srcdir	src/sm/tests/Makefile	/^abs_top_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_srcdir	src/sthread/Makefile	/^abs_top_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_srcdir	src/sthread/tests/Makefile	/^abs_top_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
abs_top_srcdir	tools/Makefile	/^abs_top_srcdir = \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt$/;"	m
ac	src/sm/smsh/tcl_thread.h	/^    int                         ac;$/;"	m	class:tcl_thread_t
ac_ct_AR	Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	config/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/atomic_ops/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/atomic_ops/asm_linkage/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/atomic_ops/asm_linkage/usr/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/atomic_ops/asm_linkage/usr/src/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/atomic_ops/atomic_ops/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/atomic_ops/atomic_ops/amd64/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/atomic_ops/atomic_ops/i386/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/atomic_ops/atomic_ops/sparc/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/atomic_ops/ia32/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/atomic_ops/ia32/sys/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/atomic_ops/intel/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/atomic_ops/intel/ia32/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/atomic_ops/intel/ia32/sys/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/atomic_ops/intel/sys/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/atomic_ops/sparc/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/atomic_ops/sparc/sys/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/common/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/common/tests/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/fc/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/fc/tests/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/sm/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/sm/smsh/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/sm/smsh/lib/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/sm/smsh/scripts/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/sm/tests/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/sthread/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/sthread/tests/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	tools/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_CC	Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	config/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/atomic_ops/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/atomic_ops/asm_linkage/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/atomic_ops/asm_linkage/usr/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/atomic_ops/asm_linkage/usr/src/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/atomic_ops/atomic_ops/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/atomic_ops/atomic_ops/amd64/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/atomic_ops/atomic_ops/i386/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/atomic_ops/atomic_ops/sparc/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/atomic_ops/ia32/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/atomic_ops/ia32/sys/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/atomic_ops/intel/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/atomic_ops/intel/ia32/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/atomic_ops/intel/ia32/sys/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/atomic_ops/intel/sys/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/atomic_ops/sparc/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/atomic_ops/sparc/sys/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/common/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/common/tests/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/fc/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/fc/tests/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/sm/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/sm/smsh/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/sm/smsh/lib/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/sm/smsh/scripts/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/sm/tests/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/sthread/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/sthread/tests/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	tools/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CXX	Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	config/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/atomic_ops/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/atomic_ops/asm_linkage/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/atomic_ops/asm_linkage/usr/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/atomic_ops/asm_linkage/usr/src/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/atomic_ops/atomic_ops/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/atomic_ops/atomic_ops/amd64/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/atomic_ops/atomic_ops/i386/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/atomic_ops/atomic_ops/sparc/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/atomic_ops/ia32/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/atomic_ops/ia32/sys/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/atomic_ops/intel/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/atomic_ops/intel/ia32/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/atomic_ops/intel/ia32/sys/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/atomic_ops/intel/sys/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/atomic_ops/sparc/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/atomic_ops/sparc/sys/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/common/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/common/tests/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/fc/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/fc/tests/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/sm/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/sm/smsh/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/sm/smsh/lib/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/sm/smsh/scripts/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/sm/tests/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/sthread/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/sthread/tests/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	tools/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_fn_c_check_decl	configure	/^ac_fn_c_check_decl ()$/;"	f
ac_fn_c_check_func	configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_header_compile	configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_header_mongrel	configure	/^ac_fn_c_check_header_mongrel ()$/;"	f
ac_fn_c_check_member	configure	/^ac_fn_c_check_member ()$/;"	f
ac_fn_c_check_type	configure	/^ac_fn_c_check_type ()$/;"	f
ac_fn_c_compute_int	configure	/^ac_fn_c_compute_int ()$/;"	f
ac_fn_c_try_compile	configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_link	configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_run	configure	/^ac_fn_c_try_run ()$/;"	f
ac_fn_cxx_try_compile	configure	/^ac_fn_cxx_try_compile ()$/;"	f
ac_fn_cxx_try_cpp	configure	/^ac_fn_cxx_try_cpp ()$/;"	f
ac_fn_cxx_try_link	configure	/^ac_fn_cxx_try_link ()$/;"	f
accept	src/sm/file.cpp	/^bool  alloc_file_page_filter_t::accept(const lpid_t& pid) $/;"	f	class:alloc_file_page_filter_t
accept	src/sm/page.h	/^    bool  accept(const lpid_t&) { return true; }$/;"	f	class:alloc_page_filter_yes_t
accepted	src/sm/file.cpp	/^bool  alloc_file_page_filter_t::accepted() const { return _is_fixed; }$/;"	f	class:alloc_file_page_filter_t
accepted	src/sm/page.h	/^    bool  accepted() const  { return true; }$/;"	f	class:alloc_page_filter_yes_t
access	src/sm/dir.cpp	/^dir_m::access(const stid_t& stid, sdesc_t*& sd, lock_mode_t mode, $/;"	f	class:dir_m
access	src/sm/dir.h	/^dir_vol_m::access(const stid_t& stid, sinfo_s& sd)$/;"	f	class:dir_vol_m
ack	src/sthread/tests/except.cpp	/^int		*ack;$/;"	v
ack	src/sthread/tests/thread1.cpp	/^int			*ack; $/;"	v
ack	src/sthread/tests/thread3.cpp	/^int	*ack;$/;"	v
acquire	src/fc/block_alloc.cpp	/^void* blob_pool::acquire() {$/;"	f	class:blob_pool
acquire	src/fc/block_alloc.h	/^    T* acquire() {$/;"	f	struct:object_cache
acquire	src/fc/block_alloc.h	/^    T* acquire(Arg1 arg1) {$/;"	f	struct:object_cache
acquire	src/fc/block_alloc.h	/^    T* acquire(Arg1 arg1, Arg2 arg2) {$/;"	f	struct:object_cache
acquire	src/fc/block_alloc.h	/^    T* acquire(Arg1 arg1, Arg2 arg2, Arg3 arg3) {$/;"	f	struct:object_cache
acquire	src/fc/block_alloc.h	/^    T* acquire(Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4) {$/;"	f	struct:object_cache
acquire	src/fc/block_alloc.h	/^    void* acquire() {$/;"	f	struct:block_pool
acquire	src/fc/mem_block.cpp	/^size_t block_bits::acquire(size_t chip_count) {$/;"	f	class:memory_block::block_bits
acquire	src/fc/mem_block.cpp	/^void* block::acquire(size_t chip_size, size_t chip_count, size_t \/*block_size*\/) {$/;"	f	class:memory_block::block
acquire	src/fc/mem_block.cpp	/^void* block_list::acquire(size_t chip_size, size_t chip_count, size_t block_size)$/;"	f	class:memory_block::block_list
acquire	src/sm/histo.cpp	/^histoid_t::acquire(const stid_t& s) $/;"	f	class:histoid_t
acquire	src/sm/lock_x.h	/^        rc_t acquire() {$/;"	f	struct:lock_head_t::my_lock
acquire	src/sm/page.cpp	/^page_s::space_t::acquire(int amt, int slot_bytes, xct_t* xd,$/;"	f	class:page_s::space_t
acquire	src/sthread/mcs_lock.h	/^	void* acquire(ext_qnode* me) {$/;"	f	struct:mcs_lock
acquire	src/sthread/mcs_lock.h	/^	void* acquire(qnode* me) {$/;"	f	struct:mcs_lock
acquire	src/sthread/sthread.h	/^        void acquire() { _lock->acquire_read(); }$/;"	f	struct:occ_rwlock::occ_rlock
acquire	src/sthread/sthread.h	/^        void acquire() { _lock->acquire_write(); }$/;"	f	struct:occ_rwlock::occ_wlock
acquire	src/sthread/sthread.h	/^    void acquire() {$/;"	f	struct:tatas_lock
acquire	src/sthread/sthread.h	/^    void* acquire(ext_qnode* me) {$/;"	f	struct:w_pthread_lock_t
acquire_1thread_log	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t acquire_1thread_log;$/;"	v
acquire_1thread_log_depth	src/sm/xct.cpp	/^check_compensated_op_nesting::acquire_1thread_log_depth(xct_t* xd, int dflt)$/;"	f	class:check_compensated_op_nesting
acquire_1thread_log_depth	src/sm/xct.h	/^    int  acquire_1thread_log_depth() const { return  0; }$/;"	f	class:xct_t
acquire_1thread_log_depth	src/sm/xct.h	/^    int  acquire_1thread_log_depth() const { return $/;"	f	class:xct_t
acquire_1thread_log_mutex	src/sm/xct.cpp	/^xct_t::acquire_1thread_log_mutex() $/;"	f	class:xct_t
acquire_1thread_xct_mutex	src/sm/xct.cpp	/^xct_t::acquire_1thread_xct_mutex() const \/\/ default: true$/;"	f	class:xct_t
acquire_block	src/fc/mem_block.cpp	/^block* block_list::acquire_block(size_t block_size)$/;"	f	class:memory_block::block_list
acquire_block	src/fc/mem_block.h	/^block* block_pool::acquire_block(block_list* owner) {$/;"	f	class:memory_block::block_pool
acquire_lock	src/sm/lock_core.cpp	/^lock_core_m::acquire_lock($/;"	f	class:lock_core_m
acquire_mutex	src/sm/vol.cpp	/^vol_t::acquire_mutex(vol_t::lock_state* _me, bool for_write) $/;"	f	class:vol_t
acquire_read	src/sthread/no-inline.cpp	/^void occ_rwlock::acquire_read()$/;"	f	class:occ_rwlock
acquire_read	src/sthread/srwlock.cpp	/^void mcs_rwlock::acquire_read() $/;"	f	class:mcs_rwlock
acquire_write	src/sthread/no-inline.cpp	/^void occ_rwlock::acquire_write()$/;"	f	class:occ_rwlock
acquire_write	src/sthread/srwlock.cpp	/^void mcs_rwlock::acquire_write() $/;"	f	class:mcs_rwlock
activate	src/sm/bf.cpp	/^bf_cleaner_thread_t::activate(bool force)$/;"	f	class:bf_cleaner_thread_t
activate_background_flushing	src/sm/bf.cpp	/^bf_m::activate_background_flushing(vid_t *v)$/;"	f	class:bf_m
activate_reservations	src/sm/log.cpp	/^log_m::activate_reservations()$/;"	f	class:log_m
activate_reservations	src/sm/log_core.cpp	/^log_core::activate_reservations() $/;"	f	class:log_core
add	src/sm/dir.cpp	/^sdesc_t* sdesc_cache_t::add(const stid_t& stid, const sinfo_s& sinfo)$/;"	f	class:sdesc_cache_t
add	src/sm/sm_du_stats.cpp	/^btree_int_stats_t::add(const btree_int_stats_t& stats)$/;"	f	class:btree_int_stats_t
add	src/sm/sm_du_stats.cpp	/^btree_lf_stats_t::add(const btree_lf_stats_t& stats)$/;"	f	class:btree_lf_stats_t
add	src/sm/sm_du_stats.cpp	/^btree_stats_t::add(const btree_stats_t& stats)$/;"	f	class:btree_stats_t
add	src/sm/sm_du_stats.cpp	/^file_pg_stats_t::add(const file_pg_stats_t& stats)$/;"	f	class:file_pg_stats_t
add	src/sm/sm_du_stats.cpp	/^file_stats_t::add(const file_stats_t& stats)$/;"	f	class:file_stats_t
add	src/sm/sm_du_stats.cpp	/^lgdata_pg_stats_t::add(const lgdata_pg_stats_t& stats)$/;"	f	class:lgdata_pg_stats_t
add	src/sm/sm_du_stats.cpp	/^lgindex_pg_stats_t::add(const lgindex_pg_stats_t& stats)$/;"	f	class:lgindex_pg_stats_t
add	src/sm/sm_du_stats.cpp	/^rtree_stats_t::add(const rtree_stats_t& stats)$/;"	f	class:rtree_stats_t
add	src/sm/sm_du_stats.cpp	/^sm_du_stats_t::add(const sm_du_stats_t& stats)$/;"	f	class:sm_du_stats_t
add	src/sm/sm_du_stats.cpp	/^volume_hdr_stats_t::add(const volume_hdr_stats_t& stats)$/;"	f	class:volume_hdr_stats_t
add	src/sm/sm_du_stats.cpp	/^volume_map_stats_t::add(const volume_map_stats_t& stats)$/;"	f	class:volume_map_stats_t
add	src/sm/sm_io.cpp	/^    void add(extnum_t e) {$/;"	f	class:autoerase_t
addPartition	src/sm/key_ranges_map.cpp	/^w_rc_t key_ranges_map::addPartition(const cvec_t& key, lpid_t& newRoot)$/;"	f	class:key_ranges_map
add_16	src/atomic_ops/atomic_ops/sparc/atomic.s	/^add_16:$/;"	l
add_16	src/atomic_ops/atomic_ops/sparcv9/atomic.s	/^add_16:$/;"	l
add_32	src/atomic_ops/atomic_ops/sparc/atomic.s	/^add_32:$/;"	l
add_32	src/atomic_ops/atomic_ops/sparcv9/atomic.s	/^add_32:$/;"	l
add_64	src/atomic_ops/atomic_ops/sparc/atomic.s	/^add_64:$/;"	l
add_64	src/atomic_ops/atomic_ops/sparcv9/atomic.s	/^add_64:$/;"	l
add_8	src/atomic_ops/atomic_ops/sparc/atomic.s	/^add_8:$/;"	l
add_8	src/atomic_ops/atomic_ops/sparcv9/atomic.s	/^add_8:$/;"	l
add_bucket	src/sm/data_access_histogram.cpp	/^w_rc_t data_access_histogram::add_bucket(const lpid_t& \/*root*\/, int \/*granularity*\/)$/;"	f	class:data_access_histogram
add_class_level	src/common/option.cpp	/^w_rc_t option_group_t::add_class_level(const char* name)$/;"	f	class:option_group_t
add_default_partition	src/sm/ranges_p.cpp	/^rc_t ranges_p::add_default_partition(cvec_t& key, const lpid_t& root) $/;"	f	class:ranges_p
add_dependent	src/sm/xct.cpp	/^xct_t::add_dependent(xct_dependent_t* dependent)$/;"	f	class:xct_t
add_dummy_run	src/sm/newsort.cpp	/^    void             add_dummy_run() {$/;"	f	class:tape_t
add_from_TL_stats	src/sm/smthread.cpp	/^smthread_t::add_from_TL_stats(sm_stats_info_t &w) const$/;"	f	class:smthread_t
add_from_global_stats	src/sm/smstats.cpp	/^smlevel_0::add_from_global_stats(sm_stats_info_t &to)$/;"	f	class:smlevel_0
add_option	src/common/option.cpp	/^w_rc_t option_group_t::add_option($/;"	f	class:option_group_t
add_partition	src/sm/ranges_p.cpp	/^rc_t ranges_m::add_partition(const lpid_t& pid, cvec_t& key, const lpid_t& root) $/;"	f	class:ranges_m
add_partition	src/sm/ranges_p.cpp	/^rc_t ranges_p::add_partition(cvec_t& key, const lpid_t& root) $/;"	f	class:ranges_p
add_partition	src/sm/smindex.cpp	/^rc_t ss_m::add_partition(stid_t stid, const vec_t& key, const bool bIgnoreLatches, $/;"	f	class:ss_m
add_partition_init	src/sm/smindex.cpp	/^rc_t ss_m::add_partition_init(stid_t stid, const vec_t& key, const bool bIgnoreLatches)$/;"	f	class:ss_m
add_run_first	src/sm/newsort.cpp	/^    void             add_run_first(const shpid_t& p, const slotid_t& s) {$/;"	f	class:tape_t
add_run_last	src/sm/newsort.cpp	/^    void             add_run_last(const shpid_t& p, const slotid_t& s) {$/;"	f	class:tape_t
add_store_utilization	src/sm/sdesc.h	/^    void                add_store_utilization(histoid_t *h) {$/;"	f	class:sdesc_t
add_sub_bucket	src/sm/data_access_histogram.cpp	/^w_rc_t data_access_histogram::add_sub_bucket(const lpid_t& \/*root*\/, const Key& \/*key*\/, int \/*amount*\/)$/;"	f	class:data_access_histogram
add_to_global_stats	src/sm/smstats.cpp	/^smlevel_0::add_to_global_stats(const sm_stats_info_t &from)$/;"	f	class:smlevel_0
add_to_stk	src/sm/rtree.cpp	/^rtld_stk_t::add_to_stk($/;"	f	class:rtld_stk_t
add_trace_info	src/fc/w_error.cpp	/^w_error_t::add_trace_info($/;"	f	class:w_error_t
add_trace_info	src/fc/w_rc.cpp	/^w_rc_t::add_trace_info($/;"	f	class:w_rc_t
addcleanupvars	src/sm/smsh/lib/smsh.tcl	/^proc addcleanupvars { theVars } {$/;"	p
addr	src/fc/w_bitmap.h	/^w_bitmap_t::addr() $/;"	f	class:w_bitmap_t
addr	src/fc/w_bitmap.h	/^w_bitmap_t::addr() const$/;"	f	class:w_bitmap_t
advance	src/common/lsn.h	/^    lsn_t& advance(int amt) { _data += amt; return *this; }$/;"	f	class:lsn_t
after_run	src/sm/smthread.cpp	/^void smthread_t::after_run() { \/\/ called before destructor$/;"	f	class:smthread_t
after_run	src/sthread/sthread.h	/^    virtual void        after_run() { }$/;"	f	class:sthread_t
aix_post_process_depfile	config/depcomp	/^aix_post_process_depfile ()$/;"	f
ajunk	src/common/tests/vectors.cpp	/^const char *ajunk = "Ajunk";$/;"	v
align	src/fc/w_defines.h	/^T align(T sz) { return alignon(sz, ALIGNON); }$/;"	f
align_bufsize	src/sthread/io.cpp	/^void sthread_t::align_bufsize(size_t size, long W_IFDEBUG1(system_page_size),$/;"	f	class:sthread_t
aligned	src/sm/smsh/sort_funcs.h	/^    bool    aligned;$/;"	m	struct:metadata
aligned_cast	src/fc/w_defines.h	/^static inline T* aligned_cast(char const* ptr) $/;"	f
alignon	src/fc/w_defines.h	/^T alignon(T p, size_t a) {$/;"	f
all	src/fc/w_debug.h	/^        int            all(void) { return (mask & _all) ? 1 : 0; }$/;"	f	class:w_debug
all_ex	src/common/tests/latch1.cpp	/^    typedef enum { all_sh, one_ex, all_ex } testKind;$/;"	e	enum:latch_thread_t::__anon10	file:
all_fingerprints	src/sm/smthread.cpp	/^static atomic_thread_map_t all_fingerprints;$/;"	v	file:
all_sh	src/common/tests/latch1.cpp	/^    typedef enum { all_sh, one_ex, all_ex } testKind;$/;"	e	enum:latch_thread_t::__anon10	file:
alloc	src/fc/atomic_class_pool.h	/^    void* alloc() {$/;"	f	struct:atomic_preallocated_pool
alloc	src/fc/w_temp_alloc.cpp	/^w_temp_alloc::ptr sentinel_pool::alloc(size_t sz) {$/;"	f	class:sentinel_pool
alloc	src/fc/w_temp_alloc.cpp	/^w_temp_alloc::ptr w_temp_alloc::alloc(size_t sz) { return tpool->alloc(sz); }$/;"	f	class:w_temp_alloc
alloc	src/fc/w_temp_alloc.cpp	/^w_temp_alloc::ptr w_temp_alloc::dynarray_pool::alloc(size_t sz) {$/;"	f	class:w_temp_alloc::dynarray_pool
alloc	src/fc/w_temp_alloc.cpp	/^w_temp_alloc::ptr w_temp_alloc::fixed_pool::alloc(size_t sz) {$/;"	f	class:w_temp_alloc::fixed_pool
alloc	src/sm/sort.h	/^    void* alloc(w_base_t::uint4_t size) {$/;"	f	class:chunk_mgr_t
alloc_a_file_page	src/sm/sm_io.cpp	/^io_m::alloc_a_file_page($/;"	f	class:io_m
alloc_a_page	src/sm/sm_io.cpp	/^io_m::alloc_a_page($/;"	f	class:io_m
alloc_ext_cnt	src/sm/sm_du_stats.h	/^    base_stat_t        alloc_ext_cnt;        \/* allocated extents $/;"	m	struct:volume_hdr_stats_t
alloc_exts	src/sm/vol.cpp	/^vol_t::alloc_exts($/;"	f	class:vol_t
alloc_file_page_filter_t	src/sm/file.cpp	/^NORET alloc_file_page_filter_t::alloc_file_page_filter_t($/;"	f	class:alloc_file_page_filter_t
alloc_file_page_filter_t	src/sm/file.cpp	/^class alloc_file_page_filter_t : public alloc_page_filter_t {$/;"	c	file:
alloc_file_page_log	src/sm/logdef_gen.cpp	/^	alloc_file_page_log (logrec_t*)   {};$/;"	f	class:alloc_file_page_log
alloc_file_page_log	src/sm/logdef_gen.cpp	/^    class alloc_file_page_log : public logrec_t {$/;"	c	file:
alloc_file_page_log	src/sm/logrec.cpp	/^alloc_file_page_log::alloc_file_page_log(const lpid_t& p)$/;"	f	class:alloc_file_page_log
alloc_page_filter_t	src/sm/page.h	/^    NORET          alloc_page_filter_t() {}$/;"	f	class:alloc_page_filter_t
alloc_page_filter_t	src/sm/page.h	/^class alloc_page_filter_t : public smlevel_0 {$/;"	c
alloc_page_filter_yes_t	src/sm/page.h	/^class alloc_page_filter_yes_t: public alloc_page_filter_t {$/;"	c
alloc_page_group	src/sm/sm_io.cpp	/^io_m::alloc_page_group($/;"	f	class:io_m
alloc_page_in_ext	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t alloc_page_in_ext;$/;"	v
alloc_pages_in_ext	src/sm/vol.cpp	/^vol_t::alloc_pages_in_ext($/;"	f	class:vol_t
alloc_pages_in_ext_log	src/sm/logdef_gen.cpp	/^	alloc_pages_in_ext_log (logrec_t*)   {};$/;"	f	class:alloc_pages_in_ext_log
alloc_pages_in_ext_log	src/sm/logdef_gen.cpp	/^    class alloc_pages_in_ext_log : public logrec_t {$/;"	c	file:
alloc_pages_in_ext_log	src/sm/logrec.cpp	/^alloc_pages_in_ext_log::alloc_pages_in_ext_log(const page_p& page, snum_t snum, extnum_t ext, const Pmap& pmap)$/;"	f	class:alloc_pages_in_ext_log
alloc_pg_cnt	src/sm/sm_du_stats.cpp	/^btree_stats_t::alloc_pg_cnt() const$/;"	f	class:btree_stats_t
alloc_pg_cnt	src/sm/sm_du_stats.cpp	/^file_stats_t::alloc_pg_cnt() const$/;"	f	class:file_stats_t
alloc_pg_cnt	src/sm/sm_du_stats.cpp	/^volume_map_stats_t::alloc_pg_cnt() const$/;"	f	class:volume_map_stats_t
alloc_runs	src/sm/newsort.cpp	/^tape_t::alloc_runs(int m)$/;"	f	class:tape_t
alloc_sdesc_cache	src/sm/smthread.cpp	/^smthread_t::alloc_sdesc_cache()$/;"	f	class:smthread_t
alloc_store	src/sm/vol.cpp	/^vol_t::alloc_store(snum_t snum, int eff, store_flag_t flags)$/;"	f	class:vol_t
allocaN	src/fc/w_defines.h	/^class allocaN {$/;"	c
allocate	src/fc/w_temp_alloc.h	/^        T* allocate(size_t n, void* =0) {$/;"	f	struct:w_temp_alloc::allocator
allocate	src/sm/log_core.cpp	/^	insert_info* allocate(bool be_patient=true) $/;"	f	struct:log_core::insert_info_array
allocator	src/fc/w_temp_alloc.h	/^        allocator() { }$/;"	f	struct:w_temp_alloc::allocator
allocator	src/fc/w_temp_alloc.h	/^        allocator(allocator const &) { }$/;"	f	struct:w_temp_alloc::allocator
allocator	src/fc/w_temp_alloc.h	/^        allocator(allocator<U> const &) { }$/;"	f	struct:w_temp_alloc::allocator
allocator	src/fc/w_temp_alloc.h	/^    struct allocator {$/;"	s	struct:w_temp_alloc
allocfunc	src/sm/newsort.cpp	/^   void* allocfunc(smsize_t l) { $/;"	f	class:cpp_char_factory_t
allocfunc	src/sm/newsort.cpp	/^   void* allocfunc(smsize_t) { $/;"	f	class:no_factory_t
allocfunc	src/sm/newsort.cpp	/^limited_space::allocfunc(smsize_t l) {$/;"	f	class:limited_space
allocfunc	src/sm/smsh/sort_funcs3.cpp	/^   void* allocfunc(smsize_t number) {$/;"	f	class:boxfactory
allocset	src/common/regcomp.cpp	/^allocset(struct parse *p)$/;"	f	file:
allow_remote_command	src/sm/smsh/tcl_thread.h	/^    static bool                 allow_remote_command;$/;"	m	class:tcl_thread_t
alltests	src/fc/tests/errlogtest.cpp	/^alltests(ErrLog *e, void *arg)$/;"	f
alt	src/fc/tests/rand.cpp	/^randalt alt;$/;"	v
am__CONFIG_DISTCLEAN_FILES	Makefile	/^am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\$/;"	m
am__DEPENDENCIES_1	src/sm/smsh/Makefile	/^am__DEPENDENCIES_1 =$/;"	m
am__aclocal_m4_deps	Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	config/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	src/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	src/atomic_ops/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	src/atomic_ops/asm_linkage/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	src/atomic_ops/asm_linkage/usr/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	src/atomic_ops/asm_linkage/usr/src/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	src/atomic_ops/atomic_ops/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	src/atomic_ops/atomic_ops/amd64/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	src/atomic_ops/atomic_ops/i386/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	src/atomic_ops/atomic_ops/sparc/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	src/atomic_ops/ia32/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	src/atomic_ops/ia32/sys/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	src/atomic_ops/intel/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	src/atomic_ops/intel/ia32/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	src/atomic_ops/intel/ia32/sys/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	src/atomic_ops/intel/sys/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	src/atomic_ops/sparc/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	src/atomic_ops/sparc/sys/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	src/common/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	src/common/tests/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	src/fc/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	src/fc/tests/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	src/sm/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	src/sm/smsh/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	src/sm/smsh/lib/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	src/sm/smsh/scripts/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	src/sm/tests/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	src/sthread/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	src/sthread/tests/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_pthread.m4 \\$/;"	m
am__aclocal_m4_deps	tools/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_pthread.m4 \\$/;"	m
am__append_10	Makefile	/^am__append_10 = $/;"	m
am__append_10	config/Makefile	/^am__append_10 = $/;"	m
am__append_10	src/Makefile	/^am__append_10 = $/;"	m
am__append_10	src/atomic_ops/Makefile	/^am__append_10 = $/;"	m
am__append_10	src/atomic_ops/asm_linkage/Makefile	/^am__append_10 = $/;"	m
am__append_10	src/atomic_ops/asm_linkage/usr/Makefile	/^am__append_10 = $/;"	m
am__append_10	src/atomic_ops/asm_linkage/usr/src/Makefile	/^am__append_10 = $/;"	m
am__append_10	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^am__append_10 = $/;"	m
am__append_10	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^am__append_10 = $/;"	m
am__append_10	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^am__append_10 = $/;"	m
am__append_10	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__append_10 = $/;"	m
am__append_10	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__append_10 = $/;"	m
am__append_10	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^am__append_10 = $/;"	m
am__append_10	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__append_10 = $/;"	m
am__append_10	src/atomic_ops/atomic_ops/Makefile	/^am__append_10 = $/;"	m
am__append_10	src/atomic_ops/atomic_ops/amd64/Makefile	/^am__append_10 = $/;"	m
am__append_10	src/atomic_ops/atomic_ops/i386/Makefile	/^am__append_10 = $/;"	m
am__append_10	src/atomic_ops/atomic_ops/sparc/Makefile	/^am__append_10 = $/;"	m
am__append_10	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^am__append_10 = $/;"	m
am__append_10	src/atomic_ops/ia32/Makefile	/^am__append_10 = $/;"	m
am__append_10	src/atomic_ops/ia32/sys/Makefile	/^am__append_10 = $/;"	m
am__append_10	src/atomic_ops/intel/Makefile	/^am__append_10 = $/;"	m
am__append_10	src/atomic_ops/intel/ia32/Makefile	/^am__append_10 = $/;"	m
am__append_10	src/atomic_ops/intel/ia32/sys/Makefile	/^am__append_10 = $/;"	m
am__append_10	src/atomic_ops/intel/sys/Makefile	/^am__append_10 = $/;"	m
am__append_10	src/atomic_ops/sparc/Makefile	/^am__append_10 = $/;"	m
am__append_10	src/atomic_ops/sparc/sys/Makefile	/^am__append_10 = $/;"	m
am__append_10	src/common/Makefile	/^am__append_10 = $/;"	m
am__append_10	src/common/tests/Makefile	/^am__append_10 = $/;"	m
am__append_10	src/fc/Makefile	/^am__append_10 = $/;"	m
am__append_10	src/fc/tests/Makefile	/^am__append_10 = $/;"	m
am__append_10	src/sm/Makefile	/^am__append_10 = $/;"	m
am__append_10	src/sm/smsh/Makefile	/^am__append_10 = $/;"	m
am__append_10	src/sm/smsh/lib/Makefile	/^am__append_10 = $/;"	m
am__append_10	src/sm/smsh/scripts/Makefile	/^am__append_10 = $/;"	m
am__append_10	src/sm/tests/Makefile	/^am__append_10 = $/;"	m
am__append_10	src/sthread/Makefile	/^am__append_10 = $/;"	m
am__append_10	src/sthread/tests/Makefile	/^am__append_10 = $/;"	m
am__append_10	tools/Makefile	/^am__append_10 = $/;"	m
am__append_13	Makefile	/^am__append_13 = -Woverloaded-virtual $/;"	m
am__append_13	config/Makefile	/^am__append_13 = -Woverloaded-virtual $/;"	m
am__append_13	src/Makefile	/^am__append_13 = -Woverloaded-virtual $/;"	m
am__append_13	src/atomic_ops/Makefile	/^am__append_13 = -Woverloaded-virtual $/;"	m
am__append_13	src/atomic_ops/asm_linkage/Makefile	/^am__append_13 = -Woverloaded-virtual $/;"	m
am__append_13	src/atomic_ops/asm_linkage/usr/Makefile	/^am__append_13 = -Woverloaded-virtual $/;"	m
am__append_13	src/atomic_ops/asm_linkage/usr/src/Makefile	/^am__append_13 = -Woverloaded-virtual $/;"	m
am__append_13	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^am__append_13 = -Woverloaded-virtual $/;"	m
am__append_13	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^am__append_13 = -Woverloaded-virtual $/;"	m
am__append_13	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^am__append_13 = -Woverloaded-virtual $/;"	m
am__append_13	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__append_13 = -Woverloaded-virtual $/;"	m
am__append_13	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__append_13 = -Woverloaded-virtual $/;"	m
am__append_13	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^am__append_13 = -Woverloaded-virtual $/;"	m
am__append_13	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__append_13 = -Woverloaded-virtual $/;"	m
am__append_13	src/atomic_ops/atomic_ops/Makefile	/^am__append_13 = -Woverloaded-virtual $/;"	m
am__append_13	src/atomic_ops/atomic_ops/amd64/Makefile	/^am__append_13 = -Woverloaded-virtual $/;"	m
am__append_13	src/atomic_ops/atomic_ops/i386/Makefile	/^am__append_13 = -Woverloaded-virtual $/;"	m
am__append_13	src/atomic_ops/atomic_ops/sparc/Makefile	/^am__append_13 = -Woverloaded-virtual $/;"	m
am__append_13	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^am__append_13 = -Woverloaded-virtual $/;"	m
am__append_13	src/atomic_ops/ia32/Makefile	/^am__append_13 = -Woverloaded-virtual $/;"	m
am__append_13	src/atomic_ops/ia32/sys/Makefile	/^am__append_13 = -Woverloaded-virtual $/;"	m
am__append_13	src/atomic_ops/intel/Makefile	/^am__append_13 = -Woverloaded-virtual $/;"	m
am__append_13	src/atomic_ops/intel/ia32/Makefile	/^am__append_13 = -Woverloaded-virtual $/;"	m
am__append_13	src/atomic_ops/intel/ia32/sys/Makefile	/^am__append_13 = -Woverloaded-virtual $/;"	m
am__append_13	src/atomic_ops/intel/sys/Makefile	/^am__append_13 = -Woverloaded-virtual $/;"	m
am__append_13	src/atomic_ops/sparc/Makefile	/^am__append_13 = -Woverloaded-virtual $/;"	m
am__append_13	src/atomic_ops/sparc/sys/Makefile	/^am__append_13 = -Woverloaded-virtual $/;"	m
am__append_13	src/common/Makefile	/^am__append_13 = -Woverloaded-virtual $/;"	m
am__append_13	src/common/tests/Makefile	/^am__append_13 = -Woverloaded-virtual $/;"	m
am__append_13	src/fc/Makefile	/^am__append_13 = -Woverloaded-virtual $/;"	m
am__append_13	src/fc/tests/Makefile	/^am__append_13 = -Woverloaded-virtual $/;"	m
am__append_13	src/sm/Makefile	/^am__append_13 = -Woverloaded-virtual $/;"	m
am__append_13	src/sm/smsh/Makefile	/^am__append_13 = -Woverloaded-virtual $/;"	m
am__append_13	src/sm/smsh/lib/Makefile	/^am__append_13 = -Woverloaded-virtual $/;"	m
am__append_13	src/sm/smsh/scripts/Makefile	/^am__append_13 = -Woverloaded-virtual $/;"	m
am__append_13	src/sm/tests/Makefile	/^am__append_13 = -Woverloaded-virtual $/;"	m
am__append_13	src/sthread/Makefile	/^am__append_13 = -Woverloaded-virtual $/;"	m
am__append_13	src/sthread/tests/Makefile	/^am__append_13 = -Woverloaded-virtual $/;"	m
am__append_13	tools/Makefile	/^am__append_13 = -Woverloaded-virtual $/;"	m
am__append_14	Makefile	/^am__append_14 = $(SYMBOLSFLAGS)$/;"	m
am__append_14	config/Makefile	/^am__append_14 = $(SYMBOLSFLAGS)$/;"	m
am__append_14	src/Makefile	/^am__append_14 = $(SYMBOLSFLAGS)$/;"	m
am__append_14	src/atomic_ops/Makefile	/^am__append_14 = $(SYMBOLSFLAGS)$/;"	m
am__append_14	src/atomic_ops/asm_linkage/Makefile	/^am__append_14 = $(SYMBOLSFLAGS)$/;"	m
am__append_14	src/atomic_ops/asm_linkage/usr/Makefile	/^am__append_14 = $(SYMBOLSFLAGS)$/;"	m
am__append_14	src/atomic_ops/asm_linkage/usr/src/Makefile	/^am__append_14 = $(SYMBOLSFLAGS)$/;"	m
am__append_14	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^am__append_14 = $(SYMBOLSFLAGS)$/;"	m
am__append_14	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^am__append_14 = $(SYMBOLSFLAGS)$/;"	m
am__append_14	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^am__append_14 = $(SYMBOLSFLAGS)$/;"	m
am__append_14	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__append_14 = $(SYMBOLSFLAGS)$/;"	m
am__append_14	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__append_14 = $(SYMBOLSFLAGS)$/;"	m
am__append_14	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^am__append_14 = $(SYMBOLSFLAGS)$/;"	m
am__append_14	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__append_14 = $(SYMBOLSFLAGS)$/;"	m
am__append_14	src/atomic_ops/atomic_ops/Makefile	/^am__append_14 = $(SYMBOLSFLAGS)$/;"	m
am__append_14	src/atomic_ops/atomic_ops/amd64/Makefile	/^am__append_14 = $(SYMBOLSFLAGS)$/;"	m
am__append_14	src/atomic_ops/atomic_ops/i386/Makefile	/^am__append_14 = $(SYMBOLSFLAGS)$/;"	m
am__append_14	src/atomic_ops/atomic_ops/sparc/Makefile	/^am__append_14 = $(SYMBOLSFLAGS)$/;"	m
am__append_14	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^am__append_14 = $(SYMBOLSFLAGS)$/;"	m
am__append_14	src/atomic_ops/ia32/Makefile	/^am__append_14 = $(SYMBOLSFLAGS)$/;"	m
am__append_14	src/atomic_ops/ia32/sys/Makefile	/^am__append_14 = $(SYMBOLSFLAGS)$/;"	m
am__append_14	src/atomic_ops/intel/Makefile	/^am__append_14 = $(SYMBOLSFLAGS)$/;"	m
am__append_14	src/atomic_ops/intel/ia32/Makefile	/^am__append_14 = $(SYMBOLSFLAGS)$/;"	m
am__append_14	src/atomic_ops/intel/ia32/sys/Makefile	/^am__append_14 = $(SYMBOLSFLAGS)$/;"	m
am__append_14	src/atomic_ops/intel/sys/Makefile	/^am__append_14 = $(SYMBOLSFLAGS)$/;"	m
am__append_14	src/atomic_ops/sparc/Makefile	/^am__append_14 = $(SYMBOLSFLAGS)$/;"	m
am__append_14	src/atomic_ops/sparc/sys/Makefile	/^am__append_14 = $(SYMBOLSFLAGS)$/;"	m
am__append_14	src/common/Makefile	/^am__append_14 = $(SYMBOLSFLAGS)$/;"	m
am__append_14	src/common/tests/Makefile	/^am__append_14 = $(SYMBOLSFLAGS)$/;"	m
am__append_14	src/fc/Makefile	/^am__append_14 = $(SYMBOLSFLAGS)$/;"	m
am__append_14	src/fc/tests/Makefile	/^am__append_14 = $(SYMBOLSFLAGS)$/;"	m
am__append_14	src/sm/Makefile	/^am__append_14 = $(SYMBOLSFLAGS)$/;"	m
am__append_14	src/sm/smsh/Makefile	/^am__append_14 = $(SYMBOLSFLAGS)$/;"	m
am__append_14	src/sm/smsh/lib/Makefile	/^am__append_14 = $(SYMBOLSFLAGS)$/;"	m
am__append_14	src/sm/smsh/scripts/Makefile	/^am__append_14 = $(SYMBOLSFLAGS)$/;"	m
am__append_14	src/sm/tests/Makefile	/^am__append_14 = $(SYMBOLSFLAGS)$/;"	m
am__append_14	src/sthread/Makefile	/^am__append_14 = $(SYMBOLSFLAGS)$/;"	m
am__append_14	src/sthread/tests/Makefile	/^am__append_14 = $(SYMBOLSFLAGS)$/;"	m
am__append_14	tools/Makefile	/^am__append_14 = $(SYMBOLSFLAGS)$/;"	m
am__append_2	Makefile	/^am__append_2 = -Wextra -Wall -Wno-long-long$/;"	m
am__append_2	config/Makefile	/^am__append_2 = -Wextra -Wall -Wno-long-long$/;"	m
am__append_2	src/Makefile	/^am__append_2 = -Wextra -Wall -Wno-long-long$/;"	m
am__append_2	src/atomic_ops/Makefile	/^am__append_2 = -Wextra -Wall -Wno-long-long$/;"	m
am__append_2	src/atomic_ops/asm_linkage/Makefile	/^am__append_2 = -Wextra -Wall -Wno-long-long$/;"	m
am__append_2	src/atomic_ops/asm_linkage/usr/Makefile	/^am__append_2 = -Wextra -Wall -Wno-long-long$/;"	m
am__append_2	src/atomic_ops/asm_linkage/usr/src/Makefile	/^am__append_2 = -Wextra -Wall -Wno-long-long$/;"	m
am__append_2	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^am__append_2 = -Wextra -Wall -Wno-long-long$/;"	m
am__append_2	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^am__append_2 = -Wextra -Wall -Wno-long-long$/;"	m
am__append_2	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^am__append_2 = -Wextra -Wall -Wno-long-long$/;"	m
am__append_2	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__append_2 = -Wextra -Wall -Wno-long-long$/;"	m
am__append_2	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__append_2 = -Wextra -Wall -Wno-long-long$/;"	m
am__append_2	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^am__append_2 = -Wextra -Wall -Wno-long-long$/;"	m
am__append_2	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__append_2 = -Wextra -Wall -Wno-long-long$/;"	m
am__append_2	src/atomic_ops/atomic_ops/Makefile	/^am__append_2 = -Wextra -Wall -Wno-long-long$/;"	m
am__append_2	src/atomic_ops/atomic_ops/amd64/Makefile	/^am__append_2 = -Wextra -Wall -Wno-long-long$/;"	m
am__append_2	src/atomic_ops/atomic_ops/i386/Makefile	/^am__append_2 = -Wextra -Wall -Wno-long-long$/;"	m
am__append_2	src/atomic_ops/atomic_ops/sparc/Makefile	/^am__append_2 = -Wextra -Wall -Wno-long-long$/;"	m
am__append_2	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^am__append_2 = -Wextra -Wall -Wno-long-long$/;"	m
am__append_2	src/atomic_ops/ia32/Makefile	/^am__append_2 = -Wextra -Wall -Wno-long-long$/;"	m
am__append_2	src/atomic_ops/ia32/sys/Makefile	/^am__append_2 = -Wextra -Wall -Wno-long-long$/;"	m
am__append_2	src/atomic_ops/intel/Makefile	/^am__append_2 = -Wextra -Wall -Wno-long-long$/;"	m
am__append_2	src/atomic_ops/intel/ia32/Makefile	/^am__append_2 = -Wextra -Wall -Wno-long-long$/;"	m
am__append_2	src/atomic_ops/intel/ia32/sys/Makefile	/^am__append_2 = -Wextra -Wall -Wno-long-long$/;"	m
am__append_2	src/atomic_ops/intel/sys/Makefile	/^am__append_2 = -Wextra -Wall -Wno-long-long$/;"	m
am__append_2	src/atomic_ops/sparc/Makefile	/^am__append_2 = -Wextra -Wall -Wno-long-long$/;"	m
am__append_2	src/atomic_ops/sparc/sys/Makefile	/^am__append_2 = -Wextra -Wall -Wno-long-long$/;"	m
am__append_2	src/common/Makefile	/^am__append_2 = -Wextra -Wall -Wno-long-long$/;"	m
am__append_2	src/common/tests/Makefile	/^am__append_2 = -Wextra -Wall -Wno-long-long$/;"	m
am__append_2	src/fc/Makefile	/^am__append_2 = -Wextra -Wall -Wno-long-long$/;"	m
am__append_2	src/fc/tests/Makefile	/^am__append_2 = -Wextra -Wall -Wno-long-long$/;"	m
am__append_2	src/sm/Makefile	/^am__append_2 = -Wextra -Wall -Wno-long-long$/;"	m
am__append_2	src/sm/smsh/Makefile	/^am__append_2 = -Wextra -Wall -Wno-long-long$/;"	m
am__append_2	src/sm/smsh/lib/Makefile	/^am__append_2 = -Wextra -Wall -Wno-long-long$/;"	m
am__append_2	src/sm/smsh/scripts/Makefile	/^am__append_2 = -Wextra -Wall -Wno-long-long$/;"	m
am__append_2	src/sm/tests/Makefile	/^am__append_2 = -Wextra -Wall -Wno-long-long$/;"	m
am__append_2	src/sthread/Makefile	/^am__append_2 = -Wextra -Wall -Wno-long-long$/;"	m
am__append_2	src/sthread/tests/Makefile	/^am__append_2 = -Wextra -Wall -Wno-long-long$/;"	m
am__append_2	tools/Makefile	/^am__append_2 = -Wextra -Wall -Wno-long-long$/;"	m
am__append_4	Makefile	/^am__append_4 = -D__GNUC_AS__ -D_ASM$/;"	m
am__append_4	config/Makefile	/^am__append_4 = -D__GNUC_AS__ -D_ASM$/;"	m
am__append_4	src/Makefile	/^am__append_4 = -D__GNUC_AS__ -D_ASM$/;"	m
am__append_4	src/atomic_ops/Makefile	/^am__append_4 = -D__GNUC_AS__ -D_ASM$/;"	m
am__append_4	src/atomic_ops/asm_linkage/Makefile	/^am__append_4 = -D__GNUC_AS__ -D_ASM$/;"	m
am__append_4	src/atomic_ops/asm_linkage/usr/Makefile	/^am__append_4 = -D__GNUC_AS__ -D_ASM$/;"	m
am__append_4	src/atomic_ops/asm_linkage/usr/src/Makefile	/^am__append_4 = -D__GNUC_AS__ -D_ASM$/;"	m
am__append_4	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^am__append_4 = -D__GNUC_AS__ -D_ASM$/;"	m
am__append_4	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^am__append_4 = -D__GNUC_AS__ -D_ASM$/;"	m
am__append_4	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^am__append_4 = -D__GNUC_AS__ -D_ASM$/;"	m
am__append_4	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__append_4 = -D__GNUC_AS__ -D_ASM$/;"	m
am__append_4	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__append_4 = -D__GNUC_AS__ -D_ASM$/;"	m
am__append_4	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^am__append_4 = -D__GNUC_AS__ -D_ASM$/;"	m
am__append_4	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__append_4 = -D__GNUC_AS__ -D_ASM$/;"	m
am__append_4	src/atomic_ops/atomic_ops/Makefile	/^am__append_4 = -D__GNUC_AS__ -D_ASM$/;"	m
am__append_4	src/atomic_ops/atomic_ops/amd64/Makefile	/^am__append_4 = -D__GNUC_AS__ -D_ASM$/;"	m
am__append_4	src/atomic_ops/atomic_ops/i386/Makefile	/^am__append_4 = -D__GNUC_AS__ -D_ASM$/;"	m
am__append_4	src/atomic_ops/atomic_ops/sparc/Makefile	/^am__append_4 = -D__GNUC_AS__ -D_ASM$/;"	m
am__append_4	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^am__append_4 = -D__GNUC_AS__ -D_ASM$/;"	m
am__append_4	src/atomic_ops/ia32/Makefile	/^am__append_4 = -D__GNUC_AS__ -D_ASM$/;"	m
am__append_4	src/atomic_ops/ia32/sys/Makefile	/^am__append_4 = -D__GNUC_AS__ -D_ASM$/;"	m
am__append_4	src/atomic_ops/intel/Makefile	/^am__append_4 = -D__GNUC_AS__ -D_ASM$/;"	m
am__append_4	src/atomic_ops/intel/ia32/Makefile	/^am__append_4 = -D__GNUC_AS__ -D_ASM$/;"	m
am__append_4	src/atomic_ops/intel/ia32/sys/Makefile	/^am__append_4 = -D__GNUC_AS__ -D_ASM$/;"	m
am__append_4	src/atomic_ops/intel/sys/Makefile	/^am__append_4 = -D__GNUC_AS__ -D_ASM$/;"	m
am__append_4	src/atomic_ops/sparc/Makefile	/^am__append_4 = -D__GNUC_AS__ -D_ASM$/;"	m
am__append_4	src/atomic_ops/sparc/sys/Makefile	/^am__append_4 = -D__GNUC_AS__ -D_ASM$/;"	m
am__append_4	src/common/Makefile	/^am__append_4 = -D__GNUC_AS__ -D_ASM$/;"	m
am__append_4	src/common/tests/Makefile	/^am__append_4 = -D__GNUC_AS__ -D_ASM$/;"	m
am__append_4	src/fc/Makefile	/^am__append_4 = -D__GNUC_AS__ -D_ASM$/;"	m
am__append_4	src/fc/tests/Makefile	/^am__append_4 = -D__GNUC_AS__ -D_ASM$/;"	m
am__append_4	src/sm/Makefile	/^am__append_4 = -D__GNUC_AS__ -D_ASM$/;"	m
am__append_4	src/sm/smsh/Makefile	/^am__append_4 = -D__GNUC_AS__ -D_ASM$/;"	m
am__append_4	src/sm/smsh/lib/Makefile	/^am__append_4 = -D__GNUC_AS__ -D_ASM$/;"	m
am__append_4	src/sm/smsh/scripts/Makefile	/^am__append_4 = -D__GNUC_AS__ -D_ASM$/;"	m
am__append_4	src/sm/tests/Makefile	/^am__append_4 = -D__GNUC_AS__ -D_ASM$/;"	m
am__append_4	src/sthread/Makefile	/^am__append_4 = -D__GNUC_AS__ -D_ASM$/;"	m
am__append_4	src/sthread/tests/Makefile	/^am__append_4 = -D__GNUC_AS__ -D_ASM$/;"	m
am__append_4	tools/Makefile	/^am__append_4 = -D__GNUC_AS__ -D_ASM$/;"	m
am__append_6	Makefile	/^am__append_6 = $(TARGET_FLAGS) $/;"	m
am__append_6	config/Makefile	/^am__append_6 = $(TARGET_FLAGS) $/;"	m
am__append_6	src/Makefile	/^am__append_6 = $(TARGET_FLAGS) $/;"	m
am__append_6	src/atomic_ops/Makefile	/^am__append_6 = $(TARGET_FLAGS) $/;"	m
am__append_6	src/atomic_ops/asm_linkage/Makefile	/^am__append_6 = $(TARGET_FLAGS) $/;"	m
am__append_6	src/atomic_ops/asm_linkage/usr/Makefile	/^am__append_6 = $(TARGET_FLAGS) $/;"	m
am__append_6	src/atomic_ops/asm_linkage/usr/src/Makefile	/^am__append_6 = $(TARGET_FLAGS) $/;"	m
am__append_6	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^am__append_6 = $(TARGET_FLAGS) $/;"	m
am__append_6	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^am__append_6 = $(TARGET_FLAGS) $/;"	m
am__append_6	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^am__append_6 = $(TARGET_FLAGS) $/;"	m
am__append_6	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__append_6 = $(TARGET_FLAGS) $/;"	m
am__append_6	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__append_6 = $(TARGET_FLAGS) $/;"	m
am__append_6	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^am__append_6 = $(TARGET_FLAGS) $/;"	m
am__append_6	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__append_6 = $(TARGET_FLAGS) $/;"	m
am__append_6	src/atomic_ops/atomic_ops/Makefile	/^am__append_6 = $(TARGET_FLAGS) $/;"	m
am__append_6	src/atomic_ops/atomic_ops/amd64/Makefile	/^am__append_6 = $(TARGET_FLAGS) $/;"	m
am__append_6	src/atomic_ops/atomic_ops/i386/Makefile	/^am__append_6 = $(TARGET_FLAGS) $/;"	m
am__append_6	src/atomic_ops/atomic_ops/sparc/Makefile	/^am__append_6 = $(TARGET_FLAGS) $/;"	m
am__append_6	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^am__append_6 = $(TARGET_FLAGS) $/;"	m
am__append_6	src/atomic_ops/ia32/Makefile	/^am__append_6 = $(TARGET_FLAGS) $/;"	m
am__append_6	src/atomic_ops/ia32/sys/Makefile	/^am__append_6 = $(TARGET_FLAGS) $/;"	m
am__append_6	src/atomic_ops/intel/Makefile	/^am__append_6 = $(TARGET_FLAGS) $/;"	m
am__append_6	src/atomic_ops/intel/ia32/Makefile	/^am__append_6 = $(TARGET_FLAGS) $/;"	m
am__append_6	src/atomic_ops/intel/ia32/sys/Makefile	/^am__append_6 = $(TARGET_FLAGS) $/;"	m
am__append_6	src/atomic_ops/intel/sys/Makefile	/^am__append_6 = $(TARGET_FLAGS) $/;"	m
am__append_6	src/atomic_ops/sparc/Makefile	/^am__append_6 = $(TARGET_FLAGS) $/;"	m
am__append_6	src/atomic_ops/sparc/sys/Makefile	/^am__append_6 = $(TARGET_FLAGS) $/;"	m
am__append_6	src/common/Makefile	/^am__append_6 = $(TARGET_FLAGS) $/;"	m
am__append_6	src/common/tests/Makefile	/^am__append_6 = $(TARGET_FLAGS) $/;"	m
am__append_6	src/fc/Makefile	/^am__append_6 = $(TARGET_FLAGS) $/;"	m
am__append_6	src/fc/tests/Makefile	/^am__append_6 = $(TARGET_FLAGS) $/;"	m
am__append_6	src/sm/Makefile	/^am__append_6 = $(TARGET_FLAGS) $/;"	m
am__append_6	src/sm/smsh/Makefile	/^am__append_6 = $(TARGET_FLAGS) $/;"	m
am__append_6	src/sm/smsh/lib/Makefile	/^am__append_6 = $(TARGET_FLAGS) $/;"	m
am__append_6	src/sm/smsh/scripts/Makefile	/^am__append_6 = $(TARGET_FLAGS) $/;"	m
am__append_6	src/sm/tests/Makefile	/^am__append_6 = $(TARGET_FLAGS) $/;"	m
am__append_6	src/sthread/Makefile	/^am__append_6 = $(TARGET_FLAGS) $/;"	m
am__append_6	src/sthread/tests/Makefile	/^am__append_6 = $(TARGET_FLAGS) $/;"	m
am__append_6	tools/Makefile	/^am__append_6 = $(TARGET_FLAGS) $/;"	m
am__append_9	Makefile	/^am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings$/;"	m
am__append_9	config/Makefile	/^am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings$/;"	m
am__append_9	src/Makefile	/^am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings$/;"	m
am__append_9	src/atomic_ops/Makefile	/^am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings$/;"	m
am__append_9	src/atomic_ops/asm_linkage/Makefile	/^am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings$/;"	m
am__append_9	src/atomic_ops/asm_linkage/usr/Makefile	/^am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings$/;"	m
am__append_9	src/atomic_ops/asm_linkage/usr/src/Makefile	/^am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings$/;"	m
am__append_9	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings$/;"	m
am__append_9	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings$/;"	m
am__append_9	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings$/;"	m
am__append_9	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings$/;"	m
am__append_9	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings$/;"	m
am__append_9	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings$/;"	m
am__append_9	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings$/;"	m
am__append_9	src/atomic_ops/atomic_ops/Makefile	/^am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings$/;"	m
am__append_9	src/atomic_ops/atomic_ops/amd64/Makefile	/^am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings$/;"	m
am__append_9	src/atomic_ops/atomic_ops/i386/Makefile	/^am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings$/;"	m
am__append_9	src/atomic_ops/atomic_ops/sparc/Makefile	/^am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings$/;"	m
am__append_9	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings$/;"	m
am__append_9	src/atomic_ops/ia32/Makefile	/^am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings$/;"	m
am__append_9	src/atomic_ops/ia32/sys/Makefile	/^am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings$/;"	m
am__append_9	src/atomic_ops/intel/Makefile	/^am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings$/;"	m
am__append_9	src/atomic_ops/intel/ia32/Makefile	/^am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings$/;"	m
am__append_9	src/atomic_ops/intel/ia32/sys/Makefile	/^am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings$/;"	m
am__append_9	src/atomic_ops/intel/sys/Makefile	/^am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings$/;"	m
am__append_9	src/atomic_ops/sparc/Makefile	/^am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings$/;"	m
am__append_9	src/atomic_ops/sparc/sys/Makefile	/^am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings$/;"	m
am__append_9	src/common/Makefile	/^am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings$/;"	m
am__append_9	src/common/tests/Makefile	/^am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings$/;"	m
am__append_9	src/fc/Makefile	/^am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings$/;"	m
am__append_9	src/fc/tests/Makefile	/^am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings$/;"	m
am__append_9	src/sm/Makefile	/^am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings$/;"	m
am__append_9	src/sm/smsh/Makefile	/^am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings$/;"	m
am__append_9	src/sm/smsh/lib/Makefile	/^am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings$/;"	m
am__append_9	src/sm/smsh/scripts/Makefile	/^am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings$/;"	m
am__append_9	src/sm/tests/Makefile	/^am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings$/;"	m
am__append_9	src/sthread/Makefile	/^am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings$/;"	m
am__append_9	src/sthread/tests/Makefile	/^am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings$/;"	m
am__append_9	tools/Makefile	/^am__append_9 = -Wall -fno-strict-aliasing -Wextra -Wpointer-arith -Wwrite-strings$/;"	m
am__base_list	config/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/atomic_ops/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/atomic_ops/ia32/sys/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/atomic_ops/intel/ia32/sys/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/atomic_ops/intel/sys/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/atomic_ops/sparc/sys/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/common/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/common/tests/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/fc/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/fc/tests/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/sm/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/sm/smsh/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/sm/tests/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/sthread/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/sthread/tests/Makefile	/^am__base_list = \\$/;"	m
am__can_run_installinfo	Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	config/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/atomic_ops/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/atomic_ops/asm_linkage/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/atomic_ops/asm_linkage/usr/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/atomic_ops/asm_linkage/usr/src/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/atomic_ops/atomic_ops/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/atomic_ops/atomic_ops/amd64/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/atomic_ops/atomic_ops/i386/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/atomic_ops/atomic_ops/sparc/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/atomic_ops/ia32/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/atomic_ops/ia32/sys/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/atomic_ops/intel/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/atomic_ops/intel/ia32/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/atomic_ops/intel/ia32/sys/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/atomic_ops/intel/sys/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/atomic_ops/sparc/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/atomic_ops/sparc/sys/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/common/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/common/tests/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/fc/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/fc/tests/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/sm/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/sm/smsh/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/sm/smsh/lib/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/sm/smsh/scripts/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/sm/tests/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/sthread/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/sthread/tests/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	tools/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__cd	Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	config/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/atomic_ops/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/atomic_ops/asm_linkage/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/atomic_ops/asm_linkage/usr/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/atomic_ops/asm_linkage/usr/src/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/atomic_ops/atomic_ops/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/atomic_ops/atomic_ops/amd64/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/atomic_ops/atomic_ops/i386/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/atomic_ops/atomic_ops/sparc/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/atomic_ops/ia32/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/atomic_ops/ia32/sys/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/atomic_ops/intel/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/atomic_ops/intel/ia32/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/atomic_ops/intel/ia32/sys/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/atomic_ops/intel/sys/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/atomic_ops/sparc/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/atomic_ops/sparc/sys/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/common/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/common/tests/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/fc/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/fc/tests/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/sm/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/sm/smsh/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/sm/smsh/lib/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/sm/smsh/scripts/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/sm/tests/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/sthread/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/sthread/tests/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	tools/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__check_pre	src/common/tests/Makefile	/^am__check_pre = \\$/;"	m
am__check_pre	src/fc/tests/Makefile	/^am__check_pre = \\$/;"	m
am__check_pre	src/sm/smsh/Makefile	/^am__check_pre = \\$/;"	m
am__check_pre	src/sm/tests/Makefile	/^am__check_pre = \\$/;"	m
am__check_pre	src/sthread/tests/Makefile	/^am__check_pre = \\$/;"	m
am__common_driver_flags	src/common/tests/Makefile	/^am__common_driver_flags = \\$/;"	m
am__common_driver_flags	src/fc/tests/Makefile	/^am__common_driver_flags = \\$/;"	m
am__common_driver_flags	src/sm/smsh/Makefile	/^am__common_driver_flags = \\$/;"	m
am__common_driver_flags	src/sm/tests/Makefile	/^am__common_driver_flags = \\$/;"	m
am__common_driver_flags	src/sthread/tests/Makefile	/^am__common_driver_flags = \\$/;"	m
am__configure_deps	Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	config/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/atomic_ops/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/atomic_ops/asm_linkage/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/atomic_ops/asm_linkage/usr/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/atomic_ops/asm_linkage/usr/src/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/atomic_ops/atomic_ops/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/atomic_ops/atomic_ops/amd64/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/atomic_ops/atomic_ops/i386/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/atomic_ops/atomic_ops/sparc/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/atomic_ops/ia32/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/atomic_ops/ia32/sys/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/atomic_ops/intel/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/atomic_ops/intel/ia32/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/atomic_ops/intel/ia32/sys/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/atomic_ops/intel/sys/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/atomic_ops/sparc/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/atomic_ops/sparc/sys/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/common/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/common/tests/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/fc/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/fc/tests/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/sm/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/sm/smsh/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/sm/smsh/lib/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/sm/smsh/scripts/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/sm/tests/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/sthread/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/sthread/tests/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	tools/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__copy_in_global_log_rx	src/common/tests/Makefile	/^am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*$/;"	m
am__copy_in_global_log_rx	src/fc/tests/Makefile	/^am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*$/;"	m
am__copy_in_global_log_rx	src/sm/smsh/Makefile	/^am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*$/;"	m
am__copy_in_global_log_rx	src/sm/tests/Makefile	/^am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*$/;"	m
am__copy_in_global_log_rx	src/sthread/tests/Makefile	/^am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*$/;"	m
am__create_global_log	src/common/tests/Makefile	/^am__create_global_log = $(AWK) ' \\$/;"	m
am__create_global_log	src/fc/tests/Makefile	/^am__create_global_log = $(AWK) ' \\$/;"	m
am__create_global_log	src/sm/smsh/Makefile	/^am__create_global_log = $(AWK) ' \\$/;"	m
am__create_global_log	src/sm/tests/Makefile	/^am__create_global_log = $(AWK) ' \\$/;"	m
am__create_global_log	src/sthread/tests/Makefile	/^am__create_global_log = $(AWK) ' \\$/;"	m
am__define_uniq_tagged_files	Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	config/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/atomic_ops/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/atomic_ops/asm_linkage/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/atomic_ops/asm_linkage/usr/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/atomic_ops/asm_linkage/usr/src/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/atomic_ops/atomic_ops/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/atomic_ops/ia32/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/atomic_ops/ia32/sys/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/atomic_ops/intel/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/atomic_ops/intel/ia32/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/atomic_ops/intel/ia32/sys/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/atomic_ops/intel/sys/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/atomic_ops/sparc/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/atomic_ops/sparc/sys/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/common/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/common/tests/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/fc/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/fc/tests/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/sm/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/sm/smsh/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/sm/smsh/lib/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/sm/smsh/scripts/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/sm/tests/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/sthread/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/sthread/tests/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__depfiles_maybe	src/atomic_ops/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	src/common/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	src/common/tests/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	src/fc/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	src/fc/tests/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	src/sm/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	src/sm/smsh/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	src/sm/tests/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	src/sthread/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	src/sthread/tests/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__distuninstallcheck_listfiles	Makefile	/^am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \\$/;"	m
am__global_test_result_rx	src/common/tests/Makefile	/^am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*$/;"	m
am__global_test_result_rx	src/fc/tests/Makefile	/^am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*$/;"	m
am__global_test_result_rx	src/sm/smsh/Makefile	/^am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*$/;"	m
am__global_test_result_rx	src/sm/tests/Makefile	/^am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*$/;"	m
am__global_test_result_rx	src/sthread/tests/Makefile	/^am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*$/;"	m
am__include	Makefile	/^am__include = include$/;"	m
am__include	config/Makefile	/^am__include = include$/;"	m
am__include	src/Makefile	/^am__include = include$/;"	m
am__include	src/atomic_ops/Makefile	/^am__include = include$/;"	m
am__include	src/atomic_ops/asm_linkage/Makefile	/^am__include = include$/;"	m
am__include	src/atomic_ops/asm_linkage/usr/Makefile	/^am__include = include$/;"	m
am__include	src/atomic_ops/asm_linkage/usr/src/Makefile	/^am__include = include$/;"	m
am__include	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^am__include = include$/;"	m
am__include	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^am__include = include$/;"	m
am__include	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^am__include = include$/;"	m
am__include	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__include = include$/;"	m
am__include	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__include = include$/;"	m
am__include	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^am__include = include$/;"	m
am__include	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__include = include$/;"	m
am__include	src/atomic_ops/atomic_ops/Makefile	/^am__include = include$/;"	m
am__include	src/atomic_ops/atomic_ops/amd64/Makefile	/^am__include = include$/;"	m
am__include	src/atomic_ops/atomic_ops/i386/Makefile	/^am__include = include$/;"	m
am__include	src/atomic_ops/atomic_ops/sparc/Makefile	/^am__include = include$/;"	m
am__include	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^am__include = include$/;"	m
am__include	src/atomic_ops/ia32/Makefile	/^am__include = include$/;"	m
am__include	src/atomic_ops/ia32/sys/Makefile	/^am__include = include$/;"	m
am__include	src/atomic_ops/intel/Makefile	/^am__include = include$/;"	m
am__include	src/atomic_ops/intel/ia32/Makefile	/^am__include = include$/;"	m
am__include	src/atomic_ops/intel/ia32/sys/Makefile	/^am__include = include$/;"	m
am__include	src/atomic_ops/intel/sys/Makefile	/^am__include = include$/;"	m
am__include	src/atomic_ops/sparc/Makefile	/^am__include = include$/;"	m
am__include	src/atomic_ops/sparc/sys/Makefile	/^am__include = include$/;"	m
am__include	src/common/Makefile	/^am__include = include$/;"	m
am__include	src/common/tests/Makefile	/^am__include = include$/;"	m
am__include	src/fc/Makefile	/^am__include = include$/;"	m
am__include	src/fc/tests/Makefile	/^am__include = include$/;"	m
am__include	src/sm/Makefile	/^am__include = include$/;"	m
am__include	src/sm/smsh/Makefile	/^am__include = include$/;"	m
am__include	src/sm/smsh/lib/Makefile	/^am__include = include$/;"	m
am__include	src/sm/smsh/scripts/Makefile	/^am__include = include$/;"	m
am__include	src/sm/tests/Makefile	/^am__include = include$/;"	m
am__include	src/sthread/Makefile	/^am__include = include$/;"	m
am__include	src/sthread/tests/Makefile	/^am__include = include$/;"	m
am__include	tools/Makefile	/^am__include = include$/;"	m
am__include_HEADERS_DIST	src/atomic_ops/Makefile	/^am__include_HEADERS_DIST = atomic_ops.h atomic_ops_impl.h \\$/;"	m
am__install_max	config/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/atomic_ops/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/atomic_ops/ia32/sys/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/atomic_ops/intel/ia32/sys/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/atomic_ops/intel/sys/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/atomic_ops/sparc/sys/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/common/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/common/tests/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/fc/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/fc/tests/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/sm/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/sm/smsh/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/sm/tests/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/sthread/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/sthread/tests/Makefile	/^am__install_max = 40$/;"	m
am__installdirs	config/Makefile	/^am__installdirs = "$(DESTDIR)$(includedir)"$/;"	m
am__installdirs	src/atomic_ops/Makefile	/^am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"$/;"	m
am__installdirs	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__installdirs = "$(DESTDIR)$(includedir)"$/;"	m
am__installdirs	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__installdirs = "$(DESTDIR)$(includedir)"$/;"	m
am__installdirs	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__installdirs = "$(DESTDIR)$(includedir)"$/;"	m
am__installdirs	src/atomic_ops/ia32/sys/Makefile	/^am__installdirs = "$(DESTDIR)$(includedir)"$/;"	m
am__installdirs	src/atomic_ops/intel/ia32/sys/Makefile	/^am__installdirs = "$(DESTDIR)$(includedir)"$/;"	m
am__installdirs	src/atomic_ops/intel/sys/Makefile	/^am__installdirs = "$(DESTDIR)$(includedir)"$/;"	m
am__installdirs	src/atomic_ops/sparc/sys/Makefile	/^am__installdirs = "$(DESTDIR)$(includedir)"$/;"	m
am__installdirs	src/common/Makefile	/^am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"$/;"	m
am__installdirs	src/fc/Makefile	/^am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"$/;"	m
am__installdirs	src/sm/Makefile	/^am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"$/;"	m
am__installdirs	src/sm/smsh/Makefile	/^am__installdirs = "$(DESTDIR)$(includedir)"$/;"	m
am__installdirs	src/sthread/Makefile	/^am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"$/;"	m
am__is_gnu_make	Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	config/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/atomic_ops/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/atomic_ops/asm_linkage/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/atomic_ops/asm_linkage/usr/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/atomic_ops/asm_linkage/usr/src/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/atomic_ops/atomic_ops/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/atomic_ops/atomic_ops/amd64/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/atomic_ops/atomic_ops/i386/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/atomic_ops/atomic_ops/sparc/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/atomic_ops/ia32/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/atomic_ops/ia32/sys/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/atomic_ops/intel/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/atomic_ops/intel/ia32/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/atomic_ops/intel/ia32/sys/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/atomic_ops/intel/sys/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/atomic_ops/sparc/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/atomic_ops/sparc/sys/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/common/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/common/tests/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/fc/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/fc/tests/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/sm/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/sm/smsh/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/sm/smsh/lib/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/sm/smsh/scripts/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/sm/tests/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/sthread/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/sthread/tests/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	tools/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__leading_dot	Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	config/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/atomic_ops/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/atomic_ops/asm_linkage/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/atomic_ops/asm_linkage/usr/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/atomic_ops/asm_linkage/usr/src/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/atomic_ops/atomic_ops/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/atomic_ops/atomic_ops/amd64/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/atomic_ops/atomic_ops/i386/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/atomic_ops/atomic_ops/sparc/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/atomic_ops/ia32/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/atomic_ops/ia32/sys/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/atomic_ops/intel/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/atomic_ops/intel/ia32/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/atomic_ops/intel/ia32/sys/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/atomic_ops/intel/sys/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/atomic_ops/sparc/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/atomic_ops/sparc/sys/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/common/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/common/tests/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/fc/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/fc/tests/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/sm/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/sm/smsh/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/sm/smsh/lib/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/sm/smsh/scripts/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/sm/tests/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/sthread/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/sthread/tests/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	tools/Makefile	/^am__leading_dot = .$/;"	m
am__libatomic_ops_a_SOURCES_DIST	src/atomic_ops/Makefile	/^am__libatomic_ops_a_SOURCES_DIST = atomic_ops.S empty.cpp$/;"	m
am__list_recheck_tests	src/common/tests/Makefile	/^am__list_recheck_tests = $(AWK) '{ \\$/;"	m
am__list_recheck_tests	src/fc/tests/Makefile	/^am__list_recheck_tests = $(AWK) '{ \\$/;"	m
am__list_recheck_tests	src/sm/smsh/Makefile	/^am__list_recheck_tests = $(AWK) '{ \\$/;"	m
am__list_recheck_tests	src/sm/tests/Makefile	/^am__list_recheck_tests = $(AWK) '{ \\$/;"	m
am__list_recheck_tests	src/sthread/tests/Makefile	/^am__list_recheck_tests = $(AWK) '{ \\$/;"	m
am__make_dryrun	Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	config/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/atomic_ops/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/atomic_ops/asm_linkage/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/atomic_ops/asm_linkage/usr/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/atomic_ops/asm_linkage/usr/src/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/atomic_ops/atomic_ops/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/atomic_ops/atomic_ops/amd64/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/atomic_ops/atomic_ops/i386/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/atomic_ops/atomic_ops/sparc/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/atomic_ops/ia32/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/atomic_ops/ia32/sys/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/atomic_ops/intel/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/atomic_ops/intel/ia32/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/atomic_ops/intel/ia32/sys/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/atomic_ops/intel/sys/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/atomic_ops/sparc/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/atomic_ops/sparc/sys/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/common/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/common/tests/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/fc/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/fc/tests/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/sm/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/sm/smsh/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/sm/smsh/lib/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/sm/smsh/scripts/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/sm/tests/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/sthread/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/sthread/tests/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	tools/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	config/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/atomic_ops/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/atomic_ops/asm_linkage/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/atomic_ops/asm_linkage/usr/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/atomic_ops/asm_linkage/usr/src/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/atomic_ops/atomic_ops/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/atomic_ops/atomic_ops/amd64/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/atomic_ops/atomic_ops/i386/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/atomic_ops/atomic_ops/sparc/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/atomic_ops/ia32/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/atomic_ops/ia32/sys/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/atomic_ops/intel/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/atomic_ops/intel/ia32/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/atomic_ops/intel/ia32/sys/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/atomic_ops/intel/sys/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/atomic_ops/sparc/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/atomic_ops/sparc/sys/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/common/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/common/tests/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/fc/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/fc/tests/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/sm/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/sm/smsh/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/sm/smsh/lib/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/sm/smsh/scripts/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/sm/tests/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/sthread/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/sthread/tests/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	tools/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_running_with_option	Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	config/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/atomic_ops/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/atomic_ops/asm_linkage/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/atomic_ops/asm_linkage/usr/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/atomic_ops/asm_linkage/usr/src/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/atomic_ops/atomic_ops/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/atomic_ops/atomic_ops/amd64/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/atomic_ops/atomic_ops/i386/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/atomic_ops/atomic_ops/sparc/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/atomic_ops/ia32/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/atomic_ops/ia32/sys/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/atomic_ops/intel/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/atomic_ops/intel/ia32/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/atomic_ops/intel/ia32/sys/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/atomic_ops/intel/sys/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/atomic_ops/sparc/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/atomic_ops/sparc/sys/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/common/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/common/tests/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/fc/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/fc/tests/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/sm/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/sm/smsh/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/sm/smsh/lib/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/sm/smsh/scripts/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/sm/tests/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/sthread/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/sthread/tests/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	tools/Makefile	/^am__make_running_with_option = \\$/;"	m
am__mv	src/atomic_ops/Makefile	/^am__mv = mv -f$/;"	m
am__mv	src/common/Makefile	/^am__mv = mv -f$/;"	m
am__mv	src/common/tests/Makefile	/^am__mv = mv -f$/;"	m
am__mv	src/fc/Makefile	/^am__mv = mv -f$/;"	m
am__mv	src/fc/tests/Makefile	/^am__mv = mv -f$/;"	m
am__mv	src/sm/Makefile	/^am__mv = mv -f$/;"	m
am__mv	src/sm/smsh/Makefile	/^am__mv = mv -f$/;"	m
am__mv	src/sm/tests/Makefile	/^am__mv = mv -f$/;"	m
am__mv	src/sthread/Makefile	/^am__mv = mv -f$/;"	m
am__mv	src/sthread/tests/Makefile	/^am__mv = mv -f$/;"	m
am__nobase_list	config/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/atomic_ops/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/atomic_ops/ia32/sys/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/atomic_ops/intel/ia32/sys/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/atomic_ops/intel/sys/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/atomic_ops/sparc/sys/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/common/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/common/tests/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/fc/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/fc/tests/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/sm/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/sm/smsh/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/sm/tests/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/sthread/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/sthread/tests/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_strip	config/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/atomic_ops/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/atomic_ops/ia32/sys/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/atomic_ops/intel/ia32/sys/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/atomic_ops/intel/sys/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/atomic_ops/sparc/sys/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/common/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/common/tests/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/fc/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/fc/tests/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/sm/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/sm/smsh/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/sm/tests/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/sthread/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/sthread/tests/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip_setup	config/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/atomic_ops/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/atomic_ops/ia32/sys/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/atomic_ops/intel/ia32/sys/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/atomic_ops/intel/sys/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/atomic_ops/sparc/sys/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/common/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/common/tests/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/fc/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/fc/tests/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/sm/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/sm/smsh/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/sm/tests/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/sthread/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/sthread/tests/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__objects_1	src/atomic_ops/Makefile	/^am__objects_1 = empty.$(OBJEXT)$/;"	m
am__post_remove_distdir	Makefile	/^am__post_remove_distdir = $(am__remove_distdir)$/;"	m
am__quote	Makefile	/^am__quote = $/;"	m
am__quote	config/Makefile	/^am__quote = $/;"	m
am__quote	src/Makefile	/^am__quote = $/;"	m
am__quote	src/atomic_ops/Makefile	/^am__quote = $/;"	m
am__quote	src/atomic_ops/asm_linkage/Makefile	/^am__quote = $/;"	m
am__quote	src/atomic_ops/asm_linkage/usr/Makefile	/^am__quote = $/;"	m
am__quote	src/atomic_ops/asm_linkage/usr/src/Makefile	/^am__quote = $/;"	m
am__quote	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^am__quote = $/;"	m
am__quote	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^am__quote = $/;"	m
am__quote	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^am__quote = $/;"	m
am__quote	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__quote = $/;"	m
am__quote	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__quote = $/;"	m
am__quote	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^am__quote = $/;"	m
am__quote	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__quote = $/;"	m
am__quote	src/atomic_ops/atomic_ops/Makefile	/^am__quote = $/;"	m
am__quote	src/atomic_ops/atomic_ops/amd64/Makefile	/^am__quote = $/;"	m
am__quote	src/atomic_ops/atomic_ops/i386/Makefile	/^am__quote = $/;"	m
am__quote	src/atomic_ops/atomic_ops/sparc/Makefile	/^am__quote = $/;"	m
am__quote	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^am__quote = $/;"	m
am__quote	src/atomic_ops/ia32/Makefile	/^am__quote = $/;"	m
am__quote	src/atomic_ops/ia32/sys/Makefile	/^am__quote = $/;"	m
am__quote	src/atomic_ops/intel/Makefile	/^am__quote = $/;"	m
am__quote	src/atomic_ops/intel/ia32/Makefile	/^am__quote = $/;"	m
am__quote	src/atomic_ops/intel/ia32/sys/Makefile	/^am__quote = $/;"	m
am__quote	src/atomic_ops/intel/sys/Makefile	/^am__quote = $/;"	m
am__quote	src/atomic_ops/sparc/Makefile	/^am__quote = $/;"	m
am__quote	src/atomic_ops/sparc/sys/Makefile	/^am__quote = $/;"	m
am__quote	src/common/Makefile	/^am__quote = $/;"	m
am__quote	src/common/tests/Makefile	/^am__quote = $/;"	m
am__quote	src/fc/Makefile	/^am__quote = $/;"	m
am__quote	src/fc/tests/Makefile	/^am__quote = $/;"	m
am__quote	src/sm/Makefile	/^am__quote = $/;"	m
am__quote	src/sm/smsh/Makefile	/^am__quote = $/;"	m
am__quote	src/sm/smsh/lib/Makefile	/^am__quote = $/;"	m
am__quote	src/sm/smsh/scripts/Makefile	/^am__quote = $/;"	m
am__quote	src/sm/tests/Makefile	/^am__quote = $/;"	m
am__quote	src/sthread/Makefile	/^am__quote = $/;"	m
am__quote	src/sthread/tests/Makefile	/^am__quote = $/;"	m
am__quote	tools/Makefile	/^am__quote = $/;"	m
am__recheck_rx	src/common/tests/Makefile	/^am__recheck_rx = ^[ 	]*:recheck:[ 	]*$/;"	m
am__recheck_rx	src/fc/tests/Makefile	/^am__recheck_rx = ^[ 	]*:recheck:[ 	]*$/;"	m
am__recheck_rx	src/sm/smsh/Makefile	/^am__recheck_rx = ^[ 	]*:recheck:[ 	]*$/;"	m
am__recheck_rx	src/sm/tests/Makefile	/^am__recheck_rx = ^[ 	]*:recheck:[ 	]*$/;"	m
am__recheck_rx	src/sthread/tests/Makefile	/^am__recheck_rx = ^[ 	]*:recheck:[ 	]*$/;"	m
am__recursive_targets	Makefile	/^am__recursive_targets = \\$/;"	m
am__recursive_targets	src/Makefile	/^am__recursive_targets = \\$/;"	m
am__recursive_targets	src/atomic_ops/Makefile	/^am__recursive_targets = \\$/;"	m
am__recursive_targets	src/atomic_ops/asm_linkage/Makefile	/^am__recursive_targets = \\$/;"	m
am__recursive_targets	src/atomic_ops/asm_linkage/usr/Makefile	/^am__recursive_targets = \\$/;"	m
am__recursive_targets	src/atomic_ops/asm_linkage/usr/src/Makefile	/^am__recursive_targets = \\$/;"	m
am__recursive_targets	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^am__recursive_targets = \\$/;"	m
am__recursive_targets	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^am__recursive_targets = \\$/;"	m
am__recursive_targets	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^am__recursive_targets = \\$/;"	m
am__recursive_targets	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^am__recursive_targets = \\$/;"	m
am__recursive_targets	src/atomic_ops/atomic_ops/Makefile	/^am__recursive_targets = \\$/;"	m
am__recursive_targets	src/atomic_ops/ia32/Makefile	/^am__recursive_targets = \\$/;"	m
am__recursive_targets	src/atomic_ops/intel/Makefile	/^am__recursive_targets = \\$/;"	m
am__recursive_targets	src/atomic_ops/intel/ia32/Makefile	/^am__recursive_targets = \\$/;"	m
am__recursive_targets	src/atomic_ops/sparc/Makefile	/^am__recursive_targets = \\$/;"	m
am__recursive_targets	src/common/Makefile	/^am__recursive_targets = \\$/;"	m
am__recursive_targets	src/fc/Makefile	/^am__recursive_targets = \\$/;"	m
am__recursive_targets	src/sm/Makefile	/^am__recursive_targets = \\$/;"	m
am__recursive_targets	src/sm/smsh/Makefile	/^am__recursive_targets = \\$/;"	m
am__recursive_targets	src/sm/smsh/lib/Makefile	/^am__recursive_targets = \\$/;"	m
am__recursive_targets	src/sm/smsh/scripts/Makefile	/^am__recursive_targets = \\$/;"	m
am__recursive_targets	src/sthread/Makefile	/^am__recursive_targets = \\$/;"	m
am__relativize	Makefile	/^am__relativize = \\$/;"	m
am__relativize	src/Makefile	/^am__relativize = \\$/;"	m
am__relativize	src/atomic_ops/Makefile	/^am__relativize = \\$/;"	m
am__relativize	src/atomic_ops/asm_linkage/Makefile	/^am__relativize = \\$/;"	m
am__relativize	src/atomic_ops/asm_linkage/usr/Makefile	/^am__relativize = \\$/;"	m
am__relativize	src/atomic_ops/asm_linkage/usr/src/Makefile	/^am__relativize = \\$/;"	m
am__relativize	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^am__relativize = \\$/;"	m
am__relativize	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^am__relativize = \\$/;"	m
am__relativize	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^am__relativize = \\$/;"	m
am__relativize	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^am__relativize = \\$/;"	m
am__relativize	src/atomic_ops/atomic_ops/Makefile	/^am__relativize = \\$/;"	m
am__relativize	src/atomic_ops/ia32/Makefile	/^am__relativize = \\$/;"	m
am__relativize	src/atomic_ops/intel/Makefile	/^am__relativize = \\$/;"	m
am__relativize	src/atomic_ops/intel/ia32/Makefile	/^am__relativize = \\$/;"	m
am__relativize	src/atomic_ops/sparc/Makefile	/^am__relativize = \\$/;"	m
am__relativize	src/common/Makefile	/^am__relativize = \\$/;"	m
am__relativize	src/fc/Makefile	/^am__relativize = \\$/;"	m
am__relativize	src/sm/Makefile	/^am__relativize = \\$/;"	m
am__relativize	src/sm/smsh/Makefile	/^am__relativize = \\$/;"	m
am__relativize	src/sm/smsh/lib/Makefile	/^am__relativize = \\$/;"	m
am__relativize	src/sm/smsh/scripts/Makefile	/^am__relativize = \\$/;"	m
am__relativize	src/sthread/Makefile	/^am__relativize = \\$/;"	m
am__remove_distdir	Makefile	/^am__remove_distdir = \\$/;"	m
am__rst_title	src/common/tests/Makefile	/^am__rst_title = { sed 's\/.*\/   &   \/;h;s\/.\/=\/g;p;x;s\/ *$$\/\/;p;g' && echo; }$/;"	m
am__rst_title	src/fc/tests/Makefile	/^am__rst_title = { sed 's\/.*\/   &   \/;h;s\/.\/=\/g;p;x;s\/ *$$\/\/;p;g' && echo; }$/;"	m
am__rst_title	src/sm/smsh/Makefile	/^am__rst_title = { sed 's\/.*\/   &   \/;h;s\/.\/=\/g;p;x;s\/ *$$\/\/;p;g' && echo; }$/;"	m
am__rst_title	src/sm/tests/Makefile	/^am__rst_title = { sed 's\/.*\/   &   \/;h;s\/.\/=\/g;p;x;s\/ *$$\/\/;p;g' && echo; }$/;"	m
am__rst_title	src/sthread/tests/Makefile	/^am__rst_title = { sed 's\/.*\/   &   \/;h;s\/.\/=\/g;p;x;s\/ *$$\/\/;p;g' && echo; }$/;"	m
am__set_TESTS_bases	src/common/tests/Makefile	/^am__set_TESTS_bases = \\$/;"	m
am__set_TESTS_bases	src/fc/tests/Makefile	/^am__set_TESTS_bases = \\$/;"	m
am__set_TESTS_bases	src/sm/smsh/Makefile	/^am__set_TESTS_bases = \\$/;"	m
am__set_TESTS_bases	src/sm/tests/Makefile	/^am__set_TESTS_bases = \\$/;"	m
am__set_TESTS_bases	src/sthread/tests/Makefile	/^am__set_TESTS_bases = \\$/;"	m
am__set_b	src/common/tests/Makefile	/^am__set_b = \\$/;"	m
am__set_b	src/fc/tests/Makefile	/^am__set_b = \\$/;"	m
am__set_b	src/sm/smsh/Makefile	/^am__set_b = \\$/;"	m
am__set_b	src/sm/tests/Makefile	/^am__set_b = \\$/;"	m
am__set_b	src/sthread/tests/Makefile	/^am__set_b = \\$/;"	m
am__sh_e_setup	src/common/tests/Makefile	/^am__sh_e_setup = case $$- in *e*) set +e;; esac$/;"	m
am__sh_e_setup	src/fc/tests/Makefile	/^am__sh_e_setup = case $$- in *e*) set +e;; esac$/;"	m
am__sh_e_setup	src/sm/smsh/Makefile	/^am__sh_e_setup = case $$- in *e*) set +e;; esac$/;"	m
am__sh_e_setup	src/sm/tests/Makefile	/^am__sh_e_setup = case $$- in *e*) set +e;; esac$/;"	m
am__sh_e_setup	src/sthread/tests/Makefile	/^am__sh_e_setup = case $$- in *e*) set +e;; esac$/;"	m
am__strip_dir	config/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/atomic_ops/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/atomic_ops/ia32/sys/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/atomic_ops/intel/ia32/sys/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/atomic_ops/intel/sys/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/atomic_ops/sparc/sys/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/common/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/common/tests/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/fc/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/fc/tests/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/sm/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/sm/smsh/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/sm/tests/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/sthread/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/sthread/tests/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__tagged_files	Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	config/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \\$/;"	m
am__tagged_files	src/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/atomic_ops/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/atomic_ops/asm_linkage/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/atomic_ops/asm_linkage/usr/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/atomic_ops/asm_linkage/usr/src/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/atomic_ops/atomic_ops/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/atomic_ops/atomic_ops/amd64/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/atomic_ops/atomic_ops/i386/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/atomic_ops/atomic_ops/sparc/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/atomic_ops/ia32/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/atomic_ops/ia32/sys/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/atomic_ops/intel/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/atomic_ops/intel/ia32/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/atomic_ops/intel/ia32/sys/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/atomic_ops/intel/sys/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/atomic_ops/sparc/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/atomic_ops/sparc/sys/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/common/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/common/tests/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/fc/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/fc/tests/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/sm/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/sm/smsh/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/sm/smsh/lib/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/sm/smsh/scripts/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/sm/tests/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/sthread/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/sthread/tests/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	tools/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tar	Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	config/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/atomic_ops/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/atomic_ops/asm_linkage/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/atomic_ops/asm_linkage/usr/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/atomic_ops/asm_linkage/usr/src/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/atomic_ops/atomic_ops/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/atomic_ops/atomic_ops/amd64/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/atomic_ops/atomic_ops/i386/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/atomic_ops/atomic_ops/sparc/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/atomic_ops/ia32/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/atomic_ops/ia32/sys/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/atomic_ops/intel/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/atomic_ops/intel/ia32/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/atomic_ops/intel/ia32/sys/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/atomic_ops/intel/sys/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/atomic_ops/sparc/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/atomic_ops/sparc/sys/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/common/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/common/tests/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/fc/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/fc/tests/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/sm/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/sm/smsh/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/sm/smsh/lib/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/sm/smsh/scripts/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/sm/tests/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/sthread/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/sthread/tests/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	tools/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__test_logs1	src/common/tests/Makefile	/^am__test_logs1 = $(TESTS:=.log)$/;"	m
am__test_logs1	src/fc/tests/Makefile	/^am__test_logs1 = $(TESTS:=.log)$/;"	m
am__test_logs1	src/sm/smsh/Makefile	/^am__test_logs1 = $(TESTS:=.log)$/;"	m
am__test_logs1	src/sm/tests/Makefile	/^am__test_logs1 = $(TESTS:=.log)$/;"	m
am__test_logs1	src/sthread/tests/Makefile	/^am__test_logs1 = $(TESTS:=.log)$/;"	m
am__test_logs2	src/common/tests/Makefile	/^am__test_logs2 = $(am__test_logs1:.log=.log)$/;"	m
am__test_logs2	src/fc/tests/Makefile	/^am__test_logs2 = $(am__test_logs1:.log=.log)$/;"	m
am__test_logs2	src/sm/smsh/Makefile	/^am__test_logs2 = $(am__test_logs1:.log=.log)$/;"	m
am__test_logs2	src/sm/tests/Makefile	/^am__test_logs2 = $(am__test_logs1:.log=.log)$/;"	m
am__test_logs2	src/sthread/tests/Makefile	/^am__test_logs2 = $(am__test_logs1:.log=.log)$/;"	m
am__tty_colors	src/common/tests/Makefile	/^am__tty_colors = { \\$/;"	m
am__tty_colors	src/fc/tests/Makefile	/^am__tty_colors = { \\$/;"	m
am__tty_colors	src/sm/smsh/Makefile	/^am__tty_colors = { \\$/;"	m
am__tty_colors	src/sm/tests/Makefile	/^am__tty_colors = { \\$/;"	m
am__tty_colors	src/sthread/tests/Makefile	/^am__tty_colors = { \\$/;"	m
am__tty_colors_dummy	src/common/tests/Makefile	/^am__tty_colors_dummy = \\$/;"	m
am__tty_colors_dummy	src/fc/tests/Makefile	/^am__tty_colors_dummy = \\$/;"	m
am__tty_colors_dummy	src/sm/smsh/Makefile	/^am__tty_colors_dummy = \\$/;"	m
am__tty_colors_dummy	src/sm/tests/Makefile	/^am__tty_colors_dummy = \\$/;"	m
am__tty_colors_dummy	src/sthread/tests/Makefile	/^am__tty_colors_dummy = \\$/;"	m
am__uninstall_files_from_dir	config/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	src/atomic_ops/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	src/atomic_ops/ia32/sys/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	src/atomic_ops/intel/ia32/sys/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	src/atomic_ops/intel/sys/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	src/atomic_ops/sparc/sys/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	src/common/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	src/common/tests/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	src/fc/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	src/fc/tests/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	src/sm/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	src/sm/smsh/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	src/sm/tests/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	src/sthread/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	src/sthread/tests/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uniquify_input	Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	config/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/atomic_ops/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/atomic_ops/asm_linkage/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/atomic_ops/asm_linkage/usr/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/atomic_ops/asm_linkage/usr/src/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/atomic_ops/atomic_ops/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/atomic_ops/ia32/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/atomic_ops/ia32/sys/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/atomic_ops/intel/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/atomic_ops/intel/ia32/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/atomic_ops/intel/ia32/sys/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/atomic_ops/intel/sys/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/atomic_ops/sparc/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/atomic_ops/sparc/sys/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/common/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/common/tests/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/fc/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/fc/tests/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/sm/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/sm/smsh/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/sm/smsh/lib/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/sm/smsh/scripts/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/sm/tests/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/sthread/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/sthread/tests/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__untar	Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	config/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/atomic_ops/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/atomic_ops/asm_linkage/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/atomic_ops/asm_linkage/usr/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/atomic_ops/asm_linkage/usr/src/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/atomic_ops/atomic_ops/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/atomic_ops/atomic_ops/amd64/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/atomic_ops/atomic_ops/i386/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/atomic_ops/atomic_ops/sparc/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/atomic_ops/ia32/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/atomic_ops/ia32/sys/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/atomic_ops/intel/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/atomic_ops/intel/ia32/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/atomic_ops/intel/ia32/sys/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/atomic_ops/intel/sys/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/atomic_ops/sparc/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/atomic_ops/sparc/sys/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/common/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/common/tests/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/fc/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/fc/tests/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/sm/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/sm/smsh/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/sm/smsh/lib/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/sm/smsh/scripts/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/sm/tests/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/sthread/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/sthread/tests/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	tools/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__v_AR_	src/atomic_ops/Makefile	/^am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_AR_	src/common/Makefile	/^am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_AR_	src/fc/Makefile	/^am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_AR_	src/sm/Makefile	/^am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_AR_	src/sthread/Makefile	/^am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_AR_0	src/atomic_ops/Makefile	/^am__v_AR_0 = @echo "  AR      " $@;$/;"	m
am__v_AR_0	src/common/Makefile	/^am__v_AR_0 = @echo "  AR      " $@;$/;"	m
am__v_AR_0	src/fc/Makefile	/^am__v_AR_0 = @echo "  AR      " $@;$/;"	m
am__v_AR_0	src/sm/Makefile	/^am__v_AR_0 = @echo "  AR      " $@;$/;"	m
am__v_AR_0	src/sthread/Makefile	/^am__v_AR_0 = @echo "  AR      " $@;$/;"	m
am__v_AR_1	src/atomic_ops/Makefile	/^am__v_AR_1 = $/;"	m
am__v_AR_1	src/common/Makefile	/^am__v_AR_1 = $/;"	m
am__v_AR_1	src/fc/Makefile	/^am__v_AR_1 = $/;"	m
am__v_AR_1	src/sm/Makefile	/^am__v_AR_1 = $/;"	m
am__v_AR_1	src/sthread/Makefile	/^am__v_AR_1 = $/;"	m
am__v_CCLD_	src/atomic_ops/Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_0	src/atomic_ops/Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_1	src/atomic_ops/Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CC_	src/atomic_ops/Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_0	src/atomic_ops/Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_1	src/atomic_ops/Makefile	/^am__v_CC_1 = $/;"	m
am__v_CPPAS_	src/atomic_ops/Makefile	/^am__v_CPPAS_ = $(am__v_CPPAS_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CPPAS_0	src/atomic_ops/Makefile	/^am__v_CPPAS_0 = @echo "  CPPAS   " $@;$/;"	m
am__v_CPPAS_1	src/atomic_ops/Makefile	/^am__v_CPPAS_1 = $/;"	m
am__v_CXXLD_	src/atomic_ops/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_	src/common/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_	src/common/tests/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_	src/fc/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_	src/fc/tests/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_	src/sm/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_	src/sm/smsh/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_	src/sm/tests/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_	src/sthread/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_	src/sthread/tests/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_0	src/atomic_ops/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_0	src/common/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_0	src/common/tests/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_0	src/fc/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_0	src/fc/tests/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_0	src/sm/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_0	src/sm/smsh/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_0	src/sm/tests/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_0	src/sthread/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_0	src/sthread/tests/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_1	src/atomic_ops/Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXXLD_1	src/common/Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXXLD_1	src/common/tests/Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXXLD_1	src/fc/Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXXLD_1	src/fc/tests/Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXXLD_1	src/sm/Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXXLD_1	src/sm/smsh/Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXXLD_1	src/sm/tests/Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXXLD_1	src/sthread/Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXXLD_1	src/sthread/tests/Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXX_	src/atomic_ops/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_	src/common/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_	src/common/tests/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_	src/fc/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_	src/fc/tests/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_	src/sm/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_	src/sm/smsh/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_	src/sm/tests/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_	src/sthread/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_	src/sthread/tests/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_0	src/atomic_ops/Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_0	src/common/Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_0	src/common/tests/Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_0	src/fc/Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_0	src/fc/tests/Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_0	src/sm/Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_0	src/sm/smsh/Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_0	src/sm/tests/Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_0	src/sthread/Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_0	src/sthread/tests/Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_1	src/atomic_ops/Makefile	/^am__v_CXX_1 = $/;"	m
am__v_CXX_1	src/common/Makefile	/^am__v_CXX_1 = $/;"	m
am__v_CXX_1	src/common/tests/Makefile	/^am__v_CXX_1 = $/;"	m
am__v_CXX_1	src/fc/Makefile	/^am__v_CXX_1 = $/;"	m
am__v_CXX_1	src/fc/tests/Makefile	/^am__v_CXX_1 = $/;"	m
am__v_CXX_1	src/sm/Makefile	/^am__v_CXX_1 = $/;"	m
am__v_CXX_1	src/sm/smsh/Makefile	/^am__v_CXX_1 = $/;"	m
am__v_CXX_1	src/sm/tests/Makefile	/^am__v_CXX_1 = $/;"	m
am__v_CXX_1	src/sthread/Makefile	/^am__v_CXX_1 = $/;"	m
am__v_CXX_1	src/sthread/tests/Makefile	/^am__v_CXX_1 = $/;"	m
am__v_GEN_	Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	config/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/atomic_ops/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/atomic_ops/asm_linkage/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/atomic_ops/asm_linkage/usr/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/atomic_ops/asm_linkage/usr/src/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/atomic_ops/atomic_ops/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/atomic_ops/atomic_ops/amd64/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/atomic_ops/atomic_ops/i386/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/atomic_ops/atomic_ops/sparc/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/atomic_ops/ia32/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/atomic_ops/ia32/sys/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/atomic_ops/intel/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/atomic_ops/intel/ia32/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/atomic_ops/intel/ia32/sys/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/atomic_ops/intel/sys/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/atomic_ops/sparc/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/atomic_ops/sparc/sys/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/common/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/common/tests/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/fc/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/fc/tests/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/sm/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/sm/smsh/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/sm/smsh/lib/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/sm/smsh/scripts/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/sm/tests/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/sthread/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/sthread/tests/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	tools/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_0	Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	config/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/atomic_ops/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/atomic_ops/asm_linkage/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/atomic_ops/asm_linkage/usr/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/atomic_ops/asm_linkage/usr/src/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/atomic_ops/atomic_ops/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/atomic_ops/atomic_ops/amd64/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/atomic_ops/atomic_ops/i386/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/atomic_ops/atomic_ops/sparc/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/atomic_ops/ia32/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/atomic_ops/ia32/sys/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/atomic_ops/intel/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/atomic_ops/intel/ia32/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/atomic_ops/intel/ia32/sys/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/atomic_ops/intel/sys/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/atomic_ops/sparc/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/atomic_ops/sparc/sys/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/common/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/common/tests/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/fc/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/fc/tests/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/sm/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/sm/smsh/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/sm/smsh/lib/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/sm/smsh/scripts/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/sm/tests/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/sthread/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/sthread/tests/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	tools/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_1	Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	config/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/atomic_ops/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/atomic_ops/asm_linkage/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/atomic_ops/asm_linkage/usr/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/atomic_ops/asm_linkage/usr/src/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/atomic_ops/atomic_ops/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/atomic_ops/atomic_ops/amd64/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/atomic_ops/atomic_ops/i386/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/atomic_ops/atomic_ops/sparc/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/atomic_ops/ia32/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/atomic_ops/ia32/sys/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/atomic_ops/intel/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/atomic_ops/intel/ia32/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/atomic_ops/intel/ia32/sys/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/atomic_ops/intel/sys/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/atomic_ops/sparc/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/atomic_ops/sparc/sys/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/common/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/common/tests/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/fc/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/fc/tests/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/sm/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/sm/smsh/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/sm/smsh/lib/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/sm/smsh/scripts/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/sm/tests/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/sthread/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/sthread/tests/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	tools/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_P_	Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	config/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/atomic_ops/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/atomic_ops/asm_linkage/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/atomic_ops/asm_linkage/usr/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/atomic_ops/asm_linkage/usr/src/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/atomic_ops/atomic_ops/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/atomic_ops/atomic_ops/amd64/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/atomic_ops/atomic_ops/i386/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/atomic_ops/atomic_ops/sparc/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/atomic_ops/ia32/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/atomic_ops/ia32/sys/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/atomic_ops/intel/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/atomic_ops/intel/ia32/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/atomic_ops/intel/ia32/sys/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/atomic_ops/intel/sys/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/atomic_ops/sparc/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/atomic_ops/sparc/sys/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/common/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/common/tests/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/fc/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/fc/tests/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/sm/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/sm/smsh/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/sm/smsh/lib/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/sm/smsh/scripts/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/sm/tests/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/sthread/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/sthread/tests/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	tools/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_0	Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	config/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/atomic_ops/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/atomic_ops/asm_linkage/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/atomic_ops/asm_linkage/usr/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/atomic_ops/asm_linkage/usr/src/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/atomic_ops/atomic_ops/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/atomic_ops/atomic_ops/amd64/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/atomic_ops/atomic_ops/i386/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/atomic_ops/atomic_ops/sparc/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/atomic_ops/ia32/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/atomic_ops/ia32/sys/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/atomic_ops/intel/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/atomic_ops/intel/ia32/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/atomic_ops/intel/ia32/sys/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/atomic_ops/intel/sys/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/atomic_ops/sparc/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/atomic_ops/sparc/sys/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/common/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/common/tests/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/fc/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/fc/tests/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/sm/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/sm/smsh/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/sm/smsh/lib/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/sm/smsh/scripts/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/sm/tests/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/sthread/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/sthread/tests/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	tools/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_1	Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	config/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/atomic_ops/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/atomic_ops/asm_linkage/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/atomic_ops/asm_linkage/usr/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/atomic_ops/asm_linkage/usr/src/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/atomic_ops/atomic_ops/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/atomic_ops/atomic_ops/amd64/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/atomic_ops/atomic_ops/i386/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/atomic_ops/atomic_ops/sparc/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/atomic_ops/ia32/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/atomic_ops/ia32/sys/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/atomic_ops/intel/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/atomic_ops/intel/ia32/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/atomic_ops/intel/ia32/sys/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/atomic_ops/intel/sys/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/atomic_ops/sparc/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/atomic_ops/sparc/sys/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/common/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/common/tests/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/fc/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/fc/tests/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/sm/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/sm/smsh/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/sm/smsh/lib/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/sm/smsh/scripts/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/sm/tests/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/sthread/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/sthread/tests/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	tools/Makefile	/^am__v_P_1 = :$/;"	m
am__v_at_	Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	config/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/atomic_ops/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/atomic_ops/asm_linkage/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/atomic_ops/asm_linkage/usr/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/atomic_ops/asm_linkage/usr/src/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/atomic_ops/atomic_ops/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/atomic_ops/atomic_ops/amd64/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/atomic_ops/atomic_ops/i386/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/atomic_ops/atomic_ops/sparc/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/atomic_ops/ia32/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/atomic_ops/ia32/sys/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/atomic_ops/intel/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/atomic_ops/intel/ia32/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/atomic_ops/intel/ia32/sys/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/atomic_ops/intel/sys/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/atomic_ops/sparc/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/atomic_ops/sparc/sys/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/common/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/common/tests/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/fc/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/fc/tests/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/sm/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/sm/smsh/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/sm/smsh/lib/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/sm/smsh/scripts/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/sm/tests/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/sthread/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/sthread/tests/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	tools/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_0	Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	config/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/atomic_ops/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/atomic_ops/asm_linkage/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/atomic_ops/asm_linkage/usr/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/atomic_ops/asm_linkage/usr/src/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/atomic_ops/atomic_ops/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/atomic_ops/atomic_ops/amd64/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/atomic_ops/atomic_ops/i386/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/atomic_ops/atomic_ops/sparc/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/atomic_ops/ia32/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/atomic_ops/ia32/sys/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/atomic_ops/intel/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/atomic_ops/intel/ia32/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/atomic_ops/intel/ia32/sys/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/atomic_ops/intel/sys/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/atomic_ops/sparc/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/atomic_ops/sparc/sys/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/common/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/common/tests/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/fc/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/fc/tests/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/sm/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/sm/smsh/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/sm/smsh/lib/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/sm/smsh/scripts/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/sm/tests/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/sthread/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/sthread/tests/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	tools/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_1	Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	config/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/atomic_ops/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/atomic_ops/asm_linkage/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/atomic_ops/asm_linkage/usr/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/atomic_ops/asm_linkage/usr/src/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/atomic_ops/atomic_ops/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/atomic_ops/atomic_ops/amd64/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/atomic_ops/atomic_ops/i386/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/atomic_ops/atomic_ops/sparc/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/atomic_ops/ia32/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/atomic_ops/ia32/sys/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/atomic_ops/intel/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/atomic_ops/intel/ia32/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/atomic_ops/intel/ia32/sys/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/atomic_ops/intel/sys/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/atomic_ops/sparc/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/atomic_ops/sparc/sys/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/common/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/common/tests/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/fc/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/fc/tests/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/sm/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/sm/smsh/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/sm/smsh/lib/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/sm/smsh/scripts/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/sm/tests/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/sthread/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/sthread/tests/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	tools/Makefile	/^am__v_at_1 = $/;"	m
am__vpath_adj	config/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/atomic_ops/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/atomic_ops/ia32/sys/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/atomic_ops/intel/ia32/sys/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/atomic_ops/intel/sys/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/atomic_ops/sparc/sys/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/common/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/common/tests/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/fc/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/fc/tests/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/sm/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/sm/smsh/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/sm/tests/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/sthread/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/sthread/tests/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj_setup	config/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/atomic_ops/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/atomic_ops/ia32/sys/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/atomic_ops/intel/ia32/sys/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/atomic_ops/intel/sys/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/atomic_ops/sparc/sys/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/common/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/common/tests/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/fc/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/fc/tests/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/sm/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/sm/smsh/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/sm/tests/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/sthread/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/sthread/tests/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am_basic_sizes_OBJECTS	src/fc/tests/Makefile	/^am_basic_sizes_OBJECTS = basic_sizes.$(OBJEXT)$/;"	m
am_bitmap_OBJECTS	src/common/tests/Makefile	/^am_bitmap_OBJECTS = bitmap.$(OBJEXT)$/;"	m
am_bitvector_OBJECTS	src/fc/tests/Makefile	/^am_bitvector_OBJECTS = bitvector.$(OBJEXT)$/;"	m
am_box_OBJECTS	src/fc/tests/Makefile	/^am_box_OBJECTS = box.$(OBJEXT)$/;"	m
am_container_OBJECTS	src/fc/tests/Makefile	/^am_container_OBJECTS = container.$(OBJEXT)$/;"	m
am_create_rec_OBJECTS	src/sm/tests/Makefile	/^am_create_rec_OBJECTS = create_rec.$(OBJEXT) \\$/;"	m
am_cuckoo_OBJECTS	src/fc/tests/Makefile	/^am_cuckoo_OBJECTS = cuckoo.$(OBJEXT)$/;"	m
am_darray_OBJECTS	src/fc/tests/Makefile	/^am_darray_OBJECTS = darray.$(OBJEXT)$/;"	m
am_errcodes_OBJECTS	src/common/tests/Makefile	/^am_errcodes_OBJECTS = errcodes.$(OBJEXT)$/;"	m
am_errlogtest_OBJECTS	src/fc/tests/Makefile	/^am_errlogtest_OBJECTS = errlogtest.$(OBJEXT)$/;"	m
am_except_OBJECTS	src/sthread/tests/Makefile	/^am_except_OBJECTS = except.$(OBJEXT)$/;"	m
am_file_scan_OBJECTS	src/sm/tests/Makefile	/^am_file_scan_OBJECTS = file_scan.$(OBJEXT) \\$/;"	m
am_file_scan_many_OBJECTS	src/sm/tests/Makefile	/^am_file_scan_many_OBJECTS = file_scan_many.$(OBJEXT) \\$/;"	m
am_findprime_OBJECTS	src/fc/tests/Makefile	/^am_findprime_OBJECTS = findprime.$(OBJEXT)$/;"	m
am_findsizes_OBJECTS	src/fc/tests/Makefile	/^am_findsizes_OBJECTS = findsizes.$(OBJEXT)$/;"	m
am_hash1_OBJECTS	src/fc/tests/Makefile	/^am_hash1_OBJECTS = hash1.$(OBJEXT)$/;"	m
am_hash2_OBJECTS	src/fc/tests/Makefile	/^am_hash2_OBJECTS = hash2.$(OBJEXT)$/;"	m
am_heap_OBJECTS	src/fc/tests/Makefile	/^am_heap_OBJECTS = heap.$(OBJEXT)$/;"	m
am_htab_OBJECTS	src/sm/tests/Makefile	/^am_htab_OBJECTS = htab.$(OBJEXT)$/;"	m
am_io_OBJECTS	src/fc/tests/Makefile	/^am_io_OBJECTS = io.$(OBJEXT)$/;"	m
am_ioperf_OBJECTS	src/sthread/tests/Makefile	/^am_ioperf_OBJECTS = ioperf.$(OBJEXT)$/;"	m
am_kvl_OBJECTS	src/common/tests/Makefile	/^am_kvl_OBJECTS = kvl.$(OBJEXT)$/;"	m
am_latch1_OBJECTS	src/common/tests/Makefile	/^am_latch1_OBJECTS = latch1.$(OBJEXT)$/;"	m
am_libatomic_ops_a_OBJECTS	src/atomic_ops/Makefile	/^am_libatomic_ops_a_OBJECTS = $(am__objects_1)$/;"	m
am_libcommon_a_OBJECTS	src/common/Makefile	/^am_libcommon_a_OBJECTS = basics.$(OBJEXT) bitmap.$(OBJEXT) \\$/;"	m
am_libfc_a_OBJECTS	src/fc/Makefile	/^am_libfc_a_OBJECTS = rand48.$(OBJEXT) block_alloc.$(OBJEXT) \\$/;"	m
am_libsm_a_OBJECTS	src/sm/Makefile	/^am_libsm_a_OBJECTS = bf.$(OBJEXT) bf_core.$(OBJEXT) bf_htab.$(OBJEXT) \\$/;"	m
am_libsthread_a_OBJECTS	src/sthread/Makefile	/^am_libsthread_a_OBJECTS = sthread.$(OBJEXT) \\$/;"	m
am_list1_OBJECTS	src/fc/tests/Makefile	/^am_list1_OBJECTS = list1.$(OBJEXT)$/;"	m
am_list2_OBJECTS	src/fc/tests/Makefile	/^am_list2_OBJECTS = list2.$(OBJEXT)$/;"	m
am_list3_OBJECTS	src/fc/tests/Makefile	/^am_list3_OBJECTS = list3.$(OBJEXT)$/;"	m
am_lock_cache_test_OBJECTS	src/sm/tests/Makefile	/^am_lock_cache_test_OBJECTS = lock_cache_test.$(OBJEXT)$/;"	m
am_lockid_test_OBJECTS	src/sm/tests/Makefile	/^am_lockid_test_OBJECTS = lockid_test.$(OBJEXT)$/;"	m
am_lsns_OBJECTS	src/common/tests/Makefile	/^am_lsns_OBJECTS = lsns.$(OBJEXT)$/;"	m
am_mapp_OBJECTS	src/common/tests/Makefile	/^am_mapp_OBJECTS = mapp.$(OBJEXT)$/;"	m
am_memblock_OBJECTS	src/fc/tests/Makefile	/^am_memblock_OBJECTS = memblock.$(OBJEXT)$/;"	m
am_mmap_OBJECTS	src/sthread/tests/Makefile	/^am_mmap_OBJECTS = mmap.$(OBJEXT)$/;"	m
am_mrbtrees_test_OBJECTS	src/sm/tests/Makefile	/^am_mrbtrees_test_OBJECTS = mrbtrees_test.$(OBJEXT) \\$/;"	m
am_ntime_OBJECTS	src/fc/tests/Makefile	/^am_ntime_OBJECTS = ntime.$(OBJEXT)$/;"	m
am_opaque_OBJECTS	src/common/tests/Makefile	/^am_opaque_OBJECTS = opaque.$(OBJEXT)$/;"	m
am_pthread_test_OBJECTS	src/sthread/tests/Makefile	/^am_pthread_test_OBJECTS = pthread_test.$(OBJEXT)$/;"	m
am_rand_OBJECTS	src/fc/tests/Makefile	/^am_rand_OBJECTS = rand.$(OBJEXT)$/;"	m
am_random_OBJECTS	src/fc/tests/Makefile	/^am_random_OBJECTS = random.$(OBJEXT)$/;"	m
am_random_kick_OBJECTS	src/sm/smsh/Makefile	/^am_random_kick_OBJECTS = random_kick.$(OBJEXT)$/;"	m
am_rc_OBJECTS	src/fc/tests/Makefile	/^am_rc_OBJECTS = rc.$(OBJEXT)$/;"	m
am_rtree_example_OBJECTS	src/sm/tests/Makefile	/^am_rtree_example_OBJECTS = rtree_example.$(OBJEXT) \\$/;"	m
am_smsh_OBJECTS	src/sm/smsh/Makefile	/^am_smsh_OBJECTS = out_of_log_space.$(OBJEXT) shell.$(OBJEXT) \\$/;"	m
am_sort_stream_OBJECTS	src/sm/tests/Makefile	/^am_sort_stream_OBJECTS = sort_stream.$(OBJEXT) \\$/;"	m
am_ss_OBJECTS	src/fc/tests/Makefile	/^am_ss_OBJECTS = ss.$(OBJEXT)$/;"	m
am_startstop_OBJECTS	src/sm/tests/Makefile	/^am_startstop_OBJECTS = startstop.$(OBJEXT)$/;"	m
am_stats2_OBJECTS	src/fc/tests/Makefile	/^am_stats2_OBJECTS = test_stat.$(OBJEXT) stats2.$(OBJEXT)$/;"	m
am_stats_OBJECTS	src/fc/tests/Makefile	/^am_stats_OBJECTS = stats.$(OBJEXT)$/;"	m
am_thread1_OBJECTS	src/sthread/tests/Makefile	/^am_thread1_OBJECTS = thread1.$(OBJEXT)$/;"	m
am_thread2_OBJECTS	src/sthread/tests/Makefile	/^am_thread2_OBJECTS = thread2.$(OBJEXT)$/;"	m
am_thread3_OBJECTS	src/sthread/tests/Makefile	/^am_thread3_OBJECTS = thread3.$(OBJEXT)$/;"	m
am_thread4_OBJECTS	src/sthread/tests/Makefile	/^am_thread4_OBJECTS = thread4.$(OBJEXT)$/;"	m
am_vectors_OBJECTS	src/common/tests/Makefile	/^am_vectors_OBJECTS = vectors.$(OBJEXT)$/;"	m
am_vtable_example_OBJECTS	src/sm/tests/Makefile	/^am_vtable_example_OBJECTS = vtable_example.$(OBJEXT) \\$/;"	m
amd64	config/shore-config.h	490;"	d
anEmptyFunction	src/atomic_ops/empty.cpp	/^int anEmptyFunction(void)$/;"	f
analysis_pass	src/sm/restart.cpp	/^restart_m::analysis_pass($/;"	f	class:restart_m
anchor	src/sm/xct.cpp	/^    xct_link* anchor() { return &_anchor; }$/;"	f	struct:xct_list
anchor	src/sm/xct.cpp	/^xct_t::anchor(bool grabit)$/;"	f	class:xct_t
anchors	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t anchors;$/;"	v
append	src/common/w_opaque.h	/^    append(const void* data, uint4_t len)$/;"	f	class:opaque_quantity
append	src/fc/w_hash.h	/^w_hash_t<T,LOCK, K>& w_hash_t<T,LOCK, K>::append(T* t)$/;"	f	class:w_hash_t
append	src/fc/w_list.h	/^    w_list_t<T,LOCK>&   append(T* t) {$/;"	f	class:w_list_t
append	src/sm/lgrec.cpp	/^lg_tag_chunks_h::append(uint4_t num_pages, const lpid_t new_pages[])$/;"	f	class:lg_tag_chunks_h
append	src/sm/lgrec.cpp	/^lg_tag_indirect_h::append(uint4_t num_pages, const lpid_t new_pages[])$/;"	f	class:lg_tag_indirect_h
append	src/sm/lgrec.cpp	/^lgdata_p::append(const vec_t& data, uint4_t start, uint4_t amount)$/;"	f	class:lgdata_p
append	src/sm/lgrec.cpp	/^lgindex_p::append(uint4_t num_pages, const shpid_t new_pids[])$/;"	f	class:lgindex_p
append_file_i	src/sm/scan.cpp	/^append_file_i::append_file_i(const stid_t& stid_) $/;"	f	class:append_file_i
append_file_i	src/sm/scan.h	/^class append_file_i : public scan_file_i $/;"	c
append_more_info_msg	src/fc/w_error.cpp	/^w_error_t::append_more_info_msg(const char* more_info)$/;"	f	class:w_error_t
append_mrbt_rec	src/sm/file.cpp	/^file_m::append_mrbt_rec(const rid_t& rid, const vec_t& data, const sdesc_t& sd, const bool bIgnoreLatches)$/;"	f	class:file_m
append_mrbt_rec	src/sm/pin.cpp	/^rc_t pin_i::append_mrbt_rec(const vec_t& data,$/;"	f	class:pin_i
append_mrbt_rec	src/sm/smfile.cpp	/^ss_m::append_mrbt_rec(const rid_t& rid, const vec_t& data,$/;"	f	class:ss_m
append_only	src/sm/tests/file_scan_many.cpp	/^    bool        append_only;$/;"	m	struct:file_info_t	file:
append_only	src/sm/tests/file_scan_many.cpp	/^    bool      append_only;$/;"	m	class:smthread_main_t	file:
append_only	src/sm/tests/mrbtrees_test.cpp	/^  bool        append_only;$/;"	m	struct:file_info_t	file:
append_rec	src/sm/file.cpp	/^file_m::append_rec(const rid_t& rid, const vec_t& data, const sdesc_t& sd)$/;"	f	class:file_m
append_rec	src/sm/file.cpp	/^file_p::append_rec(slotid_t idx, const vec_t& data)$/;"	f	class:file_p
append_rec	src/sm/pin.cpp	/^rc_t pin_i::append_rec(const vec_t& data)$/;"	f	class:pin_i
append_rec	src/sm/smfile.cpp	/^ss_m::append_rec(const rid_t& rid, const vec_t& data)$/;"	f	class:ss_m
area	src/fc/nbox.cpp	/^double nbox_t::area() const$/;"	f	class:nbox_t
area	src/sm/rtree_p.h	/^    double area;$/;"	m	struct:wrk_branch_t
arg	src/fc/cpu_info.cpp	/^	void* arg;$/;"	m	struct:cpu_info::impl_helper::runargs	file:
argc	src/sm/tests/file_scan.cpp	/^    int    argc;$/;"	m	class:smthread_user_t	file:
argc	src/sm/tests/file_scan_many.cpp	/^    int        argc;$/;"	m	class:smthread_main_t	file:
argc	src/sm/tests/startstop.cpp	/^	int        argc;$/;"	m	class:smthread_user_t	file:
args	src/sm/smsh/tcl_thread.h	/^    char*                       args;$/;"	m	class:tcl_thread_t
argv	src/sm/tests/file_scan.cpp	/^    char    **argv;$/;"	m	class:smthread_user_t	file:
argv	src/sm/tests/file_scan_many.cpp	/^    char        **argv;$/;"	m	class:smthread_main_t	file:
argv	src/sm/tests/startstop.cpp	/^	char       **argv;$/;"	m	class:smthread_user_t	file:
argv0	src/sm/smsh/smsh.cpp	/^const char *argv0 = NULL;$/;"	v
arithmetic	src/fc/tests/ntime.cpp	/^void arithmetic()$/;"	f
array	src/fc/nbox.h	/^    int4_t    array[2*max_dimension];    \/\/ boundary points$/;"	m	class:nbox_t
array	src/fc/tests/errlogtest.cpp	/^testfunc array[] = {$/;"	v
array	src/sthread/sthread.cpp	/^  typedef uint32_t array[w_rand::R];$/;"	t	struct:__rng_init	file:
ary	src/fc/tests/rand.cpp	/^typedef UC ary[8];$/;"	t	file:
as_fn_append	config.status	/^  as_fn_append ()$/;"	f
as_fn_append	configure	/^  as_fn_append ()$/;"	f
as_fn_arith	config.status	/^  as_fn_arith ()$/;"	f
as_fn_arith	configure	/^  as_fn_arith ()$/;"	f
as_fn_error	config.status	/^as_fn_error ()$/;"	f
as_fn_error	configure	/^as_fn_error ()$/;"	f
as_fn_executable_p	config.status	/^as_fn_executable_p ()$/;"	f
as_fn_executable_p	configure	/^as_fn_executable_p ()$/;"	f
as_fn_exit	config.status	/^as_fn_exit ()$/;"	f
as_fn_exit	configure	/^as_fn_exit ()$/;"	f
as_fn_failure	configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	config.status	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	config.status	/^as_fn_set_status ()$/;"	f
as_fn_set_status	configure	/^as_fn_set_status ()$/;"	f
as_fn_success	configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	config.status	/^as_fn_unset ()$/;"	f
as_fn_unset	configure	/^as_fn_unset ()$/;"	f
ascending	src/sm/sort_s.h	/^    bool   ascending;        $/;"	m	struct:ssm_sort::sort_parm_t
assert	src/fc/mem_block.cpp	35;"	d	file:
assert	src/fc/mem_block.cpp	40;"	d	file:
assert	src/sm/smsh/lib/smsh.tcl	/^proc assert {x} {$/;"	p
assert_consistent	src/sm/newsort.cpp	/^    void assert_consistent() const { $/;"	f	class:meta_header_t
assert_empty	src/sm/lock.cpp	/^lock_m::assert_empty() const$/;"	f	class:lock_m
assert_empty	src/sm/lock_core.cpp	/^lock_core_m::assert_empty() const$/;"	f	class:lock_core_m
assert_failed	src/fc/mem_block.cpp	/^void assert_failed(const char *desc, const char *f, int l) {$/;"	f
assert_failed	src/fc/w_base.cpp	/^w_base_t::assert_failed($/;"	f	class:w_base_t
assert_mutex_mine	src/sm/vol.h	/^    void            assert_mutex_mine(lock_state *) {}$/;"	f	class:vol_t
assert_mutex_notmine	src/sm/vol.h	/^    void            assert_mutex_notmine(lock_state *) {}$/;"	f	class:vol_t
assert_nobuffers	src/sm/newsort.cpp	/^    void assert_nobuffers() const { $/;"	f	class:meta_header_t
assert_nobuffers	src/sm/newsort.cpp	/^object_t::assert_nobuffers() const$/;"	f	class:object_t
assert_nobuffers	src/sm/newsort.cpp	/^skey_t::assert_nobuffers()const$/;"	f	class:skey_t
at	src/common/regex_engine.cpp	/^at(match *m, char *title, char *start, char *stop, sopno startst, sopno stopst)$/;"	f	file:
at	src/common/regex_engine.cpp	1027;"	d	file:
at	src/common/regex_engine.cpp	67;"	d	file:
at	src/common/regex_engine.cpp	78;"	d	file:
atomic_add_16	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_add_16(volatile uint16_t *ptr, int16_t val) {$/;"	f
atomic_add_16_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline uint16_t atomic_add_16_nv(volatile uint16_t *ptr, int16_t val) {$/;"	f
atomic_add_32	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_add_32(volatile uint32_t *ptr, int32_t val) {$/;"	f
atomic_add_32_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline uint32_t atomic_add_32_nv(volatile uint32_t *ptr, int32_t val) {$/;"	f
atomic_add_64	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_add_64(volatile uint64_t *ptr, int64_t val) {$/;"	f
atomic_add_64_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline uint64_t atomic_add_64_nv(volatile uint64_t *ptr, int64_t val) {$/;"	f
atomic_add_8	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_add_8(volatile uint8_t *ptr, int8_t val) {$/;"	f
atomic_add_8_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline uint8_t atomic_add_8_nv(volatile uint8_t *ptr, int8_t val) {$/;"	f
atomic_add_char	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_add_char(volatile uchar_t *ptr, signed char val) {$/;"	f
atomic_add_char_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline uchar_t atomic_add_char_nv(volatile uchar_t *ptr, signed char val) {$/;"	f
atomic_add_int	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_add_int(volatile uint_t *ptr, int val) {$/;"	f
atomic_add_int_delta	src/fc/atomic_templates.h	/^inline void atomic_add_int_delta(int volatile &val, int delta) $/;"	f
atomic_add_int_delta	src/fc/atomic_templates.h	/^inline void atomic_add_int_delta(long long volatile &val, int delta) $/;"	f
atomic_add_int_delta	src/fc/atomic_templates.h	/^inline void atomic_add_int_delta(long volatile &val, int delta) $/;"	f
atomic_add_int_delta	src/fc/atomic_templates.h	/^inline void atomic_add_int_delta(unsigned int volatile &val, int delta) $/;"	f
atomic_add_int_delta	src/fc/atomic_templates.h	/^inline void atomic_add_int_delta(unsigned long long volatile &val, int delta) $/;"	f
atomic_add_int_delta	src/fc/atomic_templates.h	/^inline void atomic_add_int_delta(unsigned long volatile &val, int delta) $/;"	f
atomic_add_int_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline uint_t atomic_add_int_nv(volatile uint_t *ptr, int val) {$/;"	f
atomic_add_ip	src/atomic_ops/atomic_ops_impl.h	408;"	d
atomic_add_ip_nv	src/atomic_ops/atomic_ops_impl.h	409;"	d
atomic_add_long	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_add_long(volatile ulong_t *ptr, long val) {$/;"	f
atomic_add_long_delta	src/fc/atomic_templates.h	/^inline void atomic_add_long_delta(int volatile &val, long delta) $/;"	f
atomic_add_long_delta	src/fc/atomic_templates.h	/^inline void atomic_add_long_delta(long long volatile &val, long delta) $/;"	f
atomic_add_long_delta	src/fc/atomic_templates.h	/^inline void atomic_add_long_delta(long volatile &val, long delta) $/;"	f
atomic_add_long_delta	src/fc/atomic_templates.h	/^inline void atomic_add_long_delta(unsigned int volatile &val, long delta) $/;"	f
atomic_add_long_delta	src/fc/atomic_templates.h	/^inline void atomic_add_long_delta(unsigned long long volatile &val, long delta) $/;"	f
atomic_add_long_delta	src/fc/atomic_templates.h	/^inline void atomic_add_long_delta(unsigned long volatile &val, long delta) $/;"	f
atomic_add_long_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline ulong_t atomic_add_long_nv(volatile ulong_t *ptr, long val) {$/;"	f
atomic_add_nv_int_delta	src/fc/atomic_templates.h	/^inline int atomic_add_nv_int_delta(int volatile &val, int delta) $/;"	f
atomic_add_nv_int_delta	src/fc/atomic_templates.h	/^inline long atomic_add_nv_int_delta(long volatile &val, int delta) $/;"	f
atomic_add_nv_int_delta	src/fc/atomic_templates.h	/^inline long long atomic_add_nv_int_delta(long long volatile &val, int delta) $/;"	f
atomic_add_nv_int_delta	src/fc/atomic_templates.h	/^inline unsigned int atomic_add_nv_int_delta(unsigned int volatile &val, int delta) $/;"	f
atomic_add_nv_int_delta	src/fc/atomic_templates.h	/^inline unsigned long atomic_add_nv_int_delta(unsigned long volatile &val, int delta) $/;"	f
atomic_add_nv_int_delta	src/fc/atomic_templates.h	/^inline unsigned long long atomic_add_nv_int_delta(unsigned long long volatile &val, int delta) $/;"	f
atomic_add_nv_long_delta	src/fc/atomic_templates.h	/^inline int atomic_add_nv_long_delta(int volatile &val, long delta) $/;"	f
atomic_add_nv_long_delta	src/fc/atomic_templates.h	/^inline long atomic_add_nv_long_delta(long volatile &val, long delta) $/;"	f
atomic_add_nv_long_delta	src/fc/atomic_templates.h	/^inline long long atomic_add_nv_long_delta(long long volatile &val, long delta) $/;"	f
atomic_add_nv_long_delta	src/fc/atomic_templates.h	/^inline unsigned int atomic_add_nv_long_delta(unsigned int volatile &val, long delta) $/;"	f
atomic_add_nv_long_delta	src/fc/atomic_templates.h	/^inline unsigned long atomic_add_nv_long_delta(unsigned long volatile &val, long delta) $/;"	f
atomic_add_nv_long_delta	src/fc/atomic_templates.h	/^inline unsigned long long atomic_add_nv_long_delta(unsigned long long volatile &val, long delta) $/;"	f
atomic_add_ptr	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_add_ptr(volatile void *ptr, ssize_t val) {$/;"	f
atomic_add_ptr_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline void *atomic_add_ptr_nv(volatile void *ptr, ssize_t val) {$/;"	f
atomic_add_short	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_add_short(volatile ushort_t *ptr, short val) {$/;"	f
atomic_add_short_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline ushort_t atomic_add_short_nv(volatile ushort_t *ptr, short val) {$/;"	f
atomic_and_16	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_and_16(volatile uint16_t *ptr, uint16_t val) {$/;"	f
atomic_and_16_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline uint16_t atomic_and_16_nv(volatile uint16_t *ptr, uint16_t val) {$/;"	f
atomic_and_32	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_and_32(volatile uint32_t *ptr, uint32_t val) {$/;"	f
atomic_and_32_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline uint32_t atomic_and_32_nv(volatile uint32_t *ptr, uint32_t val) {$/;"	f
atomic_and_64	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_and_64(volatile uint64_t *ptr, uint64_t val) {$/;"	f
atomic_and_64_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline uint64_t atomic_and_64_nv(volatile uint64_t *ptr, uint64_t val) {$/;"	f
atomic_and_8	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_and_8(volatile uint8_t *ptr, uint8_t val) {$/;"	f
atomic_and_8_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline uint8_t atomic_and_8_nv(volatile uint8_t *ptr, uint8_t val) {$/;"	f
atomic_and_uchar	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_and_uchar(volatile uchar_t *ptr, uchar_t val) {$/;"	f
atomic_and_uchar_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline uchar_t atomic_and_uchar_nv(volatile uchar_t *ptr, uchar_t val) {$/;"	f
atomic_and_uint	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_and_uint(volatile uint_t *ptr, uint_t val) {$/;"	f
atomic_and_uint_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline uint_t atomic_and_uint_nv(volatile uint_t *ptr, uint_t val) {$/;"	f
atomic_and_ulong	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_and_ulong(volatile ulong_t *ptr, ulong_t val) {$/;"	f
atomic_and_ulong_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline ulong_t atomic_and_ulong_nv(volatile ulong_t *ptr, ulong_t val) {$/;"	f
atomic_and_ushort	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_and_ushort(volatile ushort_t *ptr, ushort_t val) {$/;"	f
atomic_and_ushort_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline ushort_t atomic_and_ushort_nv(volatile ushort_t *ptr, ushort_t val) {$/;"	f
atomic_assign_max	src/common/tid_t.h	/^    tid_t &atomic_assign_max(const tid_t &tid) {$/;"	f	class:tid_t
atomic_assign_min	src/common/tid_t.h	/^    tid_t &atomic_assign_min(const tid_t &tid) {$/;"	f	class:tid_t
atomic_cas_16	src/atomic_ops/atomic_ops_builtin.h	/^static inline uint16_t atomic_cas_16(volatile uint16_t *ptr, uint16_t ov, uint16_t nv) {$/;"	f
atomic_cas_32	src/atomic_ops/atomic_ops_builtin.h	/^static inline uint32_t atomic_cas_32(volatile uint32_t *ptr, uint32_t ov, uint32_t nv) {$/;"	f
atomic_cas_64	src/atomic_ops/atomic_ops_builtin.h	/^static inline uint64_t atomic_cas_64(volatile uint64_t *ptr, uint64_t ov, uint64_t nv) {$/;"	f
atomic_cas_8	src/atomic_ops/atomic_ops_builtin.h	/^static inline uint8_t atomic_cas_8(volatile uint8_t *ptr, uint8_t ov, uint8_t nv) {$/;"	f
atomic_cas_ptr	src/atomic_ops/atomic_ops_builtin.h	/^static inline void *atomic_cas_ptr(volatile void *ptr, void * ov, void * nv) {$/;"	f
atomic_cas_uchar	src/atomic_ops/atomic_ops_builtin.h	/^static inline uchar_t atomic_cas_uchar(volatile uchar_t *ptr, uchar_t ov, uchar_t nv) {$/;"	f
atomic_cas_uint	src/atomic_ops/atomic_ops_builtin.h	/^static inline uint_t atomic_cas_uint(volatile uint_t *ptr, uint_t ov, uint_t nv) {$/;"	f
atomic_cas_ulong	src/atomic_ops/atomic_ops_builtin.h	/^static inline ulong_t atomic_cas_ulong(volatile ulong_t *ptr, ulong_t ov, ulong_t nv) {$/;"	f
atomic_cas_ushort	src/atomic_ops/atomic_ops_builtin.h	/^static inline ushort_t atomic_cas_ushort(volatile ushort_t *ptr, ushort_t ov, ushort_t nv) {$/;"	f
atomic_class_pool	src/fc/atomic_class_pool.h	/^    atomic_class_pool(long nbytes=sizeof(T), long seed=128)$/;"	f	struct:atomic_class_pool
atomic_class_pool	src/fc/atomic_class_pool.h	/^struct atomic_class_pool : protected atomic_preallocated_pool {$/;"	s
atomic_clear_long_excl	src/atomic_ops/atomic_ops_builtin.h	/^static inline int atomic_clear_long_excl(volatile ulong_t *ptr, uint_t bit) {$/;"	f
atomic_container	src/fc/atomic_container.h	/^    atomic_container(offset_typ offset)$/;"	f	class:atomic_container
atomic_container	src/fc/atomic_container.h	/^class atomic_container {$/;"	c
atomic_dec	src/fc/atomic_templates.h	/^inline void atomic_dec(int volatile &val)$/;"	f
atomic_dec	src/fc/atomic_templates.h	/^inline void atomic_dec(unsigned int volatile &val)$/;"	f
atomic_dec	src/fc/atomic_templates.h	/^inline void atomic_dec(unsigned long long volatile &val)$/;"	f
atomic_dec	src/fc/atomic_templates.h	/^inline void atomic_dec(unsigned long volatile &val)$/;"	f
atomic_dec_16	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_dec_16(volatile uint16_t *ptr) {$/;"	f
atomic_dec_16_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline uint16_t atomic_dec_16_nv(volatile uint16_t *x) {$/;"	f
atomic_dec_32	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_dec_32(volatile uint32_t *ptr) {$/;"	f
atomic_dec_32_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline uint32_t atomic_dec_32_nv(volatile uint32_t *x) {$/;"	f
atomic_dec_64	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_dec_64(volatile uint64_t *ptr) {$/;"	f
atomic_dec_64_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline uint64_t atomic_dec_64_nv(volatile uint64_t *x) {$/;"	f
atomic_dec_8	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_dec_8(volatile uint8_t *ptr) {$/;"	f
atomic_dec_8_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline uint8_t atomic_dec_8_nv(volatile uint8_t *x) {$/;"	f
atomic_dec_nv	src/fc/atomic_templates.h	/^inline int atomic_dec_nv(int volatile &val)$/;"	f
atomic_dec_nv	src/fc/atomic_templates.h	/^inline unsigned int atomic_dec_nv(unsigned int volatile &val)$/;"	f
atomic_dec_nv	src/fc/atomic_templates.h	/^inline unsigned long atomic_dec_nv(unsigned long volatile &val)$/;"	f
atomic_dec_nv	src/fc/atomic_templates.h	/^inline unsigned long long atomic_dec_nv(unsigned long long volatile &val)$/;"	f
atomic_dec_uchar	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_dec_uchar(volatile uchar_t *ptr) {$/;"	f
atomic_dec_uchar_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline uchar_t atomic_dec_uchar_nv(volatile uchar_t *x) {$/;"	f
atomic_dec_uint	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_dec_uint(volatile uint_t *ptr) {$/;"	f
atomic_dec_uint_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline uint_t atomic_dec_uint_nv(volatile uint_t *x) {$/;"	f
atomic_dec_ulong	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_dec_ulong(volatile ulong_t *ptr) {$/;"	f
atomic_dec_ulong_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline ulong_t atomic_dec_ulong_nv(volatile ulong_t *x) {$/;"	f
atomic_dec_ushort	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_dec_ushort(volatile ushort_t *ptr) {$/;"	f
atomic_dec_ushort_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline ushort_t atomic_dec_ushort_nv(volatile ushort_t *x) {$/;"	f
atomic_inc	src/fc/atomic_templates.h	/^inline void atomic_inc(int volatile &val)$/;"	f
atomic_inc	src/fc/atomic_templates.h	/^inline void atomic_inc(unsigned int volatile &val)$/;"	f
atomic_inc	src/fc/atomic_templates.h	/^inline void atomic_inc(unsigned long long volatile &val)$/;"	f
atomic_inc	src/fc/atomic_templates.h	/^inline void atomic_inc(unsigned long volatile &val)$/;"	f
atomic_inc_16	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_inc_16(volatile uint16_t *ptr) {$/;"	f
atomic_inc_16_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline uint16_t atomic_inc_16_nv(volatile uint16_t *x) {$/;"	f
atomic_inc_32	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_inc_32(volatile uint32_t *ptr) {$/;"	f
atomic_inc_32_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline uint32_t atomic_inc_32_nv(volatile uint32_t *x) {$/;"	f
atomic_inc_64	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_inc_64(volatile uint64_t *ptr) {$/;"	f
atomic_inc_64_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline uint64_t atomic_inc_64_nv(volatile uint64_t *x) {$/;"	f
atomic_inc_8	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_inc_8(volatile uint8_t *ptr) {$/;"	f
atomic_inc_8_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline uint8_t atomic_inc_8_nv(volatile uint8_t *x) {$/;"	f
atomic_inc_nv	src/fc/atomic_templates.h	/^inline int atomic_inc_nv(int volatile &val)$/;"	f
atomic_inc_nv	src/fc/atomic_templates.h	/^inline unsigned int atomic_inc_nv(unsigned int volatile &val)$/;"	f
atomic_inc_nv	src/fc/atomic_templates.h	/^inline unsigned long atomic_inc_nv(unsigned long volatile &val)$/;"	f
atomic_inc_nv	src/fc/atomic_templates.h	/^inline unsigned long long atomic_inc_nv(unsigned long long volatile &val)$/;"	f
atomic_inc_uchar	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_inc_uchar(volatile uchar_t *ptr) {$/;"	f
atomic_inc_uchar_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline uchar_t atomic_inc_uchar_nv(volatile uchar_t *x) {$/;"	f
atomic_inc_uint	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_inc_uint(volatile uint_t *ptr) {$/;"	f
atomic_inc_uint_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline uint_t atomic_inc_uint_nv(volatile uint_t *x) {$/;"	f
atomic_inc_ulong	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_inc_ulong(volatile ulong_t *ptr) {$/;"	f
atomic_inc_ulong_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline ulong_t atomic_inc_ulong_nv(volatile ulong_t *x) {$/;"	f
atomic_inc_ushort	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_inc_ushort(volatile ushort_t *ptr) {$/;"	f
atomic_inc_ushort_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline ushort_t atomic_inc_ushort_nv(volatile ushort_t *x) {$/;"	f
atomic_incr	src/common/tid_t.h	/^    datum_t atomic_incr() {$/;"	f	class:tid_t
atomic_max_32	src/sm/bf_htab.cpp	/^void atomic_max_32(volatile int *target, int arg)$/;"	f
atomic_ops_keep_symtab_nonempty	src/atomic_ops/atomic_ops.S	/^atomic_ops_keep_symtab_nonempty:	$/;"	l
atomic_or_16	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_or_16(volatile uint16_t *ptr, uint16_t val) {$/;"	f
atomic_or_16_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline uint16_t atomic_or_16_nv(volatile uint16_t *ptr, uint16_t val) {$/;"	f
atomic_or_32	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_or_32(volatile uint32_t *ptr, uint32_t val) {$/;"	f
atomic_or_32_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline uint32_t atomic_or_32_nv(volatile uint32_t *ptr, uint32_t val) {$/;"	f
atomic_or_64	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_or_64(volatile uint64_t *ptr, uint64_t val) {$/;"	f
atomic_or_64_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline uint64_t atomic_or_64_nv(volatile uint64_t *ptr, uint64_t val) {$/;"	f
atomic_or_8	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_or_8(volatile uint8_t *ptr, uint8_t val) {$/;"	f
atomic_or_8_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline uint8_t atomic_or_8_nv(volatile uint8_t *ptr, uint8_t val) {$/;"	f
atomic_or_uchar	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_or_uchar(volatile uchar_t *ptr, uchar_t val) {$/;"	f
atomic_or_uchar_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline uchar_t atomic_or_uchar_nv(volatile uchar_t *ptr, uchar_t val) {$/;"	f
atomic_or_uint	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_or_uint(volatile uint_t *ptr, uint_t val) {$/;"	f
atomic_or_uint_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline uint_t atomic_or_uint_nv(volatile uint_t *ptr, uint_t val) {$/;"	f
atomic_or_ulong	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_or_ulong(volatile ulong_t *ptr, ulong_t val) {$/;"	f
atomic_or_ulong_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline ulong_t atomic_or_ulong_nv(volatile ulong_t *ptr, ulong_t val) {$/;"	f
atomic_or_ushort	src/atomic_ops/atomic_ops_builtin.h	/^static inline void atomic_or_ushort(volatile ushort_t *ptr, ushort_t val) {$/;"	f
atomic_or_ushort_nv	src/atomic_ops/atomic_ops_builtin.h	/^static inline ushort_t atomic_or_ushort_nv(volatile ushort_t *ptr, ushort_t val) {$/;"	f
atomic_preallocated_pool	src/fc/atomic_class_pool.h	/^    atomic_preallocated_pool(uint nbytes, long seed=128)$/;"	f	struct:atomic_preallocated_pool
atomic_preallocated_pool	src/fc/atomic_class_pool.h	/^struct atomic_preallocated_pool : protected atomic_container $/;"	s
atomic_set_long_excl	src/atomic_ops/atomic_ops_builtin.h	/^static inline int atomic_set_long_excl(volatile ulong_t *ptr, uint_t bit) {$/;"	f
atomic_swap_16	src/atomic_ops/atomic_ops_builtin.h	/^static inline uint16_t atomic_swap_16(volatile uint16_t *ptr, uint16_t val) {$/;"	f
atomic_swap_32	src/atomic_ops/atomic_ops_builtin.h	/^static inline uint32_t atomic_swap_32(volatile uint32_t *ptr, uint32_t val) {$/;"	f
atomic_swap_64	src/atomic_ops/atomic_ops_builtin.h	/^static inline uint64_t atomic_swap_64(volatile uint64_t *ptr, uint64_t val) {$/;"	f
atomic_swap_8	src/atomic_ops/atomic_ops_builtin.h	/^static inline uint8_t atomic_swap_8(volatile uint8_t *ptr, uint8_t val) {$/;"	f
atomic_swap_ptr	src/atomic_ops/atomic_ops_builtin.h	/^static inline void *atomic_swap_ptr(volatile void *ptr, void * val) {$/;"	f
atomic_swap_uchar	src/atomic_ops/atomic_ops_builtin.h	/^static inline uchar_t atomic_swap_uchar(volatile uchar_t *ptr, uchar_t val) {$/;"	f
atomic_swap_uint	src/atomic_ops/atomic_ops_builtin.h	/^static inline uint_t atomic_swap_uint(volatile uint_t *ptr, uint_t val) {$/;"	f
atomic_swap_ulong	src/atomic_ops/atomic_ops_builtin.h	/^static inline ulong_t atomic_swap_ulong(volatile ulong_t *ptr, ulong_t val) {$/;"	f
atomic_swap_ushort	src/atomic_ops/atomic_ops_builtin.h	/^static inline ushort_t atomic_swap_ushort(volatile ushort_t *ptr, ushort_t val) {$/;"	f
atomic_thread_map_t	src/sm/smthread.h	/^    atomic_thread_map_t () {$/;"	f	class:atomic_thread_map_t
atomic_thread_map_t	src/sm/smthread.h	/^class  atomic_thread_map_t : public sm_thread_map_t {$/;"	c
attach	src/fc/w_listm.cpp	/^w_link_t::attach(w_link_t* prev_link)$/;"	f	class:w_link_t
attach_thread	src/sm/xct.cpp	/^xct_t::attach_thread() $/;"	f	class:xct_t
attach_update_thread	src/sm/xct.cpp	/^xct_t::attach_update_thread()$/;"	f	class:xct_t
attach_xct	src/sm/sm.h	/^    static void           attach_xct(xct_t *x) { me()->attach_xct(x); }$/;"	f	class:ss_m
attach_xct	src/sm/smthread.cpp	/^smthread_t::attach_xct(xct_t* x)$/;"	f	class:smthread_t
attempt	src/sthread/mcs_lock.h	/^	bool attempt(ext_qnode* me) {$/;"	f	struct:mcs_lock
attempt	src/sthread/mcs_lock.h	/^	bool attempt(qnode* me) {$/;"	f	struct:mcs_lock
attempt	src/sthread/sthread.h	/^    bool attempt(ext_qnode & me) {$/;"	f	struct:w_pthread_lock_t
attempt	src/sthread/sthread.h	/^    bool attempt(ext_qnode* me) {$/;"	f	struct:w_pthread_lock_t
attempt_lock	src/fc/atomic_container.h	/^    bool attempt_lock() {$/;"	f	class:atomic_container
attempt_read	src/sthread/srwlock.cpp	/^bool mcs_rwlock::attempt_read() $/;"	f	class:mcs_rwlock
attempt_upgrade	src/sthread/srwlock.cpp	/^bool mcs_rwlock::attempt_upgrade() $/;"	f	class:mcs_rwlock
attempt_write	src/sthread/srwlock.cpp	/^bool mcs_rwlock::attempt_write() $/;"	f	class:mcs_rwlock
audit	src/sm/bf_core.cpp	/^bf_core_m::audit() const$/;"	f	class:bf_core_m
audit	src/sm/sm_du_stats.cpp	/^btree_int_stats_t::audit() const$/;"	f	class:btree_int_stats_t
audit	src/sm/sm_du_stats.cpp	/^btree_lf_stats_t::audit() const$/;"	f	class:btree_lf_stats_t
audit	src/sm/sm_du_stats.cpp	/^btree_stats_t::audit() const$/;"	f	class:btree_stats_t
audit	src/sm/sm_du_stats.cpp	/^file_pg_stats_t::audit() const$/;"	f	class:file_pg_stats_t
audit	src/sm/sm_du_stats.cpp	/^file_stats_t::audit() const$/;"	f	class:file_stats_t
audit	src/sm/sm_du_stats.cpp	/^lgdata_pg_stats_t::audit() const$/;"	f	class:lgdata_pg_stats_t
audit	src/sm/sm_du_stats.cpp	/^lgindex_pg_stats_t::audit() const$/;"	f	class:lgindex_pg_stats_t
audit	src/sm/sm_du_stats.cpp	/^rtree_stats_t::audit() const$/;"	f	class:rtree_stats_t
audit	src/sm/sm_du_stats.cpp	/^sm_du_stats_t::audit() const$/;"	f	class:sm_du_stats_t
audit	src/sm/sm_du_stats.cpp	/^volume_hdr_stats_t::audit() const$/;"	f	class:volume_hdr_stats_t
audit	src/sm/sm_du_stats.cpp	/^volume_map_stats_t::audit() const$/;"	f	class:volume_map_stats_t
auto_leave_and_trx_release_t	src/sm/sm_io.cpp	/^    auto_leave_and_trx_release_t() : _x(xct()) {$/;"	f	class:io_m::auto_leave_and_trx_release_t
auto_leave_and_trx_release_t	src/sm/sm_io.cpp	/^class io_m::auto_leave_and_trx_release_t {$/;"	c	class:io_m	file:
auto_leave_t	src/sm/sm_io.h	/^        auto_leave_t(): _x(xct()), ccon(_x, __LINE__, __FILE__) {\\$/;"	f	class:io_m::auto_leave_t
auto_leave_t	src/sm/sm_io.h	/^    class auto_leave_t {$/;"	c	class:io_m
auto_release_anchor_t	src/sm/xct.h	/^    auto_release_anchor_t(bool and_compensate, int line)$/;"	f	class:auto_release_anchor_t
auto_release_anchor_t	src/sm/xct.h	/^class auto_release_anchor_t {$/;"	c
auto_release_r_t	src/sthread/auto_release.h	/^    NORET            auto_release_r_t(T& t)$/;"	f	class:auto_release_r_t
auto_release_r_t	src/sthread/auto_release.h	/^class auto_release_r_t {$/;"	c
auto_release_t	src/sthread/auto_release.h	/^    NORET                       auto_release_t(T& t)  $/;"	f	class:auto_release_t
auto_release_t	src/sthread/auto_release.h	/^    NORET            auto_release_t(pthread_mutex_t* t) : obj(t) {}$/;"	f	class:auto_release_t
auto_release_t	src/sthread/auto_release.h	/^    NORET            auto_release_t(w_pthread_lock_t& t, w_pthread_lock_t::ext_qnode* me)$/;"	f	class:auto_release_t
auto_release_t	src/sthread/auto_release.h	/^class auto_release_t<pthread_mutex_t> $/;"	c
auto_release_t	src/sthread/auto_release.h	/^class auto_release_t<w_pthread_lock_t> $/;"	c
auto_release_t	src/sthread/auto_release.h	/^template <class T> class auto_release_t {$/;"	c
auto_release_w_t	src/sthread/auto_release.h	/^    NORET            auto_release_w_t(T& t)$/;"	f	class:auto_release_w_t
auto_release_w_t	src/sthread/auto_release.h	/^class auto_release_w_t$/;"	c
autoerase_t	src/sm/sm_io.cpp	/^    autoerase_t(vol_t *v, snum_t snum) : _v(v), _store(snum) {}$/;"	f	class:autoerase_t
autoerase_t	src/sm/sm_io.cpp	/^class autoerase_t {$/;"	c	file:
av	src/sm/smsh/shell.cpp	1546;"	d	file:
av	src/sm/smsh/shell.cpp	1550;"	d	file:
av	src/sm/smsh/tcl_thread.cpp	155;"	d	file:
av	src/sm/smsh/tcl_thread.cpp	160;"	d	file:
avg_chain_length	src/sm/lock_core.cpp	/^static int avg_chain_length=0;$/;"	v	file:
await_1thread_log	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t await_1thread_log;$/;"	v
await_1thread_xct	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t await_1thread_xct;$/;"	v
await_not_in_transit_out	src/sm/bf_transit_bucket.h	/^    void await_not_in_transit_out(const bfpid_t &pid) {$/;"	f	class:transit_bucket_t
await_vol_lock_r	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t await_vol_lock_r;$/;"	v
await_vol_lock_r_pct	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t await_vol_lock_r_pct;$/;"	v
await_vol_lock_w	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t await_vol_lock_w;$/;"	v
await_vol_lock_w_pct	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t await_vol_lock_w_pct;$/;"	v
await_vol_monitor	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t await_vol_monitor;$/;"	v
awaken	src/sm/chkpt.cpp	/^chkpt_thread_t::awaken()$/;"	f	class:chkpt_thread_t
ax_pthread_config	Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	config/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	src/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	src/atomic_ops/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	src/atomic_ops/asm_linkage/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	src/atomic_ops/asm_linkage/usr/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	src/atomic_ops/asm_linkage/usr/src/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	src/atomic_ops/atomic_ops/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	src/atomic_ops/atomic_ops/amd64/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	src/atomic_ops/atomic_ops/i386/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	src/atomic_ops/atomic_ops/sparc/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	src/atomic_ops/ia32/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	src/atomic_ops/ia32/sys/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	src/atomic_ops/intel/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	src/atomic_ops/intel/ia32/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	src/atomic_ops/intel/ia32/sys/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	src/atomic_ops/intel/sys/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	src/atomic_ops/sparc/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	src/atomic_ops/sparc/sys/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	src/common/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	src/common/tests/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	src/fc/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	src/fc/tests/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	src/sm/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	src/sm/smsh/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	src/sm/smsh/lib/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	src/sm/smsh/scripts/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	src/sm/tests/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	src/sthread/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	src/sthread/tests/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	tools/Makefile	/^ax_pthread_config = $/;"	m
b	src/common/tests/vectors.cpp	/^const char *b = "bbbbbbbbbb";$/;"	v
b	src/fc/tests/test_stat_struct_gen.h	/^ w_base_t::base_stat_t b;$/;"	v
b	src/fc/w_hashing.h	/^    u64 b;$/;"	m	class:w_hashing::uhash
b	src/fc/w_hashing.h	/^    uhash b;$/;"	m	class:w_hashing::hash2
b	src/sm/sm_s.h	/^        b = 'b',                \/\/ binary (uninterpreted) (vbl or fixed-len)$/;"	e	enum:key_type_s::type_t
b	src/sthread/tests/pthread_test.cpp	/^static pthread_barrier_t b;$/;"	v	file:
b1	src/sm/smsh/shell.h	/^    char    b1;$/;"	m	union:typed_value::__anon75
back	src/fc/dynarray.h	/^    T &back() { return this->operator[](size()-1); }$/;"	f	struct:dynvector
back	src/fc/dynarray.h	/^    T const &back() const { return this->operator[](size()-1); }$/;"	f	struct:dynvector
back	src/fc/w_list.h	/^    T*	back()  { return bottom(); }$/;"	f	class:w_list_t
back_out	src/fc/vtable.h	/^    void           back_out(int n) {  _rows_filled -= n; }$/;"	f	class:vtable_t
back_out	src/fc/vtable.h	/^    void        back_out(int n) {  $/;"	f	class:vtable_func
backref	src/common/regex_engine.cpp	/^backref(struct match *m, char *start, char *stop, $/;"	f	file:
backref	src/common/regex_engine.cpp	1024;"	d	file:
backref	src/common/regex_engine.cpp	64;"	d	file:
backref	src/common/regex_engine.cpp	75;"	d	file:
backrefs	src/common/regex2.h	/^    int backrefs;        \/* does it use back references? *\/$/;"	m	struct:re_guts
badOp	src/fc/w_base.h	/^    badOp=0x0, eqOp=0x1, gtOp=0x2, geOp=0x3, ltOp=0x4, leOp=0x5,$/;"	e	enum:w_base_t::CompareOp
bad_cmp_t	src/sm/sm_base.h	/^    enum cmp_t { bad_cmp_t=badOp, eq=eqOp,$/;"	e	enum:smlevel_0::cmp_t
badcc	src/sm/btree.cpp	/^rc_t badcc() {$/;"	f	file:
barrier_mutex	src/sm/smsh/tcl_thread.cpp	/^            W_LIST_ARG(barrier_t, _link), &barrier_mutex);$/;"	v
barrier_mutex	src/sm/smsh/tcl_thread.cpp	/^queue_based_lock_t barrier_mutex;$/;"	v
barrier_t	src/sm/smsh/tcl_thread.cpp	/^NORET barrier_t::barrier_t(const char *nm, int n) : $/;"	f	class:barrier_t
barrier_t	src/sm/smsh/tcl_thread.cpp	/^class barrier_t {$/;"	c	file:
base	src/fc/tests/findsizes.cpp	/^i8   base;$/;"	v
base	src/sm/log_core.h	/^        long base; \/\/ absolute position of _buf[0] (absolute meaning$/;"	m	struct:log_core::epoch
base_float_t	src/fc/w_base.h	/^    typedef double          base_float_t;$/;"	t	class:w_base_t
base_float_t	src/fc/w_base.h	/^    typedef float           base_float_t;$/;"	t	class:w_base_t
base_lsn	src/sm/log_core.h	/^        lsn_t base_lsn; \/\/ lsn of _buf[0] for this epoch$/;"	m	struct:log_core::epoch
base_of	src/fc/w_list.h	/^    T*                 base_of(w_link_t* p) const {$/;"	f	class:w_list_t
base_of	src/fc/w_list.h	/^    const T*             base_of(const w_link_t* p) const {$/;"	f	class:w_list_t
base_stat_t	src/fc/w_base.h	/^    typedef uint4_t         base_stat_t;$/;"	t	class:w_base_t
base_stat_t	src/fc/w_base.h	/^    typedef uint8_t         base_stat_t;$/;"	t	class:w_base_t
base_stat_t	src/sm/sm_base.h	/^    typedef w_base_t::base_stat_t base_stat_t; $/;"	t	class:smlevel_0
base_stat_t	src/sm/sm_du_stats.h	/^typedef w_base_t::base_stat_t base_stat_t;$/;"	t
basic_sizes_DEPENDENCIES	src/fc/tests/Makefile	/^basic_sizes_DEPENDENCIES = ..\/libfc.a $(LOCALLDADD)$/;"	m
basic_sizes_LDADD	src/fc/tests/Makefile	/^basic_sizes_LDADD = $(LDADD)$/;"	m
basic_sizes_OBJECTS	src/fc/tests/Makefile	/^basic_sizes_OBJECTS = $(am_basic_sizes_OBJECTS)$/;"	m
basic_sizes_SOURCES	src/fc/tests/Makefile	/^basic_sizes_SOURCES = basic_sizes.cpp$/;"	m
before_run	src/sm/smthread.cpp	/^void smthread_t::before_run() {$/;"	f	class:smthread_t
before_run	src/sthread/sthread.h	/^    virtual void        before_run() { }$/;"	f	class:sthread_t
begin	src/common/latch.cpp	/^    iterator begin() { return iterator(_first); }$/;"	f	class:holder_list
begin_xct	src/sm/sm.cpp	/^ss_m::begin_xct($/;"	f	class:ss_m
begin_xct	src/sm/sm.cpp	/^ss_m::begin_xct(tid_t& tid, timeout_in_ms timeout)$/;"	f	class:ss_m
begin_xct	src/sm/sm.cpp	/^ss_m::begin_xct(timeout_in_ms timeout)$/;"	f	class:ss_m
begin_xct_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t begin_xct_cnt;$/;"	v
beginp	src/common/regex_engine.cpp	/^    char *beginp;        \/* start of string -- virtual NUL precedes *\/$/;"	m	struct:match	file:
bf	src/sm/sm.cpp	/^bf_m* smlevel_0::bf = 0;$/;"	m	class:smlevel_0	file:
bf	src/sm/sm_base.h	/^    static bf_m* bf;$/;"	m	class:smlevel_0
bf_already_evicted	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_already_evicted;$/;"	v
bf_cleaner_signalled	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_cleaner_signalled;$/;"	v
bf_cleaner_sweeps	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_cleaner_sweeps;$/;"	v
bf_cleaner_thread_t	src/sm/bf.cpp	/^bf_cleaner_thread_t::bf_cleaner_thread_t(vid_t v)$/;"	f	class:bf_cleaner_thread_t
bf_cleaner_thread_t	src/sm/bf.cpp	/^class bf_cleaner_thread_t : public smthread_t $/;"	c	file:
bf_core_m	src/sm/bf_core.cpp	/^bf_core_m::bf_core_m(uint4_t n, char *bp)$/;"	f	class:bf_core_m
bf_core_m	src/sm/bf_core.h	/^class bf_core_m : public smlevel_0 $/;"	c
bf_core_unpin_cleaned	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_core_unpin_cleaned;$/;"	v
bf_dirty_page_cleaned	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_dirty_page_cleaned;$/;"	v
bf_discarded_hot	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_discarded_hot;$/;"	v
bf_eight_page_write	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_eight_page_write;$/;"	v
bf_fg_scan_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_fg_scan_cnt;$/;"	v
bf_filter_lsn_t	src/sm/bf.cpp	/^bf_filter_lsn_t::bf_filter_lsn_t(const lsn_t& lsn)  $/;"	f	class:bf_filter_lsn_t
bf_filter_lsn_t	src/sm/bf.cpp	/^class bf_filter_lsn_t : public bf_filter_t {$/;"	c	file:
bf_filter_none_t	src/sm/bf.cpp	/^bf_filter_none_t::bf_filter_none_t()$/;"	f	class:bf_filter_none_t
bf_filter_none_t	src/sm/bf.cpp	/^class bf_filter_none_t : public bf_filter_t {$/;"	c	file:
bf_filter_store_t	src/sm/bf.cpp	/^bf_filter_store_t::bf_filter_store_t(const stid_t& stid)$/;"	f	class:bf_filter_store_t
bf_filter_store_t	src/sm/bf.cpp	/^class bf_filter_store_t : public bf_filter_t {$/;"	c	file:
bf_filter_sweep_old_t	src/sm/bf.cpp	/^bf_filter_sweep_old_t::bf_filter_sweep_old_t(int log_segment, $/;"	f	class:bf_filter_sweep_old_t
bf_filter_sweep_old_t	src/sm/bf.cpp	/^class bf_filter_sweep_old_t : public bf_filter_t {$/;"	c	file:
bf_filter_sweep_t	src/sm/bf.cpp	/^bf_filter_sweep_t::bf_filter_sweep_t(bool urgent, vid_t v)$/;"	f	class:bf_filter_sweep_t
bf_filter_sweep_t	src/sm/bf.cpp	/^class bf_filter_sweep_t : public bf_filter_t {$/;"	c	file:
bf_filter_t	src/sm/bf.cpp	/^    bf_filter_t() {}$/;"	f	class:bf_filter_t
bf_filter_t	src/sm/bf.cpp	/^class bf_filter_t : public smlevel_0 {$/;"	c	file:
bf_filter_vol_t	src/sm/bf.cpp	/^bf_filter_vol_t::bf_filter_vol_t(const vid_t& vid)$/;"	f	class:bf_filter_vol_t
bf_filter_vol_t	src/sm/bf.cpp	/^class bf_filter_vol_t : public bf_filter_t {$/;"	c	file:
bf_five_page_write	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_five_page_write;$/;"	v
bf_flushed_OHD_page	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_flushed_OHD_page;$/;"	v
bf_four_page_write	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_four_page_write;$/;"	v
bf_grab_latch_failed	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_grab_latch_failed;$/;"	v
bf_hit_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_hit_cnt;$/;"	v
bf_htab_bucket_size	src/sm/bf_htab_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_htab_bucket_size;$/;"	v
bf_htab_buckets	src/sm/bf_htab_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_htab_buckets;$/;"	v
bf_htab_cuckolds	src/sm/bf_htab_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_htab_cuckolds;$/;"	v
bf_htab_ensures	src/sm/bf_htab_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_htab_ensures;$/;"	v
bf_htab_entries	src/sm/bf_htab_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_htab_entries;$/;"	v
bf_htab_harsh_lookups	src/sm/bf_htab_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_htab_harsh_lookups;$/;"	v
bf_htab_harsh_probes	src/sm/bf_htab_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_htab_harsh_probes;$/;"	v
bf_htab_hash_collisions	src/sm/bf_htab_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_htab_hash_collisions;$/;"	v
bf_htab_insert_avg_tries	src/sm/bf_htab_stats_t_struct_gen.h	/^ w_base_t::base_float_t bf_htab_insert_avg_tries;$/;"	v
bf_htab_insertions	src/sm/bf_htab_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_htab_insertions;$/;"	v
bf_htab_limit_exceeds	src/sm/bf_htab_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_htab_limit_exceeds;$/;"	v
bf_htab_lookup_avg_probes	src/sm/bf_htab_stats_t_struct_gen.h	/^ w_base_t::base_float_t bf_htab_lookup_avg_probes;$/;"	v
bf_htab_lookups	src/sm/bf_htab_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_htab_lookups;$/;"	v
bf_htab_lookups_failed	src/sm/bf_htab_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_htab_lookups_failed;$/;"	v
bf_htab_max_limit	src/sm/bf_htab_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_htab_max_limit;$/;"	v
bf_htab_probe_empty	src/sm/bf_htab_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_htab_probe_empty;$/;"	v
bf_htab_probes	src/sm/bf_htab_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_htab_probes;$/;"	v
bf_htab_removes	src/sm/bf_htab_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_htab_removes;$/;"	v
bf_htab_slot_count	src/sm/bf_htab_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_htab_slot_count;$/;"	v
bf_htab_slots_tried	src/sm/bf_htab_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_htab_slots_tried;$/;"	v
bf_htab_slow_inserts	src/sm/bf_htab_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_htab_slow_inserts;$/;"	v
bf_htab_stats_t	src/sm/smstats.h	/^class bf_htab_stats_t {$/;"	c
bf_htab_table_size	src/sm/bf_htab_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_htab_table_size;$/;"	v
bf_kick_full	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_kick_full;$/;"	v
bf_kick_replacement	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_kick_replacement;$/;"	v
bf_kick_threshold	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_kick_threshold;$/;"	v
bf_log_flush_all	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_log_flush_all;$/;"	v
bf_log_flush_lsn	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_log_flush_lsn;$/;"	v
bf_look_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_look_cnt;$/;"	v
bf_m	src/sm/bf.cpp	/^bf_m::bf_m(uint4_t max, char *bp, uint4_t pg_writer_cnt)$/;"	f	class:bf_m
bf_m	src/sm/bf.h	/^class bf_m : public smlevel_0 $/;"	c
bf_more_page_write	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_more_page_write;$/;"	v
bf_no_transit_bucket	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_no_transit_bucket;$/;"	v
bf_one_page_write	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_one_page_write;$/;"	v
bf_page_writer_control_t	src/sm/bf.cpp	/^    NORET bf_page_writer_control_t(bool *bptr) :$/;"	f	struct:bf_page_writer_control_t
bf_page_writer_control_t	src/sm/bf.cpp	/^struct bf_page_writer_control_t$/;"	s	file:
bf_prefetch_requests	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_prefetch_requests;$/;"	v
bf_prefetch_thread_t	src/sm/bf_prefetch.cpp	/^bf_prefetch_thread_t::bf_prefetch_thread_t(int i) $/;"	f	class:bf_prefetch_thread_t
bf_prefetch_thread_t	src/sm/bf_prefetch.h	/^class bf_prefetch_thread_t : public smthread_t $/;"	c
bf_prefetches	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_prefetches;$/;"	v
bf_replace_out	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_replace_out;$/;"	v
bf_replaced_clean	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_replaced_clean;$/;"	v
bf_replaced_dirty	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_replaced_dirty;$/;"	v
bf_seven_page_write	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_seven_page_write;$/;"	v
bf_six_page_write	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_six_page_write;$/;"	v
bf_sleep_await_clean	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_sleep_await_clean;$/;"	v
bf_stop	src/sm/bf_core.cpp	/^void bf_stop(bfcb_t *p) $/;"	f
bf_stop_here	src/sm/bf_core.cpp	/^void bf_stop_here() {};$/;"	f
bf_sweep_page_hot_skipped	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_sweep_page_hot_skipped;$/;"	v
bf_three_page_write	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_three_page_write;$/;"	v
bf_two_page_write	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_two_page_write;$/;"	v
bf_unfix_cleaned	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_unfix_cleaned;$/;"	v
bf_upgrade_latch_changed	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_upgrade_latch_changed;$/;"	v
bf_upgrade_latch_race	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_upgrade_latch_race;$/;"	v
bf_write_out	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bf_write_out;$/;"	v
bfcb_t	src/sm/bf_s.h	/^    NORET       bfcb_t()    {};$/;"	f	class:bfcb_t
bfcb_t	src/sm/bf_s.h	/^class bfcb_t {$/;"	c
bfcb_unused_list	src/sm/bf_core.h	/^    bfcb_unused_list()$/;"	f	class:bfcb_unused_list
bfcb_unused_list	src/sm/bf_core.h	/^class bfcb_unused_list : private atomic_container {$/;"	c
bfcore_stophere	src/sm/bf_core.cpp	/^void bfcore_stophere() $/;"	f
bfht	src/sm/smstats.h	/^    bf_htab_stats_t  bfht;$/;"	m	class:sm_stats_info_t
bfpid_t	src/fc/tests/cuckoo.cpp	/^    bfpid_t (uint2_t v, uint s, uint p) :$/;"	f	struct:bfpid_t
bfpid_t	src/fc/tests/cuckoo.cpp	/^struct bfpid_t$/;"	s	file:
bfpid_t	src/sm/bf_s.h	/^bfpid_t::bfpid_t()$/;"	f	class:bfpid_t
bfpid_t	src/sm/bf_s.h	/^bfpid_t::bfpid_t(const lpid_t& p) : lpid_t(p)$/;"	f	class:bfpid_t
bfpid_t	src/sm/bf_s.h	/^class bfpid_t : public lpid_t {$/;"	c
big	src/fc/tests/rand.cpp	/^    w_ieee_double_big    big;$/;"	m	union:__anon132	file:
bindir	Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	config/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/atomic_ops/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/atomic_ops/asm_linkage/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/atomic_ops/asm_linkage/usr/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/atomic_ops/asm_linkage/usr/src/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/atomic_ops/atomic_ops/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/atomic_ops/atomic_ops/amd64/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/atomic_ops/atomic_ops/i386/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/atomic_ops/atomic_ops/sparc/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/atomic_ops/ia32/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/atomic_ops/ia32/sys/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/atomic_ops/intel/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/atomic_ops/intel/ia32/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/atomic_ops/intel/ia32/sys/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/atomic_ops/intel/sys/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/atomic_ops/sparc/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/atomic_ops/sparc/sys/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/common/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/common/tests/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/fc/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/fc/tests/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/sm/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/sm/smsh/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/sm/smsh/lib/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/sm/smsh/scripts/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/sm/tests/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/sthread/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/sthread/tests/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	tools/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bitmap	src/fc/mem_block.h	/^    typedef uint64_t     bitmap; $/;"	t	struct:memory_block::block_bits
bitmap_DEPENDENCIES	src/common/tests/Makefile	/^bitmap_DEPENDENCIES = ..\/libcommon.a ..\/..\/sthread\/libsthread.a \\$/;"	m
bitmap_LDADD	src/common/tests/Makefile	/^bitmap_LDADD = $(LDADD)$/;"	m
bitmap_OBJECTS	src/common/tests/Makefile	/^bitmap_OBJECTS = $(am_bitmap_OBJECTS)$/;"	m
bitmap_SOURCES	src/common/tests/Makefile	/^bitmap_SOURCES = bitmap.cpp$/;"	m
bits	src/sm/logrec.cpp	/^    u_char        bits;$/;"	m	struct:page_set_byte_t	file:
bits	src/sm/pmap.h	/^    u_char  bits[_size];$/;"	m	struct:Pmap
bits	src/sthread/sthread.h	/^        uint64_t           bits;$/;"	m	union:tatas_lock::__anon141
bits	src/sthread/sthread.h	/^        unsigned int       bits;$/;"	m	union:tatas_lock::__anon141
bitshift	src/fc/w_hashing.h	/^    static const int bitshift= 16;$/;"	m	class:w_hashing::uhash
bitvector_DEPENDENCIES	src/fc/tests/Makefile	/^bitvector_DEPENDENCIES = ..\/libfc.a $(LOCALLDADD)$/;"	m
bitvector_LDADD	src/fc/tests/Makefile	/^bitvector_LDADD = $(LDADD)$/;"	m
bitvector_OBJECTS	src/fc/tests/Makefile	/^bitvector_OBJECTS = $(am_bitvector_OBJECTS)$/;"	m
bitvector_SOURCES	src/fc/tests/Makefile	/^bitvector_SOURCES = bitvector.cpp$/;"	m
bjunk	src/common/tests/vectors.cpp	/^const char *bjunk = "Bjunk";$/;"	v
blen	src/sm/sort.cpp	/^    uint4_t blen;         \/\/ real body size$/;"	m	struct:file_sort_key_t	file:
blmap	src/fc/block_alloc.cpp	/^    static BLMap* blmap(bool force=true) {$/;"	f	struct:blob_pool::helper
blob	src/sm/newsort.cpp	/^    blob(const rid_t& rid) : $/;"	f	class:blob
blob	src/sm/newsort.cpp	/^class blob  : public w_base_t$/;"	c	file:
blob_pool	src/fc/block_alloc.cpp	/^blob_pool::blob_pool(size_t size)$/;"	f	class:blob_pool
blob_pool	src/fc/block_alloc.h	/^struct blob_pool$/;"	s
block	src/fc/mem_block.cpp	/^block::block(size_t chip_size, size_t chip_count, size_t block_size)$/;"	f	class:memory_block::block
block	src/fc/mem_block.h	/^struct block {$/;"	s	namespace:memory_block
block	src/sm/partition.cpp	/^    char *block() { return _block; }$/;"	f	class:block_of_zeroes
block	src/sthread/sthread.cpp	/^sthread_t::block($/;"	f	class:sthread_t
block	src/sthread/sthread.cpp	/^sthread_t::block(int4_t timeout \/*= WAIT_FOREVER*\/)$/;"	f	class:sthread_t
block_alloc	src/fc/block_alloc.h	/^struct block_alloc {$/;"	s
block_bits	src/fc/mem_block.cpp	/^block_bits::block_bits(size_t chip_count)$/;"	f	class:memory_block::block_bits
block_bits	src/fc/mem_block.h	/^struct block_bits {$/;"	s	namespace:memory_block
block_list	src/fc/mem_block.cpp	/^block_list::block_list(block_pool* pool, size_t chip_size, size_t chip_count, size_t block_size)$/;"	f	class:memory_block::block_list
block_list	src/fc/mem_block.h	/^struct block_list {$/;"	s	namespace:memory_block
block_of_zeroes	src/sm/partition.cpp	/^    NORET block_of_zeroes() {$/;"	f	class:block_of_zeroes
block_of_zeroes	src/sm/partition.cpp	/^class block_of_zeroes {$/;"	c	file:
block_of_zeros	src/sm/partition.cpp	/^char *block_of_zeros() {$/;"	f
block_pool	src/fc/block_alloc.h	/^    block_pool()$/;"	f	struct:block_pool
block_pool	src/fc/block_alloc.h	/^    block_pool(block_pool const &)$/;"	f	struct:block_pool
block_pool	src/fc/block_alloc.h	/^struct block_pool $/;"	s
block_pool	src/fc/mem_block.h	/^struct block_pool {$/;"	s	namespace:memory_block
block_size	src/fc/block_alloc.h	/^    static size_t block_size() { return BlockSize::BYTES; }$/;"	f	struct:block_pool
bm_clr	src/common/bitmap.cpp	/^void bm_clr(u_char* bm, int offset)$/;"	f
bm_fill	src/common/bitmap.cpp	/^void bm_fill(u_char* bm, int size)$/;"	f
bm_first_clr	src/common/bitmap.cpp	/^int bm_first_clr(const u_char* bm, int size, int start)$/;"	f
bm_first_set	src/common/bitmap.cpp	/^int bm_first_set(const u_char* bm, int size, int start)$/;"	f
bm_is_clr	src/common/bitmap.h	/^inline bool bm_is_clr(const u_char* bm, int offset)$/;"	f
bm_is_set	src/common/bitmap.cpp	/^bool bm_is_set(const u_char* bm, int offset)$/;"	f
bm_last_clr	src/common/bitmap.cpp	/^int bm_last_clr(const u_char* bm, int size, int start)$/;"	f
bm_last_set	src/common/bitmap.cpp	/^int bm_last_set(const u_char* bm, int size, int start)$/;"	f
bm_num_clr	src/common/bitmap.h	/^inline int bm_num_clr(const u_char* bm, int size)$/;"	f
bm_num_set	src/common/bitmap.cpp	/^int bm_num_set(const u_char* bm, int size)$/;"	f
bm_print	src/common/bitmap.cpp	/^void bm_print(u_char* bm, int size)$/;"	f
bm_set	src/common/bitmap.cpp	/^void bm_set(u_char* bm, int offset)$/;"	f
bm_zero	src/common/bitmap.cpp	/^void bm_zero(u_char* bm, int size)$/;"	f
body	src/sm/file_s.h	/^inline const char* record_t::body() const$/;"	f	class:record_t
body	src/sm/newsort.cpp	/^object_t::body(smsize_t offset) const$/;"	f	class:object_t
body	src/sm/pin.cpp	/^const char* pin_i::body()$/;"	f	class:pin_i
body_len	src/sm/file_s.h	/^    smsize_t    body_len;    \/\/ true length of the record $/;"	m	struct:rectag_t
body_offset	src/sm/file_s.h	/^    int body_offset() const { $/;"	f	class:record_t
body_size	src/sm/file_s.h	/^inline smsize_t record_t::body_size() const$/;"	f	class:record_t
body_size	src/sm/newsort.cpp	/^    smsize_t body_size() const {$/;"	f	class:blob
body_size	src/sm/pin.h	/^    smsize_t   body_size() const  { _check_lsn(); return _rec->body_size();}$/;"	f	class:pin_i
body_size	src/sm/sort_s.h	/^    smsize_t    body_size() const { return _bodylen; }$/;"	f	class:ssm_sort::object_t
bodysize	src/sm/newsort.cpp	/^    smsize_t         bodysize() const { return smsize_t(__persistent_part._bodysize); }$/;"	f	class:meta_header_t
bof	src/common/kvl_t.h	/^    static const cvec_t bof;$/;"	m	struct:kvl_t
bof	src/sm/sm_s.cpp	/^const lpid_t lpid_t::bof;$/;"	m	class:lpid_t	file:
bof	src/sm/sm_s.h	/^    static const lpid_t bof;$/;"	m	class:lpid_t
booleans_t	src/sm/newsort.cpp	/^        typedef uint1_t       booleans_t;$/;"	t	struct:meta_header_t::_persistent	file:
boot_time	src/sthread/sthread.cpp	/^stime_t                 sthread_t::boot_time = stime_t::now();$/;"	m	class:sthread_t	file:
boot_time	src/sthread/sthread.h	/^    static stime_t        boot_time;$/;"	m	class:sthread_t
borrow_buf	src/sm/newsort.cpp	/^    char * borrow_buf(smsize_t& how_much_left) {$/;"	f	class:limited_space
bothcases	src/common/regcomp.cpp	/^bothcases(struct parse *p, int ch)$/;"	f	file:
bottom	src/fc/w_list.h	/^    T*                  bottom(){$/;"	f	class:w_list_t
bottom	src/sm/rtree.cpp	/^    rtwork_p* bottom() {$/;"	f	class:rtld_cache_t
bottom	src/sm/rtree_p.h	/^rtstk_t::bottom()$/;"	f	class:rtstk_t
bound	src/fc/nbox.h	/^    int bound(int n) const     { return array[n]; }$/;"	f	class:nbox_t
bound	src/sm/rtree.cpp	/^    const nbox_t& bound() { return *mbb; }$/;"	f	class:rtwork_p
bound1	src/sm/btcursor.h	/^    const cvec_t&         bound1() const { return *_bound1;}$/;"	f	class:bt_cursor_t
bound2	src/sm/btcursor.h	/^    const cvec_t&         bound2() const { return *_bound2;}$/;"	f	class:bt_cursor_t
bounds	src/fc/mem_block.h	/^    bounds_check<COUNT, MIN_CHIPS, MAX_CHIPS>     bounds;$/;"	m	struct:memory_block::bounds_check
bounds_check	src/fc/mem_block.h	/^struct bounds_check : fail_unless<(L <= N) && (N <= U)> {$/;"	s	namespace:memory_block
box	src/fc/nbox.h	/^    int4_t* box() { return array; }    \/\/ reveal internal storage$/;"	f	class:nbox_t
box	src/sm/smsh/shell.cpp	/^        nbox_t        *box[box_count];$/;"	m	struct:BoxMinder	file:
boxGen	src/sm/smsh/shell.cpp	/^static void boxGen(nbox_t* rect[], int number, const nbox_t& universe)$/;"	f	file:
box_DEPENDENCIES	src/fc/tests/Makefile	/^box_DEPENDENCIES = ..\/libfc.a $(LOCALLDADD)$/;"	m
box_LDADD	src/fc/tests/Makefile	/^box_LDADD = $(LDADD)$/;"	m
box_OBJECTS	src/fc/tests/Makefile	/^box_OBJECTS = $(am_box_OBJECTS)$/;"	m
box_SOURCES	src/fc/tests/Makefile	/^box_SOURCES = box.cpp$/;"	m
box_count	src/sm/smsh/shell.cpp	/^        enum { box_count = 50 };$/;"	e	enum:BoxMinder::__anon74	file:
box_factory	src/sm/smsh/sort_funcs3.cpp	/^boxfactory box_factory;$/;"	v
boxes	src/sm/smsh/shell.cpp	/^static BoxMinder        boxes;$/;"	v	file:
boxfactory	src/sm/smsh/sort_funcs3.cpp	/^class boxfactory : public factory_t $/;"	c	file:
bp_collect	src/sm/vtable_sm.cpp	/^ss_m::bp_collect( vtable_t & res, bool names_too) $/;"	f	class:ss_m
bp_dirty_attr	src/sm/bf_core.cpp	/^    bp_dirty_attr,$/;"	e	enum:__anon62	file:
bp_hot_attr	src/sm/bf_core.cpp	/^    bp_hot_attr,$/;"	e	enum:__anon62	file:
bp_last	src/sm/bf_core.cpp	/^    bp_last $/;"	e	enum:__anon62	file:
bp_mode_attr	src/sm/bf_core.cpp	/^    bp_mode_attr,$/;"	e	enum:__anon62	file:
bp_pid_attr	src/sm/bf_core.cpp	/^    bp_pid_attr,$/;"	e	enum:__anon62	file:
bp_pin_cnt_attr	src/sm/bf_core.cpp	/^    bp_pin_cnt_attr,$/;"	e	enum:__anon62	file:
bp_vtable_attr_names	src/sm/bf_core.cpp	/^const char *bp_vtable_attr_names[] =$/;"	v
brec	src/sm/logrec.h	/^    brec_t             brec[max];$/;"	m	struct:chkpt_bf_tab_t
brec_t	src/sm/logrec.h	/^    struct brec_t {$/;"	s	struct:chkpt_bf_tab_t
bstop	src/sm/btree_impl.cpp	/^void bstop() $/;"	f
bt	src/sm/sm.cpp	/^btree_m* smlevel_2::bt = 0;$/;"	m	class:smlevel_2	file:
bt	src/sm/sm_int_2.h	/^    static btree_m* bt;$/;"	m	class:smlevel_2
bt_clr_smo_traverse	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bt_clr_smo_traverse;$/;"	v
bt_cursor_t	src/sm/btcursor.h	/^bt_cursor_t::bt_cursor_t(bool include_nulls)$/;"	f	class:bt_cursor_t
bt_cursor_t	src/sm/btcursor.h	/^class bt_cursor_t : smlevel_2 $/;"	c
bt_cuts	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bt_cuts;$/;"	v
bt_find_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bt_find_cnt;$/;"	v
bt_grows	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bt_grows;$/;"	v
bt_insert_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bt_insert_cnt;$/;"	v
bt_leaf_splits	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bt_leaf_splits;$/;"	v
bt_links	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bt_links;$/;"	v
bt_partial_traverse_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bt_partial_traverse_cnt;$/;"	v
bt_pcompress	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bt_pcompress;$/;"	v
bt_plmax	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bt_plmax;$/;"	v
bt_posc	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bt_posc;$/;"	v
bt_remove_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bt_remove_cnt;$/;"	v
bt_restart_traverse_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bt_restart_traverse_cnt;$/;"	v
bt_scan_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bt_scan_cnt;$/;"	v
bt_shrinks	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bt_shrinks;$/;"	v
bt_splits	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bt_splits;$/;"	v
bt_traverse_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bt_traverse_cnt;$/;"	v
bt_update_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bt_update_cnt;$/;"	v
bt_upgrade_fail_retry	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t bt_upgrade_fail_retry;$/;"	v
btctrl_t	src/sm/btree_p.h	/^    struct btctrl_t {$/;"	s	class:btree_p
btrec_t	src/sm/btree_p.h	/^    NORET            btrec_t()        {};$/;"	f	class:btrec_t
btrec_t	src/sm/btree_p.h	/^btrec_t::btrec_t(const btree_p& page, slotid_t slot)  $/;"	f	class:btrec_t
btrec_t	src/sm/btree_p.h	/^class btrec_t {$/;"	c
btree	src/sm/sm_du_stats.h	/^    btree_stats_t     btree;$/;"	m	struct:sm_du_stats_t
btree_cnt	src/sm/sm_du_stats.h	/^    base_stat_t        btree_cnt;$/;"	m	struct:sm_du_stats_t
btree_impl	src/sm/btree_impl.h	/^class btree_impl : protected btree_m  {$/;"	c
btree_insert_log	src/sm/logdef_gen.cpp	/^	btree_insert_log (logrec_t*)   {};$/;"	f	class:btree_insert_log
btree_insert_log	src/sm/logdef_gen.cpp	/^    class btree_insert_log : public logrec_t {$/;"	c	file:
btree_insert_log	src/sm/logrec.cpp	/^btree_insert_log::btree_insert_log($/;"	f	class:btree_insert_log
btree_insert_t	src/sm/logrec.cpp	/^btree_insert_t::btree_insert_t($/;"	f	class:btree_insert_t
btree_insert_t	src/sm/logrec.cpp	/^struct btree_insert_t {$/;"	s	file:
btree_int_stats_t	src/sm/sm_du_stats.h	/^    NORET              btree_int_stats_t() {clear();}$/;"	f	struct:btree_int_stats_t
btree_int_stats_t	src/sm/sm_du_stats.h	/^struct btree_int_stats_t {$/;"	s
btree_latch_manager	src/sm/btree_latch_manager.cpp	/^btree_latch_manager::btree_latch_manager()$/;"	f	class:btree_latch_manager
btree_latch_manager	src/sm/btree_latch_manager.h	/^class btree_latch_manager $/;"	c
btree_latch_map	src/sm/btree_latch_manager.h	/^    typedef std::map<lpid_t, latch_t*, lpid_cmp> btree_latch_map;$/;"	t	class:btree_latch_manager
btree_latches	src/sm/smindex.cpp	/^btree_latch_manager btree_latches;$/;"	v
btree_lf_stats_t	src/sm/sm_du_stats.h	/^    NORET              btree_lf_stats_t() {clear();}$/;"	f	struct:btree_lf_stats_t
btree_lf_stats_t	src/sm/sm_du_stats.h	/^struct btree_lf_stats_t {$/;"	s
btree_m	src/sm/btree.h	/^    NORET                        btree_m()   {};$/;"	f	class:btree_m
btree_m	src/sm/btree.h	/^class btree_m : public smlevel_2 {$/;"	c
btree_p	src/sm/btree_p.h	/^class btree_p : public zkeyed_p {$/;"	c
btree_purge_log	src/sm/logdef_gen.cpp	/^	btree_purge_log (logrec_t*)   {};$/;"	f	class:btree_purge_log
btree_purge_log	src/sm/logdef_gen.cpp	/^    class btree_purge_log : public logrec_t {$/;"	c	file:
btree_purge_log	src/sm/logrec.cpp	/^btree_purge_log::btree_purge_log(const page_p& page)$/;"	f	class:btree_purge_log
btree_purge_t	src/sm/logrec.cpp	/^    btree_purge_t(const lpid_t& pid) : root(pid) {};$/;"	f	struct:btree_purge_t
btree_purge_t	src/sm/logrec.cpp	/^struct btree_purge_t {$/;"	s	file:
btree_remove_log	src/sm/logdef_gen.cpp	/^	btree_remove_log (logrec_t*)   {};$/;"	f	class:btree_remove_log
btree_remove_log	src/sm/logdef_gen.cpp	/^    class btree_remove_log : public logrec_t {$/;"	c	file:
btree_remove_log	src/sm/logrec.cpp	/^btree_remove_log::btree_remove_log($/;"	f	class:btree_remove_log
btree_remove_t	src/sm/logrec.cpp	/^typedef btree_insert_t btree_remove_t;$/;"	t	file:
btree_stats_t	src/sm/sm_du_stats.h	/^    NORET           btree_stats_t() {clear();}$/;"	f	struct:btree_stats_t
btree_stats_t	src/sm/sm_du_stats.h	/^struct btree_stats_t {$/;"	s
btsink_t	src/sm/btree_bl.cpp	/^    btsink_t() { }$/;"	f	class:btsink_t
btsink_t	src/sm/btree_bl.cpp	/^btsink_t::btsink_t(const lpid_t& root, rc_t& rc)$/;"	f	class:btsink_t
btsink_t	src/sm/btree_bl.cpp	/^class btsink_t : private btree_m {$/;"	c	file:
bucket	src/sm/bf_htab.h	/^        NORET               bucket() : _count(0) { $/;"	f	class:bf_core_m::htab::bucket
bucket	src/sm/bf_htab.h	/^    class bucket {$/;"	c	class:bf_core_m::htab
bucket	src/sm/page.h	/^page_p::bucket() const {$/;"	f	class:page_p
bucket	src/sm/page_h.h	/^    shpid_t bucket[space_num_buckets];$/;"	m	class:store_histo_t
bucket2free_space	src/sm/page.cpp	/^page_p::bucket2free_space(space_bucket_t b) $/;"	f	class:page_p
bucket_0_max_free	src/sm/page_h.h	/^    bucket_0_max_free = bucket_1_min_free - 1,$/;"	e	enum:__anon54
bucket_0_min_free	src/sm/page_h.h	/^    bucket_0_min_free = 0,$/;"	e	enum:__anon54
bucket_10_max_free	src/sm/page_h.h	/^    bucket_10_max_free = bucket_11_min_free -1,$/;"	e	enum:__anon54
bucket_10_min_free	src/sm/page_h.h	/^    bucket_10_min_free = percent_62,$/;"	e	enum:__anon54
bucket_11_max_free	src/sm/page_h.h	/^    bucket_11_max_free = bucket_12_min_free -1,$/;"	e	enum:__anon54
bucket_11_min_free	src/sm/page_h.h	/^    bucket_11_min_free = percent_69,$/;"	e	enum:__anon54
bucket_12_max_free	src/sm/page_h.h	/^    bucket_12_max_free = bucket_13_min_free -1,$/;"	e	enum:__anon54
bucket_12_min_free	src/sm/page_h.h	/^    bucket_12_min_free = percent_75,$/;"	e	enum:__anon54
bucket_13_max_free	src/sm/page_h.h	/^    bucket_13_max_free = bucket_14_min_free -1,$/;"	e	enum:__anon54
bucket_13_min_free	src/sm/page_h.h	/^    bucket_13_min_free = percent_82,$/;"	e	enum:__anon54
bucket_14_max_free	src/sm/page_h.h	/^    bucket_14_max_free = bucket_15_min_free -1,$/;"	e	enum:__anon54
bucket_14_min_free	src/sm/page_h.h	/^    bucket_14_min_free = percent_87,$/;"	e	enum:__anon54
bucket_15_max_free	src/sm/page_h.h	/^    bucket_15_max_free = percent_100 - page_overhead,$/;"	e	enum:__anon54
bucket_15_min_free	src/sm/page_h.h	/^    bucket_15_min_free = percent_94,$/;"	e	enum:__anon54
bucket_1_max_free	src/sm/page_h.h	/^    bucket_1_max_free = bucket_2_min_free - 1,$/;"	e	enum:__anon54
bucket_1_min_free	src/sm/page_h.h	/^    bucket_1_min_free = percent_07,$/;"	e	enum:__anon54
bucket_2_max_free	src/sm/page_h.h	/^    bucket_2_max_free = bucket_3_min_free - 1,$/;"	e	enum:__anon54
bucket_2_min_free	src/sm/page_h.h	/^    bucket_2_min_free = percent_12,$/;"	e	enum:__anon54
bucket_3_max_free	src/sm/page_h.h	/^    bucket_3_max_free = bucket_4_min_free - 1,$/;"	e	enum:__anon54
bucket_3_min_free	src/sm/page_h.h	/^    bucket_3_min_free = percent_19, $/;"	e	enum:__anon54
bucket_4_max_free	src/sm/page_h.h	/^    bucket_4_max_free = bucket_5_min_free - 1,$/;"	e	enum:__anon54
bucket_4_min_free	src/sm/page_h.h	/^    bucket_4_min_free = percent_25,$/;"	e	enum:__anon54
bucket_5_max_free	src/sm/page_h.h	/^    bucket_5_max_free = bucket_6_min_free - 1,$/;"	e	enum:__anon54
bucket_5_min_free	src/sm/page_h.h	/^    bucket_5_min_free = percent_32,$/;"	e	enum:__anon54
bucket_6_max_free	src/sm/page_h.h	/^    bucket_6_max_free = bucket_7_min_free - 1,$/;"	e	enum:__anon54
bucket_6_min_free	src/sm/page_h.h	/^    bucket_6_min_free = percent_37,$/;"	e	enum:__anon54
bucket_7_max_free	src/sm/page_h.h	/^    bucket_7_max_free = bucket_8_min_free -1,$/;"	e	enum:__anon54
bucket_7_min_free	src/sm/page_h.h	/^    bucket_7_min_free = percent_44,$/;"	e	enum:__anon54
bucket_8_max_free	src/sm/page_h.h	/^    bucket_8_max_free = bucket_9_min_free -1,$/;"	e	enum:__anon54
bucket_8_min_free	src/sm/page_h.h	/^    bucket_8_min_free = percent_50,$/;"	e	enum:__anon54
bucket_9_max_free	src/sm/page_h.h	/^    bucket_9_max_free = bucket_10_min_free -1,$/;"	e	enum:__anon54
bucket_9_min_free	src/sm/page_h.h	/^    bucket_9_min_free = percent_57,$/;"	e	enum:__anon54
bucket_change	src/sm/histo.cpp	/^histoid_t::bucket_change($/;"	f	class:histoid_t
bucket_for	src/fc/w_hash.h	/^w_base_t::uint4_t w_hash_t<T,LOCK, K>::bucket_for(K const &k) const {$/;"	f	class:w_hash_t
bucket_for	src/fc/w_hash.h	/^w_base_t::uint4_t w_hash_t<T,LOCK, K>::bucket_for(T const* t) const {$/;"	f	class:w_hash_t
bucket_map	src/sm/log_core.cpp	/^	typedef std::map<int, long> bucket_map;$/;"	t	struct:histo	file:
bucket_t	src/sm/lock_core.cpp	/^    NORET                         bucket_t() :$/;"	f	class:bucket_t
bucket_t	src/sm/lock_core.cpp	/^class bucket_t {$/;"	c	file:
buckets_in_table	src/sm/histo.cpp	/^        buckets_in_table = 11,$/;"	e	enum:__anon50	file:
buf	src/fc/w_temp_alloc.h	/^            char *buf;$/;"	m	struct:w_temp_alloc::ptr::_decay
buf	src/fc/w_temp_alloc.h	/^            char const *buf;$/;"	m	struct:w_temp_alloc::ptr::_decay_const
buf	src/fc/w_temp_alloc.h	/^        buf(buf const &v)$/;"	f	struct:w_temp_alloc::buf
buf	src/fc/w_temp_alloc.h	/^        buf(size_t sz, char *ptr) {$/;"	f	struct:w_temp_alloc::buf
buf	src/fc/w_temp_alloc.h	/^        char *buf;$/;"	m	struct:w_temp_alloc::fixed_pool
buf	src/fc/w_temp_alloc.h	/^        explicit buf(size_t sz=0)$/;"	f	struct:w_temp_alloc::buf
buf	src/fc/w_temp_alloc.h	/^    struct buf : ptr {$/;"	s	struct:w_temp_alloc
buf	src/sm/lock_cache.h	/^    lock_cache_elem_t        buf[S][L];$/;"	m	class:lock_cache_t
buf	src/sm/rtree.cpp	/^    rtwork_p buf[3];$/;"	m	class:rtld_cache_t	file:
buf	src/sthread/tests/ioperf.cpp	/^char* buf = 0;$/;"	v
buf	src/sthread/tests/thread2.cpp	/^	char	*buf;$/;"	m	class:io_thread_t	file:
buf_space	src/sm/sort.h	/^    chunk_mgr_t       buf_space;    \/\/ in-memory storage$/;"	m	class:sort_stream_i
buffer	src/fc/errlog.cpp	/^static char buffer[ERRLOG_BUF_SIZE];$/;"	v	file:
buffer_pool_size	src/sm/smstats.h	/^    u_long buffer_pool_size;    \/\/ buffer pool size in kilo-bytes$/;"	m	struct:sm_config_info_t
buffers	src/fc/w_form.cpp	/^static char    *buffers[BUF_SLOTS];$/;"	v	file:
buffers	src/fc/w_form.cpp	/^static char    buffers[BUF_SLOTS][MAX_BUFFER];$/;"	v	file:
bufhiwat	src/sm/newsort.cpp	/^    smsize_t bufhiwat() const { return _buf_hiwat; }$/;"	f	class:limited_space
bufsz	src/fc/w_temp_alloc.h	/^        size_t bufsz;$/;"	m	struct:w_temp_alloc::fixed_pool
build	Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	config/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	src/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	src/atomic_ops/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	src/atomic_ops/asm_linkage/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	src/atomic_ops/asm_linkage/usr/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	src/atomic_ops/asm_linkage/usr/src/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	src/atomic_ops/atomic_ops/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	src/atomic_ops/atomic_ops/amd64/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	src/atomic_ops/atomic_ops/i386/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	src/atomic_ops/atomic_ops/sparc/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	src/atomic_ops/ia32/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	src/atomic_ops/ia32/sys/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	src/atomic_ops/intel/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	src/atomic_ops/intel/ia32/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	src/atomic_ops/intel/ia32/sys/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	src/atomic_ops/intel/sys/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	src/atomic_ops/sparc/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	src/atomic_ops/sparc/sys/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	src/common/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	src/common/tests/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	src/fc/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	src/fc/tests/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	src/sm/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	src/sm/smsh/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	src/sm/smsh/lib/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	src/sm/smsh/scripts/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	src/sm/tests/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	src/sthread/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	src/sthread/tests/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build	tools/Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build_alias	Makefile	/^build_alias = $/;"	m
build_alias	config/Makefile	/^build_alias = $/;"	m
build_alias	src/Makefile	/^build_alias = $/;"	m
build_alias	src/atomic_ops/Makefile	/^build_alias = $/;"	m
build_alias	src/atomic_ops/asm_linkage/Makefile	/^build_alias = $/;"	m
build_alias	src/atomic_ops/asm_linkage/usr/Makefile	/^build_alias = $/;"	m
build_alias	src/atomic_ops/asm_linkage/usr/src/Makefile	/^build_alias = $/;"	m
build_alias	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^build_alias = $/;"	m
build_alias	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^build_alias = $/;"	m
build_alias	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^build_alias = $/;"	m
build_alias	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^build_alias = $/;"	m
build_alias	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^build_alias = $/;"	m
build_alias	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^build_alias = $/;"	m
build_alias	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^build_alias = $/;"	m
build_alias	src/atomic_ops/atomic_ops/Makefile	/^build_alias = $/;"	m
build_alias	src/atomic_ops/atomic_ops/amd64/Makefile	/^build_alias = $/;"	m
build_alias	src/atomic_ops/atomic_ops/i386/Makefile	/^build_alias = $/;"	m
build_alias	src/atomic_ops/atomic_ops/sparc/Makefile	/^build_alias = $/;"	m
build_alias	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^build_alias = $/;"	m
build_alias	src/atomic_ops/ia32/Makefile	/^build_alias = $/;"	m
build_alias	src/atomic_ops/ia32/sys/Makefile	/^build_alias = $/;"	m
build_alias	src/atomic_ops/intel/Makefile	/^build_alias = $/;"	m
build_alias	src/atomic_ops/intel/ia32/Makefile	/^build_alias = $/;"	m
build_alias	src/atomic_ops/intel/ia32/sys/Makefile	/^build_alias = $/;"	m
build_alias	src/atomic_ops/intel/sys/Makefile	/^build_alias = $/;"	m
build_alias	src/atomic_ops/sparc/Makefile	/^build_alias = $/;"	m
build_alias	src/atomic_ops/sparc/sys/Makefile	/^build_alias = $/;"	m
build_alias	src/common/Makefile	/^build_alias = $/;"	m
build_alias	src/common/tests/Makefile	/^build_alias = $/;"	m
build_alias	src/fc/Makefile	/^build_alias = $/;"	m
build_alias	src/fc/tests/Makefile	/^build_alias = $/;"	m
build_alias	src/sm/Makefile	/^build_alias = $/;"	m
build_alias	src/sm/smsh/Makefile	/^build_alias = $/;"	m
build_alias	src/sm/smsh/lib/Makefile	/^build_alias = $/;"	m
build_alias	src/sm/smsh/scripts/Makefile	/^build_alias = $/;"	m
build_alias	src/sm/tests/Makefile	/^build_alias = $/;"	m
build_alias	src/sthread/Makefile	/^build_alias = $/;"	m
build_alias	src/sthread/tests/Makefile	/^build_alias = $/;"	m
build_alias	tools/Makefile	/^build_alias = $/;"	m
build_cpu	Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	config/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	src/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	src/atomic_ops/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	src/atomic_ops/asm_linkage/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	src/atomic_ops/asm_linkage/usr/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	src/atomic_ops/asm_linkage/usr/src/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	src/atomic_ops/atomic_ops/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	src/atomic_ops/atomic_ops/amd64/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	src/atomic_ops/atomic_ops/i386/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	src/atomic_ops/atomic_ops/sparc/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	src/atomic_ops/ia32/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	src/atomic_ops/ia32/sys/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	src/atomic_ops/intel/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	src/atomic_ops/intel/ia32/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	src/atomic_ops/intel/ia32/sys/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	src/atomic_ops/intel/sys/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	src/atomic_ops/sparc/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	src/atomic_ops/sparc/sys/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	src/common/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	src/common/tests/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	src/fc/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	src/fc/tests/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	src/sm/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	src/sm/smsh/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	src/sm/smsh/lib/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	src/sm/smsh/scripts/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	src/sm/tests/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	src/sthread/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	src/sthread/tests/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	tools/Makefile	/^build_cpu = x86_64$/;"	m
build_os	Makefile	/^build_os = linux-gnu$/;"	m
build_os	config/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/atomic_ops/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/atomic_ops/asm_linkage/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/atomic_ops/asm_linkage/usr/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/atomic_ops/asm_linkage/usr/src/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/atomic_ops/atomic_ops/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/atomic_ops/atomic_ops/amd64/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/atomic_ops/atomic_ops/i386/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/atomic_ops/atomic_ops/sparc/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/atomic_ops/ia32/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/atomic_ops/ia32/sys/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/atomic_ops/intel/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/atomic_ops/intel/ia32/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/atomic_ops/intel/ia32/sys/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/atomic_ops/intel/sys/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/atomic_ops/sparc/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/atomic_ops/sparc/sys/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/common/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/common/tests/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/fc/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/fc/tests/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/sm/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/sm/smsh/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/sm/smsh/lib/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/sm/smsh/scripts/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/sm/tests/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/sthread/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/sthread/tests/Makefile	/^build_os = linux-gnu$/;"	m
build_os	tools/Makefile	/^build_os = linux-gnu$/;"	m
build_triplet	Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	config/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	src/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	src/atomic_ops/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	src/atomic_ops/asm_linkage/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	src/atomic_ops/asm_linkage/usr/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	src/atomic_ops/asm_linkage/usr/src/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	src/atomic_ops/atomic_ops/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	src/atomic_ops/atomic_ops/amd64/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	src/atomic_ops/atomic_ops/i386/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	src/atomic_ops/atomic_ops/sparc/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	src/atomic_ops/ia32/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	src/atomic_ops/ia32/sys/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	src/atomic_ops/intel/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	src/atomic_ops/intel/ia32/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	src/atomic_ops/intel/ia32/sys/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	src/atomic_ops/intel/sys/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	src/atomic_ops/sparc/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	src/atomic_ops/sparc/sys/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	src/common/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	src/common/tests/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	src/fc/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	src/fc/tests/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	src/sm/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	src/sm/smsh/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	src/sm/smsh/lib/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	src/sm/smsh/scripts/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	src/sm/tests/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	src/sthread/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	src/sthread/tests/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_triplet	tools/Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
build_vendor	Makefile	/^build_vendor = unknown$/;"	m
build_vendor	config/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	src/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	src/atomic_ops/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	src/atomic_ops/asm_linkage/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	src/atomic_ops/asm_linkage/usr/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	src/atomic_ops/asm_linkage/usr/src/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	src/atomic_ops/atomic_ops/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	src/atomic_ops/atomic_ops/amd64/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	src/atomic_ops/atomic_ops/i386/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	src/atomic_ops/atomic_ops/sparc/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	src/atomic_ops/ia32/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	src/atomic_ops/ia32/sys/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	src/atomic_ops/intel/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	src/atomic_ops/intel/ia32/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	src/atomic_ops/intel/ia32/sys/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	src/atomic_ops/intel/sys/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	src/atomic_ops/sparc/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	src/atomic_ops/sparc/sys/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	src/common/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	src/common/tests/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	src/fc/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	src/fc/tests/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	src/sm/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	src/sm/smsh/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	src/sm/smsh/lib/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	src/sm/smsh/scripts/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	src/sm/tests/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	src/sthread/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	src/sthread/tests/Makefile	/^build_vendor = unknown$/;"	m
build_vendor	tools/Makefile	/^build_vendor = unknown$/;"	m
builddir	Makefile	/^builddir = .$/;"	m
builddir	config/Makefile	/^builddir = .$/;"	m
builddir	src/Makefile	/^builddir = .$/;"	m
builddir	src/atomic_ops/Makefile	/^builddir = .$/;"	m
builddir	src/atomic_ops/asm_linkage/Makefile	/^builddir = .$/;"	m
builddir	src/atomic_ops/asm_linkage/usr/Makefile	/^builddir = .$/;"	m
builddir	src/atomic_ops/asm_linkage/usr/src/Makefile	/^builddir = .$/;"	m
builddir	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^builddir = .$/;"	m
builddir	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^builddir = .$/;"	m
builddir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^builddir = .$/;"	m
builddir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^builddir = .$/;"	m
builddir	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^builddir = .$/;"	m
builddir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^builddir = .$/;"	m
builddir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^builddir = .$/;"	m
builddir	src/atomic_ops/atomic_ops/Makefile	/^builddir = .$/;"	m
builddir	src/atomic_ops/atomic_ops/amd64/Makefile	/^builddir = .$/;"	m
builddir	src/atomic_ops/atomic_ops/i386/Makefile	/^builddir = .$/;"	m
builddir	src/atomic_ops/atomic_ops/sparc/Makefile	/^builddir = .$/;"	m
builddir	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^builddir = .$/;"	m
builddir	src/atomic_ops/ia32/Makefile	/^builddir = .$/;"	m
builddir	src/atomic_ops/ia32/sys/Makefile	/^builddir = .$/;"	m
builddir	src/atomic_ops/intel/Makefile	/^builddir = .$/;"	m
builddir	src/atomic_ops/intel/ia32/Makefile	/^builddir = .$/;"	m
builddir	src/atomic_ops/intel/ia32/sys/Makefile	/^builddir = .$/;"	m
builddir	src/atomic_ops/intel/sys/Makefile	/^builddir = .$/;"	m
builddir	src/atomic_ops/sparc/Makefile	/^builddir = .$/;"	m
builddir	src/atomic_ops/sparc/sys/Makefile	/^builddir = .$/;"	m
builddir	src/common/Makefile	/^builddir = .$/;"	m
builddir	src/common/tests/Makefile	/^builddir = .$/;"	m
builddir	src/fc/Makefile	/^builddir = .$/;"	m
builddir	src/fc/tests/Makefile	/^builddir = .$/;"	m
builddir	src/sm/Makefile	/^builddir = .$/;"	m
builddir	src/sm/smsh/Makefile	/^builddir = .$/;"	m
builddir	src/sm/smsh/lib/Makefile	/^builddir = .$/;"	m
builddir	src/sm/smsh/scripts/Makefile	/^builddir = .$/;"	m
builddir	src/sm/tests/Makefile	/^builddir = .$/;"	m
builddir	src/sthread/Makefile	/^builddir = .$/;"	m
builddir	src/sthread/tests/Makefile	/^builddir = .$/;"	m
builddir	tools/Makefile	/^builddir = .$/;"	m
bulk_load	src/sm/btree_bl.cpp	/^btree_m::bulk_load($/;"	f	class:btree_m
bulk_load	src/sm/rtree.cpp	/^rtree_m::bulk_load($/;"	f	class:rtree_m
bulk_loaded_store_type	src/sm/btree.h	/^    static const smlevel_0::store_flag_t        bulk_loaded_store_type;$/;"	m	class:btree_m
bulk_loaded_store_type	src/sm/btree_bl.cpp	/^const smlevel_0::store_flag_t btree_m::bulk_loaded_store_type $/;"	m	class:btree_m	file:
bulkld_index	src/sm/smindex.cpp	/^ss_m::bulkld_index($/;"	f	class:ss_m
bulkld_index	src/sm/smindex.cpp	/^w_rc_t        ss_m::bulkld_index($/;"	f	class:ss_m
bulkld_md_index	src/sm/smindex.cpp	/^ss_m::bulkld_md_index($/;"	f	class:ss_m
bv	src/sm/smsh/shell.h	/^    const char    *bv;$/;"	m	union:typed_value::__anon75
byte	src/sm/logrec.h	/^        fill1        byte; \/\/ for valgrind\/purify$/;"	m	struct:chkpt_dev_tab_t::devrec_t
bytes2box	src/fc/nbox.cpp	/^void nbox_t::bytes2box(const char* key, int klen)$/;"	f	class:nbox_t
bytes2count	src/fc/dynarray.h	/^    static size_t bytes2count(size_t bytes) { return bytes\/sizeof(T); }$/;"	f	struct:dynvector
bytesForBits	src/fc/w_bitmap.cpp	/^w_bitmap_t::bytesForBits(uint4_t numBits)$/;"	f	class:w_bitmap_t
bytes_required_for	src/fc/vtable.h	/^    static int   bytes_required_for(int n, int m) {$/;"	f	class:vtable_row_t
c	src/common/tests/vectors.cpp	/^const char *c = "cccccccccc";$/;"	v
c	src/fc/dynarray.h	/^    union ptr { char const* cc; T const* tc; char* c; T* t; };$/;"	m	union:dynvector::ptr
c	src/fc/tests/rand.cpp	/^    ary c;$/;"	m	union:__anon132	file:
c	src/sm/sort_s.h	/^    void *   c; \/\/ datum stored as a void*, punned by$/;"	m	class:ssm_sort::key_cookie_t
c_str	src/fc/w_strstream.h	/^    const char *c_str()$/;"	f	class:w_ostrstream
cache	src/sm/vol.h	/^        typedef std::set<ext_info>   cache;$/;"	t	class:vol_t::ext_cache_t
cache_iterator	src/sm/vol.h	/^        typedef cache::iterator      cache_iterator;$/;"	t	class:vol_t::ext_cache_t
cache_pool	src/fc/block_alloc.h	/^	NORET cache_pool(size_t cs, size_t cc, size_t l2bs, size_t mb)$/;"	f	struct:object_cache::cache_pool
cache_pool	src/fc/block_alloc.h	/^    struct cache_pool : dynpool {$/;"	s	struct:object_cache
cachedMinRecLSN	src/sm/restart.cpp	/^    lsn_t                        cachedMinRecLSN;$/;"	m	class:dirty_pages_tab_t	file:
cached_granularity	src/sm/lock_s.h	/^    static const int cached_granularity = t_page;$/;"	m	class:lockid_t
calc_bound	src/sm/rtree.cpp	/^rtree_p::calc_bound(nbox_t& nb)$/;"	f	class:rtree_p
calc_kvl	src/common/vec_t.cpp	/^void cvec_t::calc_kvl(w_base_t::uint4_t& rh) const$/;"	f	class:cvec_t
calc_set_bound	src/sm/rtree.cpp	/^    rc_t                        calc_set_bound() {$/;"	f	class:rtwork_p
callback_epilogue	src/sm/newsort.cpp	/^    void          callback_epilogue() const {$/;"	f	class:blob	file:
callback_epilogue	src/sm/newsort.cpp	/^    void          callback_epilogue() const {$/;"	f	class:ssm_sort::run_mgr
callback_epilogue	src/sm/newsort.cpp	/^    void  callback_epilogue() const { _callback_epilogue(); }$/;"	f	class:sm_object_t
callback_prologue	src/sm/newsort.cpp	/^    void          callback_prologue() const {$/;"	f	class:blob	file:
callback_prologue	src/sm/newsort.cpp	/^    void          callback_prologue() const {$/;"	f	class:ssm_sort::run_mgr
callback_prologue	src/sm/newsort.cpp	/^    void  callback_prologue() const { _callback_prologue(); }$/;"	f	class:sm_object_t
canProceed	src/common/tests/latch1.cpp	/^    bool                  canProceed;$/;"	m	class:latch_thread_t	file:
canProceed	src/sm/smsh/tcl_thread.h	/^    volatile bool                canProceed;$/;"	m	class:tcl_thread_t
can_be_in_xct	src/sm/prologue.h	/^        can_be_in_xct,  \/\/ in or not -- no test for active or prepared$/;"	e	enum:prologue_rc_t::xct_state_t
can_replace	src/sm/bf_core.cpp	/^bool bf_core_m::can_replace(bfcb_t* p, int rounds) $/;"	f	class:bf_core_m
cancelslaves	src/sm/bf.cpp	/^    bool cancelslaves;    \/\/ cancel all slaves due to error by some slave$/;"	m	struct:bf_page_writer_control_t	file:
canonize	src/fc/nbox.cpp	/^nbox_t::canonize()$/;"	f	class:nbox_t
capacity	src/fc/dynarray.h	/^    size_t capacity() const { return _capacity; }$/;"	f	struct:dynarray
capacity	src/fc/dynarray.h	/^    size_t capacity() const {$/;"	f	struct:dynvector
carry_obj	src/sm/sort_s.h	/^    bool    carry_obj() const {  return _carry_obj; }$/;"	f	class:ssm_sort::sort_keys_t
cas_sli_status	src/sm/lock_x.h	/^    sli_status_t cas_sli_status(sli_status_t expect, sli_status_t assign) {$/;"	f	class:lock_request_t
cas_state	src/sm/xct.cpp	/^    int cas_state(int expected, int to_assign) {$/;"	f	struct:xct_link
cas_tail	src/sm/xct.cpp	/^    xct_link* cas_tail(xct_link* old_tail, xct_link* new_tail) {$/;"	f	struct:xct_list
casip	src/atomic_ops/atomic_ops_impl.h	410;"	d
cat	src/sm/logrec.h	/^logrec_t::cat() const $/;"	f	class:logrec_t
cat_str	src/sm/logrec.cpp	/^logrec_t::cat_str() const$/;"	f	class:logrec_t
cat_t	src/common/regex2.h	/^typedef unsigned char cat_t;$/;"	t
categories	src/common/regex2.h	/^    cat_t *categories;    \/* ->catspace[-CHAR_MIN] *\/$/;"	m	struct:re_guts
categorize	src/common/regcomp.cpp	/^categorize(struct parse *p, struct re_guts *g)$/;"	f	file:
category_t	src/sm/logrec.h	/^    enum category_t {$/;"	g	class:logrec_t
catspace	src/common/regex2.h	/^    cat_t catspace[1];    \/* actually [NC] *\/$/;"	m	struct:re_guts
cc	src/fc/dynarray.h	/^    union ptr { char const* cc; T const* tc; char* c; T* t; };$/;"	m	union:dynvector::ptr
cc	src/sm/btcursor.h	/^    concurrency_t        cc()     const { return _cc; }$/;"	f	class:bt_cursor_t
cc	src/sm/sdesc.h	/^    u_char        cc;                 \/\/ concurrency_t on index$/;"	m	struct:sinfo_s
cc	src/sm/sm.h	/^    u_char    cc;         $/;"	m	class:sm_store_info_t
cc_adaptive	src/sm/sm.cpp	/^bool smlevel_0::cc_adaptive = true;$/;"	m	class:smlevel_0	file:
cc_adaptive	src/sm/sm_base.h	/^    static bool          cc_adaptive;        \/\/ is PS-AA (adaptive) algorithm used?$/;"	m	class:smlevel_0
cc_alg	src/sm/sm.cpp	/^smlevel_0::concurrency_t smlevel_0::cc_alg = t_cc_record;$/;"	m	class:smlevel_0	file:
cc_alg	src/sm/sm_base.h	/^    static concurrency_t cc_alg;        \/\/ concurrency control algorithm$/;"	m	class:smlevel_0
cclass	src/common/regex_cclass.h	/^static struct cclass {$/;"	s
cclasses	src/common/regex_cclass.h	/^} cclasses[] = {$/;"	v	typeref:struct:cclass
ccon	src/sm/sm_io.h	/^        check_compensated_op_nesting ccon;$/;"	m	class:io_m::auto_leave_t
ceil2	src/sm/log_core.h	/^    static long         ceil2(long offset, long block_size) $/;"	f	class:log_core
center	src/fc/nbox.h	/^    int center(int n) const { return (array[n+dim]-array[n])\/2+array[n]; }$/;"	f	class:nbox_t
cflags	src/common/regex2.h	/^    int cflags;        \/* copy of regcomp() cflags argument *\/$/;"	m	struct:re_guts
chain	src/sm/lock_core.cpp	/^    lock_core_m::chain_list_t     chain;$/;"	m	class:bucket_t	file:
chain	src/sm/lock_x.h	/^    w_link_t         chain;        \/\/ link in hash chain off the bucket.$/;"	m	class:lock_head_t
chain	src/sm/xct.cpp	/^xct_t::chain(bool lazy)$/;"	f	class:xct_t
chain_length	src/sm/lock_core.cpp	/^static int chain_length[mmm+1];$/;"	v	file:
chain_list_i	src/sm/lock_core.h	/^    typedef     w_list_i<lock_head_t,queue_based_lock_t> chain_list_i;$/;"	t	class:lock_core_m
chain_list_t	src/sm/lock_core.h	/^    typedef     w_list_t<lock_head_t,queue_based_lock_t> chain_list_t;$/;"	t	class:lock_core_m
chain_xct	src/sm/sm.cpp	/^ss_m::chain_xct( sm_stats_info_t*&  _stats, bool lazy)$/;"	f	class:ss_m
chain_xct	src/sm/sm.cpp	/^ss_m::chain_xct(bool lazy)$/;"	f	class:ss_m
change_state	src/sm/xct.cpp	/^xct_t::change_state(state_t new_state)$/;"	f	class:xct_t
char_t	src/atomic_ops/atomic_ops.h	/^typedef char char_t;$/;"	t
charclass	src/fc/w_input.cpp	/^enum charclass { zero=0, one=1, two=2, three=3, four=4, $/;"	g	file:
chars	src/common/regex_cclass.h	/^    const char *chars;$/;"	m	struct:cclass
check	src/common/tests/latch1.cpp	/^check(  int line,$/;"	f
check	src/fc/tests/container.cpp	/^        int check()  const {  $/;"	f	struct:THING
check	src/fc/tests/container.cpp	/^        int check(int i)  const {  $/;"	f	struct:THING
check	src/fc/valgrind_help.h	/^    void check() {$/;"	f	class:valgrind_check
check	src/fc/w_list.h	/^    void            check() {$/;"	f	class:w_link_t
check	src/sm/bf_core.cpp	/^void bfcb_t::check() const$/;"	f	class:bfcb_t
check	src/sm/bf_s.h	/^    void         check() const {}  \/\/ no-op$/;"	f	class:bfcb_t
check	src/sm/btree_impl.h	/^    void                  check() const  {$/;"	f	class:tree_latch
check	src/sm/file.cpp	/^void  alloc_file_page_filter_t::check() const$/;"	f	class:alloc_file_page_filter_t
check	src/sm/page.cpp	/^page_p::check()$/;"	f	class:page_p
check	src/sm/page.h	/^    void  check() const {}$/;"	f	class:alloc_page_filter_yes_t
check	src/sm/smsh/shell.h	/^check(Tcl_Interp* ip, const char* s, int ac, int n1, int n2 = 0, int n3 = 0,$/;"	f
check	src/sm/xct.cpp	/^xct_log_warn_check_t::check(xct_t *& _victim) $/;"	f	class:xct_log_warn_check_t
check_PROGRAMS	src/common/tests/Makefile	/^check_PROGRAMS = bitmap$(EXEEXT)  kvl$(EXEEXT) opaque$(EXEEXT) \\$/;"	m
check_PROGRAMS	src/fc/tests/Makefile	/^check_PROGRAMS = list1$(EXEEXT) list2$(EXEEXT) list3$(EXEEXT) \\$/;"	m
check_PROGRAMS	src/sm/smsh/Makefile	/^check_PROGRAMS = smsh$(EXEEXT) random_kick$(EXEEXT)$/;"	m
check_PROGRAMS	src/sm/smsh/lib/Makefile	/^check_PROGRAMS =$/;"	m
check_PROGRAMS	src/sm/smsh/scripts/Makefile	/^check_PROGRAMS =$/;"	m
check_PROGRAMS	src/sm/tests/Makefile	/^check_PROGRAMS = file_scan$(EXEEXT) \\$/;"	m
check_PROGRAMS	src/sthread/tests/Makefile	/^check_PROGRAMS = thread1$(EXEEXT) thread2$(EXEEXT)\\$/;"	m
check_actual_pin_count	src/sm/smthread.h	/^smthread_t::check_actual_pin_count(int W_IFDEBUG3(actual)) $/;"	f	class:smthread_t
check_all_stacks	src/sthread/sthread.cpp	/^void sthread_t::check_all_stacks(const char *file, int line)$/;"	f	class:sthread_t
check_bounds	src/sm/btcursor.cpp	/^bt_cursor_t::check_bounds()$/;"	f	class:bt_cursor_t
check_compensated_op_nesting	src/sm/sm_base.h	/^    check_compensated_op_nesting(xct_t* xd, int line, const char *const file)$/;"	f	struct:check_compensated_op_nesting
check_compensated_op_nesting	src/sm/sm_base.h	/^struct check_compensated_op_nesting {$/;"	s
check_compress_flag	src/sm/smsh/shell.cpp	/^const char *check_compress_flag(const char *kd)$/;"	f
check_definedness	src/fc/valgrind_help.cpp	/^void check_definedness(void *v, size_t len)$/;"	f
check_disk	src/sm/sm_io.cpp	/^io_m::check_disk(const vid_t &volid)$/;"	f	class:io_m
check_disk	src/sm/sm_io.cpp	/^void check_disk(const vid_t &vid)$/;"	f
check_disk	src/sm/vol.cpp	/^vol_t::check_disk()$/;"	f	class:vol_t
check_entry	src/sm/bf_htab.cpp	/^bf_core_m::htab::check_entry(int bki, bool have_lock) const$/;"	f	class:bf_core_m::htab
check_fhdl_app	src/sm/partition.cpp	/^partition_t::check_fhdl_app() const {$/;"	f	class:partition_t
check_fhdl_app	src/sm/partition.h	/^    void               check_fhdl_app() const { }$/;"	f	class:partition_t
check_fhdl_rd	src/sm/partition.cpp	/^partition_t::check_fhdl_rd() const {$/;"	f	class:partition_t
check_fhdl_rd	src/sm/partition.h	/^    void               check_fhdl_rd() const { }$/;"	f	class:partition_t
check_file_is_sorted	src/sm/smsh/sort_funcs3.cpp	/^check_file_is_sorted( stid_t  fid, sort_keys_t&kl, bool do_compare)$/;"	f
check_file_is_sorted2	src/sm/smsh/sort_funcs3.cpp	/^check_file_is_sorted2(stid_t  fid, $/;"	f
check_key_type	src/sm/smsh/shell2.cpp	/^check_key_type($/;"	f
check_latches	src/sm/btree_impl.h	436;"	d
check_latches	src/sm/btree_impl.h	440;"	d
check_lock_totals	src/sm/xct.cpp	/^xct_t::check_lock_totals(int nex, int nix, int nsix, int nextents) const$/;"	f	class:xct_t
check_lsn_invariant	src/sm/bf.cpp	/^bf_m::check_lsn_invariant(const bfcb_t *b)$/;"	f	class:bf_m
check_lsn_invariant	src/sm/bf.cpp	/^bf_m::check_lsn_invariant(const page_s *page)$/;"	f	class:bf_m
check_lsn_invariant	src/sm/page.h	/^page_p::check_lsn_invariant() const$/;"	f	class:page_p
check_multikey_file	src/sm/smsh/sort_funcs4.cpp	/^check_multikey_file( stid_t  fid, sort_keys_t&kl, bool do_compare)$/;"	f
check_one_thread_attached	src/sm/xct.cpp	/^xct_t::check_one_thread_attached() const$/;"	f	class:xct_t
check_pin_count	src/sm/smthread.h	/^smthread_t::check_pin_count(int W_IFDEBUG4(change)) $/;"	f	class:smthread_t
check_raw_device	src/sm/vol.cpp	/^vol_t::check_raw_device(const char* devname, bool& raw)$/;"	f	class:vol_t
check_required	src/common/option.cpp	/^w_rc_t option_group_t::check_required(ostream* err_stream)$/;"	f	class:option_group_t
check_size	src/common/vec_t.cpp	/^bool cvec_t::check_size() const$/;"	f	class:cvec_t
check_sp	src/sm/smsh/shell.cpp	/^void check_sp(const char *file, int line)$/;"	f
check_stack	src/sm/smsh/lib/smsh.tcl	/^proc check_stack args {$/;"	p
check_store_page	src/sm/vol.cpp	/^vol_t::check_store_page(const lpid_t &pid, page_p::tag_t tag)$/;"	f	class:vol_t
check_store_pages	src/sm/sm_io.cpp	/^io_m::check_store_pages(const stid_t &stid, page_p::tag_t tag)$/;"	f	class:io_m
check_store_pages	src/sm/vol.cpp	/^vol_t::check_store_pages(snum_t snum, page_p::tag_t tag)$/;"	f	class:vol_t
check_table	src/sm/bf_htab.cpp	/^bf_core_m::htab::check_table() const$/;"	f	class:bf_core_m::htab
check_valgrind_errors	src/fc/valgrind_help.cpp	/^void check_valgrind_errors(int \/*line*\/, const char * \/*file*\/) { $/;"	f
check_volume_page_types	src/sm/sm.cpp	/^ss_m::check_volume_page_types(vid_t vid)$/;"	f	class:ss_m
checkpinstats	src/sm/smsh/lib/smsh.tcl	/^proc checkpinstats {msg} {$/;"	p
checkpoint	src/sm/sm.cpp	/^ss_m::checkpoint()$/;"	f	class:ss_m
checksum	src/common/vec_t.cpp	/^int cvec_t::checksum() const $/;"	f	class:cvec_t
child	src/sm/btree_p.cpp	/^btree_p::child(slotid_t slot) const$/;"	f	class:btree_p
child	src/sm/btree_p.h	/^    shpid_t            child() const    { return _child; }$/;"	f	class:btrec_t
child	src/sm/keyed.h	/^    shpid_t    child;$/;"	m	struct:keyrec_t::hdr_s
child	src/sm/keyed.h	/^    shpid_t child() const    { return _hdr.child; }$/;"	f	class:keyrec_t
chip_count	src/fc/block_alloc.h	/^    static size_t chip_count() { return BlockSize::COUNT; }$/;"	f	struct:block_pool
chip_size	src/fc/block_alloc.h	/^    static size_t chip_size()  { return sizeof(T); }$/;"	f	struct:block_pool
chkpt	src/sm/sm.cpp	/^chkpt_m* smlevel_1::chkpt = 0;$/;"	m	class:smlevel_1	file:
chkpt	src/sm/sm_int_1.h	/^    static chkpt_m*    chkpt;$/;"	m	class:smlevel_1
chkpt_acquire	src/sm/chkpt_serial.cpp	/^chkpt_serial_m::chkpt_acquire()$/;"	f	class:chkpt_serial_m
chkpt_begin_log	src/sm/logdef_gen.cpp	/^	chkpt_begin_log (logrec_t*)   {};$/;"	f	class:chkpt_begin_log
chkpt_begin_log	src/sm/logdef_gen.cpp	/^    class chkpt_begin_log : public logrec_t {$/;"	c	file:
chkpt_begin_log	src/sm/logrec.cpp	/^chkpt_begin_log::chkpt_begin_log(const lsn_t &lastMountLSN)$/;"	f	class:chkpt_begin_log
chkpt_bf_tab_log	src/sm/logdef_gen.cpp	/^	chkpt_bf_tab_log (logrec_t*)   {};$/;"	f	class:chkpt_bf_tab_log
chkpt_bf_tab_log	src/sm/logdef_gen.cpp	/^    class chkpt_bf_tab_log : public logrec_t {$/;"	c	file:
chkpt_bf_tab_log	src/sm/logrec.cpp	/^chkpt_bf_tab_log::chkpt_bf_tab_log($/;"	f	class:chkpt_bf_tab_log
chkpt_bf_tab_t	src/sm/logrec.cpp	/^chkpt_bf_tab_t::chkpt_bf_tab_t($/;"	f	class:chkpt_bf_tab_t
chkpt_bf_tab_t	src/sm/logrec.h	/^struct chkpt_bf_tab_t {$/;"	s
chkpt_dev_tab_log	src/sm/logdef_gen.cpp	/^	chkpt_dev_tab_log (logrec_t*)   {};$/;"	f	class:chkpt_dev_tab_log
chkpt_dev_tab_log	src/sm/logdef_gen.cpp	/^    class chkpt_dev_tab_log : public logrec_t {$/;"	c	file:
chkpt_dev_tab_log	src/sm/logrec.cpp	/^chkpt_dev_tab_log::chkpt_dev_tab_log($/;"	f	class:chkpt_dev_tab_log
chkpt_dev_tab_t	src/sm/logrec.cpp	/^chkpt_dev_tab_t::chkpt_dev_tab_t($/;"	f	class:chkpt_dev_tab_t
chkpt_dev_tab_t	src/sm/logrec.h	/^struct chkpt_dev_tab_t $/;"	s
chkpt_displacement	src/sm/sm.cpp	/^smlevel_0::fileoff_t        smlevel_0::chkpt_displacement = 0;$/;"	m	class:smlevel_0	file:
chkpt_displacement	src/sm/sm_base.h	/^    static fileoff_t chkpt_displacement;$/;"	m	class:smlevel_0
chkpt_end_log	src/sm/logdef_gen.cpp	/^	chkpt_end_log (logrec_t*)   {};$/;"	f	class:chkpt_end_log
chkpt_end_log	src/sm/logdef_gen.cpp	/^    class chkpt_end_log : public logrec_t {$/;"	c	file:
chkpt_end_log	src/sm/logrec.cpp	/^chkpt_end_log::chkpt_end_log(const lsn_t &lsn, const lsn_t& min_rec_lsn)$/;"	f	class:chkpt_end_log
chkpt_m	src/sm/chkpt.cpp	/^chkpt_m::chkpt_m()$/;"	f	class:chkpt_m
chkpt_m	src/sm/chkpt.h	/^class chkpt_m : public smlevel_1 {$/;"	c
chkpt_release	src/sm/chkpt_serial.cpp	/^chkpt_serial_m::chkpt_release()$/;"	f	class:chkpt_serial_m
chkpt_serial_m	src/sm/chkpt_serial.h	/^class chkpt_serial_m : public smlevel_0 {$/;"	c
chkpt_thread_t	src/sm/chkpt.cpp	/^chkpt_thread_t::chkpt_thread_t()$/;"	f	class:chkpt_thread_t
chkpt_thread_t	src/sm/chkpt.cpp	/^class chkpt_thread_t : public smthread_t  {$/;"	c	file:
chkpt_xct_tab_log	src/sm/logdef_gen.cpp	/^	chkpt_xct_tab_log (logrec_t*)   {};$/;"	f	class:chkpt_xct_tab_log
chkpt_xct_tab_log	src/sm/logdef_gen.cpp	/^    class chkpt_xct_tab_log : public logrec_t {$/;"	c	file:
chkpt_xct_tab_log	src/sm/logrec.cpp	/^chkpt_xct_tab_log::chkpt_xct_tab_log($/;"	f	class:chkpt_xct_tab_log
chkpt_xct_tab_t	src/sm/logrec.cpp	/^chkpt_xct_tab_t::chkpt_xct_tab_t($/;"	f	class:chkpt_xct_tab_t
chkpt_xct_tab_t	src/sm/logrec.h	/^struct chkpt_xct_tab_t {$/;"	s
choose_rec_implementation	src/sm/file.cpp	/^file_mrbt_p::choose_rec_implementation($/;"	f	class:file_mrbt_p
choose_rec_implementation	src/sm/file.cpp	/^file_p::choose_rec_implementation($/;"	f	class:file_p
chop	src/fc/w_list.h	/^    T*                  chop()  {$/;"	f	class:w_list_t
chunk_cnt	src/sm/lgrec.h	/^    uint2_t       chunk_cnt;          \/\/ # of chunks (max==4)$/;"	m	struct:lg_tag_chunks_s
chunk_mgr_t	src/sm/sort.h	/^    NORET chunk_mgr_t() { head = 0; };$/;"	f	class:chunk_mgr_t
chunk_mgr_t	src/sm/sort.h	/^class chunk_mgr_t {$/;"	c
chunk_ref	src/sm/lgrec.h	/^    const lg_tag_chunks_s& chunk_ref() const {return _cref;}$/;"	f	class:lg_tag_chunks_h
chunks	src/sm/lgrec.h	/^    lg_chunk_s  chunks[max_chunks]; \/\/ page-count pairs$/;"	m	struct:lg_tag_chunks_s
cjunk	src/common/tests/vectors.cpp	/^const char *cjunk = "Cjunk";$/;"	v
claim	src/fc/w_error.h	/^inline void w_error_t::claim() { \/* do nothing *\/ }$/;"	f	class:w_error_t
claim	src/fc/w_error.h	/^inline void w_error_t::claim() {$/;"	f	class:w_error_t
class_name	src/common/option.h	/^    const char*        class_name()        { return _class_name; }        $/;"	f	class:option_group_t
classify	src/fc/w_error.cpp	/^inline w_base_t::uint4_t w_error_t::classify(int er)$/;"	f	class:w_error_t
clean_up_shell	src/sm/smsh/shell.cpp	/^void clean_up_shell()$/;"	f
cleaner_thread_list_t	src/sm/bf.cpp	/^typedef class w_list_t<bf_cleaner_thread_t, queue_based_block_lock_t> cleaner_thread_list_t;$/;"	t	typeref:class:w_list_t	file:
cleanrestart	src/sm/smsh/lib/smsh.tcl	/^proc cleanrestart { } {$/;"	p
cleanup	src/sm/smsh/lib/smsh.tcl	/^proc cleanup { fileid } {$/;"	p
cleanup	src/sm/tests/htab.cpp	/^void htab_tester::cleanup()$/;"	f	class:htab_tester
cleanup	src/sm/xct.cpp	/^xct_t::cleanup(bool dispose_prepared)$/;"	f	class:xct_t
clear	src/common/w_opaque.h	/^    clear()$/;"	f	class:opaque_quantity
clear	src/fc/w_bitvector.h	/^    void clear() {$/;"	f	class:w_bitvector_t
clear	src/fc/w_temp_alloc.h	/^        void clear() {$/;"	f	struct:w_temp_alloc::ptr
clear	src/sm/bf_s.h	/^bfcb_t::clear() $/;"	f	class:bfcb_t
clear	src/sm/lock_cache.h	/^    void clear() {$/;"	f	struct:lock_cache_elem_t
clear	src/sm/newsort.cpp	/^    void  clear()         {$/;"	f	class:meta_header_t
clear	src/sm/partition.cpp	/^partition_t::clear()$/;"	f	class:partition_t
clear	src/sm/pmap.h	/^    inline    void    clear(int bit) { bm_clr(bits, bit); }$/;"	f	struct:Pmap
clear	src/sm/sm_du_stats.cpp	/^btree_int_stats_t::clear()$/;"	f	class:btree_int_stats_t
clear	src/sm/sm_du_stats.cpp	/^btree_lf_stats_t::clear()$/;"	f	class:btree_lf_stats_t
clear	src/sm/sm_du_stats.cpp	/^btree_stats_t::clear()$/;"	f	class:btree_stats_t
clear	src/sm/sm_du_stats.cpp	/^file_pg_stats_t::clear()$/;"	f	class:file_pg_stats_t
clear	src/sm/sm_du_stats.cpp	/^file_stats_t::clear()$/;"	f	class:file_stats_t
clear	src/sm/sm_du_stats.cpp	/^lgdata_pg_stats_t::clear()$/;"	f	class:lgdata_pg_stats_t
clear	src/sm/sm_du_stats.cpp	/^lgindex_pg_stats_t::clear()$/;"	f	class:lgindex_pg_stats_t
clear	src/sm/sm_du_stats.cpp	/^rtree_stats_t::clear()$/;"	f	class:rtree_stats_t
clear	src/sm/sm_du_stats.cpp	/^sm_du_stats_t::clear()$/;"	f	class:sm_du_stats_t
clear	src/sm/sm_du_stats.cpp	/^volume_hdr_stats_t::clear()$/;"	f	class:volume_hdr_stats_t
clear	src/sm/sm_du_stats.cpp	/^volume_map_stats_t::clear()$/;"	f	class:volume_map_stats_t
clear	src/sthread/io.cpp	/^void clear(char *, size_t )$/;"	f
clear	src/sthread/io.cpp	/^void clear(char *buf_start, size_t requested_size)$/;"	f
clear	src/sthread/sthread_stats.h	/^    void clear() {$/;"	f	class:sthread_stats
clear_TL_stats	src/sm/smthread.cpp	/^smthread_t::tcb_t::clear_TL_stats()$/;"	f	class:smthread_t::tcb_t
clear_all	src/sm/pmap.h	/^    inline    void    clear_all() { bm_zero(bits, _count); }$/;"	f	struct:Pmap
clear_all_fingerprints	src/sm/smthread.cpp	/^void clear_all_fingerprints()$/;"	f
clear_bit	src/fc/w_bitvector.h	/^    void clear_bit(Word idx) {$/;"	f	class:w_bitvector_t
clear_more_info_msg	src/fc/w_error.cpp	/^w_error_t::clear_more_info_msg()$/;"	f	class:w_error_t
clear_page_p	src/sm/page.h	/^    void                         clear_page_p() {_pp = 0;}$/;"	f	class:page_p
clear_stats	src/sm/xct.h	/^    void                        clear_stats() {$/;"	f	class:xct_t
clear_wait_map	src/sm/lock_x.h	/^    void              clear_wait_map() { $/;"	f	class:xct_lock_info_t
clearstats	src/sm/smsh/lib/smsh.tcl	/^proc clearstats {} {$/;"	p
clearstats	src/sm/smsh/scripts/random.perf.tcl	/^proc clearstats {} {$/;"	p
clog	src/fc/errlog.h	/^    logstream    clog;$/;"	m	class:ErrLog
clone	src/fc/w_rc.h	/^    w_error_t*            clone() const {$/;"	f	class:w_rc_t
close	src/sm/partition.cpp	/^partition_t::close(bool both) $/;"	f	class:partition_t
close	src/sm/partition.h	/^    void               close() { this->close(false);  }$/;"	f	class:partition_t
close	src/sm/sm.cpp	/^sm_quark_t::close(bool release) {$/;"	f	class:sm_quark_t
close	src/sthread/io.cpp	/^w_rc_t sthread_t::close(int fd)$/;"	f	class:sthread_t
close	src/sthread/sdisk_unix.cpp	/^w_rc_t    sdisk_unix_t::close()$/;"	f	class:sdisk_unix_t
close_for_append	src/sm/partition.cpp	/^partition_t::close_for_append()$/;"	f	class:partition_t
close_for_read	src/sm/partition.cpp	/^partition_t::close_for_read()$/;"	f	class:partition_t
close_quark	src/sm/lock.cpp	/^lock_m::close_quark(bool release_locks)$/;"	f	class:lock_m
close_quark	src/sm/lock_core.cpp	/^lock_core_m::close_quark($/;"	f	class:lock_core_m
clr	src/fc/w_bitmap.cpp	/^w_bitmap_t::clr(uint4_t offset)$/;"	f	class:w_bitmap_t
clr	src/sm/extent.h	/^extlink_t::clr(int i)$/;"	f	class:extlink_t
clr_count_get	src/sm/newsort.cpp	/^    void  clr_count_get() { _count_get=0; }$/;"	f	class:tape_t
clr_count_put	src/sm/newsort.cpp	/^    void  clr_count_put() { _count_put=0; }$/;"	f	class:tape_t
clr_delete	src/sm/btree_p.cpp	/^btree_p::clr_delete() { $/;"	f	class:btree_p
clr_old_pid	src/sm/bf_s.h	/^    void  clr_old_pid() { _old_pid = lpid_t::null; _old_pid_valid=false;  }$/;"	f	class:bfcb_t
clr_old_rec_lsn	src/sm/bf_s.h	/^    void  clr_old_rec_lsn() { _old_rec_lsn = lsn_t::null; }$/;"	f	class:bfcb_t
clr_ordinal	src/sm/newsort.cpp	/^meta_header_t::clr_ordinal() { me()->get__ordinal() = 0; }$/;"	f	class:meta_header_t
clr_pmap_bit	src/sm/vol.cpp	/^extlink_i::clr_pmap_bit(snum_t snum, extnum_t idx, int bit)$/;"	f	class:extlink_i
clr_pmap_bits	src/sm/vol.cpp	/^extlink_i::clr_pmap_bits(snum_t snum, extnum_t idx, const Pmap& pmap)$/;"	f	class:extlink_i
clr_smo	src/sm/btree_p.h	/^    rc_t             clr_smo(bool compensate=false) { $/;"	f	class:btree_p
clrall	src/sm/extent.h	/^extlink_t::clrall()$/;"	f	class:extlink_t
clust_id_t	src/sm/file_s.h	/^typedef w_base_t::uint8_t clust_id_t; \/\/ not used at this time$/;"	t
cluster	src/sm/file_s.h	/^    clust_id_t    cluster;$/;"	m	struct:file_p_hdr_t
cmd	src/sm/smsh/shell.cpp	/^static cmd_t cmd[] = {$/;"	v	file:
cmd_cmp	src/sm/smsh/shell.cpp	/^static int cmd_cmp(const void* c1, const void* c2) $/;"	f	file:
cmd_t	src/sm/smsh/shell.cpp	/^struct cmd_t {$/;"	s	file:
cmp	src/common/vec_t.cpp	/^int cvec_t::cmp(const cvec_t& v, size_t* common_size) const$/;"	f	class:cvec_t
cmp	src/common/vec_t.cpp	/^int cvec_t::cmp(const void* s, size_t l) const$/;"	f	class:cvec_t
cmp	src/common/vec_t.h	/^    static int cmp(const cvec_t& v1,$/;"	f	class:cvec_t
cmp	src/fc/tests/heap.cpp	/^inline bool CmpGreaterFunction<T>::cmp(const T& x, const T& y) const$/;"	f	class:CmpGreaterFunction
cmp	src/fc/tests/heap.cpp	/^inline bool CmpLessFunction<T>::cmp(const T& x, const T& y) const$/;"	f	class:CmpLessFunction
cmp	src/fc/w_heap.h	/^        const Cmp&         cmp;$/;"	m	class:Heap
cmp	src/sm/histo.h	/^    histoid_compare_t        cmp;$/;"	m	class:histoid_t
cmp	src/sm/sort.h	/^    PFC cmp;$/;"	m	class:run_scan_t
cmp_greater	src/sm/key_ranges_map.h	/^struct cmp_greater$/;"	s
cmp_lpid	src/sm/bf.cpp	/^cmp_lpid(const void* x, const void* y)$/;"	f	file:
cmp_t	src/sm/sm_base.h	/^    enum cmp_t { bad_cmp_t=badOp, eq=eqOp,$/;"	g	class:smlevel_0
cname	src/common/regex_cname.h	/^static struct cname {$/;"	s
cnames	src/common/regex_cname.h	/^} cnames[] = {$/;"	v	typeref:struct:cname
cnt	src/sm/logrec.cpp	/^    int2_t        cnt;$/;"	m	class:page_insert_t	file:
code	src/common/regerror.cpp	/^    int code;$/;"	m	struct:rerr	file:
code	src/common/regex_cname.h	/^    char code;$/;"	m	struct:cname
cold_startup	src/sthread/sthread.cpp	/^w_rc_t    sthread_t::cold_startup()$/;"	f	class:sthread_t
coldp	src/common/regex_engine.cpp	/^    char *coldp;        \/* can be no match starting before here *\/$/;"	m	struct:match	file:
collect	src/sm/bf.cpp	/^bf_m::collect(vtable_t &res, bool names_too)$/;"	f	class:bf_m
collect	src/sm/bf_core.cpp	/^bf_core_m::collect(vtable_t &v, bool names_too)$/;"	f	class:bf_core_m
collect	src/sm/lock_core.cpp	/^lock_core_m::collect( vtable_t& v, bool names_too)$/;"	f	class:lock_core_m
collect	src/sm/lock_core.cpp	/^lock_m::collect( vtable_t & res, bool names_too) $/;"	f	class:lock_m
collect	src/sm/vtable_smthread.cpp	/^smthread_t::collect(vtable_t &v, bool names_too)$/;"	f	class:smthread_t
collect	src/sm/vtable_xct.cpp	/^xct_t::collect( vtable_t& v, bool names_too)$/;"	f	class:xct_t
collect	src/sthread/vtable_sthread.cpp	/^sthread_t::collect(vtable_t &v, bool names_too)$/;"	f	class:sthread_t
collect_names	src/fc/vtable.h	/^    void collect_names(vtable_row_t &t) {$/;"	f	class:vtable_names_init_t
combination_stats	src/sm/log_core.cpp	/^long combination_stats[MAX_THREADS];$/;"	v
comment_log	src/sm/logdef_gen.cpp	/^	comment_log (logrec_t*)   {};$/;"	f	class:comment_log
comment_log	src/sm/logdef_gen.cpp	/^    class comment_log : public logrec_t {$/;"	c	file:
comment_log	src/sm/logrec.cpp	/^comment_log::comment_log(const char *msg)$/;"	f	class:comment_log
commit	src/sm/xct.cpp	/^xct_t::commit(bool lazy,lsn_t* plastlsn)$/;"	f	class:xct_t
commit	src/sm/xct.h	/^    rc_t commit() {$/;"	f	class:xct_auto_abort_t
commit_t	src/sm/xct.h	/^    enum commit_t { t_normal = 0, t_lazy = 1, t_chain = 2 };$/;"	g	class:xct_t
commit_xct	src/sm/sm.cpp	/^ss_m::commit_xct(bool lazy, lsn_t* plastlsn)$/;"	f	class:ss_m
commit_xct	src/sm/sm.cpp	/^ss_m::commit_xct(sm_stats_info_t*& _stats, bool lazy,$/;"	f	class:ss_m
commit_xct_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t commit_xct_cnt;$/;"	v
commitable_xct	src/sm/prologue.h	/^        commitable_xct, \/\/ must be prepared if external, $/;"	e	enum:prologue_rc_t::xct_state_t
common_prefix	src/common/vec_t.cpp	/^void cvec_t::common_prefix($/;"	f	class:cvec_t
comp	src/sm/sort.cpp	/^    PFC comp;           \/\/ comparison function$/;"	m	struct:sort_desc_t	file:
compact	src/sm/lock_cache.h	/^    void compact() {$/;"	f	class:lock_cache_t
compact	src/sm/lock_cache.h	/^    void compact(const lockid_t &_l) $/;"	f	class:lock_cache_t
compact_cache	src/sm/lock_core.cpp	/^void lock_core_m::compact_cache(xct_lock_info_t* theLockInfo, $/;"	f	class:lock_core_m
compact_cache	src/sm/lock_x.h	/^    void            compact_cache(const lockid_t &name) {$/;"	f	class:xct_lock_info_t
compare_index_file	src/sm/smsh/sort_funcs.cpp	/^compare_index_file($/;"	f
compare_snum_t	src/common/stid_t.h	/^struct compare_snum_t $/;"	s
compat	src/sm/lock_core.cpp	/^const bool lock_base_t::compat$/;"	m	class:lock_base_t	file:
compat	src/sm/lock_s.h	/^    static const bool                compat[NUM_MODES][NUM_MODES];$/;"	m	class:lock_base_t
compensate	src/sm/log.cpp	/^log_m::compensate(lsn_t orig_lsn, lsn_t undo_lsn) $/;"	f	class:log_m
compensate	src/sm/log_core.cpp	/^rc_t log_core::compensate(lsn_t orig_lsn, lsn_t undo_lsn) $/;"	f	class:log_core
compensate	src/sm/xct.cpp	/^xct_t::compensate(const lsn_t& lsn, bool undoable ADD_LOG_COMMENT_SIG)$/;"	f	class:xct_t
compensate	src/sm/xct.h	/^    void compensate() {$/;"	f	class:auto_release_anchor_t
compensate_in_log	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t compensate_in_log;$/;"	v
compensate_in_xct	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t compensate_in_xct;$/;"	v
compensate_log	src/sm/logdef_gen.cpp	/^	compensate_log (logrec_t*)   {};$/;"	f	class:compensate_log
compensate_log	src/sm/logdef_gen.cpp	/^    class compensate_log : public logrec_t {$/;"	c	file:
compensate_log	src/sm/logrec.cpp	/^compensate_log::compensate_log(lsn_t rec_lsn)$/;"	f	class:compensate_log
compensate_records	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t compensate_records;$/;"	v
compensate_skipped	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t compensate_skipped;$/;"	v
compensate_undo	src/sm/xct.cpp	/^xct_t::compensate_undo(const lsn_t& lsn)$/;"	f	class:xct_t
compensated_op_depth	src/sm/xct.cpp	/^check_compensated_op_nesting::compensated_op_depth(xct_t* xd, int dflt)$/;"	f	class:check_compensated_op_nesting
compensated_op_depth	src/sm/xct.cpp	/^xct_t::compensated_op_depth() const$/;"	f	class:xct_t
compile_time_assert	src/fc/w_base.h	/^    compile_time_assert() {$/;"	f	struct:compile_time_assert
compile_time_assert	src/fc/w_base.h	/^template<typename T> struct compile_time_assert $/;"	s
completed_run	src/sm/newsort.cpp	/^    void             completed_run() {$/;"	f	class:tape_t
compress_flag	src/sm/smsh/smsh.h	/^    w_base_t::uint4_t  compress_flag;$/;"	m	struct:linked_vars
compressed	src/sm/sm_s.h	/^    char        compressed; \/\/ Boolean - but its size is unpredictable$/;"	m	struct:key_type_s
compute	src/fc/tests/test_stat.h	/^    void compute() {$/;"	f	class:test_stat
compute	src/sm/newsort.cpp	/^fib_t::compute(int goal)$/;"	f	class:fib_t
compute	src/sm/smstats.cpp	/^void bf_htab_stats_t::compute()$/;"	f	class:bf_htab_stats_t
compute	src/sm/smstats.cpp	/^void sm_stats_t::compute()$/;"	f	class:sm_stats_t
compute	src/sm/smstats.h	/^    void    compute() { $/;"	f	class:sm_stats_info_t
compute_bytes	src/fc/block_alloc.cpp	/^    static size_t compute_bytes(long chip_size) {$/;"	f	struct:blob_pool::helper
compute_bytes_log2	src/fc/block_alloc.cpp	/^    static size_t compute_bytes_log2(long chip_size) {$/;"	f	struct:blob_pool::helper
compute_count	src/fc/block_alloc.cpp	/^    static size_t compute_count(long chip_size) {$/;"	f	struct:blob_pool::helper
compute_counts	src/fc/cpu_info.cpp	/^void cpu_info::helper::compute_counts(long* ccount, long* scount) $/;"	f	class:cpu_info::helper
compute_counts	src/fc/cpu_info.cpp	/^void cpu_info::helper::compute_counts(long* ccount, long* scount) {$/;"	f	class:cpu_info::helper
compute_dummies	src/sm/newsort.cpp	/^fib_t::compute_dummies(int goal) $/;"	f	class:fib_t
compute_lock_hash_numbers	src/sm/lock_core.cpp	/^void lock_core_m::compute_lock_hash_numbers() const$/;"	f	class:lock_core_m
concatValue	src/common/option.cpp	/^w_rc_t option_t::concatValue(const char* value)$/;"	f	class:option_t
concurrency_t	src/sm/sm.h	/^    typedef smlevel_0::concurrency_t concurrency_t;$/;"	t	class:ss_m
concurrency_t	src/sm/sm_base.h	/^    enum concurrency_t {$/;"	g	class:smlevel_0
cond	src/sm/log_core.h	/^		pthread_cond_t* cond;$/;"	m	struct:log_core::waiting_xct
cond	src/sm/rtree_p.h	/^    nbox_t::sob_cmp_t   cond;$/;"	m	class:rt_cursor_t
cond	src/sthread/macpthread_barrier.h	/^    pthread_cond_t cond;$/;"	m	struct:__anon148
cond1	src/sm/btcursor.h	/^    cmp_t            cond1()     const { return _cond1;}$/;"	f	class:bt_cursor_t
cond2	src/sm/btcursor.h	/^    cmp_t            cond2()     const { return _cond2;}$/;"	f	class:bt_cursor_t
cond2	src/sm/scan.h	/^    cmp_t                cond2;$/;"	m	class:scan_index_i
conditional_fix	src/sm/bf.h	/^bf_m::conditional_fix($/;"	f	class:bf_m
conditional_fix	src/sm/page.cpp	/^page_p::conditional_fix($/;"	f	class:page_p
config_info	src/sm/sm.cpp	/^ss_m::config_info(sm_config_info_t& info)$/;"	f	class:ss_m
consistent_with_object	src/sm/sort_s.h	/^    bool      consistent_with_object(const object_t&o ) const { $/;"	f	class:ssm_sort::skey_t
const_array	src/sthread/sthread.cpp	/^  typedef uint32_t const const_array[w_rand::R];$/;"	t	struct:__rng_init	file:
const_pointer	src/fc/w_temp_alloc.h	/^        typedef T const *const_pointer;$/;"	t	struct:w_temp_alloc::allocator
const_reference	src/fc/w_temp_alloc.h	/^        typedef T const &const_reference;$/;"	t	struct:w_temp_alloc::allocator
const_stats_ref	src/sm/xct.h	/^    const sm_stats_info_t&      const_stats_ref() { return *__stats; }$/;"	f	class:xct_t
construct	src/fc/block_alloc.h	/^    construct(void* ptr) { return new (ptr) T; }$/;"	f	struct:object_cache_default_factory
construct	src/fc/block_alloc.h	/^    construct(void* ptr) { return new (ptr) T; }$/;"	f	struct:object_cache_initializing_factory
construct	src/fc/w_temp_alloc.h	/^        void construct(pointer p, Args... args) {$/;"	f	struct:w_temp_alloc::allocator
construct	src/fc/w_temp_alloc.h	/^        void construct(pointer p, const_reference v) {$/;"	f	struct:w_temp_alloc::allocator
construct	src/sm/newsort.cpp	/^    void          construct(void *buf, smsize_t off, smsize_t l, factory_t* f) {$/;"	f	class:sm_skey_t
construct	src/sm/newsort.cpp	/^    void    construct(sm_object_t& o, smsize_t off, smsize_t l, bool h) {$/;"	f	class:sm_skey_t
construct	src/sm/newsort.cpp	/^    void  construct(file_p&fp, slotid_t s)$/;"	f	class:sm_object_t
construct_from_bufs	src/sm/newsort.cpp	/^    void  construct_from_bufs($/;"	f	class:sm_object_t
construct_pid	src/sm/logrec.h	/^logrec_t::construct_pid() const$/;"	f	class:logrec_t
consume_chkpt_reservation	src/sm/log.cpp	/^fileoff_t log_m::consume_chkpt_reservation(fileoff_t amt) {$/;"	f	class:log_m
consumed	src/sm/newsort.cpp	/^    void consumed(smsize_t l) {$/;"	f	class:blob
container_DEPENDENCIES	src/fc/tests/Makefile	/^container_DEPENDENCIES = ..\/libfc.a $(LOCALLDADD)$/;"	m
container_LDADD	src/fc/tests/Makefile	/^container_LDADD = $(LDADD)$/;"	m
container_OBJECTS	src/fc/tests/Makefile	/^container_OBJECTS = $(am_container_OBJECTS)$/;"	m
container_SOURCES	src/fc/tests/Makefile	/^container_SOURCES = container.cpp$/;"	m
contains	src/fc/nbox.h	/^    bool contains(const nbox_t& other) const { return *this \/ other; }$/;"	f	class:nbox_t
contended_acquires	src/sm/lock_x.h	/^        int              contended_acquires;$/;"	m	struct:lock_head_t::my_lock
contig_body_size	src/sm/newsort.cpp	/^object_t::contig_body_size() const$/;"	f	class:object_t
contig_length	src/sm/newsort.cpp	/^skey_t::contig_length() const$/;"	f	class:skey_t
contig_space	src/sm/page.h	/^page_p::contig_space()        $/;"	f	class:page_p
conversion	src/fc/tests/ntime.cpp	/^void conversion()$/;"	f
convert	src/sm/lexify.cpp	/^sortorder::convert(const key_type_s *kp) $/;"	f	class:sortorder
convert	src/sm/lgrec.cpp	/^lg_tag_indirect_h::convert(const lg_tag_chunks_h& old_tag)$/;"	f	class:lg_tag_indirect_h
convert	src/sm/xct.cpp	/^xct_t::convert(concurrency_t cc)$/;"	f	class:xct_t
convert	src/sm/xct.cpp	/^xct_t::convert(lockid_t::name_space_t n)$/;"	f	class:xct_t
convert_back	src/sm/smsh/sort_funcs3.cpp	/^convert_back(typed_value &k, int& kk, typed_btree_test t, char * W_IFDEBUG1(stringbuffer) ) $/;"	f
convert_flags	src/sthread/sdisk_unix.cpp	/^int    sdisk_unix_t::convert_flags(int sflags)$/;"	f	class:sdisk_unix_t
convert_mode	src/sm/lock_x.h	/^    lmode_t           convert_mode() const { return _convert_mode; } $/;"	f	class:lock_request_t
convert_to	src/sm/smsh/sort_funcs3.cpp	/^convert_to(int kk, typed_value &k, typed_btree_test t, char *stringbuffer ) $/;"	f
cookie	src/sm/smsh/sort_funcs3.cpp	/^    key_cookie_t            cookie,  \/\/ type info$/;"	v
cookie	src/sm/sort_s.h	/^    key_cookie_t cookie(int i) const {$/;"	f	class:ssm_sort::sort_keys_t
copy	src/fc/w_bitvector.h	/^    void copy(const w_bitvector_t &other)  {$/;"	f	class:w_bitvector_t
copy	src/sm/histo.cpp	/^histoid_t::copy() const$/;"	f	class:histoid_t
copyMOF	src/sm/smsh/sort_funcs4.cpp	/^copyMOF ($/;"	f
copyUMOF	src/sm/smsh/sort_funcs4.cpp	/^copyUMOF ($/;"	f
copyValue	src/common/option.cpp	/^w_rc_t option_t::copyValue(const char* value)$/;"	f	class:option_t
copy_from	src/common/vec_t.cpp	/^const vec_t& vec_t::copy_from($/;"	f	class:vec_t
copy_from	src/common/vec_t.cpp	/^vec_t& vec_t::copy_from(const cvec_t& s) $/;"	f	class:vec_t
copy_from	src/common/vec_t.cpp	/^vec_t& vec_t::copy_from(const cvec_t& ss, size_t offset, size_t limit, size_t myoffset)$/;"	f	class:vec_t
copy_interp	src/sm/smsh/tcl_thread.cpp	/^copy_interp(Tcl_Interp *ip, Tcl_DString *vars, Tcl_DString *procs)$/;"	f
copy_out	src/sm/newsort.cpp	/^object_t::copy_out($/;"	f	class:object_t
copy_out	src/sm/newsort.cpp	/^skey_t::copy_out(vec_t&dest)  const$/;"	f	class:skey_t
copy_rba	src/common/lsn.h	/^    void copy_rba(const lsn_t &other) { $/;"	f	class:lsn_t
copy_to	src/common/vec_t.cpp	/^size_t cvec_t::copy_to(void* p, size_t limit) const $/;"	f	class:cvec_t
core	src/sm/lock.h	/^    lock_core_m*                core() const { return _core; }$/;"	f	class:lock_m
core	src/sm/tests/htab.cpp	/^    bf_core_m *core;$/;"	m	class:htab_tester	file:
core_pool	src/sm/xct.cpp	/^DECLARE_TLS(PROTECT(object_cache<xct_t::xct_core, PROTECT(object_cache_initializing_factory<xct_t::xct_core>)>), core_pool);$/;"	v
corrupt	src/sm/logrec.cpp	/^logrec_t::corrupt()$/;"	f	class:logrec_t
count	src/common/latch.cpp	/^    static int count(holder_list holders, latch_t const* l) $/;"	f	class:holder_search
count	src/common/vec_t.h	/^    int count() const {return _cnt;}$/;"	f	class:cvec_t
count	src/sm/bf_core.h	/^        int count() const { return _count; }$/;"	f	class:bfcb_unused_list
count	src/sm/log_core.cpp	/^	long count;$/;"	m	struct:log_core::insert_info	file:
count	src/sm/logrec.cpp	/^    extnum_t            count;$/;"	m	struct:create_ext_list_t	file:
count	src/sm/logrec.cpp	/^    extnum_t        count;$/;"	m	struct:free_ext_list_t	file:
count	src/sm/logrec.h	/^    uint4_t              count;$/;"	m	struct:chkpt_bf_tab_t
count	src/sm/logrec.h	/^    uint4_t            count;$/;"	m	struct:chkpt_xct_tab_t
count	src/sm/logrec.h	/^    uint4_t         count;$/;"	m	struct:chkpt_dev_tab_t
count	src/sm/pmap.h	/^    inline    int    count() const { return _count; }$/;"	f	struct:Pmap
count	src/sm/rtree.cpp	/^    int2_t count() { return _idx+1; }$/;"	f	class:rtld_cache_t
count	src/sm/smthread.cpp	/^int smthread_init_t::count = 0;$/;"	m	class:smthread_init_t	file:
count	src/sm/smthread.h	/^    static int       count;$/;"	m	class:smthread_init_t
count	src/sm/tests/htab.cpp	/^        int    count; \/\/ # times random gave us this pid$/;"	m	struct:htab_tester::pidinfo	file:
count	src/sm/vol.h	/^        int count(snum_t snum) { return _counts[snum]; }$/;"	f	class:vol_t::ext_cache_t
count	src/sthread/macpthread_barrier.h	/^    int count;$/;"	m	struct:__anon148
count2bytes	src/fc/dynarray.h	/^    static size_t count2bytes(size_t count) { return count*sizeof(T); }$/;"	f	struct:dynvector
count_get	src/sm/newsort.cpp	/^    int   count_get() const { return _count_get; }$/;"	f	class:tape_t
count_map	src/sm/vol.h	/^        typedef std::map<snum_t, int, compare_snum_t> count_map;$/;"	t	class:vol_t::ext_cache_t
count_nulls	src/sm/smsh/sort_funcs.cpp	/^count_nulls($/;"	f
count_put	src/sm/newsort.cpp	/^    int   count_put() const { return _count_put; }$/;"	f	class:tape_t
count_records	src/sm/smsh/sort_funcs.cpp	/^count_records($/;"	f
count_removes	src/sm/tests/htab.cpp	/^        int    count_removes; \/\/ # times returned\/evicted\/removed$/;"	m	struct:htab_tester::pidinfo	file:
cpp_char_factory_t	src/sm/newsort.cpp	/^   NORET  cpp_char_factory_t() { _nallocs=0; _nfrees=0; }$/;"	f	class:cpp_char_factory_t
cpp_char_factory_t	src/sm/newsort.cpp	/^class cpp_char_factory_t : public factory_t {$/;"	c	file:
cpp_vector	src/sm/newsort.cpp	/^factory_t* factory_t::cpp_vector = &_cpp_vector;$/;"	m	class:factory_t	file:
cpp_vector	src/sm/sort_s.h	/^   static factory_t*    cpp_vector;$/;"	m	class:ssm_sort::factory_t
cpuThread	src/sthread/tests/thread2.cpp	/^cpu_thread_t	**cpuThread;$/;"	v
cpu_count	src/fc/cpu_info.h	/^	long cpu_count;$/;"	m	struct:cpu_info::helper
cpu_count	src/fc/cpu_info.h	/^    static long cpu_count() { return get_helper()->cpu_count; }$/;"	f	struct:cpu_info
cpu_info	src/fc/cpu_info.h	/^struct cpu_info {$/;"	s
cpu_info_dtrace_global_hook	src/fc/fc-noinline.cpp	/^extern "C" void cpu_info_dtrace_global_hook(long volatile* \/*ready*\/) { }$/;"	f
cpu_info_dtrace_thread_hook	src/fc/fc-noinline.cpp	/^extern "C" void cpu_info_dtrace_thread_hook(long volatile* \/*cpuid*\/) { }$/;"	f
cpu_info_init	src/fc/cpu_info.h	/^    cpu_info_init() {$/;"	f	struct:cpu_info_init
cpu_info_init	src/fc/cpu_info.h	/^static struct cpu_info_init {$/;"	s
cpu_thread_t	src/sthread/tests/thread2.cpp	/^class cpu_thread_t : public sthread_t {$/;"	c	file:
cpuid	src/fc/cpu_info.cpp	/^    static unsigned cpuid(unsigned a1_b=cpuid_a1_b()) {$/;"	f	struct:cpu_info::impl_helper
cpuid	src/fc/cpu_info.cpp	/^long cpu_info::cpuid() { return *&cpu_info::impl_helper::dtrace_cpuid; }$/;"	f	class:cpu_info
cpuid	src/fc/cpu_info.cpp	/^long cpu_info::cpuid() {$/;"	f	class:cpu_info
cpuid_a1_b	src/fc/cpu_info.cpp	/^    static unsigned cpuid_a1_b() {$/;"	f	struct:cpu_info::impl_helper
crashtest	src/sm/crash.cpp	/^crashtest($/;"	f	file:
create	src/sm/btree.cpp	/^btree_m::create($/;"	f	class:btree_m
create	src/sm/file.cpp	/^file_m::create(stid_t stid, lpid_t& first_page)$/;"	f	class:file_m
create	src/sm/ranges_p.cpp	/^rc_t ranges_m::create(const stid_t stid, lpid_t& pid, const lpid_t& subroot) $/;"	f	class:ranges_m
create	src/sm/ranges_p.cpp	/^rc_t ranges_m::create(const stid_t stid, lpid_t& pid, vector<cvec_t*>& keys, vector<lpid_t>& subroots) $/;"	f	class:ranges_m
create	src/sm/rtree.cpp	/^rtree_m::create($/;"	f	class:rtree_m
create_TL_stats	src/sm/smthread.cpp	/^smthread_t::tcb_t::create_TL_stats() { $/;"	f	class:smthread_t::tcb_t
create_assoc	src/sm/smindex.cpp	/^ss_m::create_assoc(stid_t stid, const vec_t& key, const vec_t& el,$/;"	f	class:ss_m
create_dir	src/sm/dir.h	/^dir_m::create_dir(vid_t vid)$/;"	f	class:dir_m
create_dir	src/sm/dir.h	/^dir_vol_m::create_dir(vid_t vid)$/;"	f	class:dir_vol_m
create_ext_list_log	src/sm/logdef_gen.cpp	/^	create_ext_list_log (logrec_t*)   {};$/;"	f	class:create_ext_list_log
create_ext_list_log	src/sm/logdef_gen.cpp	/^    class create_ext_list_log : public logrec_t {$/;"	c	file:
create_ext_list_log	src/sm/logrec.cpp	/^create_ext_list_log::create_ext_list_log($/;"	f	class:create_ext_list_log
create_ext_list_on_same_page	src/sm/sm_io.cpp	/^io_m::create_ext_list_on_same_page(const stid_t& stid, extnum_t prev, extnum_t next, extnum_t count, extnum_t* list)$/;"	f	class:io_m
create_ext_list_on_same_page	src/sm/vol.cpp	/^vol_t::create_ext_list_on_same_page($/;"	f	class:vol_t
create_ext_list_t	src/sm/logrec.cpp	/^    create_ext_list_t(const stid_t& theStid, extnum_t thePrev, extnum_t theNext, extnum_t theCount, const extnum_t* theList)$/;"	f	struct:create_ext_list_t
create_ext_list_t	src/sm/logrec.cpp	/^struct create_ext_list_t  {$/;"	s	file:
create_file	src/sm/smfile.cpp	/^ss_m::create_file($/;"	f	class:ss_m
create_heap	src/sm/sort.cpp	/^static void create_heap(int2_t heap[], int heap_size, int num_runs,$/;"	f	file:
create_index	src/sm/smindex.cpp	/^ss_m::create_index($/;"	f	class:ss_m
create_mask	src/fc/mem_block.cpp	/^block_bits::bitmap block_bits::create_mask(size_t bits_set) {$/;"	f	class:memory_block::block_bits
create_md_assoc	src/sm/smindex.cpp	/^ss_m::create_md_assoc(stid_t stid, const nbox_t& key, const vec_t& el)$/;"	f	class:ss_m
create_md_index	src/sm/smindex.cpp	/^ss_m::create_md_index($/;"	f	class:ss_m
create_mr_assoc	src/sm/smindex.cpp	/^rc_t ss_m::create_mr_assoc(stid_t stid, const vec_t& key, el_filler& ef, $/;"	f	class:ss_m
create_mr_index	src/sm/smindex.cpp	/^rc_t ss_m::create_mr_index(vid_t                 vid, $/;"	f	class:ss_m
create_mrbt	src/sm/file.cpp	/^file_m::create_mrbt(stid_t stid, lpid_t& first_page)$/;"	f	class:file_m
create_mrbt_file	src/sm/smfile.cpp	/^ss_m::create_mrbt_file($/;"	f	class:ss_m
create_mrbt_rec	src/sm/file.cpp	/^file_m::create_mrbt_rec($/;"	f	class:file_m
create_mrbt_rec	src/sm/smfile.cpp	/^ss_m::create_mrbt_rec(const stid_t& fid, const vec_t& hdr,$/;"	f	class:ss_m
create_mrbt_rec_at_end	src/sm/file.cpp	/^file_m::create_mrbt_rec_at_end($/;"	f	class:file_m
create_mrbt_rec_in_given_page	src/sm/file.cpp	/^file_m::create_mrbt_rec_in_given_page($/;"	f	class:file_m
create_mrbt_rec_in_page	src/sm/smfile.cpp	/^ss_m::create_mrbt_rec_in_page(const stid_t& fid, file_p& page, const vec_t& hdr,$/;"	f	class:ss_m
create_mrbt_rec_l	src/sm/file.cpp	/^file_m::create_mrbt_rec_l($/;"	f	class:file_m
create_mrbt_rec_p	src/sm/file.cpp	/^file_m::create_mrbt_rec_p($/;"	f	class:file_m
create_rec	src/sm/file.cpp	/^file_m::create_rec($/;"	f	class:file_m
create_rec	src/sm/scan.cpp	/^append_file_i::create_rec($/;"	f	class:append_file_i
create_rec	src/sm/smfile.cpp	/^ss_m::create_rec(const stid_t& fid, const vec_t& hdr,$/;"	f	class:ss_m
create_rec_DEPENDENCIES	src/sm/tests/Makefile	/^create_rec_DEPENDENCIES = $(top_builddir)\/src\/sm\/libsm.a \\$/;"	m
create_rec_LDADD	src/sm/tests/Makefile	/^create_rec_LDADD = $(LDADD)$/;"	m
create_rec_OBJECTS	src/sm/tests/Makefile	/^create_rec_OBJECTS = $(am_create_rec_OBJECTS)$/;"	m
create_rec_SOURCES	src/sm/tests/Makefile	/^create_rec_SOURCES = create_rec.cpp init_config_options.cpp $/;"	m
create_rec_at_end	src/sm/file.cpp	/^file_m::create_rec_at_end($/;"	f	class:file_m
create_rtree_entry	src/sm/tests/rtree_example.cpp	/^smthread_user_t::create_rtree_entry(stid_t iid, rid_t &rid, $/;"	f	class:smthread_user_t
create_stdcmd	src/sm/smsh/tcl_thread.cpp	/^static void create_stdcmd(Tcl_Interp* ip)$/;"	f	file:
create_store	src/sm/sm_io.cpp	/^io_m::create_store($/;"	f	class:io_m
create_the_file	src/sm/tests/create_rec.cpp	/^smthread_user_t::create_the_file() $/;"	f	class:smthread_user_t
create_the_file	src/sm/tests/log_exceed.cpp	/^smthread_user_t::create_the_file() $/;"	f	class:smthread_user_t
create_the_file	src/sm/tests/mrbtrees_test.cpp	/^rc_t smthread_main_t::create_the_file() $/;"	f	class:smthread_main_t
create_the_file	src/sm/tests/rtree_example.cpp	/^smthread_user_t::create_the_file() $/;"	f	class:smthread_user_t
create_the_file	src/sm/tests/sort_stream.cpp	/^smthread_user_t::create_the_file() $/;"	f	class:smthread_user_t
create_the_file	src/sm/tests/vtable_example.cpp	/^smthread_user_t::create_the_file() $/;"	f	class:smthread_user_t
create_the_index	src/sm/tests/mrbtrees_test.cpp	/^rc_t smthread_main_t::create_the_index() {$/;"	f	class:smthread_main_t
create_the_rtree	src/sm/tests/rtree_example.cpp	/^smthread_user_t::create_the_rtree(stid_t &iid, nbox_t &universe) $/;"	f	class:smthread_user_t
create_vol	src/sm/sm.cpp	/^ss_m::create_vol(const char* dev_name, const lvid_t& lvid, $/;"	f	class:ss_m
create_wrapper	src/fc/cpu_info.cpp	/^    static pthread_create_fn create_wrapper;$/;"	m	struct:cpu_info::impl_helper	file:
creator	src/sthread/stcore_pthread.h	/^    pthread_t   creator;         \/* thread that created this pthread, for$/;"	m	struct:sthread_core_t
critical_section	src/sthread/sthread.h	/^    critical_section<Lock*&>(Lock* mutex) : critical_section<Lock&>(*mutex) { }$/;"	f	struct:critical_section
critical_section	src/sthread/sthread.h	/^struct critical_section<Lock*&> : critical_section<Lock&> {$/;"	s
cset	src/common/regex2.h	/^} cset;$/;"	t	typeref:struct:__anon9
csetsize	src/common/regex2.h	/^    int csetsize;        \/* number of bits in a cset vector *\/$/;"	m	struct:re_guts
ctime	src/fc/stime.cpp	/^ostream &stime_t::ctime(ostream &s) const$/;"	f	class:stime_t
cuckold	src/sm/bf_htab.cpp	/^bool bf_core_m::htab::cuckold(bucket* dest, bucket* src, int which, $/;"	f	class:bf_core_m::htab
cuckoo_DEPENDENCIES	src/fc/tests/Makefile	/^cuckoo_DEPENDENCIES = ..\/libfc.a $(LOCALLDADD)$/;"	m
cuckoo_LDADD	src/fc/tests/Makefile	/^cuckoo_LDADD = $(LDADD)$/;"	m
cuckoo_OBJECTS	src/fc/tests/Makefile	/^cuckoo_OBJECTS = $(am_cuckoo_OBJECTS)$/;"	m
cuckoo_SOURCES	src/fc/tests/Makefile	/^cuckoo_SOURCES = cuckoo.cpp$/;"	m
cur_rec	src/sm/sort.h	/^    record_t* cur_rec;  \/\/ pointer to current record$/;"	m	class:run_scan_t
curr	src/fc/valgrind_help.h	/^    int curr() const { return _current_errors; }$/;"	f	class:valgrind_check
curr	src/fc/w_hash.h	/^    T*              curr()                { return _iter.curr(); }$/;"	f	class:w_hash_i
curr	src/fc/w_list.h	/^    T*                curr() const  {$/;"	f	class:w_list_i
curr	src/fc/w_list.h	/^    const T*            curr() const { $/;"	f	class:w_list_const_i
curr	src/sm/scan.h	/^    rc_t            curr($/;"	f	class:scan_index_i
curr_lsn	src/sm/log.h	/^    lsn_t               curr_lsn()  const  {$/;"	f	class:log_m
curr_partition	src/sm/log_core.cpp	/^log_core::curr_partition() const$/;"	f	class:log_core
curr_rec_lsn	src/sm/bf_s.h	/^    const lsn_t&  curr_rec_lsn() const  { return _rec_lsn;  }$/;"	f	class:bfcb_t
curr_rid	src/sm/scan.h	/^    rid_t                curr_rid;$/;"	m	class:scan_file_i
curr_run_empty	src/sm/newsort.cpp	/^    bool               curr_run_empty() const { $/;"	f	class:tape_t
current	src/sm/sort.cpp	/^run_scan_t::current(const record_t*& rec)$/;"	f	class:run_scan_t
cursor	src/sm/log.h	/^    lsn_t                        cursor;$/;"	m	class:log_i
cursor	src/sm/scan.h	/^    void            cursor($/;"	f	class:scan_file_i
cursor_t	src/sm/btree.h	/^    typedef bt_cursor_t         cursor_t;$/;"	t	class:btree_m
cut	src/sm/page.h	/^page_p::cut(slotid_t idx, slot_length_t start, slot_length_t len)$/;"	f	class:page_p
cvec_t	src/common/vec_t.cpp	/^cvec_t::cvec_t(const cvec_t& \/*v*\/)$/;"	f	class:cvec_t
cvec_t	src/common/vec_t.h	/^    cvec_t() {$/;"	f	class:cvec_t
cvec_t	src/common/vec_t.h	/^    cvec_t(const cvec_t& v, size_t offset, size_t limit) {$/;"	f	class:cvec_t
cvec_t	src/common/vec_t.h	/^    cvec_t(const cvec_t& v1, const cvec_t& v2) {$/;"	f	class:cvec_t
cvec_t	src/common/vec_t.h	/^    cvec_t(const void* p, size_t l) {$/;"	f	class:cvec_t
cvec_t	src/common/vec_t.h	/^class cvec_t : protected VEC_t {$/;"	c
cvt2cmp_t	src/sm/smsh/shell.h	/^cvt2cmp_t(const char *s)$/;"	f
cvt2concurrency_t	src/sm/smsh/shell.h	/^cvt2concurrency_t(const char *s)$/;"	f
cvt2lock_duration	src/sm/smsh/shell.h	/^cvt2lock_duration(const char *s)$/;"	f
cvt2lock_mode	src/sm/smsh/shell.h	/^cvt2lock_mode(const char *s)$/;"	f
cvt2lockid_t	src/sm/smsh/shell.cpp	/^cvt2lockid_t(const char *str, lockid_t &n)$/;"	f
cvt2ndx_t	src/sm/smsh/shell.cpp	/^cvt2ndx_t(const char *s)$/;"	f
cvt2sob_cmp_t	src/sm/smsh/shell.h	/^cvt2sob_cmp_t(const char *s)$/;"	f
cvt2store_property	src/sm/smsh/shell.h	/^cvt2store_property(const char *s)$/;"	f
cvt2string	src/sm/smsh/shell.h	/^cvt2string(scan_index_i::cmp_t i)$/;"	f
cvt2type	src/sm/smsh/shell2.cpp	/^cvt2type(const char *s)$/;"	f
cvt2typed_value	src/sm/smsh/shell2.cpp	/^cvt2typed_value($/;"	f
cvtFROMtype	src/sm/smsh/shell2.cpp	/^cvtFROMtype( typed_btree_test t)$/;"	f
cvt_concurrency_t	src/sm/smsh/shell.cpp	/^cvt_concurrency_t( ss_m::concurrency_t cc)$/;"	f
cvt_ndx_t	src/sm/smsh/shell.cpp	/^cvt_ndx_t(ss_m::ndx_t n)$/;"	f
cvt_store_t	src/sm/smsh/shell.cpp	/^cvt_store_t(ss_m::store_t n)$/;"	f
d	src/common/tests/vectors.cpp	/^const char *d = "dddddddddd";$/;"	v
d	src/fc/tests/rand.cpp	/^    double  d;$/;"	m	union:__anon132	file:
d	src/fc/tests/test_stat_struct_gen.h	/^ w_base_t::base_float_t d;$/;"	v
darray_DEPENDENCIES	src/fc/tests/Makefile	/^darray_DEPENDENCIES = ..\/libfc.a $(LOCALLDADD)$/;"	m
darray_LDADD	src/fc/tests/Makefile	/^darray_LDADD = $(LDADD)$/;"	m
darray_OBJECTS	src/fc/tests/Makefile	/^darray_OBJECTS = $(am_darray_OBJECTS)$/;"	m
darray_SOURCES	src/fc/tests/Makefile	/^darray_SOURCES = darray.cpp$/;"	m
data	src/fc/w_bitvector.h	/^    unsigned long data[WORDS];$/;"	m	class:w_bitvector_t
data	src/fc/w_strstream.h	/^    const char *data()$/;"	f	class:w_ostrstream
data	src/fc/w_temp_alloc.h	/^        dynarray data;$/;"	m	struct:w_temp_alloc::dynarray_pool
data	src/sm/logrec.cpp	/^    char                 data[logrec_t::data_sz - 4 * sizeof(int2_t)]; \/\/ old data & new data$/;"	m	struct:page_splice_t	file:
data	src/sm/logrec.cpp	/^    char                 data[logrec_t::data_sz - 6 * sizeof(int2_t)]; \/\/ old data & new data$/;"	m	struct:page_splicez_t	file:
data	src/sm/logrec.cpp	/^    char        data[logrec_t::data_sz - sizeof(lpid_t) - 3*sizeof(int2_t)];$/;"	m	struct:rtree_insert_t	file:
data	src/sm/logrec.cpp	/^    char        data[logrec_t::data_sz - sizeof(lpid_t) - 4*sizeof(int2_t)];$/;"	m	struct:btree_insert_t	file:
data	src/sm/logrec.cpp	/^    char        data[max]; $/;"	m	class:page_format_t	file:
data	src/sm/logrec.cpp	/^    char        data[max]; $/;"	m	class:page_insert_t	file:
data	src/sm/logrec.cpp	/^    char data[max];$/;"	m	class:page_mark_t	file:
data	src/sm/logrec.h	/^logrec_t::data() const$/;"	f	class:logrec_t
data	src/sm/page.h	/^        const vec_t& data;$/;"	m	struct:page_p::splice_info_t
data	src/sm/page_s.h	/^	char     data[data_sz];$/;"	m	union:page_s::slot_array
data	src/sm/page_s.h	/^    char *data() { return _slots.data; }$/;"	f	class:page_s
data	src/sm/page_s.h	/^    char const *data() const { return _slots.data; }$/;"	f	class:page_s
data	src/sm/sort.h	/^    char* data;$/;"	m	struct:s_chunk
data_access_histogram	src/sm/data_access_histogram.cpp	/^data_access_histogram::data_access_histogram()$/;"	f	class:data_access_histogram
data_access_histogram	src/sm/data_access_histogram.cpp	/^data_access_histogram::data_access_histogram(key_ranges_map& krm,$/;"	f	class:data_access_histogram
data_access_histogram	src/sm/data_access_histogram.h	/^class data_access_histogram$/;"	c
data_accesses	src/sm/smindex.cpp	/^map< stid_t, data_access_histogram* > data_accesses;$/;"	v
data_at_offset	src/common/w_opaque.h	/^    data_at_offset(unsigned i)  const$/;"	f	class:opaque_quantity
data_bs	src/sm/sm_du_stats.h	/^    base_stat_t        data_bs;         \/* user data on large data pgs *\/$/;"	m	struct:lgdata_pg_stats_t
data_bs	src/sm/sm_du_stats.h	/^    base_stat_t        data_bs;    \/* space for data associated to keys *\/$/;"	m	struct:btree_lf_stats_t
data_sz	src/sm/file.h	/^    enum { data_sz = file_p::data_sz - static_align<sizeof(lpid_t)>::value };$/;"	e	enum:file_mrbt_p::__anon70
data_sz	src/sm/file.h	/^    enum { data_sz = page_p::data_sz$/;"	e	enum:file_p::__anon69
data_sz	src/sm/lgrec.h	/^    enum { data_sz = page_p::data_sz};$/;"	e	enum:lgdata_p::__anon20
data_sz	src/sm/logrec.h	/^        data_sz = max_sz - (hdr_sz + sizeof(lsn_t))$/;"	e	enum:logrec_t::__anon41
data_sz	src/sm/page.h	/^        data_sz = page_s::data_sz,$/;"	e	enum:page_p::__anon71
data_sz	src/sm/page_s.h	/^        data_sz = smlevel_0::page_sz - hdr_sz,$/;"	e	enum:page_s::__anon78
datadir	Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	config/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/atomic_ops/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/atomic_ops/asm_linkage/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/atomic_ops/asm_linkage/usr/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/atomic_ops/asm_linkage/usr/src/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/atomic_ops/atomic_ops/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/atomic_ops/atomic_ops/amd64/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/atomic_ops/atomic_ops/i386/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/atomic_ops/atomic_ops/sparc/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/atomic_ops/ia32/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/atomic_ops/ia32/sys/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/atomic_ops/intel/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/atomic_ops/intel/ia32/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/atomic_ops/intel/ia32/sys/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/atomic_ops/intel/sys/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/atomic_ops/sparc/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/atomic_ops/sparc/sys/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/common/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/common/tests/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/fc/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/fc/tests/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/sm/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/sm/smsh/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/sm/smsh/lib/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/sm/smsh/scripts/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/sm/tests/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/sthread/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/sthread/tests/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	tools/Makefile	/^datadir = ${datarootdir}$/;"	m
datarootdir	Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	config/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/atomic_ops/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/atomic_ops/asm_linkage/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/atomic_ops/asm_linkage/usr/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/atomic_ops/asm_linkage/usr/src/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/atomic_ops/atomic_ops/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/atomic_ops/atomic_ops/amd64/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/atomic_ops/atomic_ops/i386/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/atomic_ops/atomic_ops/sparc/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/atomic_ops/ia32/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/atomic_ops/ia32/sys/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/atomic_ops/intel/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/atomic_ops/intel/ia32/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/atomic_ops/intel/ia32/sys/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/atomic_ops/intel/sys/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/atomic_ops/sparc/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/atomic_ops/sparc/sys/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/common/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/common/tests/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/fc/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/fc/tests/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/sm/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/sm/smsh/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/sm/smsh/lib/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/sm/smsh/scripts/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/sm/tests/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/sthread/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/sthread/tests/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	tools/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datum_t	src/common/tid_t.h	/^    typedef uint64_t datum_t;$/;"	t	class:tid_t
db_pretty_print	src/sm/bf_core.cpp	/^char const* db_pretty_print(lpid_t const* pid, int, char const*) {$/;"	f
db_pretty_print	src/sm/dir.cpp	/^char const* db_pretty_print(sdesc_cache_t const* sdc, int i=0, char const* s=0) {$/;"	f
db_pretty_print	src/sm/dir.cpp	/^char const* db_pretty_print(sdesc_t const* sd, int i=0, char const* s=0) {$/;"	f
db_pretty_print	src/sm/lock_core.cpp	/^char const* db_pretty_print(lock_head_t const* lock, int i=0, char const* s=0) $/;"	f
db_pretty_print	src/sm/lock_core.cpp	/^char const* db_pretty_print(lock_request_t const* req, int i=0, char const* s=0) {$/;"	f
db_pretty_print	src/sm/lock_core.cpp	/^char const* db_pretty_print(lockid_t const* lid, int i=0, char const* s=0) {$/;"	f
db_pretty_print	src/sm/log.cpp	/^db_pretty_print(logrec_t const* rec, int \/*i=0*\/, char const* \/*s=0*\/) $/;"	f
db_pretty_print	src/sm/sm_s.cpp	/^db_pretty_print(lsn_t const* lsn, int \/*i=0*\/, char const* \/* s=0 *\/) $/;"	f
db_pretty_print	src/sm/xct.cpp	/^db_pretty_print(xct_list const* rec, int \/* i=0 *\/, char const* \/* s=0 *\/) {$/;"	f
dbl_lexify	src/sm/lexify.cpp	/^sortorder::dbl_lexify(f8_t d, $/;"	f	class:sortorder
dbl_unlexify	src/sm/lexify.cpp	/^sortorder::dbl_unlexify($/;"	f	class:sortorder
dc	src/sm/rtree.cpp	/^    rtld_desc_t         dc;$/;"	m	class:rtld_stk_t	file:
dcommit_timeout	src/sm/sm_base.h	/^    static int    dcommit_timeout; \/\/ to convey option to coordinator,$/;"	m	class:smlevel_0
dealloc	src/fc/atomic_class_pool.h	/^    void dealloc(void* val) { push(val); }$/;"	f	struct:atomic_preallocated_pool
deallocate	src/fc/w_temp_alloc.h	/^        void deallocate(T*, size_t) { \/* nop *\/ }$/;"	f	struct:w_temp_alloc::allocator
debug_abort	src/sm/crash.h	/^enum debuginfo_enum { debug_none, debug_delay, debug_crash, debug_abort, debug_yield };$/;"	e	enum:debuginfo_enum
debug_crash	src/sm/crash.h	/^enum debuginfo_enum { debug_none, debug_delay, debug_crash, debug_abort, debug_yield };$/;"	e	enum:debuginfo_enum
debug_delay	src/sm/crash.h	/^enum debuginfo_enum { debug_none, debug_delay, debug_crash, debug_abort, debug_yield };$/;"	e	enum:debuginfo_enum
debug_log	src/sm/log_core.cpp	59;"	d	file:
debug_log	src/sm/partition.cpp	57;"	d	file:
debug_none	src/sm/crash.h	/^enum debuginfo_enum { debug_none, debug_delay, debug_crash, debug_abort, debug_yield };$/;"	e	enum:debuginfo_enum
debug_prio	src/fc/errlog.cpp	/^ostream& debug_prio(ostream& o){ return flush_and_setprio(o, log_debug); }$/;"	f
debug_yield	src/sm/crash.h	/^enum debuginfo_enum { debug_none, debug_delay, debug_crash, debug_abort, debug_yield };$/;"	e	enum:debuginfo_enum
debugflags	src/sm/xct.cpp	/^debugflags(const char *a) $/;"	f
debuginfo	src/sm/crash.cpp	/^struct debuginfo {$/;"	s	file:
debuginfo_enum	src/sm/crash.h	/^enum debuginfo_enum { debug_none, debug_delay, debug_crash, debug_abort, debug_yield };$/;"	g
dec	src/fc/tests/test_stat.cpp	/^test_stat::dec() $/;"	f	class:test_stat
dec_acquire_1thread_log_depth	src/sm/xct.h	/^    void dec_acquire_1thread_log_depth() { -- _acquire_1thread_log_depth; }$/;"	f	class:xct_t
dec_acquire_1thread_log_depth	src/sm/xct.h	/^    void dec_acquire_1thread_log_depth() { }$/;"	f	class:xct_t
dec_count	src/sm/lock_x.h	/^    int               dec_count() { return --_ref_count; }$/;"	f	class:lock_request_t
decay	src/fc/w_temp_alloc.h	/^        _decay decay() {$/;"	f	struct:w_temp_alloc::ptr
decay	src/fc/w_temp_alloc.h	/^        _decay_const decay() const {$/;"	f	struct:w_temp_alloc::ptr
decr	src/sm/page_h.h	/^store_histo_t::decr(space_bucket_t b) $/;"	f	class:store_histo_t
decr_hotbit	src/sm/bf_s.h	/^    void        decr_hotbit() { _hotbit--; }$/;"	f	class:bfcb_t
decr_refbit	src/sm/bf_s.h	/^    void        decr_refbit() { _refbit--; }$/;"	f	class:bfcb_t
deep_copy	src/sm/sort_s.h	/^    bool    deep_copy() const {  return _deep_copy; }$/;"	f	class:ssm_sort::sort_keys_t
def_rec	tools/logdef.pl	/^sub def_rec {$/;"	s
defaultLockEscalateToPageThreshold	src/sm/sm.cpp	/^int4_t        smlevel_0::defaultLockEscalateToPageThreshold = dontEscalate;$/;"	m	class:smlevel_0	file:
defaultLockEscalateToPageThreshold	src/sm/sm_base.h	/^    static w_base_t::int4_t defaultLockEscalateToPageThreshold;$/;"	m	class:smlevel_0
defaultLockEscalateToStoreThreshold	src/sm/sm.cpp	/^int4_t        smlevel_0::defaultLockEscalateToStoreThreshold = dontEscalate;$/;"	m	class:smlevel_0	file:
defaultLockEscalateToStoreThreshold	src/sm/sm_base.h	/^    static w_base_t::int4_t defaultLockEscalateToStoreThreshold;$/;"	m	class:smlevel_0
defaultLockEscalateToVolumeThreshold	src/sm/sm.cpp	/^int4_t        smlevel_0::defaultLockEscalateToVolumeThreshold = dontEscalate;$/;"	m	class:smlevel_0	file:
defaultLockEscalateToVolumeThreshold	src/sm/sm_base.h	/^    static w_base_t::int4_t defaultLockEscalateToVolumeThreshold;$/;"	m	class:smlevel_0
default_buf_size	src/fc/w_strstream.h	/^    enum { default_buf_size = 128 };$/;"	e	enum:w_ostrstream_buf::__anon126
default_buffer	src/fc/w_form.cpp	/^static char    default_buffer[MAX_BUFFER];$/;"	v	file:
default_label	src/common/option.cpp	/^const char *option_stream_scan_t::default_label = "istream";$/;"	m	class:option_stream_scan_t	file:
default_label	src/common/option.h	/^        static const char *default_label;$/;"	m	class:option_stream_scan_t
default_prio	src/fc/errlog.h	/^    default_prio = log_error$/;"	e	enum:shore_errlog::LogPriority
default_stack	src/sthread/sthread.h	/^    enum { default_stack = 64*1024 };$/;"	e	enum:sthread_t::__anon143
default_timeout	src/sthread/tests/thread4.cpp	/^unsigned default_timeout[] = { $/;"	v
default_value	src/common/option.h	/^    const char*        default_value()        { return _default_value; }        $/;"	f	class:option_t
delaytest	src/sm/crash.cpp	/^delaytest($/;"	f	file:
delegate	src/fc/w_rc.h	/^w_rc_t::delegate()$/;"	f	class:w_rc_t
delegate	src/sm/btcursor.h	/^bt_cursor_t::delegate(void*& ptr, int& kl, int& el)$/;"	f	class:bt_cursor_t
deletePartition	src/sm/key_ranges_map.cpp	/^w_rc_t key_ranges_map::deletePartition(lpid_t& root1, lpid_t& root2,$/;"	f	class:key_ranges_map
deletePartitionByKey	src/sm/key_ranges_map.cpp	/^w_rc_t key_ranges_map::deletePartitionByKey(const Key& key,$/;"	f	class:key_ranges_map
delete_bucket	src/sm/data_access_histogram.cpp	/^w_rc_t data_access_histogram::delete_bucket(const lpid_t& \/*root*\/)$/;"	f	class:data_access_histogram
delete_index_entries	src/sm/smsh/sort_funcs.cpp	/^delete_index_entries($/;"	f
delete_lock_hierarchy	src/sm/xct.cpp	/^xct_t::delete_lock_hierarchy(lockid_t* &l)$/;"	f	class:xct_t
delete_partition	src/sm/ranges_p.cpp	/^rc_t ranges_m::delete_partition(const lpid_t& pid, const lpid_t& root_to_delete,$/;"	f	class:ranges_m
delete_partition	src/sm/ranges_p.cpp	/^rc_t ranges_p::delete_partition(const lpid_t& root_to_delete,$/;"	f	class:ranges_p
delete_partition	src/sm/smindex.cpp	/^rc_t ss_m::delete_partition(stid_t stid, const vec_t& key, const bool bIgnoreLatches)$/;"	f	class:ss_m
delete_partition	src/sm/smindex.cpp	/^rc_t ss_m::delete_partition(stid_t stid, lpid_t& root, const bool bIgnoreLatches)$/;"	f	class:ss_m
delete_rtree_entries	src/sm/smsh/sort_funcs2.cpp	/^delete_rtree_entries($/;"	f
delete_sdesc_cache_t	src/sm/xct.cpp	/^xct_t::delete_sdesc_cache_t(sdesc_cache_t* &sdc)$/;"	f	class:xct_t
delete_sub_bucket	src/sm/data_access_histogram.cpp	/^w_rc_t data_access_histogram::delete_sub_bucket(const lpid_t& \/*root*\/, const Key& \/*key*\/)$/;"	f	class:data_access_histogram
delete_xct_log_t	src/sm/xct.cpp	/^xct_t::delete_xct_log_t(xct_log_t* &l)$/;"	f	class:xct_t
deletecleanupvars	src/sm/smsh/lib/smsh.tcl	/^proc deletecleanupvars { theVars } {$/;"	p
deleter	src/sm/smsh/sort_funcs.h	/^    deleter() : fid(stid_t::null), $/;"	f	class:deleter
deleter	src/sm/smsh/sort_funcs.h	/^    deleter(stid_t& s) : fid(s), $/;"	f	class:deleter
deleter	src/sm/smsh/sort_funcs.h	/^class deleter {$/;"	c
deleting	src/sm/extent.h	/^    w_base_t::uint2_t        deleting;$/;"	m	struct:stnode_t
delparts	src/common/vec_t.h	/^    void delparts()         {   while(_cnt-->0) { $/;"	f	class:cvec_t
demo_sort_stream	src/sm/tests/sort_stream.cpp	/^smthread_user_t::demo_sort_stream()$/;"	f	class:smthread_user_t
depcomp	src/atomic_ops/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/config\/depcomp$/;"	m
depcomp	src/common/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/config\/depcomp$/;"	m
depcomp	src/common/tests/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/config\/depcomp$/;"	m
depcomp	src/fc/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/config\/depcomp$/;"	m
depcomp	src/fc/tests/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/config\/depcomp$/;"	m
depcomp	src/sm/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/config\/depcomp$/;"	m
depcomp	src/sm/smsh/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/config\/depcomp$/;"	m
depcomp	src/sm/tests/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/config\/depcomp$/;"	m
depcomp	src/sthread/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/config\/depcomp$/;"	m
depcomp	src/sthread/tests/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/config\/depcomp$/;"	m
dependent	src/sm/chkpt.cpp	/^        dependent(xct_t* xd, old_xct_tracker* owner)$/;"	f	struct:old_xct_tracker::dependent
dependent	src/sm/chkpt.cpp	/^    struct dependent : xct_dependent_t  {$/;"	s	struct:old_xct_tracker	file:
derived	src/sm/smsh/sort_funcs.h	/^    bool     derived;$/;"	m	struct:metadata
derived	src/sm/sort_s.h	/^    bool        derived;    $/;"	m	struct:ssm_sort::key_info_t
description	src/common/option.h	/^    const char*        description()        { return _description; }        $/;"	f	class:option_t
destination	src/fc/errlog.h	/^    LoggingDestination    destination() { return _destination; };$/;"	f	class:ErrLog
destroy	src/fc/atomic_class_pool.h	/^    void destroy(T* tptr) {$/;"	f	struct:atomic_class_pool
destroy	src/fc/block_alloc.cpp	/^void blob_pool::destroy(void* ptr) {$/;"	f	class:blob_pool
destroy	src/fc/block_alloc.h	/^    destroy(T* t) { t->~T(); }$/;"	f	struct:object_cache_default_factory
destroy	src/fc/block_alloc.h	/^    destroy(T* t) { t->~T(); }$/;"	f	struct:object_cache_initializing_factory
destroy	src/fc/w_temp_alloc.h	/^        void destroy(pointer p) {$/;"	f	struct:w_temp_alloc::allocator
destroy	src/sm/partition.cpp	/^partition_t::destroy()$/;"	f	class:partition_t
destroy_TL_stats	src/sm/smthread.cpp	/^smthread_t::tcb_t::destroy_TL_stats() {$/;"	f	class:smthread_t::tcb_t
destroy_all_assoc	src/sm/smindex.cpp	/^ss_m::destroy_all_assoc(stid_t stid, const vec_t& key, int& num)$/;"	f	class:ss_m
destroy_all_histograms	src/sm/smindex.cpp	/^rc_t ss_m::destroy_all_histograms()$/;"	f	class:ss_m
destroy_assoc	src/sm/smindex.cpp	/^ss_m::destroy_assoc(stid_t stid, const vec_t& key, const vec_t& el,$/;"	f	class:ss_m
destroy_file	src/sm/log_core.cpp	/^log_core::destroy_file(partition_number_t n, bool pmsg)$/;"	f	class:log_core
destroy_file	src/sm/smfile.cpp	/^ss_m::destroy_file(const stid_t& fid)$/;"	f	class:ss_m
destroy_index	src/sm/smindex.cpp	/^ss_m::destroy_index(const stid_t& iid)$/;"	f	class:ss_m
destroy_latches	src/common/store_latch_manager.cpp	/^void store_latch_manager::destroy_latches(stid_t const &store) $/;"	f	class:store_latch_manager
destroy_latches	src/common/store_latch_manager.cpp	/^void store_latch_manager::destroy_latches(vid_t const &vol) $/;"	f	class:store_latch_manager
destroy_latches	src/sm/btree_latch_manager.cpp	/^void btree_latch_manager::destroy_latches(lpid_t const &root) $/;"	f	class:btree_latch_manager
destroy_latches	src/sm/btree_latch_manager.cpp	/^void btree_latch_manager::destroy_latches(stid_t const &store) $/;"	f	class:btree_latch_manager
destroy_md_assoc	src/sm/smindex.cpp	/^ss_m::destroy_md_assoc(stid_t stid, const nbox_t& key, const vec_t& el)$/;"	f	class:ss_m
destroy_md_index	src/sm/smindex.cpp	/^ss_m::destroy_md_index(const stid_t& iid)$/;"	f	class:ss_m
destroy_mr_all_assoc	src/sm/smindex.cpp	/^rc_t ss_m::destroy_mr_all_assoc(stid_t stid, const vec_t& key, int& num,$/;"	f	class:ss_m
destroy_mr_assoc	src/sm/smindex.cpp	/^rc_t ss_m::destroy_mr_assoc(stid_t stid, const vec_t& key, const vec_t& el,$/;"	f	class:ss_m
destroy_mr_index	src/sm/smindex.cpp	/^rc_t ss_m::destroy_mr_index(const stid_t& iid)$/;"	f	class:ss_m
destroy_mrbt_file	src/sm/smfile.cpp	/^ss_m::destroy_mrbt_file(const stid_t& fid)$/;"	f	class:ss_m
destroy_mrbt_rec	src/sm/smfile.cpp	/^ss_m::destroy_mrbt_rec(const rid_t& rid,$/;"	f	class:ss_m
destroy_object	src/fc/block_alloc.h	/^    void destroy_object(T* ptr) {$/;"	f	struct:block_alloc
destroy_rec	src/sm/file.cpp	/^file_m::destroy_rec(const rid_t& rid, const bool bIgnoreLatches)$/;"	f	class:file_m
destroy_rec	src/sm/file.h	/^file_p::destroy_rec(slotid_t idx)$/;"	f	class:file_p
destroy_rec	src/sm/smfile.cpp	/^ss_m::destroy_rec(const rid_t& rid, const bool bIgnoreLocks)$/;"	f	class:ss_m
destroy_rec_slot	src/sm/file.cpp	/^file_m::destroy_rec_slot(const rid_t rid, file_mrbt_p& page, const bool bIgnoreLatches)$/;"	f	class:file_m
destroy_store	src/sm/sm_io.cpp	/^io_m::destroy_store(const stid_t& stid, bool acquire_lock) $/;"	f	class:io_m
destroy_table	src/sm/histo.cpp	/^histoid_t::destroy_table()$/;"	f	class:histoid_t
destroy_vol	src/sm/sm.cpp	/^ss_m::destroy_vol(const lvid_t& lvid)$/;"	f	class:ss_m
destroy_xct	src/sm/xct.cpp	/^xct_t::destroy_xct(xct_t* xd) $/;"	f	class:xct_t
destroyed_store	src/sm/histo.cpp	/^histoid_t::destroyed_store(const stid_t&s, sdesc_t*sd) $/;"	f	class:histoid_t
destructive	src/sm/sort_s.h	/^    bool   destructive;    $/;"	m	struct:ssm_sort::sort_parm_t
destructor	src/sm/page.h	/^page_p::destructor()$/;"	f	class:page_p
detach	src/fc/w_listm.cpp	/^w_link_t::detach()$/;"	f	class:w_link_t
detach	src/sm/smsh/tcl_thread.cpp	/^    void detach() { $/;"	f	class:barrier_t
detach_thread	src/sm/xct.cpp	/^xct_t::detach_thread() $/;"	f	class:xct_t
detach_update_thread	src/sm/xct.cpp	/^xct_t::detach_update_thread()$/;"	f	class:xct_t
detach_xct	src/sm/sm.h	/^    static void           detach_xct() { xct_t *x = me()->xct();$/;"	f	class:ss_m
detach_xct	src/sm/smthread.cpp	/^smthread_t::detach_xct(xct_t* x)$/;"	f	class:smthread_t
dev	src/common/devid_t.h	/^    w_base_t::uint4_t    dev;$/;"	m	struct:devid_t
dev	src/sm/sm.cpp	/^device_m* smlevel_0::dev = 0;$/;"	m	class:smlevel_0	file:
dev	src/sm/sm_base.h	/^    static device_m* dev;$/;"	m	class:smlevel_0
dev_name	src/sm/logrec.h	/^        char        dev_name[smlevel_0::max_devname+1];$/;"	m	struct:chkpt_dev_tab_t::devrec_t
dev_name	src/sm/sm_io.h	/^io_m::dev_name(vid_t vid) $/;"	f	class:io_m
device_hdr_s	src/sm/device.h	/^    device_hdr_s(uint4_t version, $/;"	f	struct:device_hdr_s
device_hdr_s	src/sm/device.h	/^struct device_hdr_s {$/;"	s
device_m	src/sm/device.cpp	/^device_m::device_m()$/;"	f	class:device_m
device_m	src/sm/device.h	/^class device_m : public smlevel_0 {$/;"	c
device_quota_KB	src/sm/vol.h	/^    sm_diskaddr_t   device_quota_KB() const { $/;"	f	class:volhdr_t
device_s	src/sm/device.h	/^struct device_s {$/;"	s
devid_t	src/common/devid_t.cpp	/^devid_t::devid_t(const char* path)$/;"	f	class:devid_t
devid_t	src/common/devid_t.h	/^    devid_t() : id(0), dev(0) {};$/;"	f	struct:devid_t
devid_t	src/common/devid_t.h	/^struct devid_t {$/;"	s
devname	src/sm/vol.h	/^inline const char* vol_t::devname() const$/;"	f	class:vol_t
devrec	src/sm/logrec.h	/^    devrec_t        devrec[max];$/;"	m	struct:chkpt_dev_tab_t
devrec_t	src/sm/logrec.h	/^    struct devrec_t {$/;"	s	struct:chkpt_dev_tab_t
die	src/sm/smsh/random_kick.cpp	/^die($/;"	f
diff	src/fc/valgrind_help.h	/^    int diff() const { return _check_failed; }$/;"	f	class:valgrind_check
diff_in_ms	src/sm/smsh/scripts/random.perf.tcl	/^proc diff_in_ms { t1 t2 } {$/;"	p
difference_type	src/fc/w_temp_alloc.h	/^        typedef ptrdiff_t difference_type;$/;"	t	struct:w_temp_alloc::allocator
dim	src/fc/nbox.h	/^    int       dim;              \/\/ dimension$/;"	m	class:nbox_t
dim	src/sm/rtree_p.h	/^    int2_t    dim;    \/\/ for rtree, this is dimension.  $/;"	m	struct:rtctrl_t
dim	src/sm/rtree_p.h	/^inline int rtree_base_p::dim() const$/;"	f	class:rtree_base_p
dimension	src/fc/nbox.h	/^    int dimension() const     { return dim; }$/;"	f	class:nbox_t
dir	src/sm/sm.cpp	/^dir_m* smlevel_3::dir = 0;$/;"	m	class:smlevel_3	file:
dir	src/sm/sm_int_3.h	/^    static dir_m*    dir;$/;"	m	class:smlevel_3
dir_cache_hit	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t dir_cache_hit;$/;"	v
dir_cache_inherit	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t dir_cache_inherit;$/;"	v
dir_cache_miss	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t dir_cache_miss;$/;"	v
dir_cache_stale	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t dir_cache_stale;$/;"	v
dir_key_type_size	src/sm/dir.cpp	/^static const unsigned int dir_key_type_size = sizeof(snum_t);$/;"	v	file:
dir_m	src/sm/dir.h	/^    NORET        dir_m() {};$/;"	f	class:dir_m
dir_m	src/sm/dir.h	/^class dir_m : public smlevel_3 {$/;"	c
dir_name	src/sm/log.h	/^    static const char * dir_name() { return _logdir; }$/;"	f	class:log_m
dir_vol_m	src/sm/dir.h	/^    NORET        dir_vol_m() : _cnt(0) {};$/;"	f	class:dir_vol_m
dir_vol_m	src/sm/dir.h	/^class dir_vol_m : public smlevel_3 {$/;"	c
dirty	src/sm/bf_s.h	/^    bool  dirty() const  { return _dirty;  }$/;"	f	class:bfcb_t
dirty_pages_tab_t	src/sm/restart.cpp	/^class dirty_pages_tab_t {$/;"	c	file:
dirty_pages_tab_t	src/sm/restart.cpp	/^dirty_pages_tab_t::dirty_pages_tab_t(int sz) $/;"	f	class:dirty_pages_tab_t
disable_background_flushing	src/sm/bf.cpp	/^bf_m::disable_background_flushing()$/;"	f	class:bf_m
disable_background_flushing	src/sm/bf.cpp	/^bf_m::disable_background_flushing(vid_t v)$/;"	f	class:bf_m
disable_fake_disk_latency	src/sm/sm.cpp	/^ss_m::disable_fake_disk_latency(vid_t vid)$/;"	f	class:ss_m
disable_fake_disk_latency	src/sm/sm_io.cpp	/^io_m::disable_fake_disk_latency(vid_t vid)$/;"	f	class:io_m
disable_fake_disk_latency	src/sm/vol.cpp	/^vol_t::disable_fake_disk_latency(void)$/;"	f	class:vol_t
disable_sli	src/sm/lock.cpp	/^void lock_m::disable_sli(xct_lock_info_t* theLockInfo) {$/;"	f	class:lock_m
disable_wait_for_flush	src/sm/log_core.cpp	/^bool disable_wait_for_flush = false;$/;"	v
disarm	src/sm/smsh/sort_funcs3.cpp	/^deleter::disarm() $/;"	f	class:deleter
discard	src/sm/page.h	/^page_p::discard()$/;"	f	class:page_p
discard_pinned_page	src/sm/bf.cpp	/^bf_m::discard_pinned_page(const page_s* buf)$/;"	f	class:bf_m
discard_store	src/sm/bf.cpp	/^bf_m::discard_store(stid_t stid)$/;"	f	class:bf_m
discard_volume	src/sm/bf.cpp	/^bf_m::discard_volume(vid_t vid)$/;"	f	class:bf_m
dismount	src/sm/device.cpp	/^w_rc_t device_m::dismount(const char* dev_name)$/;"	f	class:device_m
dismount	src/sm/dir.h	/^dir_m::dismount(vid_t vid, bool flush, bool dismount_if_locked)$/;"	f	class:dir_m
dismount	src/sm/dir.h	/^dir_vol_m::dismount(vid_t vid, bool flush, bool dismount_if_locked)$/;"	f	class:dir_vol_m
dismount	src/sm/sm_io.cpp	/^io_m::dismount(vid_t vid, bool flush)$/;"	f	class:io_m
dismount	src/sm/vol.cpp	/^vol_t::dismount(bool flush)$/;"	f	class:vol_t
dismount_all	src/sm/device.cpp	/^w_rc_t device_m::dismount_all()$/;"	f	class:device_m
dismount_all	src/sm/dir.h	/^dir_m::dismount_all(bool flush, bool dismount_if_locked)$/;"	f	class:dir_m
dismount_all	src/sm/dir.h	/^dir_vol_m::dismount_all(bool flush, bool dismount_if_locked)$/;"	f	class:dir_vol_m
dismount_all	src/sm/sm.cpp	/^ss_m::dismount_all()$/;"	f	class:ss_m
dismount_all	src/sm/sm_io.h	/^io_m::dismount_all(bool flush)$/;"	f	class:io_m
dismount_all_dev	src/sm/sm_io.cpp	/^io_m::dismount_all_dev()$/;"	f	class:io_m
dismount_dev	src/sm/sm.cpp	/^ss_m::dismount_dev(const char* device)$/;"	f	class:ss_m
dismount_dev	src/sm/sm_io.cpp	/^io_m::dismount_dev(const char* dev_name)$/;"	f	class:io_m
dismount_vol_log	src/sm/logdef_gen.cpp	/^	dismount_vol_log (logrec_t*)   {};$/;"	f	class:dismount_vol_log
dismount_vol_log	src/sm/logdef_gen.cpp	/^    class dismount_vol_log : public logrec_t {$/;"	c	file:
dismount_vol_log	src/sm/logrec.cpp	/^dismount_vol_log::dismount_vol_log($/;"	f	class:dismount_vol_log
dispatch_init	src/sm/smsh/shell.cpp	/^void dispatch_init() $/;"	f
dispose	src/sm/xct.cpp	/^xct_t::dispose()$/;"	f	class:xct_t
dissect	src/common/regex_engine.cpp	/^dissect(struct match *m, char *start, char *stop, sopno startst, sopno stopst)$/;"	f	file:
dissect	src/common/regex_engine.cpp	1023;"	d	file:
dissect	src/common/regex_engine.cpp	63;"	d	file:
dissect	src/common/regex_engine.cpp	74;"	d	file:
distcleancheck_listfiles	Makefile	/^distcleancheck_listfiles = find . -type f -print$/;"	m
distdir	Makefile	/^distdir = $(PACKAGE)-$(VERSION)$/;"	m
distribute	src/sm/btree_p.cpp	/^btree_p::distribute($/;"	f	class:btree_p
distributeSpace	src/sm/key_ranges_map.cpp	/^uint key_ranges_map::distributeSpace(const char* min, const uint minSize,$/;"	f	class:key_ranges_map
distuninstallcheck_listfiles	Makefile	/^distuninstallcheck_listfiles = find . -type f -print$/;"	m
div32	src/common/bitmap.cpp	/^inline int div32(int x)        { return x >> 5; }$/;"	f
div32	src/fc/w_bitmap.cpp	/^inline int div32(long x)        { return x >> 5; }$/;"	f
div8	src/common/bitmap.cpp	/^inline int div8(int x)         { return x >> 3; }$/;"	f
div8	src/fc/w_bitmap.cpp	/^inline int div8(long x)         { return x >> 3; }$/;"	f
djunk	src/common/tests/vectors.cpp	/^const char *djunk = "Djunk";$/;"	v
doErrorTests	src/sthread/tests/thread1.cpp	/^void doErrorTests()$/;"	f
do_catch	src/sthread/tests/except.cpp	/^	bool	do_catch;		\/\/ let exception slide past run$/;"	m	class:except_thread_t	file:
do_check	src/fc/w_rc.cpp	/^bool w_rc_t::do_check = true; \/\/ default is on but it does nothing$/;"	m	class:w_rc_t	file:
do_check	src/fc/w_rc.h	/^    static bool            do_check;$/;"	m	class:w_rc_t
do_init	src/sm/tests/create_rec.cpp	/^smthread_user_t::do_init()$/;"	f	class:smthread_user_t
do_init	src/sm/tests/log_exceed.cpp	/^smthread_user_t::do_init()$/;"	f	class:smthread_user_t
do_init	src/sm/tests/mrbtrees_test.cpp	/^rc_t smthread_main_t::do_init()$/;"	f	class:smthread_main_t
do_init	src/sm/tests/rtree_example.cpp	/^smthread_user_t::do_init()$/;"	f	class:smthread_user_t
do_init	src/sm/tests/sort_stream.cpp	/^smthread_user_t::do_init()$/;"	f	class:smthread_user_t
do_init	src/sm/tests/vtable_example.cpp	/^smthread_user_t::do_init()$/;"	f	class:smthread_user_t
do_init	src/sthread/sthread.cpp	/^sthread_init_t::do_init()$/;"	f	class:sthread_init_t
do_prefetch	src/sm/sm.cpp	/^bool        smlevel_0::do_prefetch = false;$/;"	m	class:smlevel_0	file:
do_prefetch	src/sm/sm_base.h	/^    static bool        do_prefetch;$/;"	m	class:smlevel_0
do_prime_caches	src/sm/sm_io.cpp	/^static bool do_prime_caches = true;$/;"	v	file:
do_unmap	src/sthread/io.cpp	/^int sthread_t::do_unmap()$/;"	f	class:sthread_t
do_until_stat	src/sm/smsh/scripts/bt.tcl	/^proc do_until_stat { stat val op nsame klen elen term } {$/;"	p
do_work	src/sm/tests/create_rec.cpp	/^smthread_user_t::do_work()$/;"	f	class:smthread_user_t
do_work	src/sm/tests/log_exceed.cpp	/^smthread_user_t::do_work()$/;"	f	class:smthread_user_t
do_work	src/sm/tests/mrbtrees_test.cpp	/^rc_t smthread_main_t::do_work()$/;"	f	class:smthread_main_t
do_work	src/sm/tests/rtree_example.cpp	/^smthread_user_t::do_work()$/;"	f	class:smthread_user_t
do_work	src/sm/tests/sort_stream.cpp	/^smthread_user_t::do_work()$/;"	f	class:smthread_user_t
do_work	src/sm/tests/vtable_example.cpp	/^smthread_user_t::do_work()$/;"	f	class:smthread_user_t
docdir	Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	config/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/atomic_ops/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/atomic_ops/asm_linkage/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/atomic_ops/asm_linkage/usr/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/atomic_ops/asm_linkage/usr/src/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/atomic_ops/atomic_ops/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/atomic_ops/atomic_ops/amd64/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/atomic_ops/atomic_ops/i386/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/atomic_ops/atomic_ops/sparc/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/atomic_ops/ia32/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/atomic_ops/ia32/sys/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/atomic_ops/intel/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/atomic_ops/intel/ia32/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/atomic_ops/intel/ia32/sys/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/atomic_ops/intel/sys/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/atomic_ops/sparc/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/atomic_ops/sparc/sys/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/common/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/common/tests/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/fc/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/fc/tests/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/sm/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/sm/smsh/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/sm/smsh/lib/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/sm/smsh/scripts/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/sm/tests/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/sthread/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/sthread/tests/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	tools/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
doemit	src/common/regcomp.cpp	/^doemit(struct parse *p, sop op, size_t opnd)$/;"	f	file:
dofwd	src/common/regcomp.cpp	/^dofwd(struct parse *p, sopno pos, sop value)$/;"	f	file:
dohot	src/sm/smsh/scripts/random.perf.tcl	/^proc dohot { i f } {$/;"	p
doinsert	src/common/regcomp.cpp	/^doinsert(struct parse *p, sop op, size_t opnd, sopno pos)$/;"	f	file:
done	src/common/tests/latch1.cpp	/^pthread_cond_t  done; \/\/ paried with done_mutex$/;"	v
done	src/sm/newsort.cpp	/^    bool done() const { return (_way == 1)? true : false; }$/;"	f	class:phase_mgr
done	src/sthread/tests/thread1.cpp	/^void	wait_for_t::done()$/;"	f	class:wait_for_t
done_count	src/common/tests/latch1.cpp	/^int      done_count;$/;"	v
done_mutex	src/common/tests/latch1.cpp	/^pthread_mutex_t done_mutex = PTHREAD_MUTEX_INITIALIZER; \/\/ paired with done$/;"	v
done_waiting	src/sm/lock_core.cpp	/^void xct_lock_info_t::done_waiting() {$/;"	f	class:xct_lock_info_t
dontEscalate	src/sm/sm_base.h	/^        dontEscalate        = max_int4_minus1,$/;"	e	enum:smlevel_0::escalation_options
dontEscalateDontPassOn	src/sm/sm_base.h	/^        dontEscalateDontPassOn,$/;"	e	enum:smlevel_0::escalation_options
dontModifyThreshold	src/sm/sm_base.h	/^        dontModifyThreshold        = -1$/;"	e	enum:smlevel_0::escalation_options
dont_escalate	src/sm/lock.cpp	/^rc_t lock_m::dont_escalate(const lockid_t& n, bool passOnToDescendants)$/;"	f	class:lock_m
dont_escalate	src/sm/sm.cpp	/^ss_m::dont_escalate(const lockid_t& n, bool passOnToDescendants)$/;"	f	class:ss_m
doop	src/sm/smsh/scripts/bt.tcl	/^proc doop { op nsame klen elen term } {$/;"	p
dorandom	src/sm/smsh/random_kick.cpp	/^dorandom(long mod) $/;"	f
downgrade	src/common/latch.cpp	/^void latch_t::downgrade() {$/;"	f	class:latch_t
downgrade	src/sthread/srwlock.cpp	/^void mcs_rwlock::downgrade() $/;"	f	class:mcs_rwlock
dp_entry_t	src/sm/restart_s.h	/^    dp_entry_t() : rec_lsn(0, 0)                {};$/;"	f	struct:dp_entry_t
dp_entry_t	src/sm/restart_s.h	/^    dp_entry_t(const lpid_t& p, const lsn_t& l)$/;"	f	struct:dp_entry_t
dp_entry_t	src/sm/restart_s.h	/^struct dp_entry_t {$/;"	s
drand	src/fc/rand48.cpp	/^double rand48::drand() $/;"	f	class:rand48
drand	src/fc/tests/rand.cpp	/^double randalt::drand() $/;"	f	class:randalt
drand	src/fc/w_rand.cpp	/^double w_rand::drand() {$/;"	f	class:w_rand
drand	src/sthread/sthread.h	/^    static double        drand() {return tls_rng()->drand(); }$/;"	f	class:sthread_t
draw	src/fc/nbox.cpp	/^void nbox_t::draw(int level, ostream &DrawFile, const nbox_t& CoverAll) const$/;"	f	class:nbox_t
draw	src/sm/rtree.cpp	/^rtree_m::draw($/;"	f	class:rtree_m
draw	src/sm/rtree.cpp	/^rtree_p::draw(ostream &DrawFile, nbox_t &CoverAll)$/;"	f	class:rtree_p
draw_rtree	src/sm/smindex.cpp	/^ss_m::draw_rtree(const stid_t& stid, ostream &s)$/;"	f	class:ss_m
drop_all_but_last	src/sm/rtree.cpp	/^rtstk_t::drop_all_but_last()$/;"	f	class:rtstk_t
dstats	src/sm/smsh/lib/smsh.tcl	/^proc dstats {volid} {$/;"	p
dstatsnoaudit	src/sm/smsh/lib/smsh.tcl	/^proc dstatsnoaudit {volid} {$/;"	p
dtrace_cpuid	src/fc/cpu_info.cpp	/^    static __thread long volatile dtrace_cpuid;$/;"	m	struct:cpu_info::impl_helper	file:
dtrace_cpuid	src/fc/cpu_info.cpp	/^long volatile cpu_info::impl_helper::dtrace_cpuid = -1;$/;"	m	class:cpu_info::impl_helper	file:
dtrace_pid	src/fc/cpu_info.cpp	/^    static pid_t dtrace_pid;$/;"	m	struct:cpu_info::impl_helper	file:
dtrace_pid	src/fc/cpu_info.cpp	/^pid_t cpu_info::impl_helper::dtrace_pid = 0;$/;"	m	class:cpu_info::impl_helper	file:
dummies	src/sm/newsort.cpp	/^    int        dummies(int i) const { return _p[i]; }$/;"	f	class:fib_t
dummy	src/common/devid_t.h	/^    fill4    dummy;$/;"	m	struct:devid_t
dummy	src/fc/errlog.cpp	/^void dummy() { DBG(<<""); } \/\/ to keep gcc quiet about _fname_debug_$/;"	f
dummy	src/fc/tests/container.cpp	/^        char  dummy[43]; \/\/ odd number$/;"	m	struct:THING	file:
dummy	src/sm/sm_base.h	/^        dummy = 0$/;"	e	enum:smlevel_0::__anon28
dummy	src/sm/sm_s.h	/^    fill1        dummy; $/;"	m	struct:key_type_s
dummy	src/sthread/tests/pthread_test.cpp	/^void* dummy(void *) {return NULL;}$/;"	f
dummy1	src/sm/logrec.h	/^    fill1               dummy1;$/;"	m	struct:prepare_info_t
dummy1	src/sm/rtree.h	/^    fill1    dummy1;     \/\/ for alignment & for purify$/;"	m	struct:rtld_desc_t
dummy1	src/sm/tests/file_scan_many.cpp	/^	fill1     dummy1;$/;"	m	class:smthread_main_t	file:
dummy2	src/fc/tests/container.cpp	/^        char  dummy2[10]; \/\/ odd number again$/;"	m	struct:THING	file:
dummy2	src/sm/logrec.h	/^    fill2               dummy2;$/;"	m	struct:prepare_info_t
dummy2	src/sm/rtree.h	/^    fill2    dummy2;     \/\/ for alignment & for purify$/;"	m	struct:rtld_desc_t
dummy3	src/fc/tests/container.cpp	/^        char  dummy3;    \/\/ not aligned $/;"	m	struct:THING	file:
dummy4	src/fc/tests/container.cpp	/^        int  dummy4;    \/\/ aligned $/;"	m	struct:THING	file:
dummy_enumid	src/common/vec_t.h	/^    enum dummy_enumid { max_small = MAX_SMALL_VEC_SIZE };$/;"	g	class:cvec_t
dummy_t	src/sm/sort_s.h	/^    enum dummy_t {  t_char=sortorder::kt_u1,$/;"	g	struct:ssm_sort::key_info_t
dummyfile	src/fc/valgrind_help.cpp	/^    dummyfile() { _fd = open("\/tmp\/vgdummy", O_CREAT|O_TRUNC|O_RDWR, S_IRWXU);$/;"	f	class:dummyfile
dummyfile	src/fc/valgrind_help.cpp	/^class dummyfile {$/;"	c	file:
dump	src/common/tests/latch1.cpp	/^dump(ostream &o, latch_t &l)$/;"	f
dump	src/common/tests/mapp.cpp	/^dump(M &m)$/;"	f
dump	src/common/tests/mapp.cpp	/^dump(MM &m)$/;"	f
dump	src/common/tests/mapp.cpp	/^dump(S &m)$/;"	f
dump	src/common/tests/mapp.cpp	/^dump(const MS &m)$/;"	f
dump	src/fc/errlog.cpp	/^errlog_dummy::dump() {$/;"	f	class:errlog_dummy
dump	src/fc/errlog_s.h	/^    void dump() const {$/;"	f	struct:ErrLogInfo
dump	src/fc/tests/cuckoo.cpp	/^void dump()$/;"	f
dump	src/fc/tests/rand.cpp	/^void randorig::dump( const char *str, bool debug) const $/;"	f	class:randorig
dump	src/fc/vtable.cpp	/^vtable_row_t::dump(const char *msg) const$/;"	f	class:vtable_row_t
dump	src/fc/w_listm.cpp	/^w_list_base_t::dump()$/;"	f	class:w_list_base_t
dump	src/sm/bf.cpp	/^bf_m::dump(ostream &o)$/;"	f	class:bf_m
dump	src/sm/bf_core.cpp	/^bf_core_m::dump(ostream &o, bool \/*debugging*\/)const$/;"	f	class:bf_core_m
dump	src/sm/device.cpp	/^void device_m::dump() const$/;"	f	class:device_m
dump	src/sm/lock.cpp	/^void lock_m::dump(ostream &o)$/;"	f	class:lock_m
dump	src/sm/lock_cache.h	/^    void dump() const {$/;"	f	class:lock_cache_t
dump	src/sm/lock_cache.h	/^    void dump() const {$/;"	f	struct:lock_cache_elem_t
dump	src/sm/lock_core.cpp	/^lock_core_m::dump(ostream & o)$/;"	f	class:lock_core_m
dump	src/sm/lock_core.cpp	/^void lock_core_m::dump()$/;"	f	class:lock_core_m
dump	src/sm/tests/lock_cache_test.cpp	/^void dump(lockid_t &l)$/;"	f
dump	src/sm/tests/lockid_test.cpp	/^void dump(lockid_t &l)$/;"	f
dump	src/sm/tests/log_exceed.cpp	/^void dump()$/;"	f
dump	src/sm/xct.cpp	/^xct_t::dump(ostream &out) $/;"	f	class:xct_t
dumpThreadById	src/sm/xct.cpp	/^dumpThreadById(int i) { $/;"	f
dumpXct	src/sm/xct.cpp	/^extern "C" void dumpXct(const xct_t *x) { if(x) { cout << *x <<endl;} }$/;"	f
dump_all	src/sm/bf_core.cpp	/^void page_write_mutex_t::dump_all() $/;"	f	class:page_write_mutex_t
dump_all_sm_stats	src/sm/sm.cpp	/^void dump_all_sm_stats()$/;"	f
dump_buffers	src/sm/sm.cpp	/^ss_m::dump_buffers(ostream &o)$/;"	f	class:ss_m
dump_exts	src/sm/sm.cpp	/^ss_m::dump_exts(ostream &o, vid_t vid, extnum_t start, extnum_t end)$/;"	f	class:ss_m
dump_exts	src/sm/sm_io.cpp	/^io_m::dump_exts(ostream& o, vid_t vid, extnum_t start, extnum_t end)$/;"	f	class:io_m
dump_exts	src/sm/vol.cpp	/^rc_t vol_t::dump_exts(ostream &o, extnum_t start, extnum_t end)$/;"	f	class:vol_t
dump_histo	src/sm/sm.cpp	/^rc_t ss_m::dump_histo(ostream &o, bool locked)$/;"	f	class:ss_m
dump_io	src/sthread/io.cpp	/^extern "C" void dump_io() $/;"	f
dump_io	src/sthread/io.cpp	/^void    sthread_t::dump_io(ostream &s)$/;"	f	class:sthread_t
dump_lock_hash_numbers	src/sm/lock_core.cpp	/^void lock_core_m::dump_lock_hash_numbers() const$/;"	f	class:lock_core_m
dump_locks	src/sm/lock_core.cpp	/^xct_lock_info_t::dump_locks(ostream &out) const$/;"	f	class:xct_lock_info_t
dump_locks	src/sm/sm.cpp	/^ss_m::dump_locks() {$/;"	f	class:ss_m
dump_locks	src/sm/sm.cpp	/^ss_m::dump_locks(ostream &o)$/;"	f	class:ss_m
dump_locks	src/sm/xct.cpp	/^xct_t::dump_locks(ostream &out) const$/;"	f	class:xct_t
dump_page_mutexes	src/sm/bf_core.cpp	/^void dump_page_mutexes() $/;"	f
dump_pin_body	src/sm/smsh/shell.cpp	/^dump_pin_body( $/;"	f
dump_pin_hdr	src/sm/smsh/shell.cpp	/^dump_pin_hdr( $/;"	f
dump_scan	src/sm/smsh/shell.cpp	/^dump_scan(scan_file_i &scan, ostream &out, DSCB callback, bool hex) $/;"	f
dump_stats	src/sthread/sthread.cpp	/^void sthread_t::dump_stats(ostream &o)$/;"	f	class:sthread_t
dump_stores	src/sm/sm.cpp	/^ss_m::dump_stores(ostream &o, vid_t vid, int start, int end)$/;"	f	class:ss_m
dump_stores	src/sm/sm_io.cpp	/^io_m::dump_stores(ostream& o, vid_t vid, int start, int end)$/;"	f	class:io_m
dump_stores	src/sm/vol.cpp	/^rc_t vol_t::dump_stores(ostream &o, int start, int end)$/;"	f	class:vol_t
dump_xcts	src/sm/sm.cpp	/^rc_t ss_m::dump_xcts(ostream& o)$/;"	f	class:ss_m
dumpall	src/sthread/sthread.cpp	/^void sthread_t::dumpall(const char *str, ostream &o)$/;"	f	class:sthread_t
dumpall	src/sthread/sthread.cpp	/^void sthread_t::dumpall(ostream &o)$/;"	f	class:sthread_t
dumprc	src/sm/smsh/shell.cpp	/^bool dumprc =  DEFAULT_DUMPRC;$/;"	v
dumpthreads	src/sthread/sthread.cpp	/^void dumpthreads()$/;"	f
dumptree	src/sm/btree_impl.cpp	/^void dumptree(const lpid_t &root)$/;"	f
dupl	src/common/regcomp.cpp	/^dupl(struct parse *p, sopno start, sopno finish)$/;"	f	file:
duplicate_rec	src/sm/sort.cpp	/^static bool duplicate_rec(const record_t* rec1, const record_t* rec2)$/;"	f	file:
duplicate_values	src/sm/smsh/sort_funcs2.cpp	/^int    duplicate_values[4] = { -10, 17, 10, 20 };$/;"	v
durable_lsn	src/sm/log.h	/^    lsn_t               durable_lsn() const {$/;"	f	class:log_m
duration_str	src/sm/lock_core.cpp	/^const char* const lock_base_t::duration_str[t_num_durations] = {$/;"	m	class:lock_base_t	file:
duration_str	src/sm/lock_s.h	/^    static const char* const         duration_str[t_num_durations];$/;"	m	class:lock_base_t
duration_t	src/sm/lock.h	/^    typedef lock_base_t::duration_t duration_t;$/;"	t	class:lock_m
duration_t	src/sm/lock_core.h	/^    typedef lock_base_t::duration_t duration_t;$/;"	t	class:lock_core_m
duration_t	src/sm/lock_s.h	/^    typedef smlevel_0::lock_duration_t duration_t;$/;"	t	class:lock_base_t
duration_t	src/sm/lock_x.h	/^    typedef lock_base_t::duration_t duration_t; \/\/ in common\/basics.h$/;"	t	class:lock_request_t
duration_t	src/sm/lock_x.h	/^    typedef lock_base_t::duration_t duration_t;$/;"	t	class:lock_head_t
dvidir	Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	config/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/atomic_ops/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/atomic_ops/asm_linkage/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/atomic_ops/asm_linkage/usr/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/atomic_ops/asm_linkage/usr/src/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/atomic_ops/atomic_ops/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/atomic_ops/atomic_ops/amd64/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/atomic_ops/atomic_ops/i386/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/atomic_ops/atomic_ops/sparc/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/atomic_ops/ia32/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/atomic_ops/ia32/sys/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/atomic_ops/intel/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/atomic_ops/intel/ia32/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/atomic_ops/intel/ia32/sys/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/atomic_ops/intel/sys/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/atomic_ops/sparc/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/atomic_ops/sparc/sys/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/common/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/common/tests/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/fc/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/fc/tests/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/sm/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/sm/smsh/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/sm/smsh/lib/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/sm/smsh/scripts/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/sm/tests/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/sthread/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/sthread/tests/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	tools/Makefile	/^dvidir = ${docdir}$/;"	m
dynamic_cast_to_const_smthread	src/sm/smthread.cpp	/^smthread_t::dynamic_cast_to_const_smthread() const$/;"	f	class:smthread_t
dynamic_cast_to_const_smthread	src/sthread/sthread.cpp	/^const smthread_t* sthread_t::dynamic_cast_to_const_smthread() const$/;"	f	class:sthread_t
dynamic_cast_to_smthread	src/sm/smthread.cpp	/^smthread_t::dynamic_cast_to_smthread()$/;"	f	class:smthread_t
dynamic_cast_to_smthread	src/sthread/sthread.cpp	/^smthread_t* sthread_t::dynamic_cast_to_smthread()$/;"	f	class:sthread_t
dynarray	src/fc/dynarray.h	/^    dynarray() : _base(0), _size(0), _capacity(0) { }$/;"	f	struct:dynarray
dynarray	src/fc/dynarray.h	/^struct dynarray {$/;"	s
dynarray_pool	src/fc/w_temp_alloc.h	/^        dynarray_pool(size_t max_size) {$/;"	f	struct:w_temp_alloc::dynarray_pool
dynarray_pool	src/fc/w_temp_alloc.h	/^    struct dynarray_pool : pool {$/;"	s	struct:w_temp_alloc
dynpool	src/fc/block_alloc.cpp	/^dynpool::dynpool(size_t chip_size, size_t chip_count, size_t log2_block_size, size_t max_bytes)$/;"	f	class:dynpool
dynpool	src/fc/block_alloc.h	/^struct dynpool : memory_block::block_pool {$/;"	s
dynvector	src/fc/dynarray.h	/^    dynvector() : _size(0), _align_offset(0) { }$/;"	f	struct:dynvector
dynvector	src/fc/dynarray.h	/^struct dynvector {$/;"	s
e	src/sm/histo.cpp	/^static __thread struct { extnum_t e; snum_t s; } last_extent = {0,0};$/;"	m	struct:__anon51	file:
eABORTED	src/sm/e_error_enum_gen.h	/^    eABORTED                  = 0x80042,$/;"	e	enum:__anon37
eALIGNPARM	src/sm/e_error_enum_gen.h	/^    eALIGNPARM                = 0x80004,$/;"	e	enum:__anon37
eALREADYMOUNTED	src/sm/e_error_enum_gen.h	/^    eALREADYMOUNTED           = 0x8000e,$/;"	e	enum:__anon37
eAPPENDFILEINOSCAN	src/sm/e_error_enum_gen.h	/^    eAPPENDFILEINOSCAN        = 0x80045,$/;"	e	enum:__anon37
eASSERT	src/sm/e_error_enum_gen.h	/^    eASSERT                   = 0x80000,$/;"	e	enum:__anon37
eBADAPPEND	src/sm/e_error_enum_gen.h	/^    eBADAPPEND                = 0x80022,$/;"	e	enum:__anon37
eBADARGUMENT	src/sm/e_error_enum_gen.h	/^    eBADARGUMENT              = 0x80027,$/;"	e	enum:__anon37
eBADCCLEVEL	src/sm/e_error_enum_gen.h	/^    eBADCCLEVEL               = 0x8003a,$/;"	e	enum:__anon37
eBADCMPOP	src/sm/e_error_enum_gen.h	/^    eBADCMPOP                 = 0x8001c,$/;"	e	enum:__anon37
eBADCOMPENSATION	src/sm/e_error_enum_gen.h	/^    eBADCOMPENSATION          = 0x80044,$/;"	e	enum:__anon37
eBADFORMAT	src/sm/e_error_enum_gen.h	/^    eBADFORMAT                = 0x80010,$/;"	e	enum:__anon37
eBADKEY	src/sm/e_error_enum_gen.h	/^    eBADKEY                   = 0x8001b,$/;"	e	enum:__anon37
eBADKEYTYPESTR	src/sm/e_error_enum_gen.h	/^    eBADKEYTYPESTR            = 0x8001a,$/;"	e	enum:__anon37
eBADLENGTH	src/sm/e_error_enum_gen.h	/^    eBADLENGTH                = 0x80023,$/;"	e	enum:__anon37
eBADLOCKMODE	src/sm/e_error_enum_gen.h	/^    eBADLOCKMODE              = 0x80036,$/;"	e	enum:__anon37
eBADMASTERCHKPTFORMAT	src/sm/e_error_enum_gen.h	/^    eBADMASTERCHKPTFORMAT     = 0x80041,$/;"	e	enum:__anon37
eBADNDXTYPE	src/sm/e_error_enum_gen.h	/^    eBADNDXTYPE               = 0x80016,$/;"	e	enum:__anon37
eBADPID	src/sm/e_error_enum_gen.h	/^    eBADPID                   = 0x80008,$/;"	e	enum:__anon37
eBADSAVEPOINT	src/sm/e_error_enum_gen.h	/^    eBADSAVEPOINT             = 0x80024,$/;"	e	enum:__anon37
eBADSCAN	src/sm/e_error_enum_gen.h	/^    eBADSCAN                  = 0x80017,$/;"	e	enum:__anon37
eBADSLOTNUMBER	src/sm/e_error_enum_gen.h	/^    eBADSLOTNUMBER            = 0x8001f,$/;"	e	enum:__anon37
eBADSTART	src/sm/e_error_enum_gen.h	/^    eBADSTART                 = 0x80021,$/;"	e	enum:__anon37
eBADSTID	src/sm/e_error_enum_gen.h	/^    eBADSTID                  = 0x80005,$/;"	e	enum:__anon37
eBADSTOREFLAGS	src/sm/e_error_enum_gen.h	/^    eBADSTOREFLAGS            = 0x80015,$/;"	e	enum:__anon37
eBADSTORETYPE	src/sm/e_error_enum_gen.h	/^    eBADSTORETYPE             = 0x80014,$/;"	e	enum:__anon37
eBADVOL	src/sm/e_error_enum_gen.h	/^    eBADVOL                   = 0x80009,$/;"	e	enum:__anon37
eBPFORCEFAILED	src/sm/e_error_enum_gen.h	/^    eBPFORCEFAILED            = 0x8004a,$/;"	e	enum:__anon37
eCANTWHILEACTIVEXCTS	src/sm/e_error_enum_gen.h	/^    eCANTWHILEACTIVEXCTS      = 0x8003d,$/;"	e	enum:__anon37
eCRASH	src/sm/e_error_enum_gen.h	/^    eCRASH                    = 0x80002,$/;"	e	enum:__anon37
eDEADLOCK	src/sm/e_error_enum_gen.h	/^    eDEADLOCK                 = 0x80039,$/;"	e	enum:__anon37
eDEVICEVOLFULL	src/sm/e_error_enum_gen.h	/^    eDEVICEVOLFULL            = 0x8000c,$/;"	e	enum:__anon37
eDEVNOTMOUNTED	src/sm/e_error_enum_gen.h	/^    eDEVNOTMOUNTED            = 0x8000d,$/;"	e	enum:__anon37
eDEVTOOLARGE	src/sm/e_error_enum_gen.h	/^    eDEVTOOLARGE              = 0x8000b,$/;"	e	enum:__anon37
eDUAUDITFAILED	src/sm/e_error_enum_gen.h	/^    eDUAUDITFAILED            = 0x80047,$/;"	e	enum:__anon37
eDUPLICATE	src/sm/e_error_enum_gen.h	/^    eDUPLICATE                = 0x80013,$/;"	e	enum:__anon37
eEOF	src/sm/e_error_enum_gen.h	/^    eEOF                      = 0x80012,$/;"	e	enum:__anon37
eERRMAX	src/sm/e_error_enum_gen.h	/^    eERRMAX                   = 0x8004a$/;"	e	enum:__anon37
eERRMAX	src/sm/smthread.cpp	/^const uint4_t eERRMAX = smlevel_0::eERRMAX;$/;"	v
eERRMIN	src/sm/e_error_enum_gen.h	/^    eERRMIN                   = 0x80000,$/;"	e	enum:__anon37
eERRMIN	src/sm/smthread.cpp	/^const uint4_t eERRMIN = smlevel_0::eERRMIN;$/;"	v
eEXTERN2PCTHREAD	src/sm/e_error_enum_gen.h	/^    eEXTERN2PCTHREAD          = 0x80032,$/;"	e	enum:__anon37
eFAILURE	src/sm/sm_base.h	/^    enum { eNOERROR = 0, eFAILURE = -1 };$/;"	e	enum:smlevel_0::__anon27
eFOUNDEXTTOFREE	src/sm/e_error_enum_gen.h	/^    eFOUNDEXTTOFREE           = 0x8003c,$/;"	e	enum:__anon37
eFRAMENOTFOUND	src/sm/e_error_enum_gen.h	/^    eFRAMENOTFOUND            = 0x80006,$/;"	e	enum:__anon37
eHOTPAGE	src/sm/e_error_enum_gen.h	/^    eHOTPAGE                  = 0x80049,$/;"	e	enum:__anon37
eINQUARK	src/sm/e_error_enum_gen.h	/^    eINQUARK                  = 0x8002e,$/;"	e	enum:__anon37
eINSUFFICIENTMEM	src/sm/e_error_enum_gen.h	/^    eINSUFFICIENTMEM          = 0x80026,$/;"	e	enum:__anon37
eINTERNAL	src/sm/logrec.cpp	/^enum {         eINTERNAL = smlevel_0::eINTERNAL,$/;"	e	enum:__anon85	file:
eINTERNAL	src/sm/redo_gen.cpp	/^		W_FATAL(eINTERNAL);$/;"	v
eINTERNAL	src/sm/sm_base.h	/^            eINTERNAL = fcINTERNAL,$/;"	e	enum:smlevel_0::__anon31
eINTERNAL	src/sm/undo_gen.cpp	/^		W_FATAL(eINTERNAL);$/;"	v
eINTRANS	src/sm/e_error_enum_gen.h	/^    eINTRANS                  = 0x8002b,$/;"	e	enum:__anon37
eINVALIDHINT	src/sm/e_error_enum_gen.h	/^    eINVALIDHINT              = 0x80046,$/;"	e	enum:__anon37
eISPREPARED	src/sm/e_error_enum_gen.h	/^    eISPREPARED               = 0x80031,$/;"	e	enum:__anon37
eLOCKTIMEOUT	src/sm/e_error_enum_gen.h	/^    eLOCKTIMEOUT              = 0x80037,$/;"	e	enum:__anon37
eLOGSPACEWARN	src/sm/e_error_enum_gen.h	/^    eLOGSPACEWARN             = 0x80043,$/;"	e	enum:__anon37
eLOGVERSIONTOONEW	src/sm/e_error_enum_gen.h	/^    eLOGVERSIONTOONEW         = 0x8003f,$/;"	e	enum:__anon37
eLOGVERSIONTOOOLD	src/sm/e_error_enum_gen.h	/^    eLOGVERSIONTOOOLD         = 0x80040,$/;"	e	enum:__anon37
eNDXNOTEMPTY	src/sm/e_error_enum_gen.h	/^    eNDXNOTEMPTY              = 0x80019,$/;"	e	enum:__anon37
eNOABORT	src/sm/e_error_enum_gen.h	/^    eNOABORT                  = 0x8002f,$/;"	e	enum:__anon37
eNOERROR	src/sm/sm_base.h	/^    enum { eNOERROR = 0, eFAILURE = -1 };$/;"	e	enum:smlevel_0::__anon27
eNOHANDLE	src/sm/e_error_enum_gen.h	/^    eNOHANDLE                 = 0x8003e,$/;"	e	enum:__anon37
eNOQUARK	src/sm/e_error_enum_gen.h	/^    eNOQUARK                  = 0x8002d,$/;"	e	enum:__anon37
eNOSUCHPTRANS	src/sm/e_error_enum_gen.h	/^    eNOSUCHPTRANS             = 0x80034,$/;"	e	enum:__anon37
eNOTBLOCKED	src/sm/e_error_enum_gen.h	/^    eNOTBLOCKED               = 0x80038,$/;"	e	enum:__anon37
eNOTEXTERN2PC	src/sm/e_error_enum_gen.h	/^    eNOTEXTERN2PC             = 0x80033,$/;"	e	enum:__anon37
eNOTFOUND	src/sm/sm_base.h	/^            eNOTFOUND = fcNOTFOUND,$/;"	e	enum:smlevel_0::__anon31
eNOTIMPLEMENTED	src/sm/sm_base.h	/^            eNOTIMPLEMENTED = fcNOTIMPLEMENTED$/;"	e	enum:smlevel_0::__anon31
eNOTPREPARED	src/sm/e_error_enum_gen.h	/^    eNOTPREPARED              = 0x80030,$/;"	e	enum:__anon37
eNOTRANS	src/sm/e_error_enum_gen.h	/^    eNOTRANS                  = 0x8002a,$/;"	e	enum:__anon37
eNVOL	src/sm/e_error_enum_gen.h	/^    eNVOL                     = 0x80011,$/;"	e	enum:__anon37
eOK	src/sm/e_error_enum_gen.h	/^    eOK                       = 0x0,$/;"	e	enum:__anon37
eOS	src/sm/sm_base.h	/^            eOS = fcOS,$/;"	e	enum:smlevel_0::__anon31
eOUTOFLOGSPACE	src/sm/e_error_enum_gen.h	/^    eOUTOFLOGSPACE            = 0x8001d,$/;"	e	enum:__anon37
eOUTOFMEMORY	src/sm/logrec.cpp	/^        eOUTOFMEMORY = smlevel_0::eOUTOFMEMORY$/;"	e	enum:__anon85	file:
eOUTOFMEMORY	src/sm/sm_base.h	/^            eOUTOFMEMORY = fcOUTOFMEMORY,$/;"	e	enum:smlevel_0::__anon31
eOUTOFSPACE	src/sm/e_error_enum_gen.h	/^    eOUTOFSPACE               = 0x80003,$/;"	e	enum:__anon37
ePAGECHANGED	src/sm/e_error_enum_gen.h	/^    ePAGECHANGED              = 0x80025,$/;"	e	enum:__anon37
ePINACTIVE	src/sm/e_error_enum_gen.h	/^    ePINACTIVE                = 0x80048,$/;"	e	enum:__anon37
eRECUPDATESIZE	src/sm/e_error_enum_gen.h	/^    eRECUPDATESIZE            = 0x80020,$/;"	e	enum:__anon37
eRECWONTFIT	src/sm/e_error_enum_gen.h	/^    eRECWONTFIT               = 0x8001e,$/;"	e	enum:__anon37
eRETRY	src/sm/e_error_enum_gen.h	/^    eRETRY                    = 0x8003b,$/;"	e	enum:__anon37
eSPACENOTFOUND	src/sm/e_error_enum_gen.h	/^    eSPACENOTFOUND            = 0x80007,$/;"	e	enum:__anon37
eTHREADMAPFULL	src/sm/e_error_enum_gen.h	/^    eTHREADMAPFULL            = 0x80035,$/;"	e	enum:__anon37
eTWOQUARK	src/sm/e_error_enum_gen.h	/^    eTWOQUARK                 = 0x8002c,$/;"	e	enum:__anon37
eTWOTHREAD	src/sm/e_error_enum_gen.h	/^    eTWOTHREAD                = 0x80029,$/;"	e	enum:__anon37
eTWOTRANS	src/sm/e_error_enum_gen.h	/^    eTWOTRANS                 = 0x80028,$/;"	e	enum:__anon37
eUSERABORT	src/sm/e_error_enum_gen.h	/^    eUSERABORT                = 0x80001,$/;"	e	enum:__anon37
eVOLEXISTS	src/sm/e_error_enum_gen.h	/^    eVOLEXISTS                = 0x8000f,$/;"	e	enum:__anon37
eVOLTOOLARGE	src/sm/e_error_enum_gen.h	/^    eVOLTOOLARGE              = 0x8000a,$/;"	e	enum:__anon37
eWRONGKEYTYPE	src/sm/e_error_enum_gen.h	/^    eWRONGKEYTYPE             = 0x80018,$/;"	e	enum:__anon37
e_errmsg	src/sm/e_errmsg_gen.h	/^static char* e_errmsg[] = {$/;"	v
e_error_info_bakw	src/sm/e_einfo_bakw_gen.h	/^w_error_info_t e_error_info_bakw[] = {$/;"	v
e_msg_size	src/sm/e_errmsg_gen.h	/^const e_msg_size = 74;$/;"	v
eff	src/sm/extent.h	/^    w_base_t::uint2_t        eff;$/;"	m	struct:stnode_t
eff	src/sm/sdesc.h	/^    u_char        eff;                \/\/ extent fill factor in %        $/;"	m	struct:sinfo_s
eff	src/sm/sm.h	/^    u_char    eff;        $/;"	m	class:sm_store_info_t
eff	src/sm/sm_io.h	/^        uint2_t eff()  const$/;"	f	class:store_operation_param
eflags	src/common/regex_engine.cpp	/^    int eflags;$/;"	m	struct:match	file:
eight	src/fc/w_input.cpp	/^        five=5, six=6, seven=7, eight=8, $/;"	e	enum:charclass	file:
el_filler	src/common/vec_t.h	/^struct el_filler {$/;"	s
el_filler_utest	src/sm/tests/mrbtrees_test.cpp	/^struct el_filler_utest : public el_filler {$/;"	s	file:
elem	src/sm/btcursor.h	/^    char*            elem()     { return _eof ? 0 :  _space + _klen; }$/;"	f	class:bt_cursor_t
elem	src/sm/btree_p.h	/^    const cvec_t&        elem() const     { return _elem; }$/;"	f	class:btrec_t
elem	src/sm/keyed.h	/^inline const char* keyrec_t::elem() const    { return _body() + _hdr.klen; }$/;"	f	class:keyrec_t
elem1_t	src/fc/tests/list1.cpp	/^struct elem1_t {$/;"	s	file:
elem2_t	src/fc/tests/list2.cpp	/^struct elem2_t {$/;"	s	file:
elem3_t	src/fc/tests/list3.cpp	/^struct elem3_t {$/;"	s	file:
elem_ascend_list_t	src/fc/tests/list3.cpp	/^typedef w_ascend_list_t<elem3_t, unsafe_list_dummy_lock_t, int>   elem_ascend_list_t;$/;"	t	file:
elem_descend_list_t	src/fc/tests/list3.cpp	/^typedef w_descend_list_t<elem3_t, unsafe_list_dummy_lock_t, int>  elem_descend_list_t;$/;"	t	file:
elem_t	src/fc/tests/hash2.cpp	/^struct elem_t {$/;"	s	file:
element_t	src/fc/tests/hash1.cpp	/^struct element_t {$/;"	s	file:
elements	src/fc/w_heap.h	/^        T*                 elements;$/;"	m	class:Heap
elen	src/sm/btcursor.h	/^    int                elen() const     { return _elen; }$/;"	f	class:bt_cursor_t
elen	src/sm/btree_p.h	/^    smsize_t            elen() const    { return _elem.size(); }$/;"	f	class:btrec_t
elen	src/sm/keyed.h	/^    smsize_t elen() const    { return _hdr.elen; }$/;"	f	class:keyrec_t
elen	src/sm/keyed.h	/^    uint2_t    elen;$/;"	m	struct:keyrec_t::hdr_s
elen	src/sm/logrec.cpp	/^    uint2_t        elen;$/;"	m	struct:btree_insert_t	file:
elen	src/sm/logrec.cpp	/^    uint2_t        elen;$/;"	m	struct:rtree_insert_t	file:
eleven	src/fc/w_input.cpp	/^        nine=9, ten=10, eleven=11,$/;"	e	enum:charclass	file:
elm_cmp	src/sm/btree_bl.cpp	/^elm_cmp(const void *_r1, const void *_r2)$/;"	f	file:
elr_enabled	src/sm/xct.cpp	/^static bool elr_enabled = false;$/;"	v	file:
emerg_prio	src/fc/errlog.cpp	/^ostream& emerg_prio(ostream& o){return flush_and_setprio(o, log_emerg); }$/;"	f
empty	src/common/regex_engine.cpp	/^    states empty;        \/* empty set of states *\/$/;"	m	struct:match	file:
empty	src/fc/nbox.cpp	/^bool nbox_t::empty() const$/;"	f	class:nbox_t
empty	src/sm/bf_transit_bucket.h	/^    bool empty() { return _page_count < transit_bucket_t::MAX_IN_TRANSIT; }$/;"	f	class:transit_bucket_t
empty	src/sm/newsort.cpp	/^    bool   empty() const {$/;"	f	class:run_t
empty	src/sm/sort.h	/^    bool              empty;        \/\/ empty flag$/;"	m	class:sort_stream_i
empty_all	src/sm/rtree.cpp	/^ftstk_t::empty_all() {$/;"	f	class:ftstk_t
enable_background_flushing	src/sm/bf.cpp	/^bf_m::enable_background_flushing(vid_t v)$/;"	f	class:bf_m
enable_fake_disk_latency	src/sm/sm.cpp	/^ss_m::enable_fake_disk_latency(vid_t vid)$/;"	f	class:ss_m
enable_fake_disk_latency	src/sm/sm_io.cpp	/^io_m::enable_fake_disk_latency(vid_t vid)$/;"	f	class:io_m
enable_fake_disk_latency	src/sm/vol.cpp	/^vol_t::enable_fake_disk_latency(void)$/;"	f	class:vol_t
enable_fastpath	src/sm/log_core.cpp	/^bool enable_fastpath = false;$/;"	v
enable_mcs_expose	src/sm/log_core.cpp	/^bool enable_mcs_expose = true;$/;"	v
end	src/common/latch.cpp	/^    iterator end() { return iterator(NULL); }$/;"	f	class:holder_list
end	src/common/regcomp.cpp	/^    char *end;        \/* end of string (-> NUL normally) *\/$/;"	m	struct:parse	file:
end	src/fc/vtable.h	/^    char *end() const { return _list_end; }$/;"	f	class:vtable_row_t
end	src/fc/w_temp_alloc.h	/^        size_t end;$/;"	m	struct:w_temp_alloc::mark
end	src/fc/w_temp_alloc.h	/^        size_t end;$/;"	m	struct:w_temp_alloc::pool
end	src/sm/log_core.h	/^        long end;  \/\/ offset into log buffers _buf[0] of tail of$/;"	m	struct:log_core::epoch
end	src/sm/page_s.h	/^    slot_offset_t  end;        \/\/ offset to end of data area$/;"	m	class:page_s
end	src/sm/vol.h	/^        cache::iterator end() { return _cache.end(); }$/;"	f	class:vol_t::ext_cache_t
end_byte	src/sm/log_core.h	/^    long        end_byte() const { return _end; } $/;"	f	class:log_core
endp	src/common/regex_engine.cpp	/^    char *endp;        \/* end of string -- virtual NUL here *\/$/;"	m	struct:match	file:
enlarge	src/common/regcomp.cpp	/^enlarge(struct parse * p, sopno size)$/;"	f	file:
ensure_capacity	src/fc/dynarray.cpp	/^int dynarray::ensure_capacity(size_t min_size) {$/;"	f	class:dynarray
ensure_space	src/sm/bf_htab.cpp	/^bool bf_core_m::htab::ensure_space(int h, int &limit, bfcb_t *&moved,$/;"	f	class:bf_core_m::htab
enter2pc	src/sm/xct.cpp	/^xct_t::enter2pc(const gtid_t &g)$/;"	f	class:xct_t
enter_2pc	src/sm/sm.cpp	/^ss_m::enter_2pc(const gtid_t &gtid)$/;"	f	class:ss_m
entry_cnt	src/sm/sm_du_stats.h	/^    base_stat_t        entry_cnt;$/;"	m	struct:btree_lf_stats_t
entry_cnt	src/sm/sm_du_stats.h	/^    base_stat_t        entry_cnt;$/;"	m	struct:rtree_stats_t
entry_overhead_bs	src/sm/sm_du_stats.h	/^    base_stat_t        entry_overhead_bs;  \/* slot + entry info + align *\/$/;"	m	struct:btree_lf_stats_t
eof	src/common/kvl_t.h	/^    static const cvec_t eof;$/;"	m	struct:kvl_t
eof	src/sm/btcursor.h	/^    bool            eof()     { return _eof;  }$/;"	f	class:bt_cursor_t
eof	src/sm/scan.h	/^    bool             eof()    { return _eof; }$/;"	f	class:scan_index_i
eof	src/sm/scan.h	/^    bool            eof()        { return _eof; }$/;"	f	class:scan_file_i
eof	src/sm/scan.h	/^    bool            eof()    { return _eof; }$/;"	f	class:scan_rt_i
eof	src/sm/sm_s.cpp	/^const lpid_t lpid_t::eof;$/;"	m	class:lpid_t	file:
eof	src/sm/sm_s.h	/^    static const lpid_t eof;$/;"	m	class:lpid_t
eof	src/sm/sort.h	/^    bool              eof;        \/\/ eof flag$/;"	m	class:sort_stream_i
eof	src/sm/sort.h	/^    bool eof;         \/\/ end of run$/;"	m	class:run_scan_t
eofile	src/fc/w_input.cpp	/^        exx, JJJJ, eofile, white, sign, no_charclass$/;"	e	enum:charclass	file:
epid	src/sm/vol.h	/^    const shpid_t&   epid() const { return _epid; }$/;"	f	class:volhdr_t
epilogue	src/sm/newsort.cpp	/^run_mgr::epilogue()$/;"	f	class:run_mgr
epoch	src/sm/log_core.h	/^        epoch()$/;"	f	struct:log_core::epoch
epoch	src/sm/log_core.h	/^        epoch(lsn_t l, long b, long s, long e)$/;"	f	struct:log_core::epoch
epoch	src/sm/log_core.h	/^    struct epoch {$/;"	s	class:log_core
eq	src/sm/sm_base.h	/^    enum cmp_t { bad_cmp_t=badOp, eq=eqOp,$/;"	e	enum:smlevel_0::cmp_t
eqNegInf	src/fc/w_base.h	/^    NegInf=0x100, eqNegInf, gtNegInf, geNegInf, ltNegInf, leNegInf,$/;"	e	enum:w_base_t::CompareOp
eqOp	src/fc/w_base.h	/^    badOp=0x0, eqOp=0x1, gtOp=0x2, geOp=0x3, ltOp=0x4, leOp=0x5,$/;"	e	enum:w_base_t::CompareOp
eqPosInf	src/fc/w_base.h	/^    PosInf=0x400, eqPosInf, gtPosInf, gePosInf, ltPosInf, lePosInf$/;"	e	enum:w_base_t::CompareOp
equiv	src/fc/w_input.cpp	/^static int equiv[127] = {$/;"	v	file:
erase	src/sm/vol.cpp	/^vol_t::ext_cache_t::erase(cache::iterator pos) {  $/;"	f	class:vol_t::ext_cache_t
erase	src/sm/vol.cpp	/^vol_t::ext_cache_t::erase(snum_t snum, extnum_t ext) $/;"	f	class:vol_t::ext_cache_t
erase_all	src/sm/vol.cpp	/^vol_t::ext_cache_t::erase_all(snum_t snum)$/;"	f	class:vol_t::ext_cache_t
erase_and_next	src/sm/xct.cpp	/^xct_t* xct_i::erase_and_next() {$/;"	f	class:xct_i
err_num	src/fc/w_error.h	/^	w_base_t::uint4_t        err_num;$/;"	m	struct:w_error_info_t
err_num	src/fc/w_error.h	/^    const err_num_t              err_num;$/;"	m	class:w_error_t
err_num	src/fc/w_rc.h	/^w_rc_t::err_num() const$/;"	f	class:w_rc_t
err_num_t	src/fc/w_error.h	/^    typedef uint4_t        err_num_t;$/;"	t	class:w_error_t
errcode_t	src/fc/w_rc.h	/^    typedef w_error_t::err_num_t  errcode_t;$/;"	t	class:w_rc_t
errcodes_DEPENDENCIES	src/common/tests/Makefile	/^errcodes_DEPENDENCIES = ..\/libcommon.a ..\/..\/sthread\/libsthread.a \\$/;"	m
errcodes_LDADD	src/common/tests/Makefile	/^errcodes_LDADD = $(LDADD)$/;"	m
errcodes_OBJECTS	src/common/tests/Makefile	/^errcodes_OBJECTS = $(am_errcodes_OBJECTS)$/;"	m
errcodes_SOURCES	src/common/tests/Makefile	/^errcodes_SOURCES = errcodes.cpp$/;"	m
errlog	src/sm/sm.cpp	/^ErrLog*            smlevel_0::errlog;$/;"	m	class:smlevel_0	file:
errlog	src/sm/sm_base.h	/^    static ErrLog* errlog;$/;"	m	class:smlevel_0
errlog_dummy	src/fc/errlog.cpp	/^    errlog_dummy(){ $/;"	f	class:errlog_dummy
errlog_dummy	src/fc/errlog.cpp	/^class errlog_dummy {$/;"	c	file:
errlogtest_DEPENDENCIES	src/fc/tests/Makefile	/^errlogtest_DEPENDENCIES = ..\/libfc.a $(LOCALLDADD)$/;"	m
errlogtest_LDADD	src/fc/tests/Makefile	/^errlogtest_LDADD = $(LDADD)$/;"	m
errlogtest_OBJECTS	src/fc/tests/Makefile	/^errlogtest_OBJECTS = $(am_errlogtest_OBJECTS)$/;"	m
errlogtest_SOURCES	src/fc/tests/Makefile	/^errlogtest_SOURCES = errlogtest.cpp$/;"	m
error	src/common/regcomp.cpp	/^    int error;        \/* has an error been seen? *\/$/;"	m	struct:parse	file:
error	src/fc/w_input.cpp	/^        _end, error, no_hex, no_state };$/;"	e	enum:states	file:
error	src/sm/log_core.cpp	/^	long error;$/;"	m	struct:log_core::insert_info	file:
error	src/sthread/tests/except.cpp	/^	int	error;$/;"	m	class:MyException	file:
error	src/sthread/tests/ioperf.cpp	/^    bool         error() const { return _error;} $/;"	f	class:io_thread_t
error_code	src/sm/scan.h	/^    const rc_t &     error_code() const { return _error_occurred; }$/;"	f	class:scan_index_i
error_code	src/sm/scan.h	/^    const rc_t &     error_code() const { return _error_occurred; }$/;"	f	class:scan_rt_i
error_code	src/sm/scan.h	/^    const rc_t &    error_code() const { return _error_occurred; }$/;"	f	class:scan_file_i
error_info	src/fc/fc_einfo_gen.h	/^w_error_info_t w_error_t::error_info[] = {$/;"	m	class:w_error_t
error_info	src/fc/w_error.h	/^    static const info_t          error_info[];$/;"	m	class:w_error_t
error_info	src/sm/e_einfo_gen.h	/^w_error_info_t smlevel_0::error_info[] = {$/;"	m	class:smlevel_0
error_info	src/sm/sm_base.h	/^    static const w_error_info_t error_info[];$/;"	m	class:smlevel_0
error_info	src/sthread/st_einfo_gen.h	/^w_error_info_t sthread_base_t::error_info[] = {$/;"	m	class:sthread_base_t
error_info	src/sthread/sthread.h	/^    static const w_error_t::info_t     error_info[];$/;"	m	class:sthread_base_t
error_is	src/sm/smsh/lib/smsh.tcl	/^proc error_is { e y } {$/;"	p
error_not_checked	src/fc/w_rc.cpp	/^w_rc_t::error_not_checked()$/;"	f	class:w_rc_t
error_occurred	src/sm/prologue.h	/^    bool error_occurred() const {return _rc.is_error();}$/;"	f	class:prologue_rc_t
error_prio	src/fc/errlog.cpp	/^ostream& error_prio(ostream& o){return flush_and_setprio(o, log_error); }$/;"	f
error_string	src/fc/w_error.cpp	/^w_error_t::error_string(err_num_t err_num)$/;"	f	class:w_error_t
error_thread_t	src/sthread/tests/thread1.cpp	/^	error_thread_t() : sthread_t(t_regular, "error")$/;"	f	class:error_thread_t
error_thread_t	src/sthread/tests/thread1.cpp	/^class error_thread_t : public sthread_t {$/;"	c	file:
errstr	src/fc/w_error.h	/^	const char                *errstr;$/;"	m	struct:w_error_info_t
escalationThresholds	src/sm/xct.h	/^    w_base_t::int4_t            escalationThresholds[lockid_t::NUMLEVELS-1];$/;"	m	class:xct_t
escalation_options	src/sm/sm_base.h	/^    enum escalation_options {$/;"	g	class:smlevel_0
est_reclen	src/sm/sort_s.h	/^    w_base_t::uint4_t    est_reclen; $/;"	m	struct:ssm_sort::key_info_t
estats	src/sm/smsh/lib/smsh.tcl	/^proc estats {} {$/;"	p
evicts	src/sm/tests/htab.cpp	/^        int    evicts;$/;"	m	struct:htab_tester::pidinfo	file:
exact_match	src/sm/rtree.cpp	/^rtree_p::exact_match(const nbox_t& key, u_char smap[], const cvec_t& el, $/;"	f	class:rtree_p
except_DEPENDENCIES	src/sthread/tests/Makefile	/^except_DEPENDENCIES = ..\/libsthread.a ..\/..\/fc\/libfc.a $(LOCALLDADD)$/;"	m
except_LDADD	src/sthread/tests/Makefile	/^except_LDADD = $(LDADD)$/;"	m
except_OBJECTS	src/sthread/tests/Makefile	/^except_OBJECTS = $(am_except_OBJECTS)$/;"	m
except_SOURCES	src/sthread/tests/Makefile	/^except_SOURCES = except.cpp$/;"	m
except_action	src/sthread/tests/except.cpp	/^enum except_action { x_none, x_all, x_alternate };$/;"	g	file:
except_thread_t	src/sthread/tests/except.cpp	/^class except_thread_t : public sthread_t {$/;"	c	file:
except_thread_t	src/sthread/tests/except.cpp	/^except_thread_t::except_thread_t(int fid, bool _do_catch)$/;"	f	class:except_thread_t
exec_prefix	Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	config/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/atomic_ops/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/atomic_ops/asm_linkage/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/atomic_ops/asm_linkage/usr/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/atomic_ops/asm_linkage/usr/src/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/atomic_ops/atomic_ops/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/atomic_ops/atomic_ops/amd64/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/atomic_ops/atomic_ops/i386/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/atomic_ops/atomic_ops/sparc/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/atomic_ops/ia32/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/atomic_ops/ia32/sys/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/atomic_ops/intel/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/atomic_ops/intel/ia32/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/atomic_ops/intel/ia32/sys/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/atomic_ops/intel/sys/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/atomic_ops/sparc/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/atomic_ops/sparc/sys/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/common/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/common/tests/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/fc/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/fc/tests/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/sm/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/sm/smsh/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/sm/smsh/lib/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/sm/smsh/scripts/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/sm/tests/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/sthread/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/sthread/tests/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	tools/Makefile	/^exec_prefix = ${prefix}$/;"	m
execute	src/common/tests/testall	/^function execute  {$/;"	f
execute	src/fc/tests/testall	/^function execute  {$/;"	f
execute	src/sm/tests/testall	/^function execute  {$/;"	f
execute	src/sthread/tests/testall	/^function execute  {$/;"	f
exists	src/sm/page_h.h	/^    bool exists(space_bucket_t b) const {$/;"	f	class:store_histo_t
exists	src/sm/partition.h	/^    bool               exists() const {$/;"	f	class:partition_t
exists_page	src/sm/histo.cpp	/^histoid_t::exists_page($/;"	f	class:histoid_t
exit	src/sthread/auto_release.h	/^    void            exit() { if(obj) pthread_mutex_unlock(obj); obj=NULL; }$/;"	f	class:auto_release_t
expected	src/sthread/tests/thread1.cpp	/^	int	expected;$/;"	m	class:wait_for_t	file:
explain	src/common/regerror.cpp	/^    const char *explain;$/;"	m	struct:rerr	file:
expn_bound	src/sm/rtree.cpp	/^    void expn_bound(const nbox_t& key) {$/;"	f	class:rtwork_p
expn_table	src/sm/rtree.cpp	/^static int expn_table[_h_size] = $/;"	v	file:
exponent	src/fc/tests/rand.cpp	/^    unsigned int exponent:11;$/;"	m	struct:__anon129	file:
exponent	src/fc/tests/rand.cpp	/^    unsigned int exponent:11;$/;"	m	struct:__anon130	file:
exponent	src/fc/tests/rand.cpp	/^    unsigned int exponent:11;$/;"	m	struct:__anon131	file:
expose_stats	src/sm/log_core.cpp	/^long expose_stats[1000*MAX_THREADS];$/;"	v
ext	src/sm/logrec.cpp	/^    extnum_t                ext;$/;"	m	struct:pages_in_ext_t	file:
ext	src/sm/logrec.cpp	/^    extnum_t        ext;$/;"	m	struct:set_ext_next_t	file:
ext	src/sm/logrec.h	/^    extnum_t ext; \/\/ 4 bytes$/;"	m	class:ext_log_info_t
ext	src/sm/sm_s.h	/^    extnum_t     ext;$/;"	m	class:extid_t
ext	src/sm/vol.h	/^            extnum_t ext; \/\/ extent number$/;"	m	struct:vol_t::ext_cache_t::ext_info
ext2pid	src/sm/vol.h	/^inline shpid_t vol_t::ext2pid(extnum_t ext) $/;"	f	class:vol_t
ext2store_entry	src/sm/vol.h	/^    typedef std::pair<extnum_t, snum_t> ext2store_entry;$/;"	t	class:vol_t
ext_cache_t	src/sm/vol.h	/^    class ext_cache_t $/;"	c	class:vol_t
ext_has_page_alloc	src/sm/lock_s_inline.h	/^lockid_t::ext_has_page_alloc() const $/;"	f	class:lockid_t
ext_info	src/sm/vol.h	/^            ext_info(snum_t s, extnum_t e) : snum(s), ext(e) { }$/;"	f	struct:vol_t::ext_cache_t::ext_info
ext_info	src/sm/vol.h	/^        struct ext_info {$/;"	s	class:vol_t::ext_cache_t
ext_log_info_t	src/sm/logrec.h	/^    NORET ext_log_info_t() : $/;"	f	class:ext_log_info_t
ext_log_info_t	src/sm/logrec.h	/^class      ext_log_info_t {$/;"	c
ext_lookup_hits	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t ext_lookup_hits;$/;"	v
ext_lookup_misses	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t ext_lookup_misses;$/;"	v
ext_map_sz_in_bytes	src/sm/sm_base.h	/^        ext_map_sz_in_bytes = ((ext_sz + 7) \/ 8),$/;"	e	enum:smlevel_0::__anon28
ext_qnode	src/sthread/mcs_lock.h	/^	struct ext_qnode {$/;"	s	struct:mcs_lock
ext_qnode	src/sthread/sthread.h	/^    struct ext_qnode {$/;"	s	struct:w_pthread_lock_t
ext_qnode_ptr	src/sthread/sthread.h	/^    typedef ext_qnode volatile* ext_qnode_ptr;$/;"	t	struct:w_pthread_lock_t
ext_size	src/sm/vol.h	/^    extnum_t         ext_size() const { return _ext_size; } $/;"	f	class:volhdr_t
ext_size	src/sm/vol.h	/^inline extnum_t vol_t::ext_size() const$/;"	f	class:vol_t
ext_sz	src/sm/sm_base.h	/^        ext_sz = SM_EXTENTSIZE,        \/\/ extent size$/;"	e	enum:smlevel_0::__anon28
extent	src/sm/lock_s_inline.h	/^lockid_t::extent() const $/;"	f	class:lockid_t
extent	src/sm/sm_io.h	/^            extnum_t extent;$/;"	m	union:store_operation_param::__anon66
extent_bits	src/sm/lock_s_inline.h	/^lockid_t::extent_bits() const $/;"	f	class:lockid_t
extent_lsearch	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t extent_lsearch;$/;"	v
extent_size	src/sm/sm_du_stats.h	/^    base_stat_t        extent_size;         \/* # of pages in an extent *\/$/;"	m	struct:volume_hdr_stats_t
extid_t	src/sm/sm_s.h	/^class extid_t {$/;"	c
extlink_i	src/sm/extent.h	/^    NORET            extlink_i(const lpid_t& root)$/;"	f	class:extlink_i
extlink_i	src/sm/extent.h	/^class extlink_i {$/;"	c
extlink_p	src/sm/extent.h	/^class extlink_p : public page_p {$/;"	c
extlink_t	src/sm/extent.h	/^class extlink_t {$/;"	c
extlink_t	src/sm/extent.h	/^extlink_t::extlink_t(const extlink_t& e) $/;"	f	class:extlink_t
extlink_t	src/sm/vol.cpp	/^extlink_t::extlink_t() : next(0), prev(0), owner(0), $/;"	f	class:extlink_t
extnum_t	src/sm/sm_s.h	/^typedef w_base_t::uint4_t        extnum_t;$/;"	t
extract_extent	src/sm/lock_s_inline.h	/^lockid_t::extract_extent(extid_t &e) const $/;"	f	class:lockid_t
extract_kvl	src/sm/lock_s_inline.h	/^lockid_t::extract_kvl(kvl_t &k) const $/;"	f	class:lockid_t
extract_lpid	src/sm/lock_s_inline.h	/^lockid_t::extract_lpid(lpid_t &p) const $/;"	f	class:lockid_t
extract_rid	src/sm/lock_s_inline.h	/^lockid_t::extract_rid(rid_t &r) const $/;"	f	class:lockid_t
extract_stid	src/sm/lock_s_inline.h	/^lockid_t::extract_stid(stid_t &_s) const $/;"	f	class:lockid_t
extract_user1	src/sm/lock_s_inline.h	/^lockid_t::extract_user1(user1_t &u) const$/;"	f	class:lockid_t
extract_user2	src/sm/lock_s_inline.h	/^lockid_t::extract_user2(user2_t &u) const$/;"	f	class:lockid_t
extract_user3	src/sm/lock_s_inline.h	/^lockid_t::extract_user3(user3_t &u) const$/;"	f	class:lockid_t
extract_user4	src/sm/lock_s_inline.h	/^lockid_t::extract_user4(user4_t &u) const$/;"	f	class:lockid_t
exts_on_page	src/sm/smstats.h	/^    u_long exts_on_page;$/;"	m	struct:sm_config_info_t
exx	src/fc/w_input.cpp	/^        exx, JJJJ, eofile, white, sign, no_charclass$/;"	e	enum:charclass	file:
f	src/fc/tests/test_stat_struct_gen.h	/^ w_base_t::base_float_t f;$/;"	v
f	src/fc/w_stat.h	/^        w_base_t::base_float_t  f;$/;"	m	union:w_stat_t::__anon109
f	src/sm/sm_s.h	/^        f = 'f',                \/\/ float (4,8)$/;"	e	enum:key_type_s::type_t
f	src/sm/smthread.cpp	/^    SmthreadFunc&    f;$/;"	m	class:SelectSmthreadsFunc	file:
f4_cmp	src/sm/smsh/shell2.cpp	/^int f4_cmp(const void *_p, const void *_q) $/;"	f
f4_lex	src/sm/newsort.cpp	/^w_rc_t sort_keys_t::f4_lex(const void *d, smsize_t , void * res){$/;"	f	class:sort_keys_t
f4_num	src/sm/smsh/shell.h	/^    f4_t    f4_num;$/;"	m	union:typed_value::__anon75
f4_t	src/fc/w_base.h	/^    typedef float        f4_t;$/;"	t	class:w_base_t
f4_t	src/sm/lexify.h	/^    typedef w_base_t::f4_t f4_t;$/;"	t	class:sortorder
f4_t	src/sm/smsh/shell.h	/^typedef w_base_t::f4_t  f4_t;$/;"	t
f8_cmp	src/sm/smsh/shell2.cpp	/^int f8_cmp(const void *_p, const void *_q) $/;"	f
f8_lex	src/sm/newsort.cpp	/^w_rc_t sort_keys_t::f8_lex(const void *d, smsize_t , void * res){$/;"	f	class:sort_keys_t
f8_num	src/sm/smsh/shell.h	/^    f8_t    f8_num;$/;"	m	union:typed_value::__anon75
f8_t	src/fc/w_base.h	/^    typedef double        f8_t;$/;"	t	class:w_base_t
f8_t	src/sm/lexify.h	/^    typedef w_base_t::f8_t f8_t;$/;"	t	class:sortorder
f8_t	src/sm/smsh/shell.h	/^typedef w_base_t::f8_t  f8_t;$/;"	t
f_arg	src/sm/smsh/smsh.cpp	/^const char* f_arg = NULL;$/;"	v
factor_print	src/fc/stime.cpp	/^static void factor_print(ostream &s, long what)$/;"	f	file:
factory_t	src/sm/newsort.cpp	/^typedef ssm_sort::factory_t factory_t;$/;"	t	file:
factory_t	src/sm/smsh/sort_funcs3.cpp	/^    factory_t&                ,$/;"	v
factory_t	src/sm/sort_s.h	/^class factory_t $/;"	c	namespace:ssm_sort
factory_t	src/sm/sort_s.h	/^inline factory_t::factory_t() {}$/;"	f	class:ssm_sort::factory_t
fail_unless	src/fc/mem_block.h	/^struct fail_unless<true> {$/;"	s	namespace:memory_block
fake_disk_latency	src/sm/vol.cpp	/^vol_t::fake_disk_latency(long start) $/;"	f	class:vol_t
fast	src/common/regex_engine.cpp	/^fast(struct match *m, char *start, char *stop, sopno startst, sopno stopst)$/;"	f	file:
fast	src/common/regex_engine.cpp	1021;"	d	file:
fast	src/common/regex_engine.cpp	61;"	d	file:
fast	src/common/regex_engine.cpp	72;"	d	file:
fatal	src/fc/w_rc.cpp	/^w_rc_t::fatal()$/;"	f	class:w_rc_t
fatal_prio	src/fc/errlog.cpp	/^ostream& fatal_prio(ostream& o){return flush_and_setprio(o, log_fatal); }$/;"	f
fcASSERT	src/fc/fc_error_enum_gen.h	/^    fcASSERT                  = 0x1000c,$/;"	e	enum:__anon123
fcEMPTY	src/fc/fc_error_enum_gen.h	/^    fcEMPTY                   = 0x10003,$/;"	e	enum:__anon123
fcERRMAX	src/fc/fc_error_enum_gen.h	/^    fcERRMAX                  = 0x1000c$/;"	e	enum:__anon123
fcERRMIN	src/fc/fc_error_enum_gen.h	/^    fcERRMIN                  = 0x10000,$/;"	e	enum:__anon123
fcFOUND	src/fc/fc_error_enum_gen.h	/^    fcFOUND                   = 0x1000a,$/;"	e	enum:__anon123
fcFULL	src/fc/fc_error_enum_gen.h	/^    fcFULL                    = 0x10002,$/;"	e	enum:__anon123
fcINTERNAL	src/fc/fc_error_enum_gen.h	/^    fcINTERNAL                = 0x10000,$/;"	e	enum:__anon123
fcMIXED	src/fc/fc_error_enum_gen.h	/^    fcMIXED                   = 0x10009,$/;"	e	enum:__anon123
fcMMAPFAILED	src/fc/fc_error_enum_gen.h	/^    fcMMAPFAILED              = 0x10005,$/;"	e	enum:__anon123
fcNOSUCHERROR	src/fc/fc_error_enum_gen.h	/^    fcNOSUCHERROR             = 0x1000b,$/;"	e	enum:__anon123
fcNOTFOUND	src/fc/fc_error_enum_gen.h	/^    fcNOTFOUND                = 0x10006,$/;"	e	enum:__anon123
fcNOTIMPLEMENTED	src/fc/fc_error_enum_gen.h	/^    fcNOTIMPLEMENTED          = 0x10007,$/;"	e	enum:__anon123
fcOK	src/fc/fc_error_enum_gen.h	/^    fcOK                      = 0x0,$/;"	e	enum:__anon123
fcOS	src/fc/fc_error_enum_gen.h	/^    fcOS                      = 0x10001,$/;"	e	enum:__anon123
fcOUTOFMEMORY	src/fc/fc_error_enum_gen.h	/^    fcOUTOFMEMORY             = 0x10004,$/;"	e	enum:__anon123
fcREADONLY	src/fc/fc_error_enum_gen.h	/^    fcREADONLY                = 0x10008,$/;"	e	enum:__anon123
fc_errmsg	src/fc/fc_errmsg_gen.h	/^static char* fc_errmsg[] = {$/;"	v
fc_error_info_bakw	src/fc/fc_einfo_bakw_gen.h	/^w_error_info_t fc_error_info_bakw[] = {$/;"	v
fc_msg_size	src/fc/fc_errmsg_gen.h	/^const fc_msg_size = 12;$/;"	v
fd	src/fc/valgrind_help.cpp	/^    int        fd() { return _fd; }$/;"	f	class:dummyfile
fd	src/sthread/sdisk_unix.h	/^    int             fd() const { return _fd; }$/;"	f	class:sdisk_unix_t
fd_base	src/sthread/sthread.h	/^    enum { fd_base = 4000 };$/;"	e	enum:sthread_t::__anon144
feature_set	src/sm/log_core.cpp	/^struct feature_set {$/;"	s	file:
fetch	src/sm/bf_prefetch.cpp	/^bf_prefetch_thread_t::fetch($/;"	f	class:bf_prefetch_thread_t
fetch	src/sm/btree.cpp	/^btree_m::fetch(cursor_t& cursor, const bool bIgnoreLatches)$/;"	f	class:btree_m
fetch	src/sm/log.cpp	/^log_m::fetch(lsn_t &lsn, logrec_t* &rec, lsn_t* nxt) $/;"	f	class:log_m
fetch	src/sm/log_core.cpp	/^log_core::fetch(lsn_t& ll, logrec_t*& rp, lsn_t* nxt)$/;"	f	class:log_core
fetch	src/sm/rtree.cpp	/^rtree_m::fetch($/;"	f	class:rtree_m
fetch_init	src/sm/btree.cpp	/^btree_m::fetch_init($/;"	f	class:btree_m
fetch_init	src/sm/rtree.cpp	/^rtree_m::fetch_init($/;"	f	class:rtree_m
fetch_reinit	src/sm/btree.cpp	/^btree_m::fetch_reinit($/;"	f	class:btree_m
fhdl_app	src/sm/partition.h	/^    int                fhdl_app() const { check_fhdl_app(); return _fhdl_app; }$/;"	f	class:partition_t
fhdl_rd	src/sm/partition.h	/^    int                fhdl_rd() const { check_fhdl_rd(); return _fhdl_rd; }$/;"	f	class:partition_t
fi	src/sm/sm.cpp	/^file_m* smlevel_2::fi = 0;$/;"	m	class:smlevel_2	file:
fi	src/sm/sm_int_2.h	/^    static file_m* fi;$/;"	m	class:smlevel_2
fib_t	src/sm/newsort.cpp	/^class fib_t $/;"	c	file:
fib_t	src/sm/newsort.cpp	/^fib_t::fib_t(int order) : _order(order), _f(0), _p(0) $/;"	f	class:fib_t
fid	src/sm/smsh/sort_funcs.h	/^    stid_t 	fid;$/;"	m	class:deleter
fid	src/sm/tests/create_rec.cpp	/^    stid_t         fid;$/;"	m	struct:file_info_t	file:
fid	src/sm/tests/file_scan.cpp	/^    stid_t     fid;$/;"	m	struct:file_info_t	file:
fid	src/sm/tests/file_scan_many.cpp	/^    stid_t      fid;$/;"	m	struct:file_info_t	file:
fid	src/sm/tests/log_exceed.cpp	/^    stid_t         fid;$/;"	m	struct:file_info_t	file:
fid	src/sm/tests/mrbtrees_test.cpp	/^  stid_t      fid;$/;"	m	struct:file_info_t	file:
fid	src/sm/tests/rtree_example.cpp	/^    stid_t         fid;$/;"	m	struct:file_info_t	file:
fid	src/sm/tests/sort_stream.cpp	/^    stid_t         fid;$/;"	m	struct:file_info_t	file:
fid	src/sm/tests/vtable_example.cpp	/^    stid_t         fid;$/;"	m	struct:file_info_t	file:
fifteen	src/fc/w_input.cpp	/^        twelve=12, thirteen=13, fourteen=14, fifteen=15,$/;"	e	enum:charclass	file:
file	src/common/lsn.h	/^    w_base_t::uint4_t file() const { return to_file(_data); }$/;"	f	class:lsn_t
file	src/fc/w_error.h	/^    const char* const            file;$/;"	m	class:w_error_t
file	src/sm/sm_du_stats.h	/^    file_stats_t     file;$/;"	m	struct:sm_du_stats_t
file_cnt	src/sm/sm_du_stats.h	/^    base_stat_t        file_cnt;$/;"	m	struct:sm_du_stats_t
file_get_next	src/sm/sort.cpp	/^sort_stream_i::file_get_next(vec_t& key, vec_t& elem, uint4_t& blen, bool& end) $/;"	f	class:sort_stream_i
file_hwm	src/common/lsn.h	/^    enum { file_hwm  =    0xffff }; $/;"	e	enum:lsn_t::__anon2
file_info_t	src/sm/tests/create_rec.cpp	/^struct file_info_t {$/;"	s	file:
file_info_t	src/sm/tests/file_scan.cpp	/^struct file_info_t {$/;"	s	file:
file_info_t	src/sm/tests/file_scan_many.cpp	/^	file_info_t() : num_rec(0), rec_size(0), append_only(false)$/;"	f	struct:file_info_t
file_info_t	src/sm/tests/file_scan_many.cpp	/^struct file_info_t {$/;"	s	file:
file_info_t	src/sm/tests/log_exceed.cpp	/^struct file_info_t {$/;"	s	file:
file_info_t	src/sm/tests/mrbtrees_test.cpp	/^struct file_info_t {$/;"	s	file:
file_info_t	src/sm/tests/rtree_example.cpp	/^struct file_info_t {$/;"	s	file:
file_info_t	src/sm/tests/sort_stream.cpp	/^struct file_info_t {$/;"	s	file:
file_info_t	src/sm/tests/vtable_example.cpp	/^struct file_info_t {$/;"	s	file:
file_m	src/sm/file.cpp	/^file_m::file_m () $/;"	f	class:file_m
file_m	src/sm/file.h	/^class file_m  : public smlevel_2 {$/;"	c
file_mrbt_p	src/sm/file.h	/^class file_mrbt_p : public file_p {$/;"	c
file_p	src/sm/file.h	/^class file_p : public page_p {$/;"	c
file_p_hdr_t	src/sm/file_s.h	/^struct file_p_hdr_t {$/;"	s
file_pg	src/sm/sm_du_stats.h	/^    file_pg_stats_t        file_pg;     \/\/ byte counts for slots$/;"	m	struct:file_stats_t
file_pg_cnt	src/sm/sm_du_stats.h	/^    base_stat_t            file_pg_cnt; \/\/ allocated to the file$/;"	m	struct:file_stats_t
file_pg_stats_t	src/sm/sm_du_stats.h	/^    NORET              file_pg_stats_t() {clear();}$/;"	f	struct:file_pg_stats_t
file_pg_stats_t	src/sm/sm_du_stats.h	/^struct file_pg_stats_t {$/;"	s
file_put	src/sm/sort.cpp	/^sort_stream_i::file_put(const cvec_t& key, const void* rec, uint rlen,$/;"	f	class:sort_stream_i
file_scan_DEPENDENCIES	src/sm/tests/Makefile	/^file_scan_DEPENDENCIES = $(top_builddir)\/src\/sm\/libsm.a \\$/;"	m
file_scan_LDADD	src/sm/tests/Makefile	/^file_scan_LDADD = $(LDADD)$/;"	m
file_scan_OBJECTS	src/sm/tests/Makefile	/^file_scan_OBJECTS = $(am_file_scan_OBJECTS)$/;"	m
file_scan_SOURCES	src/sm/tests/Makefile	/^file_scan_SOURCES = file_scan.cpp init_config_options.cpp $/;"	m
file_scan_many_DEPENDENCIES	src/sm/tests/Makefile	/^file_scan_many_DEPENDENCIES = $(top_builddir)\/src\/sm\/libsm.a \\$/;"	m
file_scan_many_LDADD	src/sm/tests/Makefile	/^file_scan_many_LDADD = $(LDADD)$/;"	m
file_scan_many_OBJECTS	src/sm/tests/Makefile	/^file_scan_many_OBJECTS = $(am_file_scan_many_OBJECTS)$/;"	m
file_scan_many_SOURCES	src/sm/tests/Makefile	/^file_scan_many_SOURCES = file_scan_many.cpp init_config_options.cpp $/;"	m
file_scan_test	src/sm/tests/testall	/^function file_scan_test  {$/;"	f
file_sort_key_t	src/sm/sort.cpp	/^    NORET file_sort_key_t() {$/;"	f	struct:file_sort_key_t
file_sort_key_t	src/sm/sort.cpp	/^struct file_sort_key_t {$/;"	s	file:
file_stats_t	src/sm/sm_du_stats.h	/^    NORET           file_stats_t() {clear();}$/;"	f	struct:file_stats_t
file_stats_t	src/sm/sm_du_stats.h	/^struct file_stats_t {$/;"	s
file_was_archived	src/sm/log.cpp	/^log_m::file_was_archived(const char *file)$/;"	f	class:log_m
file_was_archived	src/sm/log_core.cpp	/^log_core::file_was_archived(const char * \/*file*\/)$/;"	f	class:log_core
fileoff_t	src/sm/log.cpp	/^typedef smlevel_0::fileoff_t fileoff_t;$/;"	t	file:
fileoff_t	src/sm/partition.h	/^    typedef smlevel_0::fileoff_t fileoff_t;$/;"	t	class:partition_t
fileoff_t	src/sm/sm_base.h	/^    typedef sthread_base_t::fileoff_t fileoff_t;$/;"	t	class:smlevel_0
fileoff_t	src/sthread/sdisk.h	/^    typedef w_base_t::int4_t fileoff_t;$/;"	t	class:sdisk_base_t
fileoff_t	src/sthread/sdisk.h	/^    typedef w_base_t::int8_t fileoff_t;$/;"	t	class:sdisk_base_t
fileoff_t	src/sthread/sthread.h	/^    typedef sdisk_base_t::fileoff_t    fileoff_t;$/;"	t	class:sthread_base_t
filestat_t	src/sthread/sdisk.h	/^        filestat_t() : st_size(0),$/;"	f	struct:sdisk_base_t::filestat_t
filestat_t	src/sthread/sdisk.h	/^    struct    filestat_t {$/;"	s	class:sdisk_base_t
filestat_t	src/sthread/sthread.h	/^    typedef sdisk_base_t::filestat_t   filestat_t;$/;"	t	class:sthread_base_t
fill	src/fc/w_bitmap.cpp	/^w_bitmap_t::fill()$/;"	f	class:w_bitmap_t
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:alloc_file_page_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:alloc_pages_in_ext_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:btree_insert_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:btree_purge_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:btree_remove_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:chkpt_begin_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:chkpt_bf_tab_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:chkpt_dev_tab_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:chkpt_end_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:chkpt_xct_tab_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:comment_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:compensate_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:create_ext_list_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:dismount_vol_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:free_ext_list_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:free_pages_in_ext_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:mount_vol_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:page_format_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:page_image_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:page_insert_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:page_link_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:page_mark_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:page_reclaim_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:page_remove_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:page_set_byte_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:page_shift_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:page_splice_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:page_splicez_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:rtree_insert_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:rtree_remove_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:set_ext_next_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:skip_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:store_operation_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:xct_abort_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:xct_end_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:xct_freeing_space_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:xct_prepare_alk_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:xct_prepare_fi_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:xct_prepare_lk_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:xct_prepare_st_log	file:
fill	src/sm/logdef_gen.cpp	/^	void fill(const lpid_t* p, uint2_t tag, int l) {$/;"	f	class:xct_prepare_stores_log	file:
fill	src/sm/logrec.cpp	/^logrec_t::fill(const lpid_t* p, uint2_t tag, smsize_t l)$/;"	f	class:logrec_t
fill	src/sm/logrec.h	/^    fill4    fill; \/\/ for purify$/;"	m	struct:chkpt_bf_tab_t::brec_t
fill1	src/fc/w_base.h	/^    fill1() : u1(0) {}$/;"	f	struct:fill1
fill1	src/fc/w_base.h	/^struct fill1 {$/;"	s
fill2	src/fc/w_base.h	/^    fill2() : u2(0) {}$/;"	f	struct:fill2
fill2	src/fc/w_base.h	/^struct fill2 {$/;"	s
fill3	src/fc/w_base.h	/^    fill3() { u1[0] = u1[1] = u1[2] = 0; }$/;"	f	struct:fill3
fill3	src/fc/w_base.h	/^struct fill3 {$/;"	s
fill4	src/fc/w_base.h	/^    fill4() : u4(0) {}$/;"	f	struct:fill4
fill4	src/fc/w_base.h	/^struct fill4 {$/;"	s
fill_el	src/common/vec_t.h	/^    virtual w_rc_t fill_el(vec_t& \/* el *\/, const lpid_t& \/* leaf *\/) { return RCOK; }$/;"	f	struct:el_filler
fill_el	src/sm/tests/mrbtrees_test.cpp	/^rc_t  el_filler_utest::fill_el(vec_t& el, const lpid_t& leaf)$/;"	f	class:el_filler_utest
fill_factor	src/sm/vol.cpp	/^vol_t::fill_factor(snum_t snum)$/;"	f	class:vol_t
fill_page	src/sm/ranges_p.cpp	/^rc_t ranges_m::fill_page(const lpid_t& pid, key_ranges_map& partitions) $/;"	f	class:ranges_m
fill_page	src/sm/ranges_p.cpp	/^rc_t ranges_p::fill_page(key_ranges_map& partitions)$/;"	f	class:ranges_p
fill_page	src/sm/ranges_p.cpp	/^rc_t ranges_p::fill_page(vector<cvec_t*>& keys, vector<lpid_t>& subroots)$/;"	f	class:ranges_p
fill_partitions_map	src/sm/dir.cpp	/^rc_t sdesc_t::fill_partitions_map() $/;"	f	class:sdesc_t
fill_percent	src/sm/sm_du_stats.h	/^    base_stat_t        fill_percent;    \/* leaf page fill factor *\/$/;"	m	struct:rtree_stats_t
fill_ranges_map	src/sm/ranges_p.cpp	/^rc_t ranges_m::fill_ranges_map(const lpid_t& pid, key_ranges_map& partitions)$/;"	f	class:ranges_m
fill_ranges_map	src/sm/ranges_p.cpp	/^rc_t ranges_p::fill_ranges_map(key_ranges_map& partitions)$/;"	f	class:ranges_p
fill_slot	src/sm/file.cpp	/^file_p::fill_slot($/;"	f	class:file_p
fill_sum	src/sm/rtree.cpp	/^    uint4_t fill_sum;$/;"	m	class:rtld_stk_t	file:
fill_the_file_non_regular	src/sm/tests/mrbtrees_test.cpp	/^rc_t smthread_creator_t::fill_the_file_non_regular()$/;"	f	class:smthread_creator_t
fill_the_file_non_regular_bl	src/sm/tests/mrbtrees_test.cpp	/^rc_t smthread_creator_t::fill_the_file_non_regular_bl()$/;"	f	class:smthread_creator_t
fill_the_file_regular	src/sm/tests/mrbtrees_test.cpp	/^rc_t smthread_creator_t::fill_the_file_regular() $/;"	f	class:smthread_creator_t
fill_the_file_regular_bl	src/sm/tests/mrbtrees_test.cpp	/^rc_t smthread_creator_t::fill_the_file_regular_bl() $/;"	f	class:smthread_creator_t
fill_xct_attr	src/sm/logrec.cpp	/^logrec_t::fill_xct_attr(const tid_t& tid, const lsn_t& last)$/;"	f	class:logrec_t
filled_one	src/fc/vtable.cpp	/^vtable_t::filled_one() $/;"	f	class:vtable_t
filler	src/common/stid_t.h	/^    fill2    filler; \/\/ vol is 2 bytes, store is now 4$/;"	m	struct:stid_t
filler	src/fc/nbox.h	/^    fill4    filler;         \/\/ 8 byte alignment$/;"	m	class:nbox_t
filler	src/sm/extent.h	/^    fill2            filler; \/\/ align to 4 bytes$/;"	m	struct:stnode_t
filler	src/sm/lgrec.h	/^    fill2    filler;            \/\/ because store is now 4 bytes$/;"	m	struct:lg_tag_chunks_s
filler	src/sm/lgrec.h	/^    fill4    filler;        \/\/ for alignment$/;"	m	struct:lg_tag_indirect_s
filler	src/sm/logrec.cpp	/^    fill2         filler;$/;"	m	struct:page_set_byte_t	file:
filler	src/sm/logrec.h	/^    fill4              filler;$/;"	m	struct:chkpt_bf_tab_t
filler	src/sm/logrec.h	/^    fill4            filler;$/;"	m	struct:chkpt_xct_tab_t
filler	src/sm/logrec.h	/^    fill4           filler;$/;"	m	struct:chkpt_dev_tab_t
filler	src/sm/logrec.h	/^    fill4   filler; \/\/for 8-byte alignment$/;"	m	struct:prepare_lock_totals_t
filler	src/sm/pmap.h	/^    fill1    filler;    \/\/ keep purify happy$/;"	m	class:Pmap_Align4
filler	src/sm/pmap.h	/^    fill2    filler;    \/\/ keep purify happy$/;"	m	class:Pmap_Align4
filler	src/sm/sm_s.h	/^    fill2        filler;  \/\/ for initialization of last 2 unused bytes$/;"	m	class:rid_t
filler	src/sm/sm_s.h	/^    fill2        filler; \/\/ because page, snum_t are 4 bytes, slotid_t is 2$/;"	m	class:shrid_t
filler	src/sm/sm_s.h	/^    fill2        filler; \/\/ because vol is 2 bytes & ext is 4$/;"	m	class:extid_t
filler1	src/sm/pmap.h	/^    fill1    filler1;    \/\/ keep purify happy$/;"	m	class:Pmap_Align4
filler2	src/sm/pmap.h	/^    fill2    filler2;    \/\/ keep purify happy$/;"	m	class:Pmap_Align4
final	src/fc/tests/errlogtest.cpp	/^void final(ErrLog &e) { $/;"	f
find	src/common/latch.cpp	/^    static holder_list::iterator find(holder_list holders, latch_t const* l) $/;"	f	class:holder_search
find	src/sm/bf_core.cpp	/^bf_core_m::find($/;"	f	class:bf_core_m
find	src/sm/smsh/tcl_thread.cpp	/^tcl_thread_t    *tcl_thread_t::find(unsigned long id)$/;"	f	class:tcl_thread_t
find_and_lock_free_slot	src/sm/file.cpp	/^file_p::find_and_lock_free_slot($/;"	f	class:file_p
find_and_lock_next_slot	src/sm/file.cpp	/^file_p::find_and_lock_next_slot($/;"	f	class:file_p
find_assoc	src/sm/smindex.cpp	/^ss_m::find_assoc(stid_t stid, const vec_t& key, $/;"	f	class:ss_m
find_barrier	src/sm/smsh/tcl_thread.cpp	/^barrier_t *find_barrier(const char *name)$/;"	f
find_dependent	src/sm/xct.cpp	/^xct_t::find_dependent(xct_dependent_t* ptr)$/;"	f	class:xct_t
find_file_info	src/sm/tests/create_rec.cpp	/^smthread_user_t::find_file_info()$/;"	f	class:smthread_user_t
find_file_info	src/sm/tests/file_scan.cpp	/^find_file_info(vid_t vid, stid_t root_iid, file_info_t &info)$/;"	f
find_file_info	src/sm/tests/file_scan_many.cpp	/^smthread_main_t::find_file_info($/;"	f	class:smthread_main_t
find_file_info	src/sm/tests/log_exceed.cpp	/^smthread_user_t::find_file_info()$/;"	f	class:smthread_user_t
find_file_info	src/sm/tests/mrbtrees_test.cpp	/^rc_t smthread_main_t::find_file_info()$/;"	f	class:smthread_main_t
find_file_info	src/sm/tests/rtree_example.cpp	/^smthread_user_t::find_file_info()$/;"	f	class:smthread_user_t
find_file_info	src/sm/tests/sort_stream.cpp	/^smthread_user_t::find_file_info()$/;"	f	class:smthread_user_t
find_file_info	src/sm/tests/vtable_example.cpp	/^smthread_user_t::find_file_info()$/;"	f	class:smthread_user_t
find_free_exts	src/sm/vol.cpp	/^vol_t::find_free_exts($/;"	f	class:vol_t
find_free_store	src/sm/vol.cpp	/^vol_t::find_free_store(snum_t& snum)$/;"	f	class:vol_t
find_latch	src/common/store_latch_manager.cpp	/^latch_t &store_latch_manager::find_latch(stid_t const &store) $/;"	f	class:store_latch_manager
find_latch	src/sm/btree_latch_manager.cpp	/^latch_t &btree_latch_manager::find_latch(lpid_t const &root,$/;"	f	class:btree_latch_manager
find_lock_head	src/sm/lock_core.cpp	/^lock_core_m::find_lock_head(const lockid_t& n, bool create)$/;"	f	class:lock_core_m
find_lock_request	src/sm/lock_core.cpp	/^lock_head_t::find_lock_request(const xct_lock_info_t* xdli)$/;"	f	class:lock_head_t
find_md_assoc	src/sm/smindex.cpp	/^ss_m::find_md_assoc(stid_t stid, const nbox_t& key,$/;"	f	class:ss_m
find_mr_assoc	src/sm/smindex.cpp	/^rc_t ss_m::find_mr_assoc(stid_t stid, const vec_t& key, $/;"	f	class:ss_m
find_page	src/sm/histo.cpp	/^histoid_t::find_page($/;"	f	class:histoid_t
find_page_and_create_mrbt_rec	src/sm/smfile.cpp	/^ss_m::find_page_and_create_mrbt_rec(const stid_t& fid, const lpid_t& leaf, const vec_t& hdr,$/;"	f	class:ss_m
find_slot	src/sm/page.cpp	/^page_p::find_slot(uint4_t space_needed, $/;"	f	class:page_p
findmust	src/common/regcomp.cpp	/^findmust(struct parse *p, struct re_guts *g)$/;"	f	file:
findprime_DEPENDENCIES	src/fc/tests/Makefile	/^findprime_DEPENDENCIES = ..\/libfc.a $(LOCALLDADD)$/;"	m
findprime_LDADD	src/fc/tests/Makefile	/^findprime_LDADD = $(LDADD)$/;"	m
findprime_OBJECTS	src/fc/tests/Makefile	/^findprime_OBJECTS = $(am_findprime_OBJECTS)$/;"	m
findprime_SOURCES	src/fc/tests/Makefile	/^findprime_SOURCES = findprime.cpp$/;"	m
findsizes_DEPENDENCIES	src/fc/tests/Makefile	/^findsizes_DEPENDENCIES = ..\/libfc.a $(LOCALLDADD)$/;"	m
findsizes_LDADD	src/fc/tests/Makefile	/^findsizes_LDADD = $(LDADD)$/;"	m
findsizes_OBJECTS	src/fc/tests/Makefile	/^findsizes_OBJECTS = $(am_findsizes_OBJECTS)$/;"	m
findsizes_SOURCES	src/fc/tests/Makefile	/^findsizes_SOURCES = findsizes.cpp$/;"	m
fini	src/fc/dynarray.cpp	/^int dynarray::fini() {$/;"	f	class:dynarray
fini	src/fc/dynarray.h	/^    int fini() {$/;"	f	struct:dynvector
fini	src/fc/tls.h	/^    void fini() { get()->~T();   }$/;"	f	struct:tls_tricks::tls_blob
fini_blmap	src/fc/block_alloc.cpp	/^    static void fini_blmap() {$/;"	f	struct:blob_pool::helper
finish	src/sm/scan.cpp	/^scan_index_i::finish()$/;"	f	class:scan_index_i
finish	src/sm/scan.cpp	/^void scan_file_i::finish()$/;"	f	class:scan_file_i
finish	src/sm/scan.cpp	/^void scan_rt_i::finish()$/;"	f	class:scan_rt_i
finish	src/sm/sort.cpp	/^sort_stream_i::finish()$/;"	f	class:sort_stream_i
finish_phase	src/sm/newsort.cpp	/^    void finish_phase() $/;"	f	class:phase_mgr
finished	src/sm/chkpt.cpp	/^    bool finished() const {$/;"	f	struct:old_xct_tracker
first	src/fc/w_list.h	/^    T*                first() { return w_list_t<T,LOCK>::top(); }$/;"	f	class:w_keyed_list_t
first_clear	src/sm/pmap.h	/^    inline    int    first_clear(int start) const {$/;"	f	struct:Pmap
first_clr	src/fc/w_bitmap.cpp	/^w_bitmap_t::first_clr(uint4_t start) const$/;"	f	class:w_bitmap_t
first_clr	src/sm/extent.h	/^extlink_t::first_clr(int start) const$/;"	f	class:extlink_t
first_ext	src/sm/sm_io.h	/^        extnum_t first_ext()  const$/;"	f	class:store_operation_param
first_ext	src/sm/vol.cpp	/^vol_t::first_ext(snum_t snum, extnum_t &result)$/;"	f	class:vol_t
first_local	src/common/vid_t.h	/^          first_local = 1$/;"	e	enum:vid_t::__anon1
first_lsn	src/sm/log.h	/^    static lsn_t        first_lsn(uint4_t pnum) { return lsn_t(pnum, 0); }$/;"	f	class:log_m
first_lsn	src/sm/logrec.h	/^    lsn_t    first_lsn;$/;"	m	struct:prepare_lock_totals_t
first_lsn	src/sm/partition.h	/^    lsn_t              first_lsn() const { return $/;"	f	class:partition_t
first_lsn	src/sm/partition.h	/^    lsn_t            first_lsn(uint4_t pnum) const { return lsn_t( pnum, 0); }$/;"	f	class:partition_t
first_lsn	src/sm/xct.h	/^xct_t::first_lsn() const$/;"	f	class:xct_t
first_page	src/sm/file.cpp	/^file_m::first_page(const stid_t& fid, lpid_t& pid, bool* allocated)$/;"	f	class:file_m
first_page	src/sm/newsort.cpp	/^    shpid_t          first_page() const { return _first_page; }$/;"	f	class:run_t
first_page	src/sm/sm_io.cpp	/^io_m::first_page($/;"	f	class:io_m
first_page	src/sm/vol.cpp	/^vol_t::first_page(snum_t snum, lpid_t& pid, bool* allocated)$/;"	f	class:vol_t
first_pid	src/sm/lgrec.h	/^    shpid_t    first_pid;    \/\/ first page of contiguous chunk$/;"	m	struct:lg_chunk_s
first_rid	src/sm/tests/create_rec.cpp	/^    rid_t       first_rid;$/;"	m	struct:file_info_t	file:
first_rid	src/sm/tests/file_scan.cpp	/^    rid_t       first_rid;$/;"	m	struct:file_info_t	file:
first_rid	src/sm/tests/file_scan_many.cpp	/^    rid_t       first_rid;$/;"	m	struct:file_info_t	file:
first_rid	src/sm/tests/log_exceed.cpp	/^    rid_t       first_rid;$/;"	m	struct:file_info_t	file:
first_rid	src/sm/tests/mrbtrees_test.cpp	/^  rid_t       first_rid;$/;"	m	struct:file_info_t	file:
first_rid	src/sm/tests/rtree_example.cpp	/^    rid_t       first_rid;$/;"	m	struct:file_info_t	file:
first_rid	src/sm/tests/sort_stream.cpp	/^    rid_t       first_rid;$/;"	m	struct:file_info_t	file:
first_rid	src/sm/tests/vtable_example.cpp	/^    rid_t       first_rid;$/;"	m	struct:file_info_t	file:
first_run	src/sm/newsort.cpp	/^    int                first_run() const { return _first_run; }$/;"	f	class:tape_t
first_set	src/fc/w_bitmap.cpp	/^w_bitmap_t::first_set(uint4_t start) const$/;"	f	class:w_bitmap_t
first_set	src/sm/extent.h	/^inline int extlink_t::first_set(int start) const$/;"	f	class:extlink_t
first_set	src/sm/pmap.h	/^    inline    int    first_set(int start) const {$/;"	f	struct:Pmap
first_slot	src/sm/newsort.cpp	/^    slotid_t         first_slot() const { return _first_slot; }$/;"	f	class:run_t
first_time	src/sm/btcursor.h	/^    bool            first_time;$/;"	m	class:bt_cursor_t
firstch	src/common/regcomp.cpp	/^firstch(struct parse *p, cset *cs)$/;"	f	file:
firststate	src/common/regex2.h	/^    sopno firststate;    \/* the initial OEND (normally 0) *\/$/;"	m	struct:re_guts
fisraw	src/sthread/io.cpp	/^w_rc_t    sthread_t::fisraw(int fd, bool &isRaw)$/;"	f	class:sthread_t
five	src/fc/w_input.cpp	/^        five=5, six=6, seven=7, eight=8, $/;"	e	enum:charclass	file:
fix	src/sm/bf.h	/^bf_m::fix($/;"	f	class:bf_m
fix	src/sm/page.cpp	/^page_p::fix($/;"	f	class:page_p
fix_EX	src/sm/vol.cpp	/^extlink_i::fix_EX(extnum_t idx)$/;"	f	class:extlink_i
fixed	src/sm/smsh/sort_funcs.h	/^    bool     fixed;$/;"	m	struct:metadata
fixed_by_me	src/sm/bf.cpp	/^bf_m::fixed_by_me(const page_s* buf) $/;"	f	class:bf_m
fixed_pool	src/fc/w_temp_alloc.h	/^        fixed_pool(char *b, size_t bsz)$/;"	f	struct:w_temp_alloc::fixed_pool
fixed_pool	src/fc/w_temp_alloc.h	/^    struct fixed_pool : pool {$/;"	s	struct:w_temp_alloc
fixed_pool_swap	src/fc/w_temp_alloc.h	/^        explicit fixed_pool_swap(char *buf, size_t bufsz)$/;"	f	struct:w_temp_alloc::fixed_pool_swap
fixed_pool_swap	src/fc/w_temp_alloc.h	/^    struct fixed_pool_swap {$/;"	s	struct:w_temp_alloc
fkeys	src/sm/sort.cpp	/^    char** fkeys;           \/\/ file keys to be sorted$/;"	m	struct:sort_desc_t	file:
fl	src/sm/rtree_p.h	/^    ftstk_t     fl;$/;"	m	class:rt_cursor_t
flag_on	src/fc/w_debug.cpp	/^w_debug::flag_on($/;"	f	class:w_debug
flag_t	src/sm/btree_p.h	/^    enum flag_t{$/;"	g	class:btree_p
flags	src/fc/w_debug.h	/^        const char *flags() { return _flags; }$/;"	f	class:w_debug
flags	src/sm/btree_p.h	/^        uint2_t    flags;        \/\/ a mask of flags$/;"	m	struct:btree_p::btctrl_t
flags	src/sm/extent.h	/^    w_base_t::uint2_t        flags;$/;"	m	struct:stnode_t
flags	src/sm/file_s.h	/^    uint2_t    flags;        \/\/ enum recflags_t$/;"	m	struct:rectag_t
flags_t	src/sm/pin.h	/^    enum flags_t { $/;"	g	class:pin_i
float_lexify	src/sm/lexify.cpp	/^sortorder::float_lexify($/;"	f	class:sortorder
float_thread_t	src/sthread/tests/thread3.cpp	/^class float_thread_t : public sthread_t {$/;"	c	file:
float_thread_t	src/sthread/tests/thread3.cpp	/^float_thread_t::float_thread_t(int fid)$/;"	f	class:float_thread_t
float_unlexify	src/sm/lexify.cpp	/^sortorder::float_unlexify($/;"	f	class:sortorder
floor2	src/sm/log_core.h	/^    static long         floor2(long offset, long block_size) $/;"	f	class:log_core
flush	src/sm/log.cpp	/^log_m::flush(lsn_t lsn, bool block)$/;"	f	class:log_m
flush	src/sm/log_core.cpp	/^rc_t log_core::flush(lsn_t lsn, bool block)$/;"	f	class:log_core
flush	src/sm/partition.cpp	/^partition_t::flush($/;"	f	class:partition_t
flush	src/sm/partition.cpp	/^partition_t::flush(int fd)$/;"	f	class:partition_t
flush_all	src/sm/log.h	/^    rc_t    flush_all(bool block=true) { $/;"	f	class:log_m
flush_and_setprio	src/fc/errlog.cpp	/^flush_and_setprio(ostream& o, LogPriority p)$/;"	f
flush_daemon	src/sm/log_core.cpp	/^void log_core::flush_daemon() $/;"	f	class:log_core
flush_daemon_thread_t	src/sm/log_core.cpp	/^	flush_daemon_thread_t(log_core* log) : $/;"	f	class:flush_daemon_thread_t
flush_daemon_thread_t	src/sm/log_core.cpp	/^class flush_daemon_thread_t : public smthread_t {$/;"	c	file:
flush_daemon_work	src/sm/log_core.cpp	/^lsn_t log_core::flush_daemon_work(lsn_t old_mark) $/;"	f	class:log_core
flush_one_rec	src/sm/sort.cpp	/^sort_stream_i::flush_one_rec(const record_t *rec, rid_t& rid, $/;"	f	class:sort_stream_i
flush_run	src/sm/newsort.cpp	/^run_mgr::flush_run(bool flush_to_tmpfile)$/;"	f	class:run_mgr
flush_run	src/sm/sort.cpp	/^sort_stream_i::flush_run()$/;"	f	class:sort_stream_i
flush_until	src/sm/sm.cpp	/^ss_m::flush_until(lsn_t& anlsn, bool block)$/;"	f	class:ss_m
flushl	src/fc/errlog.cpp	/^ostream& flushl(ostream& out)$/;"	f
flushlog	src/sm/sm.cpp	/^ss_m::flushlog()$/;"	f	class:ss_m
fm_alloc_page_reject	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t fm_alloc_page_reject;$/;"	v
fm_alloc_pg	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t fm_alloc_pg;$/;"	v
fm_append	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t fm_append;$/;"	v
fm_appendonly	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t fm_appendonly;$/;"	v
fm_cache	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t fm_cache;$/;"	v
fm_compact	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t fm_compact;$/;"	v
fm_error_not_handled	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t fm_error_not_handled;$/;"	v
fm_ext_touch	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t fm_ext_touch;$/;"	v
fm_ext_touch_nop	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t fm_ext_touch_nop;$/;"	v
fm_histogram_hit	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t fm_histogram_hit;$/;"	v
fm_lastpid_cached	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t fm_lastpid_cached;$/;"	v
fm_lastpid_hit	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t fm_lastpid_hit;$/;"	v
fm_nospace	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t fm_nospace;$/;"	v
fm_ok	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t fm_ok;$/;"	v
fm_page_full	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t fm_page_full;$/;"	v
fm_page_invalid	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t fm_page_invalid;$/;"	v
fm_page_moved	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t fm_page_moved;$/;"	v
fm_page_nolatch	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t fm_page_nolatch;$/;"	v
fm_page_nolock	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t fm_page_nolock;$/;"	v
fm_pagecache_hit	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t fm_pagecache_hit;$/;"	v
fm_search_failed	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t fm_search_failed;$/;"	v
fm_search_hit	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t fm_search_hit;$/;"	v
fm_search_pages	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t fm_search_pages;$/;"	v
fmtflags	src/fc/w_base.cpp	/^typedef ios::fmtflags  fmtflags;$/;"	t	file:
foo	src/fc/tests/darray.cpp	/^    foo() : id(++foocount) { std::fprintf(stdout, "foo#%d\\n", id); }$/;"	f	struct:foo
foo	src/fc/tests/darray.cpp	/^struct foo {$/;"	s	file:
foo	src/sm/key_ranges_map.cpp	/^foo::foo() $/;"	f	class:foo
foo	src/sm/key_ranges_map.cpp	/^foo::foo(char* m, uint4_t len, bool alloc)$/;"	f	class:foo
foo	src/sm/key_ranges_map.cpp	/^foo::foo(const foo& v)$/;"	f	class:foo
foo	src/sm/key_ranges_map.h	/^class foo $/;"	c
foocount	src/fc/tests/darray.cpp	/^static int foocount = 0;$/;"	v	file:
foot	tools/stats.pl	/^sub foot {$/;"	s
footer_sz	src/sm/page_s.h	/^        footer_sz = (0$/;"	e	enum:page_s::__anon78
for_each_smthread	src/sm/smthread.cpp	/^smthread_t::for_each_smthread(SmthreadFunc& f)$/;"	f	class:smthread_t
for_each_thread	src/sthread/sthread.cpp	/^void sthread_t::for_each_thread(ThreadFunc& f)$/;"	f	class:sthread_t
force	src/sm/rtree.cpp	/^rtld_cache_t::force($/;"	f	class:rtld_cache_t
force_all	src/sm/bf.cpp	/^bf_m::force_all(bool flush)$/;"	f	class:bf_m
force_buffers	src/sm/sm.cpp	/^ss_m::force_buffers(bool flush)$/;"	f	class:ss_m
force_compress	src/sm/smsh/smsh.cpp	/^bool force_compress = false;$/;"	v
force_my_dirty_old_pages	src/sm/bf.cpp	/^bool bf_m::force_my_dirty_old_pages(lpid_t const* wal_page) const$/;"	f	class:bf_m
force_my_dirty_old_pages	src/sm/bf_core.cpp	/^bf_core_m::force_my_dirty_old_pages(lpid_t const* \/*wal_page*\/) const {$/;"	f	class:bf_core_m
force_nonblocking	src/sm/xct.cpp	/^xct_t::force_nonblocking()$/;"	f	class:xct_t
force_readonly	src/sm/xct.cpp	/^xct_t::force_readonly() $/;"	f	class:xct_t
force_store	src/sm/bf.cpp	/^bf_m::force_store(stid_t stid, bool invalidate)$/;"	f	class:bf_m
force_store_buffers	src/sm/sm.cpp	/^ss_m::force_store_buffers(const stid_t& stid, bool invalidate)$/;"	f	class:ss_m
force_until_lsn	src/sm/bf.cpp	/^bf_m::force_until_lsn(const lsn_t& lsn, bool flush)$/;"	f	class:bf_m
force_vol_hdr_buffers	src/sm/sm.cpp	/^ss_m::force_vol_hdr_buffers(const vid_t& vid)$/;"	f	class:ss_m
force_volume	src/sm/bf.cpp	/^bf_m::force_volume(vid_t vid, bool flush)$/;"	f	class:bf_m
force_vote_readonly	src/sm/sm.cpp	/^ss_m::force_vote_readonly()$/;"	f	class:ss_m
forced_readonly	src/sm/xct.h	/^xct_t::forced_readonly() const$/;"	f	class:xct_t
fork	src/sthread/sthread.cpp	/^w_rc_t    sthread_t::fork()$/;"	f	class:sthread_t
form	src/fc/w_form.cpp	/^const char *form(const char *format, ...)$/;"	f
form_cleanup	src/fc/w_form.cpp	/^struct form_cleanup$/;"	s	file:
format	src/sm/btree_p.cpp	/^btree_p::format($/;"	f	class:btree_p
format	src/sm/file.cpp	/^file_p::format(const lpid_t& pid, tag_t tag, uint4_t flags, $/;"	f	class:file_p
format	src/sm/file.cpp	/^rc_t file_mrbt_p::format(const lpid_t& pid, tag_t tag, uint4_t flags, $/;"	f	class:file_mrbt_p
format	src/sm/keyed.cpp	/^keyed_p::format(const lpid_t& \/*pid*\/, tag_t \/*tag*\/, $/;"	f	class:keyed_p
format	src/sm/keyed.cpp	/^keyed_p::format(const lpid_t& pid, tag_t tag,$/;"	f	class:keyed_p
format	src/sm/lgrec.cpp	/^lgdata_p::format(const lpid_t& pid, tag_t tag, $/;"	f	class:lgdata_p
format	src/sm/lgrec.cpp	/^lgindex_p::format(const lpid_t& pid, tag_t tag, $/;"	f	class:lgindex_p
format	src/sm/ranges_p.cpp	/^rc_t ranges_p::format(const lpid_t& pid, tag_t tag, uint4_t flags, $/;"	f	class:ranges_p
format	src/sm/rtree.cpp	/^rtree_base_p::format(const lpid_t& pid, tag_t tag, $/;"	f	class:rtree_base_p
format	src/sm/rtree.cpp	/^rtree_p::format(const lpid_t& pid, tag_t tag, $/;"	f	class:rtree_p
format	src/sm/vol.cpp	/^extlink_p::format($/;"	f	class:extlink_p
format	src/sm/vol.cpp	/^stnode_p::format(const lpid_t& pid, tag_t tag, $/;"	f	class:stnode_p
format	src/sm/zkeyed.cpp	/^zkeyed_p::format(    $/;"	f	class:zkeyed_p
format	src/sm/zkeyed.cpp	/^zkeyed_p::format($/;"	f	class:zkeyed_p
format_dev	src/sm/sm.cpp	/^ss_m::format_dev(const char* device, smksize_t size_in_KB, bool force)$/;"	f	class:ss_m
format_dev	src/sm/vol.cpp	/^vol_t::format_dev($/;"	f	class:vol_t
format_ptr	src/sm/smsh/shell.cpp	/^ostream &format_ptr(ostream &o, const void *ptr)$/;"	f
format_ptr_null	src/sm/smsh/shell.cpp	/^ostream &format_ptr_null(ostream &o, const void *ptr)$/;"	f
format_unix_error	src/fc/w_error.cpp	/^void format_unix_error(int err, char *buf, int bufsize)$/;"	f
format_version	src/sm/device.h	/^    uint4_t        format_version;$/;"	m	struct:device_hdr_s
format_version	src/sm/vol.h	/^    w_base_t::uint4_t   format_version() const { $/;"	f	class:volhdr_t
format_vol	src/sm/vol.cpp	/^vol_t::format_vol($/;"	f	class:vol_t
formatlong	src/sm/smsh/lib/smsh.tcl	/^proc formatlong { prefix mplier fmt x } {$/;"	p
four	src/fc/w_input.cpp	/^enum charclass { zero=0, one=1, two=2, three=3, four=4, $/;"	e	enum:charclass	file:
four_pages_min	src/sm/sm.cpp	/^const char *four_pages_min(int kb) {$/;"	f
fourteen	src/fc/w_input.cpp	/^        twelve=12, thirteen=13, fourteen=14, fifteen=15,$/;"	e	enum:charclass	file:
fp	src/sm/sort.h	/^    file_p* fp;         \/\/ page buffer (at most fix two pages for unique sort)$/;"	m	class:run_scan_t
fqsort_cmp	src/sm/sort.cpp	/^fqsort_cmp(const void* k1, const void* k2)$/;"	f	file:
frame	src/sm/bf_s.h	/^    const page_s *frame() const { return _frame; }$/;"	f	class:bfcb_t
frame_info	src/sm/bf_prefetch.h	/^    NORET frame_info():_pid(lpid_t::null),_status(pf_init),$/;"	f	struct:bf_prefetch_thread_t::frame_info
frame_info	src/sm/bf_prefetch.h	/^    struct frame_info {$/;"	s	class:bf_prefetch_thread_t
frame_nonconst	src/sm/bf_s.h	/^    page_s *frame_nonconst() { return _frame; }$/;"	f	class:bfcb_t
free_bs	src/sm/sm_du_stats.h	/^    base_stat_t        free_bs;        \/* unused bytes on page *\/$/;"	m	struct:file_pg_stats_t
free_ext_after_xct	src/sm/sm_io.cpp	/^io_m::free_ext_after_xct(const extid_t& extid)$/;"	f	class:io_m
free_ext_after_xct	src/sm/vol.cpp	/^vol_t::free_ext_after_xct(extnum_t ext, snum_t& old_owner)$/;"	f	class:vol_t
free_ext_cache	src/sm/vol.h	/^    ext_cache_t&             free_ext_cache() { return _free_ext_cache; }$/;"	f	class:vol_t
free_ext_list_log	src/sm/logdef_gen.cpp	/^	free_ext_list_log (logrec_t*)   {};$/;"	f	class:free_ext_list_log
free_ext_list_log	src/sm/logdef_gen.cpp	/^    class free_ext_list_log : public logrec_t {$/;"	c	file:
free_ext_list_log	src/sm/logrec.cpp	/^free_ext_list_log::free_ext_list_log(const page_p& page, const stid_t& stid, extnum_t head, extnum_t count)$/;"	f	class:free_ext_list_log
free_ext_list_t	src/sm/logrec.cpp	/^    free_ext_list_t(const stid_t& theStid, extnum_t theHead, extnum_t theCount)$/;"	f	struct:free_ext_list_t
free_ext_list_t	src/sm/logrec.cpp	/^struct free_ext_list_t  {$/;"	s	file:
free_exts_during_recovery	src/sm/sm_io.cpp	/^io_m::free_exts_during_recovery()$/;"	f	class:io_m
free_exts_during_recovery	src/sm/vol.cpp	/^vol_t::free_exts_during_recovery()$/;"	f	class:vol_t
free_exts_on_same_page	src/sm/sm_io.cpp	/^io_m::free_exts_on_same_page(const stid_t& stid, extnum_t ext, extnum_t count)$/;"	f	class:io_m
free_exts_on_same_page	src/sm/vol.cpp	/^vol_t::free_exts_on_same_page(extnum_t head, snum_t snum, extnum_t count)$/;"	f	class:vol_t
free_last_pid	src/sm/sdesc.h	/^    void                free_last_pid() const {} \/\/ DEAD$/;"	f	class:sdesc_t
free_page	src/sm/sm_io.cpp	/^io_m::free_page(const lpid_t& pid, bool check_store_membership)$/;"	f	class:io_m
free_page	src/sm/vol.cpp	/^vol_t::free_page(const lpid_t& pid, bool check_membership)$/;"	f	class:vol_t
free_pages_in_ext_log	src/sm/logdef_gen.cpp	/^	free_pages_in_ext_log (logrec_t*)   {};$/;"	f	class:free_pages_in_ext_log
free_pages_in_ext_log	src/sm/logdef_gen.cpp	/^    class free_pages_in_ext_log : public logrec_t {$/;"	c	file:
free_pages_in_ext_log	src/sm/logrec.cpp	/^free_pages_in_ext_log::free_pages_in_ext_log(const page_p& page, snum_t snum, extnum_t ext, const Pmap& pmap)$/;"	f	class:free_pages_in_ext_log
free_rec	src/sm/btcursor.h	/^bt_cursor_t::free_rec()$/;"	f	class:bt_cursor_t
free_sdesc_cache	src/sm/smthread.cpp	/^smthread_t::free_sdesc_cache()$/;"	f	class:smthread_t
free_space	src/sm/sort.cpp	/^    void  free_space() {$/;"	f	struct:sort_desc_t
free_space2bucket	src/sm/page.cpp	/^page_p::free_space2bucket(smsize_t sp) $/;"	f	class:page_p
free_space4bucket	src/sm/page.h	/^page_p::free_space4bucket() const {$/;"	f	class:page_p
free_store	src/sm/vol.cpp	/^vol_t::free_store(snum_t snum, bool acquire_lock)$/;"	f	class:vol_t
free_store_after_xct	src/sm/sm_io.cpp	/^io_m::free_store_after_xct(const stid_t& stid)$/;"	f	class:io_m
free_store_after_xct	src/sm/vol.cpp	/^vol_t::free_store_after_xct(snum_t snum)$/;"	f	class:vol_t
free_stores_during_recovery	src/sm/sm_io.cpp	/^io_m::free_stores_during_recovery(store_deleting_t typeToRecover)$/;"	f	class:io_m
free_stores_during_recovery	src/sm/vol.cpp	/^vol_t::free_stores_during_recovery(store_deleting_t typeToRecover)$/;"	f	class:vol_t
freefunc	src/sm/newsort.cpp	/^   void freefunc(const void *, smsize_t ) { }$/;"	f	class:no_factory_t
freefunc	src/sm/newsort.cpp	/^   void freefunc(const void *p, smsize_t $/;"	f	class:cpp_char_factory_t
freefunc	src/sm/newsort.cpp	/^limited_space::freefunc(const void*p, smsize_t l) {$/;"	f	class:limited_space
freefunc	src/sm/smsh/sort_funcs3.cpp	/^   void freefunc(const void *p, smsize_t W_IFDEBUG1(s)) {$/;"	f	class:boxfactory
freefunc	src/sm/sort_s.h	/^   void freefunc(vec_t&v) {$/;"	f	class:ssm_sort::factory_t
freeset	src/common/regcomp.cpp	/^freeset(struct parse *p, cset *cs)$/;"	f	file:
freespace	src/sm/newsort.cpp	/^    void  freespace() {$/;"	f	class:meta_header_t
freespace	src/sm/newsort.cpp	/^object_t::freespace() $/;"	f	class:object_t
freespace	src/sm/newsort.cpp	/^skey_t::freespace()$/;"	f	class:skey_t
freezeset	src/common/regcomp.cpp	/^freezeset(struct parse *p, cset *cs)$/;"	f	file:
fresh	src/common/regex_engine.cpp	/^    states fresh;        \/* states for a fresh start *\/$/;"	m	struct:match	file:
from_file	src/common/lsn.h	/^    static w_base_t::uint8_t from_file(w_base_t::uint4_t data) { $/;"	f	class:lsn_t
from_linear	src/fc/stime.cpp	/^static inline void from_linear(int sec, int xsec,$/;"	f	file:
from_rba	src/common/lsn.h	/^    static w_base_t::uint8_t from_rba(sm_diskaddr_t data) { $/;"	f	class:lsn_t
front	src/fc/w_list.h	/^    T*	front() { return top(); }$/;"	f	class:w_list_t
fseek	src/fc/largefile_aware.h	36;"	d
fstat	src/sthread/io.cpp	/^w_rc_t    sthread_t::fstat(int fd, filestat_t &st)$/;"	f	class:sthread_t
fsync	src/sthread/io.cpp	/^w_rc_t    sthread_t::fsync(int fd)$/;"	f	class:sthread_t
ftell	src/fc/largefile_aware.h	35;"	d
ftruncate	src/sthread/io.cpp	/^w_rc_t    sthread_t::ftruncate(int fd, fileoff_t n)$/;"	f	class:sthread_t
ftstk_chunk	src/sm/rtree_p.h	/^const int ftstk_chunk = 50;$/;"	v
ftstk_t	src/sm/rtree.cpp	/^ftstk_t::ftstk_t() {$/;"	f	class:ftstk_t
ftstk_t	src/sm/rtree_p.h	/^class ftstk_t {$/;"	c
func	src/sm/smsh/shell.cpp	/^    smproc_t* func;$/;"	m	struct:cmd_t	file:
func	src/sm/sort_s.h	/^    LEXFUNC    func; $/;"	m	struct:ssm_sort::generic_CSKF_cookie
func_at_file	config/ar-lib	/^func_at_file ()$/;"	f
func_cl_dashL	config/compile	/^func_cl_dashL ()$/;"	f
func_cl_dashl	config/compile	/^func_cl_dashl ()$/;"	f
func_cl_wrapper	config/compile	/^func_cl_wrapper ()$/;"	f
func_error	config/ar-lib	/^func_error ()$/;"	f
func_file_conv	config/ar-lib	/^func_file_conv ()$/;"	f
func_file_conv	config/compile	/^func_file_conv ()$/;"	f
g	src/common/kvl_t.h	/^    w_base_t::uint4_t        g;$/;"	m	struct:kvl_t
g	src/common/regcomp.cpp	/^    struct re_guts *g;$/;"	m	struct:parse	typeref:struct:parse::re_guts	file:
g	src/common/regex_engine.cpp	/^    struct re_guts *g;$/;"	m	struct:match	typeref:struct:match::re_guts	file:
g	src/sm/logrec.h	/^    gtid_t                  g;$/;"	m	struct:prepare_info_t
game	src/sthread/tests/thread1.cpp	/^	ping_pong_t	&game;$/;"	m	class:pong_thread_t	file:
gather_stats	src/sm/sm.cpp	/^ss_m::gather_stats(sm_stats_info_t& _stats)$/;"	f	class:ss_m
gather_xct_stats	src/sm/sm.cpp	/^ss_m::gather_xct_stats(sm_stats_info_t& _stats, bool reset)$/;"	f	class:ss_m
gcc_kludge_0	src/common/tests/errcodes.cpp	/^typedef w_list_i<option_t, unsafe_list_dummy_lock_t>             gcc_kludge_0;$/;"	t	file:
gcc_kludge_1	src/common/tests/errcodes.cpp	/^typedef w_auto_delete_array_t<char> gcc_kludge_1;$/;"	t	file:
ge	src/sm/histo.cpp	/^histoid_compare_t::ge(const pginfo_t& left, const pginfo_t& right) const$/;"	f	class:histoid_compare_t
ge	src/sm/sm_base.h	/^                 gt=gtOp, ge=geOp, lt=ltOp, le=leOp };$/;"	e	enum:smlevel_0::cmp_t
geNegInf	src/fc/w_base.h	/^    NegInf=0x100, eqNegInf, gtNegInf, geNegInf, ltNegInf, leNegInf,$/;"	e	enum:w_base_t::CompareOp
geOp	src/fc/w_base.h	/^    badOp=0x0, eqOp=0x1, gtOp=0x2, geOp=0x3, ltOp=0x4, leOp=0x5,$/;"	e	enum:w_base_t::CompareOp
gePosInf	src/fc/w_base.h	/^    PosInf=0x400, eqPosInf, gtPosInf, gePosInf, ltPosInf, lePosInf$/;"	e	enum:w_base_t::CompareOp
generate_log_warnings	src/sm/smthread.h	/^    bool            generate_log_warnings()const{return _gen_log_warnings;}$/;"	f	class:smthread_t
generate_new_lvid	src/sm/sm.cpp	/^ss_m::generate_new_lvid(lvid_t& lvid)$/;"	f	class:ss_m
generate_new_volid	src/sm/lid.cpp	/^lid_m::generate_new_volid(lvid_t& lvid)$/;"	f	class:lid_m
generator	src/fc/tests/random.cpp	/^rand48 generator;$/;"	v
generator	src/sthread/tests/ioperf.cpp	/^__thread rand48 generator;$/;"	v
generic_CSKF	src/sm/newsort.cpp	/^sort_keys_t::generic_CSKF($/;"	f	class:sort_keys_t
generic_CSKF_cookie	src/sm/sort_s.h	/^struct generic_CSKF_cookie $/;"	s	namespace:ssm_sort
generic_MOF	src/sm/newsort.cpp	/^generic_MOF($/;"	f
generic_UMOF	src/sm/newsort.cpp	/^generic_UMOF($/;"	f
get	src/fc/tls.h	/^    T* get() {$/;"	f	struct:tls_tricks::tls_blob
get	src/fc/w_rc.h	/^    w_error_t* get() const {$/;"	f	class:w_rc_t
get	src/sm/bf_transit_bucket.h	/^    static  transit_bucket_t & get(bfpid_t const &pid) $/;"	f	class:transit_bucket_t
get	src/sm/extent.h	/^extlink_p::get(slotid_t idx)$/;"	f	class:extlink_p
get	src/sm/extent.h	/^stnode_p::get(slotid_t idx)$/;"	f	class:stnode_p
get	src/sm/vol.cpp	/^extlink_i::get(extnum_t idx, const extlink_t* &res)$/;"	f	class:extlink_i
get	src/sm/vol.cpp	/^extlink_i::get(extnum_t idx, extlink_t* &res)$/;"	f	class:extlink_i
get	src/sm/vol.cpp	/^w_rc_t stnode_i::get(snum_t idx, const stnode_t *&stnodep)$/;"	f	class:stnode_i
get	src/sm/vol.cpp	/^w_rc_t stnode_i::get(snum_t idx, stnode_t &stnode)$/;"	f	class:stnode_i
get	src/sthread/sthread.cpp	/^  const_array &get() { return _w; }$/;"	f	struct:__rng_init
getAllPartitions	src/sm/key_ranges_map.cpp	/^w_rc_t key_ranges_map::getAllPartitions(vector<lpid_t>& pidVec) $/;"	f	class:key_ranges_map
getBoundaries	src/sm/key_ranges_map.cpp	/^w_rc_t key_ranges_map::getBoundaries(lpid_t pid, cvec_t& startKey, cvec_t& endKey) $/;"	f	class:key_ranges_map
getMap	src/sm/key_ranges_map.cpp	/^key_ranges_map::KRMap key_ranges_map::getMap() const$/;"	f	class:key_ranges_map
getNumPartitions	src/sm/key_ranges_map.cpp	/^uint key_ranges_map::getNumPartitions() const$/;"	f	class:key_ranges_map
getPartitionByKey	src/sm/key_ranges_map.cpp	/^w_rc_t key_ranges_map::getPartitionByKey(const Key& key, lpid_t& pid)$/;"	f	class:key_ranges_map
getPartitionByUnscrambledKey	src/sm/key_ranges_map.cpp	/^w_rc_t key_ranges_map::getPartitionByUnscrambledKey(const sinfo_s& sinfo,$/;"	f	class:key_ranges_map
getPartitions	src/sm/key_ranges_map.cpp	/^w_rc_t key_ranges_map::getPartitions(const Key& key1, const Key& key2,$/;"	f	class:key_ranges_map
get_1thread_log_me	src/sm/smthread.h	/^    queue_based_lock_t::ext_qnode& get_1thread_log_me() {$/;"	f	class:smthread_t
get_1thread_xct_me	src/sm/smthread.h	/^    queue_based_lock_t::ext_qnode& get_1thread_xct_me() {$/;"	f	class:smthread_t
get___metarecs	src/sm/smthread.h	/^    int&                           get___metarecs() { $/;"	f	class:smthread_t
get___metarecs_in	src/sm/smthread.h	/^    int&                           get___metarecs_in() { $/;"	f	class:smthread_t
get__ordinal	src/sm/smthread.h	/^    tcb_t::ordinal_number_t &      get__ordinal()  { return tcb().__ordinal; }$/;"	f	class:smthread_t
get_archived_log_file	src/sm/smsh/out_of_log_space.cpp	/^w_rc_t get_archived_log_file ($/;"	f
get_archived_log_file	src/sm/tests/log_exceed.cpp	/^w_rc_t get_archived_log_file ($/;"	f
get_bit	src/fc/w_bitvector.h	/^    Word get_bit(Word idx) const {$/;"	f	class:w_bitvector_t
get_blist	src/fc/block_alloc.cpp	/^    static bool get_blist(BlockList** rbl, void* owner) {$/;"	f	struct:blob_pool::helper
get_buf	src/sm/newsort.cpp	/^limited_space::get_buf(smsize_t amt, char *&result) $/;"	f	class:limited_space
get_cat	tools/logdef.pl	/^sub get_cat {$/;"	s
get_cb	src/sm/bf.cpp	/^bfcb_t* bf_m::get_cb(const page_s* p) $/;"	f	class:bf_m
get_cb	src/sm/bf_core.cpp	/^bf_core_m::get_cb(const bfpid_t& p, bfcb_t*& ret) const$/;"	f	class:bf_core_m
get_cc_mode	src/sm/smsh/lib/smsh.tcl	/^proc get_cc_mode { st } {$/;"	p
get_cmp_func	src/sm/sort.cpp	/^sort_stream_i::get_cmp_func(key_info_t::key_type_t type, bool up) $/;"	f	class:sort_stream_i
get_coordinator	src/sm/xct.cpp	/^xct_t::get_coordinator() const$/;"	f	class:xct_t
get_copy	src/sm/vol.cpp	/^extlink_i::get_copy(extnum_t idx, extlink_t &res)$/;"	f	class:extlink_i
get_count	src/sm/lock_x.h	/^    int               get_count() const { return _ref_count; }$/;"	f	class:lock_request_t
get_curr_lsn	src/sm/sm.cpp	/^ss_m::get_curr_lsn(lsn_t& anlsn)$/;"	f	class:ss_m
get_device_quota	src/sm/sm.cpp	/^ss_m::get_device_quota(const char* device, smksize_t& quota_KB, smksize_t& quota_used_KB)$/;"	f	class:ss_m
get_device_quota	src/sm/sm_io.cpp	/^io_m::get_device_quota(const char* device, smksize_t& quota_KB,$/;"	f	class:io_m
get_dstats	src/sm/smsh/lib/smsh.tcl	/^proc get_dstats {volid aud} {$/;"	p
get_du_statistics	src/sm/btree.cpp	/^btree_m::get_du_statistics($/;"	f	class:btree_m
get_du_statistics	src/sm/file.cpp	/^file_m::get_du_statistics($/;"	f	class:file_m
get_du_statistics	src/sm/sm.cpp	/^ss_m::get_du_statistics(const stid_t& stid, sm_du_stats_t& du, bool audit)$/;"	f	class:ss_m
get_du_statistics	src/sm/sm.cpp	/^ss_m::get_du_statistics(vid_t vid, sm_du_stats_t& du, bool audit)$/;"	f	class:ss_m
get_du_statistics	src/sm/sm_io.cpp	/^rc_t io_m::get_du_statistics(vid_t volid, volume_hdr_stats_t& _stats, bool audit)$/;"	f	class:io_m
get_du_statistics	src/sm/vol.cpp	/^rc_t vol_t::get_du_statistics(struct volume_hdr_stats_t& st, bool audit)$/;"	f	class:vol_t
get_durable_lsn	src/sm/sm.cpp	/^ss_m::get_durable_lsn(lsn_t& anlsn)$/;"	f	class:ss_m
get_duration	src/sm/lock_x.h	/^    duration_t        get_duration() const { return _duration; } $/;"	f	class:lock_request_t
get_error	src/sm/bf_prefetch.cpp	/^bf_prefetch_thread_t::get_error() $/;"	f	class:bf_prefetch_thread_t
get_escalation_thresholds	src/sm/sm.cpp	/^ss_m::get_escalation_thresholds(int4_t& toPage, int4_t& toStore, int4_t& toVolume)$/;"	f	class:ss_m
get_file	src/common/lsn.h	/^    static w_base_t::uint8_t get_file(w_base_t::uint8_t data) { $/;"	f	class:lsn_t
get_file_meta_stats	src/sm/sm.cpp	/^ss_m::get_file_meta_stats(vid_t vid, $/;"	f	class:ss_m
get_file_meta_stats	src/sm/sm_io.cpp	/^io_m::get_file_meta_stats(vid_t volid, uint4_t num_files, SmFileMetaStats* file_stats)$/;"	f	class:io_m
get_file_meta_stats	src/sm/vol.cpp	/^vol_t::get_file_meta_stats(uint4_t num_files, SmFileMetaStats* file_stats)$/;"	f	class:vol_t
get_file_meta_stats_batch	src/sm/sm_io.cpp	/^io_m::get_file_meta_stats_batch(vid_t volid, uint4_t max_store, SmStoreMetaStats** mapping)$/;"	f	class:io_m
get_file_meta_stats_batch	src/sm/vol.cpp	/^vol_t::get_file_meta_stats_batch(uint4_t max_store, SmStoreMetaStats** mapping)$/;"	f	class:vol_t
get_fingerprint_map	src/sm/smthread.h	/^    const atomic_thread_map_t&  get_fingerprint_map() const$/;"	f	class:smthread_t
get_flag	src/fc/w_rc.h	/^    static ptrdiff_t get_flag() { return 0x0; }$/;"	f	class:w_rc_t
get_flag	src/fc/w_rc.h	/^    static ptrdiff_t get_flag() { return 0x1; }$/;"	f	class:w_rc_t
get_for_smo	src/sm/btree_impl.cpp	/^tree_latch::get_for_smo($/;"	f	class:tree_latch
get_frame	src/sm/bf_htab.h	/^        bfcb_t *get_frame(bfpid_t pid) { $/;"	f	class:bf_core_m::htab::bucket
get_generator	src/sm/smsh/shell.cpp	/^rand48 &get_generator() {$/;"	f
get_hdr	src/sm/file.cpp	/^file_p::get_hdr(file_p_hdr_t& hdr) const$/;"	f	class:file_p
get_hdr	src/sm/keyed.h	/^    const void*         get_hdr() const {$/;"	f	class:keyed_p
get_hdr	src/sm/zkeyed.h	/^    const void*         get_hdr() const {$/;"	f	class:zkeyed_p
get_helper	src/fc/cpu_info.h	/^    static helper* get_helper() {$/;"	f	struct:cpu_info
get_hi	src/common/tid_t.h	/^    uint4_t get_hi() const { return (uint4_t) (_data >> 32); }$/;"	f	class:tid_t
get_ip	src/sm/smsh/tcl_thread.h	/^    Tcl_Interp*                  get_ip() { return ip; }$/;"	f	class:tcl_thread_t
get_kc_buf	src/sm/smthread.h	/^    char *                         get_kc_buf(bool use_dirbuf = false)  {$/;"	f	class:smthread_t
get_kc_vec	src/sm/smthread.h	/^    cvec_t*                        get_kc_vec(bool use_dirbuf = false)  {$/;"	f	class:smthread_t
get_key_type	src/sm/sm_s.cpp	/^w_rc_t key_type_s::get_key_type($/;"	f	class:key_type_s
get_key_type	src/sm/smsh/lib/smsh.tcl	/^proc get_key_type { st } {$/;"	p
get_key_type	src/sm/smsh/shell2.cpp	/^get_key_type( Tcl_Interp *$/;"	f
get_large_file_size	src/sthread/sthread.cpp	/^static    void    get_large_file_size(w_base_t::int8_t &max_os_file_size)$/;"	f	file:
get_last_lsns	src/sm/log_core.cpp	/^log_core::get_last_lsns(lsn_t *array)$/;"	f	class:log_core
get_last_rc	src/sm/log.h	/^log_i::get_last_rc()$/;"	f	class:log_i
get_latches	src/sm/btree_impl.h	425;"	d
get_latches	src/sm/btree_impl.h	441;"	d
get_lo	src/common/tid_t.h	/^    uint4_t get_lo() const { return (uint4_t) _data; }$/;"	f	class:tid_t
get_location	src/sm/sort_s.h	/^    key_location_t&  get_location(int i) { return _locs[i]; }$/;"	f	class:ssm_sort::sort_keys_t
get_lock_head	src/sm/lock_x.h	/^lock_request_t::get_lock_head() const$/;"	f	class:lock_request_t
get_lock_info	src/sm/lock_x.h	/^    xct_lock_info_t* get_lock_info() const { return _lock_info; }$/;"	f	class:lock_request_t
get_lock_level	src/sm/xct.cpp	/^xct_t::get_lock_level()  $/;"	f	class:xct_t
get_lock_totals	src/sm/lock_core.cpp	/^xct_lock_info_t::get_lock_totals($/;"	f	class:xct_lock_info_t
get_locks	src/sm/lock_core.cpp	/^xct_lock_info_t::get_locks($/;"	f	class:xct_lock_info_t
get_log_features	src/sm/log_core.cpp	/^log_m::get_log_features() {$/;"	f	class:log_m
get_log_features	src/sm/sm.cpp	/^char const* ss_m::get_log_features() $/;"	f	class:ss_m
get_log_me_node	src/sm/smthread.h	/^    queue_based_block_lock_t::ext_qnode& get_log_me_node() { $/;"	f	class:smthread_t
get_log_space_used	src/sm/xct.cpp	/^xct_t::get_log_space_used() const$/;"	f	class:xct_t
get_logbuf	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t get_logbuf;$/;"	v
get_logbuf	src/sm/xct.cpp	/^xct_t::get_logbuf(logrec_t*& ret, page_p const* p)$/;"	f	class:xct_t
get_lsn_ck	src/sm/logrec.h	/^    const lsn_t          get_lsn_ck() const { $/;"	f	class:logrec_t
get_lvid	src/sm/sm_io.cpp	/^io_m::get_lvid(const char* dev_name, lvid_t& lvid)$/;"	f	class:io_m
get_lvid	src/sm/sm_io.cpp	/^io_m::get_lvid(const vid_t vid)$/;"	f	class:io_m
get_max_page_size	src/sthread/io.cpp	/^long sthread_t::get_max_page_size(long system_page_size)$/;"	f	class:sthread_t
get_me	src/sm/lock_x.h	/^        queue_based_lock_t::ext_qnode* get_me() {$/;"	f	struct:lock_head_t::my_lock
get_me1	src/sm/smthread.h	/^    queue_based_lock_t::ext_qnode& get_me1() { return tcb()._me1; }$/;"	f	class:smthread_t
get_me2	src/sm/smthread.h	/^    queue_based_lock_t::ext_qnode& get_me2() { return tcb()._me2; }$/;"	f	class:smthread_t
get_me3	src/sm/smthread.h	/^    queue_based_lock_t::ext_qnode& get_me3() { return tcb()._me3; }$/;"	f	class:smthread_t
get_more_info_msg	src/fc/w_error.cpp	/^w_error_t::get_more_info_msg() const$/;"	f	class:w_error_t
get_new_vid	src/sm/sm_io.cpp	/^io_m::get_new_vid(vid_t& vid)$/;"	f	class:io_m
get_next	src/sm/sort.cpp	/^sort_stream_i::get_next(vec_t& key, vec_t& elem, bool& end) $/;"	f	class:sort_stream_i
get_next_root	src/sm/btcursor.cpp	/^bt_cursor_t::get_next_root() {$/;"	f	class:bt_cursor_t
get_options	src/sm/sm.h	/^    static option_group_t *get_options() { return _options; }$/;"	f	class:ss_m
get_owner	src/sm/file.h	/^inline rc_t file_mrbt_p::get_owner(lpid_t& owner) const$/;"	f	class:file_mrbt_p
get_page	src/sm/bf.cpp	/^bf_m::get_page($/;"	f	class:bf_m
get_page_bucket	src/sm/vol.cpp	/^extlink_t::get_page_bucket(int pgindex) const$/;"	f	class:extlink_t
get_page_check_map	src/sm/smthread.h	/^    char *                         get_page_check_map() {$/;"	f	class:smthread_t
get_page_storeflags	src/sm/page_s.h	/^    w_base_t::uint4_t    get_page_storeflags() const { return _private_store_flags;}$/;"	f	class:page_s
get_page_with_space	src/sm/sdesc.h	/^    inline shpid_t get_page_with_space(const lpid_t& btree_page) {$/;"	f	class:sdesc_t
get_parent	src/sm/lock.cpp	/^lock_m::get_parent(const lockid_t& c, lockid_t& p)$/;"	f	class:lock_m
get_partitions_p	src/sm/dir.cpp	/^key_ranges_map* sdesc_t::get_partitions_p()$/;"	f	class:sdesc_t
get_pid	src/sm/vol.cpp	/^extlink_i::get_pid(extnum_t idx) const {$/;"	f	class:extlink_i
get_pool	src/fc/block_alloc.h	/^    static Pool* get_pool() {$/;"	f	struct:block_pool
get_pthread_stack_min	src/sthread/sthread.cpp	/^size_t get_pthread_stack_min()$/;"	f
get_range_map	src/sm/smindex.cpp	/^rc_t ss_m::get_range_map(stid_t stid, key_ranges_map*& rangemap)$/;"	f	class:ss_m
get_rba	src/common/lsn.h	/^    static w_base_t::uint8_t get_rba(w_base_t::uint8_t data) { $/;"	f	class:lsn_t
get_rec	src/sm/file.cpp	/^file_p::get_rec(slotid_t idx, record_t*& rec)$/;"	f	class:file_p
get_rec	src/sm/file.h	/^    rc_t                get_rec(slotid_t idx, const record_t*& rec)  {$/;"	f	class:file_p
get_rec_lsn	src/sm/bf.cpp	/^bf_m::get_rec_lsn(int &start, int &count, lpid_t pid[], lsn_t rec_lsn[],$/;"	f	class:bf_m
get_resultcharbuf	src/sm/smsh/shell.cpp	/^char *get_resultcharbuf() {$/;"	f
get_resultvec	src/sm/smsh/shell.cpp	/^vec_t &get_resultvec() {$/;"	f
get_sizes	src/sm/vol.h	/^        void get_sizes(int &cachesz, int &cachemx, int &cntsz, int &cntmx) const$/;"	f	class:vol_t::ext_cache_t
get_skip_log	src/sm/log_core.h	/^    skip_log*       get_skip_log()  { return _skip_log; }$/;"	f	class:log_core
get_sort_container	src/sm/smsh/shell.cpp	/^sort_stream_i *get_sort_container() {$/;"	f
get_store	src/sm/newsort.cpp	/^    snum_t           get_store()const { return _store; }$/;"	f	class:tape_t
get_store_flags	src/sm/page.cpp	/^page_p::get_store_flags() const$/;"	f	class:page_p
get_store_flags	src/sm/sm_io.cpp	/^io_m::get_store_flags(const stid_t& stid, store_flag_t& flags)$/;"	f	class:io_m
get_store_flags	src/sm/vol.cpp	/^vol_t::get_store_flags(snum_t snum, store_flag_t& flags)$/;"	f	class:vol_t
get_store_info	src/sm/sm.cpp	/^ss_m::get_store_info($/;"	f	class:ss_m
get_store_info	src/sm/smindex.cpp	/^rc_t ss_m::get_store_info(stid_t stid, sinfo_s& sinfo)$/;"	f	class:ss_m
get_store_meta_stats	src/sm/sm_io.cpp	/^io_m::get_store_meta_stats(stid_t stid, SmStoreMetaStats& mapping)$/;"	f	class:io_m
get_store_meta_stats	src/sm/vol.cpp	/^vol_t::get_store_meta_stats(snum_t snum, SmStoreMetaStats& store_stats)$/;"	f	class:vol_t
get_store_property	src/sm/smfile.cpp	/^ss_m::get_store_property(stid_t stid, store_property_t& property)$/;"	f	class:ss_m
get_storeflags	src/sm/bf.cpp	/^w_base_t::uint4_t  bfcb_t::get_storeflags() const {$/;"	f	class:bfcb_t
get_storeflags_nocheck	src/sm/bf_s.h	/^    w_base_t::uint4_t  get_storeflags_nocheck() const { return _store_flags; }$/;"	f	class:bfcb_t
get_tclout	src/sm/smsh/shell.cpp	/^w_ostrstream &get_tclout() {$/;"	f
get_value	src/common/tid_t.h	/^    uint8_t get_value() const { return _data; }$/;"	f	class:tid_t
get_vid	src/sm/sm_io.cpp	/^io_m::get_vid(const lvid_t& lvid)$/;"	f	class:io_m
get_vols	src/sm/sm_io.cpp	/^io_m::get_vols($/;"	f	class:io_m
get_volume_meta_stats	src/sm/sm.cpp	/^ss_m::get_volume_meta_stats(vid_t vid, SmVolumeMetaStats& volume_stats, concurrency_t cc)$/;"	f	class:ss_m
get_volume_meta_stats	src/sm/sm_io.cpp	/^io_m::get_volume_meta_stats(vid_t volid, SmVolumeMetaStats& volume_stats)$/;"	f	class:io_m
get_volume_meta_stats	src/sm/vol.cpp	/^vol_t::get_volume_meta_stats(SmVolumeMetaStats& volume_stats)$/;"	f	class:vol_t
get_volume_quota	src/sm/sm.cpp	/^ss_m::get_volume_quota(const lvid_t& lvid, smksize_t& quota_KB, smksize_t& quota_used_KB)$/;"	f	class:ss_m
get_volume_quota	src/sm/sm_io.h	/^io_m::get_volume_quota($/;"	f	class:io_m
get_wait_map	src/sm/lock_x.h	/^    atomic_thread_map_t const &get_wait_map() const { return _wait_map; }$/;"	f	class:xct_lock_info_t
get_xct_t_me_node	src/sm/smthread.h	/^    queue_based_lock_t::ext_qnode& get_xct_t_me_node() {$/;"	f	class:smthread_t
get_xlist_mutex_node	src/sm/smthread.h	/^    queue_based_lock_t::ext_qnode& get_xlist_mutex_node() { $/;"	f	class:smthread_t
getcmpfunc	src/sm/smsh/sort_funcs3.cpp	/^getcmpfunc(typed_btree_test t, $/;"	f
getdebuginfo	src/sm/crash.cpp	/^getdebuginfo( $/;"	f
gethrtime	src/fc/gethrtime.cpp	/^hrtime_t gethrtime()$/;"	f
getloglevel	src/fc/errlog.h	/^    LogPriority getloglevel() { return _level; }$/;"	f	class:ErrLog
getloglevelname	src/fc/errlog.h	/^    const char * getloglevelname() {$/;"	f	class:ErrLog
getmap	src/sm/extent.h	/^extlink_t::getmap(Pmap &m) const$/;"	f	class:extlink_t
getopt	src/fc/w_getopt.cpp	/^int getopt(int argc, char* const * argv, const char* optstring)$/;"	f
gettime	src/fc/stime.cpp	/^void    stime_t::gettime()$/;"	f	class:stime_t
give_advice	config/missing	/^give_advice ()$/;"	f
give_buf	src/sm/newsort.cpp	/^limited_space::give_buf(smsize_t amt, char *where) $/;"	f	class:limited_space
give_logbuf	src/sm/xct.cpp	/^xct_t::give_logbuf(logrec_t* l, const page_p *page)$/;"	f	class:xct_t
give_stats	src/sm/xct.h	/^    void                        give_stats(sm_stats_info_t* s) {$/;"	f	class:xct_t
global_fini	src/fc/tls.cpp	/^void tls_manager::global_fini() {$/;"	f	class:tls_manager
global_histo	src/sm/log_core.cpp	/^	static histo global_histo;$/;"	m	struct:histo	file:
global_histo	src/sm/log_core.cpp	/^histo histo::global_histo;$/;"	m	class:histo	file:
global_histo_lock	src/sm/log_core.cpp	/^pthread_mutex_t global_histo_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v
global_init	src/fc/tls.cpp	/^void tls_manager::global_init() {$/;"	f	class:tls_manager
global_min_lsn	src/sm/log.h	/^    lsn_t               global_min_lsn() const { $/;"	f	class:log_m
global_min_lsn	src/sm/log.h	/^    lsn_t               global_min_lsn(lsn_t const &a) const { $/;"	f	class:log_m
global_min_lsn	src/sm/log.h	/^    lsn_t               global_min_lsn(lsn_t const &a, lsn_t const &b) const { $/;"	f	class:log_m
global_sli_enabled	src/sm/lock_core.cpp	/^static bool global_sli_enabled = false;$/;"	v	file:
global_sm_config_info	src/sm/smsh/shell.cpp	/^sm_config_info_t global_sm_config_info;$/;"	v
grab	src/sm/bf_core.cpp	/^bf_core_m::grab($/;"	f	class:bf_core_m
grab_procs	src/sm/smsh/tcl_thread.cpp	/^void grab_procs(Tcl_Interp* pip, Tcl_DString *buf)$/;"	f
grab_vars	src/sm/smsh/tcl_thread.cpp	/^void grab_vars(Tcl_Interp* pip, Tcl_DString *vars)$/;"	f
gran_map	src/sm/data_access_histogram.h	/^    typedef map< lpid_t, int >                 gran_map;$/;"	t	class:data_access_histogram
gran_map_citer	src/sm/data_access_histogram.h	/^    typedef map< lpid_t, int >::const_iterator gran_map_citer;$/;"	t	class:data_access_histogram
gran_map_iter	src/sm/data_access_histogram.h	/^    typedef map< lpid_t, int >::iterator       gran_map_iter;$/;"	t	class:data_access_histogram
granted_mode	src/sm/lock_x.h	/^    lmode_t          granted_mode;    \/\/ the mode of the granted group$/;"	m	class:lock_head_t
granted_mode_other	src/sm/lock_core.cpp	/^lock_head_t::granted_mode_other(const lock_request_t* exclude)$/;"	f	class:lock_head_t
gt	src/fc/tests/heap.cpp	/^inline bool CmpGreaterFunction<T>::gt(const T& x, const T& y) const$/;"	f	class:CmpGreaterFunction
gt	src/fc/tests/heap.cpp	/^inline bool CmpLessFunction<T>::gt(const T& x, const T& y) const$/;"	f	class:CmpLessFunction
gt	src/sm/histo.cpp	/^histoid_compare_t::gt(const pginfo_t& left, const pginfo_t& right) const$/;"	f	class:histoid_compare_t
gt	src/sm/newsort.cpp	/^run_mgr::gt(const tape_t* a, const tape_t* b) const $/;"	f	class:run_mgr
gt	src/sm/restart.h	/^CmpXctUndoLsns::gt(const xct_t* x, const xct_t* y) const$/;"	f	class:CmpXctUndoLsns
gt	src/sm/sm_base.h	/^                 gt=gtOp, ge=geOp, lt=ltOp, le=leOp };$/;"	e	enum:smlevel_0::cmp_t
gtNegInf	src/fc/w_base.h	/^    NegInf=0x100, eqNegInf, gtNegInf, geNegInf, ltNegInf, leNegInf,$/;"	e	enum:w_base_t::CompareOp
gtOp	src/fc/w_base.h	/^    badOp=0x0, eqOp=0x1, gtOp=0x2, geOp=0x3, ltOp=0x4, leOp=0x5,$/;"	e	enum:w_base_t::CompareOp
gtPosInf	src/fc/w_base.h	/^    PosInf=0x400, eqPosInf, gtPosInf, gePosInf, ltPosInf, lePosInf$/;"	e	enum:w_base_t::CompareOp
gtid	src/sm/xct.h	/^xct_t::gtid() const $/;"	f	class:xct_t
gtid_t	src/common/tid_t.h	/^typedef opaque_quantity<max_gtid_len> gtid_t;$/;"	t
h	src/common/kvl_t.h	/^    w_base_t::uint4_t        h;$/;"	m	struct:kvl_t
h	src/sm/histo.cpp	/^    histoid_t *h;$/;"	m	struct:trace_info	file:
h	src/sm/logrec.h	/^    server_handle_t         h;$/;"	m	struct:prepare_info_t
h	src/sm/rtree.h	/^    w_base_t::uint1_t   h;        \/\/ flag to indicate to apply heuristic or not$/;"	m	struct:rtld_desc_t
h_expn	src/sm/rtree.h	/^    int2_t     h_expn;    \/\/ heuristic expansion factor$/;"	m	struct:rtld_desc_t
h_fill	src/sm/rtree.h	/^    int2_t     h_fill;    \/\/ heuristic fill factor$/;"	m	struct:rtld_desc_t
hacked_qnode	src/sm/log_core.cpp	/^struct hacked_qnode $/;"	s	file:
halfword	src/sm/logrec.h	/^        fill2        halfword; \/\/ for valgrind\/purify$/;"	m	struct:chkpt_dev_tab_t::devrec_t
handle	src/sthread/sthread.h	/^        pthread_t         handle;$/;"	m	union:tatas_lock::__anon141
handle_options	src/sm/tests/create_rec.cpp	/^w_rc_t smthread_user_t::handle_options()$/;"	f	class:smthread_user_t
handle_options	src/sm/tests/log_exceed.cpp	/^w_rc_t smthread_user_t::handle_options()$/;"	f	class:smthread_user_t
handle_options	src/sm/tests/mrbtrees_test.cpp	/^w_rc_t smthread_main_t::handle_options()$/;"	f	class:smthread_main_t
handle_options	src/sm/tests/rtree_example.cpp	/^w_rc_t smthread_user_t::handle_options()$/;"	f	class:smthread_user_t
handle_options	src/sm/tests/sort_stream.cpp	/^w_rc_t smthread_user_t::handle_options()$/;"	f	class:smthread_user_t
handle_options	src/sm/tests/vtable_example.cpp	/^w_rc_t smthread_user_t::handle_options()$/;"	f	class:smthread_user_t
harvest	src/sthread/tests/except.cpp	/^void harvest(int threads)$/;"	f
harvest	src/sthread/tests/thread3.cpp	/^void harvest(int threads)$/;"	f
hasExited	src/common/tests/latch1.cpp	/^    bool                  hasExited;$/;"	m	class:latch_thread_t	file:
hasExited	src/sm/smsh/tcl_thread.h	/^    volatile bool                hasExited;$/;"	m	class:tcl_thread_t
hasMode	src/sthread/sdisk.cpp	/^bool    sdisk_t::hasMode(int mode, int wanted)$/;"	f	class:sdisk_t
hasOption	src/sthread/sdisk.cpp	/^bool    sdisk_t::hasOption(int mode, int wanted)$/;"	f	class:sdisk_t
has_name	src/sm/smsh/tcl_thread.cpp	/^    bool  has_name(const char *nm) const  $/;"	f	class:barrier_t
has_partitions	src/sm/sdesc.h	/^    inline bool has_partitions() { return _partitions_filled; }$/;"	f	class:sdesc_t
has_reader	src/sm/smthread.h	/^    bool has_reader() const {$/;"	f	class:atomic_thread_map_t
has_reader	src/sthread/srwlock.h	/^    bool has_reader() const { return !_is_plp && (*&_holders & ~WRITER); }$/;"	f	class:mcs_rwlock
has_writer	src/sm/smthread.h	/^    bool has_writer() const {$/;"	f	class:atomic_thread_map_t
has_writer	src/sthread/srwlock.h	/^    bool has_writer() const { return !_is_plp && (*&_holders & WRITER); }$/;"	f	class:mcs_rwlock
hash	src/common/regex2.h	/^    uch hash;        \/* hash code *\/$/;"	m	struct:__anon9
hash	src/fc/tests/cuckoo.cpp	/^hash(int h, bfpid_t const &pid) $/;"	f
hash	src/sm/bf_htab.h	/^    unsigned hash(int h, bfpid_t const &pid) const {$/;"	f	class:bf_core_m::htab
hash	src/sm/bf_s.h	/^    int4_t       hash() const { return _hash;}$/;"	f	class:bfcb_t
hash	src/sm/lock_s_inline.h	/^lockid_t::hash() const$/;"	f	class:lockid_t
hash1_DEPENDENCIES	src/fc/tests/Makefile	/^hash1_DEPENDENCIES = ..\/libfc.a $(LOCALLDADD)$/;"	m
hash1_LDADD	src/fc/tests/Makefile	/^hash1_LDADD = $(LDADD)$/;"	m
hash1_OBJECTS	src/fc/tests/Makefile	/^hash1_OBJECTS = $(am_hash1_OBJECTS)$/;"	m
hash1_SOURCES	src/fc/tests/Makefile	/^hash1_SOURCES = hash1.cpp$/;"	m
hash2	src/fc/w_hashing.h	/^class hash2 {$/;"	c	namespace:w_hashing
hash2_DEPENDENCIES	src/fc/tests/Makefile	/^hash2_DEPENDENCIES = ..\/libfc.a $(LOCALLDADD)$/;"	m
hash2_LDADD	src/fc/tests/Makefile	/^hash2_LDADD = $(LDADD)$/;"	m
hash2_OBJECTS	src/fc/tests/Makefile	/^hash2_OBJECTS = $(am_hash2_OBJECTS)$/;"	m
hash2_SOURCES	src/fc/tests/Makefile	/^hash2_SOURCES = hash2.cpp$/;"	m
hash_func	src/sm/bf_s.h	/^    int4_t       hash_func() const { return _hash_func; }$/;"	f	class:bfcb_t
hash_link	src/fc/errlog_s.h	/^    w_link_t    hash_link;$/;"	m	struct:ErrLogInfo
have	src/sthread/tests/thread1.cpp	/^	int	have;$/;"	m	class:wait_for_t	file:
have_boxes	src/sm/smsh/shell.cpp	/^        bool        have_boxes;$/;"	m	struct:BoxMinder	file:
hcmp	src/fc/nbox.cpp	/^int nbox_t::hcmp(const nbox_t& other, const nbox_t& universe, int level) const$/;"	f	class:nbox_t
hdr	src/sm/file_s.h	/^inline const char* record_t::hdr() const$/;"	f	class:record_t
hdr	src/sm/newsort.cpp	/^object_t::hdr(smsize_t offset) const$/;"	f	class:object_t
hdr	src/sm/pin.h	/^    const char*      hdr() const$/;"	f	class:pin_i
hdr	src/sm/sort.cpp	/^    char* hdr;          \/\/ pointer to header$/;"	m	struct:file_sort_key_t	file:
hdr_bs	src/sm/sm_du_stats.h	/^    base_stat_t        hdr_bs;         \/* hdr overhead on large data pages *\/$/;"	m	struct:lgdata_pg_stats_t
hdr_bs	src/sm/sm_du_stats.h	/^    base_stat_t        hdr_bs;        \/* page header (overhead) *\/$/;"	m	struct:btree_lf_stats_t
hdr_bs	src/sm/sm_du_stats.h	/^    base_stat_t        hdr_bs;$/;"	m	struct:file_pg_stats_t
hdr_ext_cnt	src/sm/sm_du_stats.h	/^    base_stat_t        hdr_ext_cnt;        \/* header & extent maps *\/$/;"	m	struct:volume_hdr_stats_t
hdr_exts	src/sm/vol.h	/^    extnum_t         hdr_exts() const {  return _hdr_exts; }$/;"	f	class:volhdr_t
hdr_len	src/sm/file_s.h	/^    uint2_t    hdr_len;    \/\/ length of user header $/;"	m	struct:rectag_t
hdr_page_data	src/sm/pin.cpp	/^const char* pin_i::hdr_page_data()$/;"	f	class:pin_i
hdr_pages	src/sm/vol.h	/^    extnum_t         hdr_pages() const {  return _hdr_pages; }$/;"	f	class:volhdr_t
hdr_s	src/sm/keyed.h	/^    struct hdr_s {$/;"	s	class:keyrec_t
hdr_size	src/sm/file_s.h	/^inline smsize_t record_t::hdr_size() const$/;"	f	class:record_t
hdr_size	src/sm/newsort.cpp	/^    smsize_t hdr_size() const {$/;"	f	class:blob
hdr_size	src/sm/page.h	/^    static smsize_t                hdr_size() {$/;"	f	class:page_p
hdr_size	src/sm/pin.h	/^    smsize_t   hdr_size() const   { _check_lsn(); return _rec->hdr_size();}$/;"	f	class:pin_i
hdr_size	src/sm/sort_s.h	/^    smsize_t    hdr_size() const { return _hdrlen; }$/;"	f	class:ssm_sort::object_t
hdr_stats	src/sm/file.cpp	/^file_p::hdr_stats(file_pg_stats_t& file_pg_stats)$/;"	f	class:file_p
hdr_sz	src/sm/logrec.h	/^        hdr_sz = ($/;"	e	enum:logrec_t::__anon40
hdr_sz	src/sm/page_s.h	/^        hdr_sz = (_hdr_sz + static_align<footer_sz>::value),$/;"	e	enum:page_s::__anon78
hdrsize	src/sm/newsort.cpp	/^    smsize_t         hdrsize() const { return smsize_t(__persistent_part._hdrsize); }$/;"	f	class:meta_header_t
head	src/sm/extent.h	/^    extnum_t            head;$/;"	m	struct:stnode_t
head	src/sm/logrec.cpp	/^    extnum_t        head;$/;"	m	struct:free_ext_list_t	file:
head	src/sm/sort.h	/^    s_chunk* head;$/;"	m	class:chunk_mgr_t
head	tools/stats.pl	/^sub head {$/;"	s
head_mutex	src/sm/lock_x.h	/^    my_lock             head_mutex;        \/\/ serialize access to lock_head_t$/;"	m	class:lock_head_t
heap	src/sm/sort.h	/^    int2_t*           heap;           \/\/ heap array$/;"	m	class:sort_stream_i
heap_DEPENDENCIES	src/fc/tests/Makefile	/^heap_DEPENDENCIES = ..\/libfc.a $(LOCALLDADD)$/;"	m
heap_LDADD	src/fc/tests/Makefile	/^heap_LDADD = $(LDADD)$/;"	m
heap_OBJECTS	src/fc/tests/Makefile	/^heap_OBJECTS = $(am_heap_OBJECTS)$/;"	m
heap_SOURCES	src/fc/tests/Makefile	/^heap_SOURCES = heap.cpp$/;"	m
heap_size	src/sm/sort.h	/^    int               heap_size;     \/\/ heap size$/;"	m	class:sort_stream_i
heap_top	src/sm/sort.cpp	/^heap_top(int2_t heap[], int heap_size, int winner, run_scan_t sc[])$/;"	f	file:
height	src/sm/btree_bl.cpp	/^    uint2_t        height()        { return _height; }$/;"	f	class:btsink_t
height	src/sm/rtree.cpp	/^    uint2_t height;$/;"	m	class:rtld_stk_t	file:
held_by_me	src/common/latch.cpp	/^latch_t::held_by_me() const $/;"	f	class:latch_t
helper	src/fc/block_alloc.cpp	/^struct blob_pool::helper {$/;"	s	class:blob_pool	file:
helper	src/fc/cpu_info.h	/^	helper() {$/;"	f	struct:cpu_info::helper
helper	src/fc/cpu_info.h	/^    struct helper {$/;"	s	struct:cpu_info
heuristic_cut	src/sm/rtree.cpp	/^heuristic_cut($/;"	f	file:
hi	src/common/lsn.h	/^    w_base_t::uint4_t hi()   const  { return file(); }$/;"	f	class:lsn_t
high	src/common/lid_t.h	/^    uint4_t high;$/;"	m	struct:lvid_t
high	src/sm/newsort.cpp	/^    int high() const{ return _high; }        \/\/ lgst # runs on any tape$/;"	f	class:phase_mgr
hilbert	src/sm/newsort.cpp	/^hilbert ($/;"	f	file:
hilbert_cooky	src/sm/newsort.cpp	/^struct hilbert_cooky {$/;"	s	file:
hires	src/fc/tests/ntime.cpp	/^int    hires;$/;"	v
hist_RANGE_DOESNT_EXIST	src/sm/data_access_histogram.h	/^    hist_RANGE_DOESNT_EXIST            = 0x830008$/;"	e	enum:__anon11
hist_ROOT_DOESNT_EXIST	src/sm/data_access_histogram.h	/^    hist_ROOT_DOESNT_EXIST             = 0x830007,$/;"	e	enum:__anon11
histo	src/sm/log_core.cpp	/^struct histo {$/;"	s	file:
histo_ext_cache_erase	src/sm/vol.cpp	/^void vol_t::histo_ext_cache_erase(snum_t s) const $/;"	f	class:vol_t
histo_ext_cache_find	src/sm/vol.cpp	/^vol_t::histo_ext_cache_find(extnum_t ext) const $/;"	f	class:vol_t
histo_ext_cache_update	src/sm/vol.cpp	/^void vol_t::histo_ext_cache_update(extnum_t ext, snum_t s) const $/;"	f	class:vol_t
histo_extent_cache	src/sm/vol.h	/^    typedef std::list<ext2store_entry > histo_extent_cache;$/;"	t	class:vol_t
histo_pin_if_pinned	src/sm/histo.cpp	/^static bool histo_pin_if_pinned(int volatile* refcount) {$/;"	f	file:
histogram	src/sm/histo.h	/^    store_histo_t            histogram;$/;"	m	class:histoid_t
histograms	src/sthread/tests/thread2.cpp	/^bool	histograms = false;$/;"	v
histoid_compare_t	src/sm/histo.h	/^    NORET histoid_compare_t(stid_t&s): key(s) { }$/;"	f	class:histoid_compare_t
histoid_compare_t	src/sm/histo.h	/^class histoid_compare_t $/;"	c
histoid_me	src/sm/histo.cpp	/^static __thread queue_based_lock_t::ext_qnode histoid_me = QUEUE_EXT_QNODE_INITIALIZER;$/;"	v	file:
histoid_remove_t	src/sm/histo.cpp	/^histoid_remove_t::histoid_remove_t(file_p &pg)$/;"	f	class:histoid_remove_t
histoid_remove_t	src/sm/histo.h	/^class histoid_remove_t $/;"	c
histoid_t	src/sm/histo.cpp	/^histoid_t::histoid_t (stid_t s)$/;"	f	class:histoid_t
histoid_t	src/sm/histo.h	/^class histoid_t: public smlevel_0 $/;"	c
histoid_update_t	src/sm/histo.cpp	/^histoid_update_t::histoid_update_t(file_p& pg)$/;"	f	class:histoid_update_t
histoid_update_t	src/sm/histo.cpp	/^histoid_update_t::histoid_update_t(sdesc_t *sd)$/;"	f	class:histoid_update_t
histoid_update_t	src/sm/histo.h	/^class histoid_update_t $/;"	c
hiwater	src/fc/w_temp_alloc.h	/^        size_t hiwater;$/;"	m	struct:w_temp_alloc::pool
hlen	src/sm/sort.cpp	/^    uint2_t hlen;         \/\/ record header length$/;"	m	struct:file_sort_key_t	file:
hog_last_pid	src/sm/sdesc.h	/^    shpid_t    hog_last_pid() const { return *&_last_pid; }$/;"	f	class:sdesc_t
holder_list	src/common/latch.cpp	/^    holder_list(latch_holder_t* &first) : _first(first) { }$/;"	f	class:holder_list
holder_list	src/common/latch.cpp	/^class holder_list $/;"	c	file:
holder_list_list	src/common/latch.cpp	/^static holder_list_list_t holder_list_list;$/;"	v	file:
holder_list_list_lock	src/common/latch.cpp	/^static queue_based_block_lock_t    holder_list_list_lock;$/;"	v	file:
holder_list_list_t	src/common/latch.cpp	/^typedef std::map<sthread_t*, latch_holder_t**> holder_list_list_t;$/;"	t	file:
holder_search	src/common/latch.cpp	/^    holder_search(latch_t const* l)$/;"	f	class:holder_search
holder_search	src/common/latch.cpp	/^class holder_search $/;"	c	file:
holder_type_t	src/sthread/sthread.h	/^    } holder_type_t;$/;"	t	struct:tatas_lock	typeref:union:tatas_lock::__anon141
holders_print	src/common/latch.cpp	/^    holders_print(latch_holder_t *list) $/;"	f	class:holders_print
holders_print	src/common/latch.cpp	/^class  holders_print $/;"	c	file:
host	Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	config/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	src/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	src/atomic_ops/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	src/atomic_ops/asm_linkage/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	src/atomic_ops/asm_linkage/usr/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	src/atomic_ops/asm_linkage/usr/src/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	src/atomic_ops/atomic_ops/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	src/atomic_ops/atomic_ops/amd64/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	src/atomic_ops/atomic_ops/i386/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	src/atomic_ops/atomic_ops/sparc/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	src/atomic_ops/ia32/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	src/atomic_ops/ia32/sys/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	src/atomic_ops/intel/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	src/atomic_ops/intel/ia32/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	src/atomic_ops/intel/ia32/sys/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	src/atomic_ops/intel/sys/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	src/atomic_ops/sparc/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	src/atomic_ops/sparc/sys/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	src/common/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	src/common/tests/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	src/fc/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	src/fc/tests/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	src/sm/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	src/sm/smsh/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	src/sm/smsh/lib/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	src/sm/smsh/scripts/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	src/sm/tests/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	src/sthread/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	src/sthread/tests/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host	tools/Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host_alias	Makefile	/^host_alias = $/;"	m
host_alias	config/Makefile	/^host_alias = $/;"	m
host_alias	src/Makefile	/^host_alias = $/;"	m
host_alias	src/atomic_ops/Makefile	/^host_alias = $/;"	m
host_alias	src/atomic_ops/asm_linkage/Makefile	/^host_alias = $/;"	m
host_alias	src/atomic_ops/asm_linkage/usr/Makefile	/^host_alias = $/;"	m
host_alias	src/atomic_ops/asm_linkage/usr/src/Makefile	/^host_alias = $/;"	m
host_alias	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^host_alias = $/;"	m
host_alias	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^host_alias = $/;"	m
host_alias	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^host_alias = $/;"	m
host_alias	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^host_alias = $/;"	m
host_alias	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^host_alias = $/;"	m
host_alias	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^host_alias = $/;"	m
host_alias	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^host_alias = $/;"	m
host_alias	src/atomic_ops/atomic_ops/Makefile	/^host_alias = $/;"	m
host_alias	src/atomic_ops/atomic_ops/amd64/Makefile	/^host_alias = $/;"	m
host_alias	src/atomic_ops/atomic_ops/i386/Makefile	/^host_alias = $/;"	m
host_alias	src/atomic_ops/atomic_ops/sparc/Makefile	/^host_alias = $/;"	m
host_alias	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^host_alias = $/;"	m
host_alias	src/atomic_ops/ia32/Makefile	/^host_alias = $/;"	m
host_alias	src/atomic_ops/ia32/sys/Makefile	/^host_alias = $/;"	m
host_alias	src/atomic_ops/intel/Makefile	/^host_alias = $/;"	m
host_alias	src/atomic_ops/intel/ia32/Makefile	/^host_alias = $/;"	m
host_alias	src/atomic_ops/intel/ia32/sys/Makefile	/^host_alias = $/;"	m
host_alias	src/atomic_ops/intel/sys/Makefile	/^host_alias = $/;"	m
host_alias	src/atomic_ops/sparc/Makefile	/^host_alias = $/;"	m
host_alias	src/atomic_ops/sparc/sys/Makefile	/^host_alias = $/;"	m
host_alias	src/common/Makefile	/^host_alias = $/;"	m
host_alias	src/common/tests/Makefile	/^host_alias = $/;"	m
host_alias	src/fc/Makefile	/^host_alias = $/;"	m
host_alias	src/fc/tests/Makefile	/^host_alias = $/;"	m
host_alias	src/sm/Makefile	/^host_alias = $/;"	m
host_alias	src/sm/smsh/Makefile	/^host_alias = $/;"	m
host_alias	src/sm/smsh/lib/Makefile	/^host_alias = $/;"	m
host_alias	src/sm/smsh/scripts/Makefile	/^host_alias = $/;"	m
host_alias	src/sm/tests/Makefile	/^host_alias = $/;"	m
host_alias	src/sthread/Makefile	/^host_alias = $/;"	m
host_alias	src/sthread/tests/Makefile	/^host_alias = $/;"	m
host_alias	tools/Makefile	/^host_alias = $/;"	m
host_cpu	Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	config/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	src/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	src/atomic_ops/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	src/atomic_ops/asm_linkage/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	src/atomic_ops/asm_linkage/usr/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	src/atomic_ops/asm_linkage/usr/src/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	src/atomic_ops/atomic_ops/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	src/atomic_ops/atomic_ops/amd64/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	src/atomic_ops/atomic_ops/i386/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	src/atomic_ops/atomic_ops/sparc/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	src/atomic_ops/ia32/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	src/atomic_ops/ia32/sys/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	src/atomic_ops/intel/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	src/atomic_ops/intel/ia32/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	src/atomic_ops/intel/ia32/sys/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	src/atomic_ops/intel/sys/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	src/atomic_ops/sparc/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	src/atomic_ops/sparc/sys/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	src/common/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	src/common/tests/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	src/fc/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	src/fc/tests/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	src/sm/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	src/sm/smsh/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	src/sm/smsh/lib/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	src/sm/smsh/scripts/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	src/sm/tests/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	src/sthread/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	src/sthread/tests/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	tools/Makefile	/^host_cpu = x86_64$/;"	m
host_os	Makefile	/^host_os = linux-gnu$/;"	m
host_os	config/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/atomic_ops/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/atomic_ops/asm_linkage/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/atomic_ops/asm_linkage/usr/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/atomic_ops/asm_linkage/usr/src/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/atomic_ops/atomic_ops/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/atomic_ops/atomic_ops/amd64/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/atomic_ops/atomic_ops/i386/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/atomic_ops/atomic_ops/sparc/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/atomic_ops/ia32/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/atomic_ops/ia32/sys/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/atomic_ops/intel/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/atomic_ops/intel/ia32/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/atomic_ops/intel/ia32/sys/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/atomic_ops/intel/sys/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/atomic_ops/sparc/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/atomic_ops/sparc/sys/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/common/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/common/tests/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/fc/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/fc/tests/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/sm/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/sm/smsh/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/sm/smsh/lib/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/sm/smsh/scripts/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/sm/tests/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/sthread/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/sthread/tests/Makefile	/^host_os = linux-gnu$/;"	m
host_os	tools/Makefile	/^host_os = linux-gnu$/;"	m
host_triplet	Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	config/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	src/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	src/atomic_ops/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	src/atomic_ops/asm_linkage/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	src/atomic_ops/asm_linkage/usr/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	src/atomic_ops/asm_linkage/usr/src/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	src/atomic_ops/atomic_ops/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	src/atomic_ops/atomic_ops/amd64/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	src/atomic_ops/atomic_ops/i386/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	src/atomic_ops/atomic_ops/sparc/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	src/atomic_ops/ia32/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	src/atomic_ops/ia32/sys/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	src/atomic_ops/intel/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	src/atomic_ops/intel/ia32/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	src/atomic_ops/intel/ia32/sys/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	src/atomic_ops/intel/sys/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	src/atomic_ops/sparc/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	src/atomic_ops/sparc/sys/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	src/common/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	src/common/tests/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	src/fc/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	src/fc/tests/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	src/sm/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	src/sm/smsh/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	src/sm/smsh/lib/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	src/sm/smsh/scripts/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	src/sm/tests/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	src/sthread/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	src/sthread/tests/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	tools/Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
host_vendor	Makefile	/^host_vendor = unknown$/;"	m
host_vendor	config/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	src/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	src/atomic_ops/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	src/atomic_ops/asm_linkage/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	src/atomic_ops/asm_linkage/usr/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	src/atomic_ops/asm_linkage/usr/src/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	src/atomic_ops/atomic_ops/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	src/atomic_ops/atomic_ops/amd64/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	src/atomic_ops/atomic_ops/i386/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	src/atomic_ops/atomic_ops/sparc/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	src/atomic_ops/ia32/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	src/atomic_ops/ia32/sys/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	src/atomic_ops/intel/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	src/atomic_ops/intel/ia32/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	src/atomic_ops/intel/ia32/sys/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	src/atomic_ops/intel/sys/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	src/atomic_ops/sparc/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	src/atomic_ops/sparc/sys/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	src/common/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	src/common/tests/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	src/fc/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	src/fc/tests/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	src/sm/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	src/sm/smsh/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	src/sm/smsh/lib/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	src/sm/smsh/scripts/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	src/sm/tests/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	src/sthread/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	src/sthread/tests/Makefile	/^host_vendor = unknown$/;"	m
host_vendor	tools/Makefile	/^host_vendor = unknown$/;"	m
hotbit	src/sm/bf_s.h	/^    int4_t      hotbit() const { return _hotbit; }$/;"	f	class:bfcb_t
hq	src/sm/log_core.cpp	/^	hacked_qnode hq;$/;"	m	union:__anon89	file:
hrtime_t	src/fc/gethrtime.h	/^typedef long hrtime_t;$/;"	t
hrtime_t	src/fc/gethrtime.h	/^typedef long long hrtime_t;$/;"	t
htab	src/sm/bf_htab.h	/^    NORET   htab(int i) : _size(i) , _avg(0), _max_limit(0)$/;"	f	class:bf_core_m::htab
htab	src/sm/bf_htab.h	/^class bf_core_m::htab $/;"	c	class:bf_core_m
htab	src/sm/histo.cpp	/^w_hash_t<histoid_t, occ_rwlock, stid_t> *    histoid_t::htab = NULL;$/;"	m	class:histoid_t	file:
htab	src/sm/histo.h	/^    static w_hash_t<histoid_t, occ_rwlock, stid_t> *    htab;$/;"	m	class:histoid_t
htab_DEPENDENCIES	src/sm/tests/Makefile	/^htab_DEPENDENCIES = $(top_builddir)\/src\/sm\/libsm.a \\$/;"	m
htab_LDADD	src/sm/tests/Makefile	/^htab_LDADD = $(LDADD)$/;"	m
htab_OBJECTS	src/sm/tests/Makefile	/^htab_OBJECTS = $(am_htab_OBJECTS)$/;"	m
htab_SOURCES	src/sm/tests/Makefile	/^htab_SOURCES = htab.cpp$/;"	m
htab_count	src/sm/bf_htab_test.cpp	/^void htab_count(bf_core_m *core, int &frames, int &slots)$/;"	f
htab_dumplocks	src/sm/bf_htab_test.cpp	/^void htab_dumplocks(bf_core_m *core)$/;"	f
htab_insert	src/sm/bf_htab_test.cpp	/^bfcb_t* htab_insert(bf_core_m *core, bfpid_t const &pid, bf_core_m::Tstats &s) $/;"	f
htab_lookup	src/sm/bf_htab_test.cpp	/^bfcb_t* htab_lookup(bf_core_m *core, bfpid_t const &pid,$/;"	f
htab_mutex	src/sm/histo.cpp	/^occ_rwlock                  histoid_t::htab_mutex;$/;"	m	class:histoid_t	file:
htab_mutex	src/sm/histo.h	/^    static occ_rwlock        htab_mutex;$/;"	m	class:histoid_t
htab_mutex_writer	src/sm/histo.cpp	/^queue_based_block_lock_t    histoid_t::htab_mutex_writer;$/;"	m	class:histoid_t	file:
htab_mutex_writer	src/sm/histo.h	/^    static queue_based_block_lock_t   htab_mutex_writer;$/;"	m	class:histoid_t
htab_remove	src/sm/bf_htab_test.cpp	/^bool htab_remove(bf_core_m *core, bfpid_t const &pid, bf_core_m::Tstats &s) $/;"	f
htab_stats	src/sm/bf.cpp	/^bf_m::htab_stats(bf_htab_stats_t &out) const$/;"	f	class:bf_m
htab_stats	src/sm/bf_core.cpp	/^bf_core_m::htab_stats(bf_htab_stats_t &out) const$/;"	f	class:bf_core_m
htab_tester	src/sm/tests/htab.cpp	/^    htab_tester(int i, signed48_t pb, uint2_t v, uint    s) : $/;"	f	class:htab_tester
htab_tester	src/sm/tests/htab.cpp	/^class htab_tester : public smthread_t$/;"	c	file:
htmldir	Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	config/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/atomic_ops/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/atomic_ops/asm_linkage/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/atomic_ops/asm_linkage/usr/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/atomic_ops/asm_linkage/usr/src/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/atomic_ops/atomic_ops/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/atomic_ops/atomic_ops/amd64/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/atomic_ops/atomic_ops/i386/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/atomic_ops/atomic_ops/sparc/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/atomic_ops/ia32/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/atomic_ops/ia32/sys/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/atomic_ops/intel/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/atomic_ops/intel/ia32/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/atomic_ops/intel/ia32/sys/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/atomic_ops/intel/sys/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/atomic_ops/sparc/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/atomic_ops/sparc/sys/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/common/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/common/tests/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/fc/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/fc/tests/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/sm/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/sm/smsh/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/sm/smsh/lib/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/sm/smsh/scripts/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/sm/tests/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/sthread/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/sthread/tests/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	tools/Makefile	/^htmldir = ${docdir}$/;"	m
hton	src/common/w_opaque.h	/^    void          hton()  {$/;"	f	class:opaque_quantity
htsz	src/fc/tests/hash1.cpp	/^const int htsz = 3;$/;"	v
htsz	src/fc/tests/hash2.cpp	/^const int htsz = 3;$/;"	v
hvalue	src/fc/nbox.cpp	/^int nbox_t::hvalue(const nbox_t& universe, int level) const$/;"	f	class:nbox_t
hwm	src/common/tid_t.h	/^    enum { hwm = max_uint4 };$/;"	e	enum:tid_t::__anon7
i	src/fc/tests/container.cpp	/^        int  i() const { return _i; }$/;"	f	struct:THING
i	src/fc/tests/findprime.cpp	/^    long i;$/;"	m	union:pun	file:
i	src/fc/tests/hash1.cpp	/^    int         i;$/;"	m	struct:element_t	file:
i	src/fc/tests/hash2.cpp	/^    int         i;$/;"	m	struct:elem_t	file:
i	src/fc/tests/list1.cpp	/^    int         i;$/;"	m	struct:elem1_t	file:
i	src/fc/tests/list2.cpp	/^    int         i;$/;"	m	struct:elem2_t	file:
i	src/fc/tests/list3.cpp	/^    int         i;$/;"	m	struct:elem3_t	file:
i	src/fc/tests/test_stat_struct_gen.h	/^ w_base_t::base_stat_t i;$/;"	v
i	src/fc/w_stat.h	/^        w_base_t::base_stat_t   i;$/;"	m	union:w_stat_t::__anon109
i	src/sm/sm_s.h	/^        i = 'i',                \/\/ integer (1,2,4)$/;"	e	enum:key_type_s::type_t
i	src/sm/sort.h	/^    int2_t   i;           \/\/ toggle between two pages$/;"	m	class:run_scan_t
i	src/sm/tests/file_scan_many.cpp	/^    int i;$/;"	m	class:smthread_creator_t	file:
i1_cmp	src/sm/smsh/shell2.cpp	/^int i1_cmp(const void *_p, const void *_q) $/;"	f
i1_lex	src/sm/newsort.cpp	/^w_rc_t sort_keys_t::i1_lex(const void *d, smsize_t , void * res){$/;"	f	class:sort_keys_t
i1_num	src/sm/smsh/shell.h	/^    int1_t  i1_num;$/;"	m	union:typed_value::__anon75
i2_cmp	src/sm/smsh/shell2.cpp	/^int i2_cmp(const void *_p, const void *_q) $/;"	f
i2_lex	src/sm/newsort.cpp	/^w_rc_t sort_keys_t::i2_lex(const void *d, smsize_t , void * res){$/;"	f	class:sort_keys_t
i2_num	src/sm/smsh/shell.h	/^    int2_t  i2_num;$/;"	m	union:typed_value::__anon75
i2info	src/sm/tests/htab.cpp	/^    pidinfo &i2info(int i) { return pid2info(i2pid(i)); }$/;"	f	class:htab_tester
i2pid	src/sm/tests/htab.cpp	/^    lpid_t &i2pid(int i) { return _i2pid[i]; }$/;"	f	class:htab_tester
i4_cmp	src/sm/smsh/shell2.cpp	/^int i4_cmp(const void *_p, const void *_q) $/;"	f
i4_lex	src/sm/newsort.cpp	/^w_rc_t sort_keys_t::i4_lex(const void *d, smsize_t , void * res){$/;"	f	class:sort_keys_t
i4_num	src/sm/smsh/shell.h	/^    int4_t  i4_num;$/;"	m	union:typed_value::__anon75
i8	src/fc/tests/findsizes.cpp	/^typedef w_base_t::int8_t i8;$/;"	t	file:
i8_cmp	src/sm/smsh/shell2.cpp	/^int i8_cmp(const void *_p, const void *_q) $/;"	f
i8_lex	src/sm/newsort.cpp	/^w_rc_t sort_keys_t::i8_lex(const void *d, smsize_t , void * res){$/;"	f	class:sort_keys_t
i8_num	src/sm/smsh/shell.h	/^    w_base_t::int8_t  i8_num;$/;"	m	union:typed_value::__anon75
id	src/common/devid_t.h	/^    w_base_t::uint8_t    id;$/;"	m	struct:devid_t
id	src/common/latch.h	/^    inline const void *     id() const { return &_lock; } $/;"	f	class:latch_t
id	src/fc/tests/darray.cpp	/^    int id;$/;"	m	struct:foo	file:
id	src/sm/device.h	/^    devid_t    id;        \/\/ unique device id since name may$/;"	m	struct:device_s
id	src/sthread/sthread.h	/^    const id_t        id;$/;"	m	class:sthread_t
id	src/sthread/tests/except.cpp	/^	int	id;$/;"	m	class:except_thread_t	file:
id	src/sthread/tests/thread1.cpp	/^	int		id;$/;"	m	class:pong_thread_t	file:
id	src/sthread/tests/thread3.cpp	/^	int id;$/;"	m	class:float_thread_t	file:
id	src/sthread/tests/thread3.cpp	/^	int id;$/;"	m	class:int_thread_t	file:
id_t	src/sthread/sthread.h	/^    typedef w_thread_id_t id_t;$/;"	t	class:sthread_base_t
ident	src/fc/errlog.h	/^    const char * ident() { $/;"	f	class:ErrLog
idx	src/sm/logrec.cpp	/^    int2_t                 idx;        \/\/ slot affected$/;"	m	struct:page_splice_t	file:
idx	src/sm/logrec.cpp	/^    int2_t                 idx;        \/\/ slot affected$/;"	m	struct:page_splicez_t	file:
idx	src/sm/logrec.cpp	/^    int2_t        idx;$/;"	m	class:page_insert_t	file:
idx	src/sm/logrec.cpp	/^    int2_t        idx;$/;"	m	struct:btree_insert_t	file:
idx	src/sm/logrec.cpp	/^    int2_t        idx;$/;"	m	struct:rtree_insert_t	file:
idx	src/sm/logrec.cpp	/^    int2_t idx;$/;"	m	class:page_mark_t	file:
idx	src/sm/logrec.cpp	/^    uint2_t       idx;$/;"	m	struct:page_set_byte_t	file:
idx	src/sm/rtree_p.h	/^    int2_t    idx;$/;"	m	class:rt_cursor_t
idx	src/sm/rtree_p.h	/^    int2_t idx;$/;"	m	struct:rtstk_entry
idx	src/sm/rtree_p.h	/^    int2_t idx;$/;"	m	struct:wrk_branch_t
idx	src/sthread/tests/thread2.cpp	/^	int	idx;$/;"	m	class:cpu_thread_t	file:
idx	src/sthread/tests/thread2.cpp	/^	int	idx;$/;"	m	class:io_thread_t	file:
idx1	src/sm/logrec.cpp	/^    int2_t                 idx1;        \/\/ first slot affected$/;"	m	class:page_shift_t	file:
idx2	src/sm/logrec.cpp	/^    int2_t                 idx2;        \/\/ second slot affected$/;"	m	class:page_shift_t	file:
ieee	src/fc/tests/rand.cpp	/^    w_ieee_double ieee;$/;"	m	union:__anon132	file:
ifid	src/sm/newsort.cpp	/^    const stid_t& ifid() { return _ifid; }$/;"	f	class:ssm_sort::run_mgr
iflags	src/common/regex2.h	/^    int iflags;        \/* internal flags *\/$/;"	m	struct:re_guts
ikeysize	src/sm/newsort.cpp	/^    smsize_t         ikeysize() const { return smsize_t(__persistent_part._ikeysize); }$/;"	f	class:meta_header_t
image	src/sm/logrec.cpp	/^    char image[sizeof(page_s)];$/;"	m	struct:page_image_t	file:
impl_helper	src/fc/cpu_info.cpp	/^struct cpu_info::impl_helper {$/;"	s	class:cpu_info	file:
in	src/fc/rand48.cpp	/^void in(ifstream& i, unsigned48_t& res)$/;"	f
in_hdr	src/sm/newsort.cpp	/^    bool in_hdr;$/;"	m	struct:hilbert_cooky	file:
in_hdr	src/sm/sort_s.h	/^    bool       in_hdr;$/;"	m	struct:ssm_sort::generic_CSKF_cookie
in_hdr	src/sm/sort_s.h	/^    bool     in_hdr(int i) const {$/;"	f	class:ssm_sort::sort_keys_t
in_quark_scope	src/sm/lock_x.h	/^    bool             in_quark_scope() const {return _quark_marker != 0;}$/;"	f	class:xct_lock_info_t
in_recovery	src/sm/sm_base.h	/^    static bool in_recovery() { $/;"	f	class:smlevel_0
in_recovery_analysis	src/sm/sm_base.h	/^    static bool in_recovery_analysis() { $/;"	f	class:smlevel_0
in_recovery_redo	src/sm/sm_base.h	/^    static bool in_recovery_redo() { $/;"	f	class:smlevel_0
in_recovery_undo	src/sm/sm_base.h	/^    static bool in_recovery_undo() { $/;"	f	class:smlevel_0
in_sm	src/sm/smthread.h	/^    void             in_sm(bool in)    { tcb()._in_sm = in; }$/;"	f	class:smthread_t
in_xct	src/sm/prologue.h	/^        in_xct,          \/\/ must be active and not prepared$/;"	e	enum:prologue_rc_t::xct_state_t
inbound	src/sm/btcursor.cpp	/^bt_cursor_t::inbound($/;"	f	class:bt_cursor_t
inbounds	src/sm/btcursor.cpp	/^bt_cursor_t::inbounds($/;"	f	class:bt_cursor_t
inc	src/fc/tests/test_stat.cpp	/^test_stat::inc() $/;"	f	class:test_stat
inc_access_count	src/sm/data_access_histogram.cpp	/^w_rc_t data_access_histogram::inc_access_count(const lpid_t& root, const Key& key)$/;"	f	class:data_access_histogram
inc_acquire_1thread_log_depth	src/sm/xct.h	/^    void inc_acquire_1thread_log_depth() { _acquire_1thread_log_depth ++; }$/;"	f	class:xct_t
inc_acquire_1thread_log_depth	src/sm/xct.h	/^    void inc_acquire_1thread_log_depth() { }$/;"	f	class:xct_t
inc_age	src/sm/data_access_histogram.cpp	/^void data_access_histogram::inc_age() {$/;"	f	class:data_access_histogram
inc_count	src/sm/lock_x.h	/^    int               inc_count() { return ++_ref_count; }$/;"	f	class:lock_request_t
inc_count_get	src/sm/newsort.cpp	/^    void  inc_count_get() { _count_get++; }$/;"	f	class:tape_t
inc_count_put	src/sm/newsort.cpp	/^    void  inc_count_put() { _count_put++; }$/;"	f	class:tape_t
inc_num_children	src/sm/lock_x.h	/^    int4_t            inc_num_children() { return ++_num_children; }    $/;"	f	class:lock_request_t
include_HEADERS	config/Makefile	/^include_HEADERS = shore.def shore-config.h$/;"	m
include_HEADERS	src/atomic_ops/Makefile	/^include_HEADERS = atomic_ops.h $(OHEADERS)$/;"	m
include_HEADERS	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^include_HEADERS = asm_linkage.h stack.h trap.h$/;"	m
include_HEADERS	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^include_HEADERS = asm_linkage.h stack.h trap.h$/;"	m
include_HEADERS	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^include_HEADERS = asm_linkage.h stack.h trap.h$/;"	m
include_HEADERS	src/atomic_ops/ia32/sys/Makefile	/^include_HEADERS = asm_linkage.h stack.h trap.h$/;"	m
include_HEADERS	src/atomic_ops/intel/ia32/sys/Makefile	/^include_HEADERS = asm_linkage.h stack.h trap.h$/;"	m
include_HEADERS	src/atomic_ops/intel/sys/Makefile	/^include_HEADERS = asm_linkage.h stack.h trap.h$/;"	m
include_HEADERS	src/atomic_ops/sparc/sys/Makefile	/^include_HEADERS = asm_linkage.h stack.h trap.h$/;"	m
include_HEADERS	src/common/Makefile	/^include_HEADERS = \\$/;"	m
include_HEADERS	src/fc/Makefile	/^include_HEADERS = \\$/;"	m
include_HEADERS	src/sm/Makefile	/^include_HEADERS = \\$/;"	m
include_HEADERS	src/sm/smsh/Makefile	/^include_HEADERS = \\$/;"	m
include_HEADERS	src/sthread/Makefile	/^include_HEADERS = \\$/;"	m
includedir	Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	config/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/atomic_ops/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/atomic_ops/asm_linkage/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/atomic_ops/asm_linkage/usr/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/atomic_ops/asm_linkage/usr/src/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/atomic_ops/atomic_ops/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/atomic_ops/atomic_ops/amd64/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/atomic_ops/atomic_ops/i386/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/atomic_ops/atomic_ops/sparc/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/atomic_ops/ia32/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/atomic_ops/ia32/sys/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/atomic_ops/intel/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/atomic_ops/intel/ia32/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/atomic_ops/intel/ia32/sys/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/atomic_ops/intel/sys/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/atomic_ops/sparc/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/atomic_ops/sparc/sys/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/common/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/common/tests/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/fc/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/fc/tests/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/sm/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/sm/smsh/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/sm/smsh/lib/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/sm/smsh/scripts/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/sm/tests/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/sthread/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/sthread/tests/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	tools/Makefile	/^includedir = ${prefix}\/include$/;"	m
incr	src/sm/page_h.h	/^    void incr(space_bucket_t b) {$/;"	f	class:store_histo_t
incr_cnt	src/sm/rtree.cpp	/^    void incr_cnt() { _idx++; w_assert1(_idx<3); }$/;"	f	class:rtld_cache_t
incr_local	src/common/vid_t.h	/^    void        incr_local()        {$/;"	f	struct:vid_t
incr_pin_count	src/sm/smthread.h	/^smthread_t::incr_pin_count(int amount) $/;"	f	class:smthread_t
index	src/sm/partition.h	/^    partition_index_t  index() const {  return _index; }$/;"	f	class:partition_t
index_key	src/sm/newsort.cpp	/^    const sm_skey_t&         index_key() const { return _index_key; }$/;"	f	class:meta_header_t
index_key_non_const	src/sm/newsort.cpp	/^    sm_skey_t&               index_key_non_const() { return _index_key; }$/;"	f	class:meta_header_t
indexof	src/sm/log_core.cpp	/^	long indexof(insert_info const* info) const {$/;"	f	struct:log_core::insert_info_array
indirect_ref	src/sm/lgrec.h	/^    const lg_tag_indirect_s& indirect_ref() const {return _iref;}$/;"	f	class:lg_tag_indirect_h
indirect_root	src/sm/lgrec.h	/^    shpid_t       indirect_root;$/;"	m	struct:lg_tag_indirect_s
indirect_type	src/sm/lgrec.h	/^inline recflags_t lg_tag_indirect_h::indirect_type(smsize_t page_count)$/;"	f	class:lg_tag_indirect_h
info	src/sm/file_s.h	/^    char    info[ALIGNON];  \/\/ minimal amount of hdr\/data for record$/;"	m	class:record_t
info	src/sm/newsort.cpp	/^    sort_keys_t &info;$/;"	m	class:ssm_sort::run_mgr	file:
info_prio	src/fc/errlog.cpp	/^ostream& info_prio(ostream& o){ return flush_and_setprio(o, log_info); }$/;"	f
info_t	src/fc/w_error.h	/^    typedef w_error_info_t info_t;$/;"	t	class:w_error_t
infodir	Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	config/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/atomic_ops/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/atomic_ops/asm_linkage/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/atomic_ops/asm_linkage/usr/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/atomic_ops/asm_linkage/usr/src/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/atomic_ops/atomic_ops/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/atomic_ops/atomic_ops/amd64/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/atomic_ops/atomic_ops/i386/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/atomic_ops/atomic_ops/sparc/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/atomic_ops/ia32/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/atomic_ops/ia32/sys/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/atomic_ops/intel/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/atomic_ops/intel/ia32/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/atomic_ops/intel/ia32/sys/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/atomic_ops/intel/sys/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/atomic_ops/sparc/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/atomic_ops/sparc/sys/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/common/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/common/tests/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/fc/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/fc/tests/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/sm/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/sm/smsh/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/sm/smsh/lib/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/sm/smsh/scripts/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/sm/tests/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/sthread/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/sthread/tests/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	tools/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
inherit_all	src/sm/dir.cpp	/^sdesc_cache_t::inherit_all()$/;"	f	class:sdesc_cache_t
init	src/common/option.cpp	/^w_rc_t option_t::init(const char* name, const char* newPoss,$/;"	f	class:option_t
init	src/common/vec_t.h	/^    void init()         { _cnt = _size = 0; }  \/\/ re-initialize the vector$/;"	f	class:cvec_t
init	src/fc/block_alloc.h	/^    init(T* t) { \/* do nothing *\/ return t; }$/;"	f	struct:object_cache_default_factory
init	src/fc/block_alloc.h	/^    init(T* t) { t->init(); return t; }$/;"	f	struct:object_cache_initializing_factory
init	src/fc/block_alloc.h	/^    static T* init(T* t, Arg1 arg1) { t->init(arg1); return t; }$/;"	f	struct:object_cache_initializing_factory
init	src/fc/block_alloc.h	/^    static T* init(T* t, Arg1 arg1, Arg2 arg2) { t->init(arg1, arg2); return t; }    $/;"	f	struct:object_cache_initializing_factory
init	src/fc/block_alloc.h	/^    static T* init(T* t, Arg1 arg1, Arg2 arg2, Arg3 arg3) { t->init(arg1, arg2, arg3); return t; }$/;"	f	struct:object_cache_initializing_factory
init	src/fc/block_alloc.h	/^    static T* init(T* t, Arg1 arg1, Arg2 arg2, Arg3 arg3, Arg4 arg4) { t->init(arg1, arg2, arg3, arg4); return t; }$/;"	f	struct:object_cache_initializing_factory
init	src/fc/dynarray.cpp	/^int dynarray::init(dynarray const &to_copy, size_t max_size) {$/;"	f	class:dynarray
init	src/fc/dynarray.cpp	/^int dynarray::init(size_t max_size, size_t align) $/;"	f	class:dynarray
init	src/fc/dynarray.h	/^    int init(size_t max_count) {$/;"	f	struct:dynvector
init	src/fc/tls.h	/^    void init() { new (get()) T; }$/;"	f	struct:tls_tricks::tls_blob
init	src/fc/vtable.cpp	/^vtable_t::init(int R, int A, int S) {$/;"	f	class:vtable_t
init	src/fc/w_hashing.h	/^    static u64 init() $/;"	f	class:w_hashing::uhash
init	src/sm/bf.cpp	/^    void init(bf_page_writer_control_t* pwc) { _pwc = pwc; }$/;"	f	class:page_writer_thread_t
init	src/sm/lock_core.cpp	/^lock_request_t::init(xct_t* x, $/;"	f	class:lock_request_t
init	src/sm/lock_core.cpp	/^lock_request_t::init(xct_t* x, lmode_t m, duration_t d)$/;"	f	class:lock_request_t
init	src/sm/lock_core.cpp	/^xct_lock_info_t::init(tid_t const &t,$/;"	f	class:xct_lock_info_t
init	src/sm/logrec.cpp	/^    page_init_t*   init() { return &_init; }$/;"	f	class:page_format_t
init	src/sm/page.h	/^        void        init(space_bucket_t bucket) { $/;"	f	class:page_p::page_bucket_info_t
init	src/sm/partition.cpp	/^partition_t::init(log_core *owner) $/;"	f	class:partition_t
init	src/sm/rtree.cpp	/^    void init(int2_t l, int2_t d = 2) {$/;"	f	class:rtwork_p
init	src/sm/sdesc.h	/^    void                init(const stid_t& stid, const sinfo_s& s)$/;"	f	class:sdesc_t
init	src/sm/sort.cpp	/^run_scan_t::init(rid_t& begin, PFC c, const key_info_t& k, bool unique=false)$/;"	f	class:run_scan_t
init	src/sm/sort.cpp	/^sort_stream_i::init(const key_info_t& k, const sort_parm_t& s, uint est_rec_sz)$/;"	f	class:sort_stream_i
init	src/sm/xct.cpp	/^void xct_t::init(xct_core* core, sm_stats_info_t* stats,$/;"	f	class:xct_t
init	src/sm/xct.cpp	/^void xct_t::xct_core::init(tid_t const &t, state_t s, timeout_in_ms timeout)$/;"	f	class:xct_t::xct_core
init_blmap	src/fc/block_alloc.cpp	/^    static void init_blmap() { \/* no-op *\/ }$/;"	f	struct:blob_pool::helper
init_bucket_info	src/sm/page.cpp	/^page_p::init_bucket_info(page_p::tag_t ptag, $/;"	f	class:page_p
init_bucket_info	src/sm/page.h	/^page_p::init_bucket_info() { $/;"	f	class:page_p
init_buf	src/sm/rtree.cpp	/^rtld_cache_t::init_buf(int2_t lvl) $/;"	f	class:rtld_cache_t
init_config_options	src/sm/tests/init_config_options.cpp	/^init_config_options(option_group_t& options,$/;"	f
init_errlog	src/fc/errlog.h	/^    void  init_errlog(ErrLog* mine) { _log = mine; }$/;"	f	class:logstream
init_errorcodes	src/fc/fc_einfo_gen.h	/^void w_error_t::init_errorcodes() {$/;"	f	class:w_error_t
init_errorcodes	src/sm/e_einfo_gen.h	/^void smlevel_0::init_errorcodes() {$/;"	f	class:smlevel_0
init_errorcodes	src/sthread/st_einfo_gen.h	/^void sthread_base_t::init_errorcodes() {$/;"	f	class:sthread_base_t
init_fingerprint_map	src/sm/smthread.cpp	/^void smthread_t::init_fingerprint_map() $/;"	f	class:smthread_t
init_for_attributes	src/fc/vtable.h	/^    void init_for_attributes(int n, int m) $/;"	f	class:vtable_row_t
init_histo	src/sm/vol.cpp	/^vol_t::init_histo(store_histo_t* h,  snum_t snum,$/;"	f	class:vol_t
init_impl	src/fc/cpu_info.cpp	/^void cpu_info::init_impl() { }$/;"	f	class:cpu_info
init_impl	src/fc/cpu_info.cpp	/^void cpu_info::init_impl() {$/;"	f	class:cpu_info
init_index	src/sm/partition.h	/^    void               init_index(partition_index_t i) { _index=i; }$/;"	f	class:partition_t
init_local	src/common/vid_t.h	/^    void        init_local()        {vol = first_local;}$/;"	f	struct:vid_t
init_mutex	src/sthread/sthread.cpp	/^    static w_pthread_lock_t  init_mutex;$/;"	m	class:sthread_init_t	file:
init_mutex	src/sthread/sthread.cpp	/^w_pthread_lock_t     sthread_init_t::init_mutex; $/;"	m	class:sthread_init_t	file:
init_next_layer	src/sm/rtree.cpp	/^    void init_next_layer() {$/;"	f	class:rtld_stk_t	file:
init_space_t	src/sm/page_s.h	/^        void init_space_t(int nfree, bool rflag)  { $/;"	f	class:page_s::space_t
init_store_histo	src/sm/sm_io.h	/^io_m::init_store_histo(store_histo_t* h, const stid_t& stid, $/;"	f	class:io_m
init_thread_t	src/sm/bf_core.cpp	/^    init_thread_t(bf_core_m* bfc, long b, long e)$/;"	f	struct:bf_core_m::init_thread_t
init_thread_t	src/sm/bf_core.cpp	/^struct bf_core_m::init_thread_t : public smthread_t $/;"	s	class:bf_core_m	file:
init_vid	src/sm/newsort.cpp	/^tape_t::init_vid( vid_t v) $/;"	f	class:tape_t
initialize	src/fc/block_alloc.cpp	/^    static bool initialize() {$/;"	f	struct:blob_pool::helper
initialize	src/sm/bf_core.cpp	/^void bfcb_t::initialize(const char *const name,$/;"	f	class:bfcb_t
initialize	src/sm/data_access_histogram.cpp	/^void data_access_histogram::initialize(key_ranges_map& krm,$/;"	f	class:data_access_histogram
initialize	src/sm/smsh/tcl_thread.cpp	/^void tcl_thread_t::initialize($/;"	f	class:tcl_thread_t
initialize_sthreads_package	src/sthread/sthread.cpp	/^void  sthread_t::initialize_sthreads_package()$/;"	f	class:sthread_t
initialize_table	src/sm/histo.cpp	/^rc_t histoid_t::initialize_table()$/;"	f	class:histoid_t
initialized	src/fc/block_alloc.cpp	/^	long initialized;$/;"	m	struct:blob_pool::helper::BLBlob	file:
initialized	src/sm/crash.cpp	/^        bool          initialized;$/;"	m	struct:debuginfo	file:
initialized	src/sm/histo.cpp	/^int                         histoid_t::initialized = 0;$/;"	m	class:histoid_t	file:
initialized	src/sm/histo.h	/^    static int               initialized;$/;"	m	class:histoid_t
initialized	src/sm/page.h	/^        bool        initialized() const {  return _old != uninit; }$/;"	f	class:page_p::page_bucket_info_t
initialized	src/sthread/sthread.cpp	/^    static uint4_t           initialized;$/;"	m	class:sthread_init_t	file:
initialized	src/sthread/sthread.cpp	/^w_base_t::uint4_t    sthread_init_t::initialized = 0;$/;"	m	class:sthread_init_t	file:
inline	src/sm/lock_s_inline.h	74;"	d
inline	src/sm/lock_s_inline.h	77;"	d
insert	src/fc/w_error.cpp	/^w_error_t::insert($/;"	f	class:w_error_t
insert	src/sm/bf_htab.cpp	/^bfcb_t* bf_core_m::htab::insert(bfcb_t* t)$/;"	f	class:bf_core_m::htab
insert	src/sm/btree.cpp	/^btree_m::insert($/;"	f	class:btree_m
insert	src/sm/btree_p.cpp	/^btree_p::insert($/;"	f	class:btree_p
insert	src/sm/dir.cpp	/^dir_m::insert(const stid_t& stid, const sinfo_s& sinfo)$/;"	f	class:dir_m
insert	src/sm/dir.h	/^dir_vol_m::insert(const stid_t& stid, const sinfo_s& sd)$/;"	f	class:dir_vol_m
insert	src/sm/keyed.cpp	/^keyed_p::insert($/;"	f	class:keyed_p
insert	src/sm/log.cpp	/^log_m::insert(logrec_t &r, lsn_t* ret)$/;"	f	class:log_m
insert	src/sm/log_core.cpp	/^rc_t log_core::insert(logrec_t &rec, lsn_t* rlsn) {$/;"	f	class:log_core
insert	src/sm/logrec.cpp	/^    page_insert_t*    insert() { return (page_insert_t *)data; }$/;"	f	class:page_format_t
insert	src/sm/newsort.cpp	/^run_mgr::insert(RunHeap* runheap, tape_t* r, int\/*not used*\/)  const$/;"	f	class:run_mgr
insert	src/sm/restart.cpp	/^dirty_pages_tab_t::insert( $/;"	f	class:dirty_pages_tab_t
insert	src/sm/rtree.cpp	/^rtree_m::insert($/;"	f	class:rtree_m
insert	src/sm/rtree.cpp	/^rtree_p::insert(const nbox_t& key, const cvec_t& el, shpid_t child)$/;"	f	class:rtree_p
insert	src/sm/rtree.cpp	/^rtree_p::insert(const rtrec_t& tuple)$/;"	f	class:rtree_p
insert	src/sm/rtree_p.h	/^rtree_base_p::insert($/;"	f	class:rtree_base_p
insert	src/sm/vol.cpp	/^vol_t::ext_cache_t::insert(snum_t snum, extnum_t ext) $/;"	f	class:vol_t::ext_cache_t
insert	src/sm/xct.cpp	/^void xct_list::insert(xct_link* xd) {$/;"	f	class:xct_list
insert	src/sm/zkeyed.cpp	/^zkeyed_p::insert($/;"	f	class:zkeyed_p
insert_existing_unsafe	src/sm/xct.cpp	/^void xct_list::insert_existing_unsafe(xct_t* owner) {$/;"	f	class:xct_list
insert_expand	src/sm/page.cpp	/^page_p::insert_expand(slotid_t idx, int cnt, const cvec_t *vec, $/;"	f	class:page_p
insert_info	src/sm/log_core.cpp	/^	insert_info() : count(SLOT_UNUSED), error(0) { }$/;"	f	struct:log_core::insert_info
insert_info	src/sm/log_core.cpp	/^struct log_core::insert_info {$/;"	s	class:log_core	file:
insert_info_array	src/sm/log_core.cpp	/^	insert_info_array(long count=16)$/;"	f	struct:log_core::insert_info_array
insert_info_array	src/sm/log_core.cpp	/^struct log_core::insert_info_array {$/;"	s	class:log_core	file:
insert_names	src/fc/vtable.h	/^    void insert_names() {$/;"	f	class:vtable_func
inserts	src/sm/tests/htab.cpp	/^        int    inserts;$/;"	m	struct:htab_tester::pidinfo	file:
install	src/sm/histo.cpp	/^histoid_t::install(const pginfo_t &info)$/;"	f	class:histoid_t
install_sh	Makefile	/^install_sh = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/install-sh$/;"	m
install_sh	config/Makefile	/^install_sh = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/install-sh$/;"	m
install_sh	src/Makefile	/^install_sh = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/install-sh$/;"	m
install_sh	src/atomic_ops/Makefile	/^install_sh = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/install-sh$/;"	m
install_sh	src/atomic_ops/asm_linkage/Makefile	/^install_sh = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/install-sh$/;"	m
install_sh	src/atomic_ops/asm_linkage/usr/Makefile	/^install_sh = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/install-sh$/;"	m
install_sh	src/atomic_ops/asm_linkage/usr/src/Makefile	/^install_sh = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/install-sh$/;"	m
install_sh	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^install_sh = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/install-sh$/;"	m
install_sh	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^install_sh = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/install-sh$/;"	m
install_sh	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^install_sh = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/install-sh$/;"	m
install_sh	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^install_sh = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/install-sh$/;"	m
install_sh	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^install_sh = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/install-sh$/;"	m
install_sh	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^install_sh = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/install-sh$/;"	m
install_sh	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^install_sh = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/install-sh$/;"	m
install_sh	src/atomic_ops/atomic_ops/Makefile	/^install_sh = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/install-sh$/;"	m
install_sh	src/atomic_ops/atomic_ops/amd64/Makefile	/^install_sh = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/install-sh$/;"	m
install_sh	src/atomic_ops/atomic_ops/i386/Makefile	/^install_sh = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/install-sh$/;"	m
install_sh	src/atomic_ops/atomic_ops/sparc/Makefile	/^install_sh = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/install-sh$/;"	m
install_sh	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^install_sh = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/install-sh$/;"	m
install_sh	src/atomic_ops/ia32/Makefile	/^install_sh = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/install-sh$/;"	m
install_sh	src/atomic_ops/ia32/sys/Makefile	/^install_sh = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/install-sh$/;"	m
install_sh	src/atomic_ops/intel/Makefile	/^install_sh = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/install-sh$/;"	m
install_sh	src/atomic_ops/intel/ia32/Makefile	/^install_sh = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/install-sh$/;"	m
install_sh	src/atomic_ops/intel/ia32/sys/Makefile	/^install_sh = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/install-sh$/;"	m
install_sh	src/atomic_ops/intel/sys/Makefile	/^install_sh = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/install-sh$/;"	m
install_sh	src/atomic_ops/sparc/Makefile	/^install_sh = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/install-sh$/;"	m
install_sh	src/atomic_ops/sparc/sys/Makefile	/^install_sh = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/install-sh$/;"	m
install_sh	src/common/Makefile	/^install_sh = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/install-sh$/;"	m
install_sh	src/common/tests/Makefile	/^install_sh = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/install-sh$/;"	m
install_sh	src/fc/Makefile	/^install_sh = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/install-sh$/;"	m
install_sh	src/fc/tests/Makefile	/^install_sh = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/install-sh$/;"	m
install_sh	src/sm/Makefile	/^install_sh = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/install-sh$/;"	m
install_sh	src/sm/smsh/Makefile	/^install_sh = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/install-sh$/;"	m
install_sh	src/sm/smsh/lib/Makefile	/^install_sh = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/install-sh$/;"	m
install_sh	src/sm/smsh/scripts/Makefile	/^install_sh = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/install-sh$/;"	m
install_sh	src/sm/tests/Makefile	/^install_sh = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/install-sh$/;"	m
install_sh	src/sthread/Makefile	/^install_sh = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/install-sh$/;"	m
install_sh	src/sthread/tests/Makefile	/^install_sh = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/install-sh$/;"	m
install_sh	tools/Makefile	/^install_sh = ${SHELL} \/home\/dcslab\/charlie\/ELEDA\/charlie\/eleda-shore-mt\/config\/install-sh$/;"	m
install_sh_DATA	Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	config/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/atomic_ops/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/atomic_ops/asm_linkage/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/atomic_ops/asm_linkage/usr/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/atomic_ops/asm_linkage/usr/src/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/atomic_ops/atomic_ops/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/atomic_ops/atomic_ops/amd64/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/atomic_ops/atomic_ops/i386/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/atomic_ops/atomic_ops/sparc/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/atomic_ops/ia32/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/atomic_ops/ia32/sys/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/atomic_ops/intel/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/atomic_ops/intel/ia32/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/atomic_ops/intel/ia32/sys/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/atomic_ops/intel/sys/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/atomic_ops/sparc/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/atomic_ops/sparc/sys/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/common/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/common/tests/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/fc/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/fc/tests/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/sm/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/sm/smsh/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/sm/smsh/lib/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/sm/smsh/scripts/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/sm/tests/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/sthread/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/sthread/tests/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	tools/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_PROGRAM	Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	config/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/atomic_ops/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/atomic_ops/asm_linkage/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/atomic_ops/asm_linkage/usr/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/atomic_ops/asm_linkage/usr/src/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/atomic_ops/atomic_ops/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/atomic_ops/atomic_ops/amd64/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/atomic_ops/atomic_ops/i386/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/atomic_ops/atomic_ops/sparc/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/atomic_ops/ia32/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/atomic_ops/ia32/sys/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/atomic_ops/intel/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/atomic_ops/intel/ia32/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/atomic_ops/intel/ia32/sys/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/atomic_ops/intel/sys/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/atomic_ops/sparc/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/atomic_ops/sparc/sys/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/common/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/common/tests/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/fc/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/fc/tests/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/sm/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/sm/smsh/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/sm/smsh/lib/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/sm/smsh/scripts/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/sm/tests/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/sthread/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/sthread/tests/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	tools/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_SCRIPT	Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	config/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/atomic_ops/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/atomic_ops/asm_linkage/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/atomic_ops/asm_linkage/usr/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/atomic_ops/asm_linkage/usr/src/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/atomic_ops/atomic_ops/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/atomic_ops/atomic_ops/amd64/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/atomic_ops/atomic_ops/i386/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/atomic_ops/atomic_ops/sparc/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/atomic_ops/ia32/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/atomic_ops/ia32/sys/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/atomic_ops/intel/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/atomic_ops/intel/ia32/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/atomic_ops/intel/ia32/sys/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/atomic_ops/intel/sys/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/atomic_ops/sparc/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/atomic_ops/sparc/sys/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/common/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/common/tests/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/fc/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/fc/tests/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/sm/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/sm/smsh/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/sm/smsh/lib/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/sm/smsh/scripts/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/sm/tests/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/sthread/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/sthread/tests/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	tools/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
instrument	src/sm/smsh/smsh.cpp	/^bool instrument = true;$/;"	v
instrument_flag	src/sm/smsh/smsh.h	/^    w_base_t::uint4_t  instrument_flag;$/;"	m	struct:linked_vars
int1_max	src/fc/w_base.cpp	/^const w_base_t::int1_t    w_base_t::int1_max  = 0x7f;$/;"	m	class:w_base_t	file:
int1_max	src/fc/w_base.h	/^    static const int1_t        int1_max, int1_min;$/;"	m	class:w_base_t
int1_min	src/fc/w_base.cpp	/^const w_base_t::int1_t    w_base_t::int1_min  = (const w_base_t::int1_t) 0x80u;$/;"	m	class:w_base_t	file:
int1_min	src/fc/w_base.h	/^    static const int1_t        int1_max, int1_min;$/;"	m	class:w_base_t
int1_t	src/common/basics.h	/^typedef w_base_t::int1_t      int1_t;$/;"	t
int1_t	src/fc/w_base.h	/^    typedef char         int1_t;$/;"	t	class:w_base_t
int1_t	src/sm/lexify.h	/^    typedef w_base_t::int1_t int1_t;$/;"	t	class:sortorder
int1_t	src/sm/smsh/shell.h	/^typedef w_base_t::int1_t  int1_t;$/;"	t
int2_max	src/fc/w_base.cpp	/^const w_base_t::int2_t    w_base_t::int2_max  = 0x7fff;$/;"	m	class:w_base_t	file:
int2_max	src/fc/w_base.h	/^    static const int2_t        int2_max, int2_min;$/;"	m	class:w_base_t
int2_min	src/fc/w_base.cpp	/^const w_base_t::int2_t    w_base_t::int2_min  = (const w_base_t::int2_t) 0x8000u;$/;"	m	class:w_base_t	file:
int2_min	src/fc/w_base.h	/^    static const int2_t        int2_max, int2_min;$/;"	m	class:w_base_t
int2_t	src/common/basics.h	/^typedef w_base_t::int2_t      int2_t;$/;"	t
int2_t	src/fc/w_base.h	/^    typedef short        int2_t;$/;"	t	class:w_base_t
int2_t	src/sm/lexify.h	/^    typedef w_base_t::int2_t int2_t;$/;"	t	class:sortorder
int2_t	src/sm/smsh/shell.h	/^typedef w_base_t::int2_t  int2_t;$/;"	t
int4_max	src/fc/w_base.cpp	/^const w_base_t::int4_t    w_base_t::int4_max  = 0x7fffffff;$/;"	m	class:w_base_t	file:
int4_max	src/fc/w_base.h	/^    static const int4_t        int4_max, int4_min;$/;"	m	class:w_base_t
int4_min	src/fc/w_base.cpp	/^const w_base_t::int4_t    w_base_t::int4_min  = 0x80000000;$/;"	m	class:w_base_t	file:
int4_min	src/fc/w_base.h	/^    static const int4_t        int4_max, int4_min;$/;"	m	class:w_base_t
int4_t	src/common/basics.h	/^typedef w_base_t::int4_t      int4_t;$/;"	t
int4_t	src/fc/nbox.h	/^    typedef w_base_t::int4_t int4_t;$/;"	t	class:nbox_t
int4_t	src/fc/w_base.h	/^    typedef int          int4_t;$/;"	t	class:w_base_t
int4_t	src/sm/lexify.h	/^    typedef w_base_t::int4_t int4_t;$/;"	t	class:sortorder
int4_t	src/sm/smsh/shell.h	/^typedef w_base_t::int4_t  int4_t;$/;"	t
int8_max	src/fc/w_base.cpp	/^const w_base_t::int8_t   w_base_t::int8_max =$/;"	m	class:w_base_t	file:
int8_max	src/fc/w_base.h	/^    static const int8_t        int8_max, int8_min;$/;"	m	class:w_base_t
int8_min	src/fc/w_base.cpp	/^const w_base_t::int8_t   w_base_t::int8_min =$/;"	m	class:w_base_t	file:
int8_min	src/fc/w_base.h	/^    static const int8_t        int8_max, int8_min;$/;"	m	class:w_base_t
int8_t	src/fc/w_base.h	/^    typedef    long              int8_t;$/;"	t	class:w_base_t
int8_t	src/fc/w_base.h	/^    typedef long long            int8_t;$/;"	t	class:w_base_t
int8_t	src/sm/lexify.h	/^    typedef w_base_t::int8_t int8_t;$/;"	t	class:sortorder
int_alignment_check	src/common/umemcmp.h	/^inline uint int_alignment_check(const void *i) $/;"	f
int_lexify	src/sm/lexify.cpp	/^sortorder::int_lexify($/;"	f	class:sortorder
int_pg	src/sm/sm_du_stats.h	/^    btree_int_stats_t    int_pg;   \/\/ byte counts for interior pages$/;"	m	struct:btree_stats_t
int_pg_cnt	src/sm/sm_du_stats.h	/^    base_stat_t        int_pg_cnt;$/;"	m	struct:rtree_stats_t
int_pg_cnt	src/sm/sm_du_stats.h	/^    base_stat_t     int_pg_cnt;  \/\/ level>1 pages found by tree traversal$/;"	m	struct:btree_stats_t
int_stats	src/sm/btree_p.cpp	/^btree_p::int_stats(btree_int_stats_t& _stats)$/;"	f	class:btree_p
int_t	src/atomic_ops/atomic_ops.h	/^typedef int   int_t;$/;"	t
int_thread_t	src/sthread/tests/thread3.cpp	/^class int_thread_t : public sthread_t {$/;"	c	file:
int_thread_t	src/sthread/tests/thread3.cpp	/^int_thread_t::int_thread_t(int fid)$/;"	f	class:int_thread_t
int_unlexify	src/sm/lexify.cpp	/^sortorder::int_unlexify($/;"	f	class:sortorder
inter_thread_comm_buffer	src/sm/smsh/tcl_thread.cpp	/^char* tcl_thread_t::inter_thread_comm_buffer = 0;$/;"	m	class:tcl_thread_t	file:
inter_thread_comm_buffer	src/sm/smsh/tcl_thread.h	/^    static char*                inter_thread_comm_buffer;$/;"	m	class:tcl_thread_t
interactive	src/sm/smsh/smsh.cpp	/^bool interactive = false;$/;"	v
internal	src/sm/smsh/sort_funcs3.cpp	/^    factory_t&                internal,$/;"	v
internal_prio	src/fc/errlog.cpp	/^ostream& internal_prio(ostream& o){ return flush_and_setprio(o, log_internal); }$/;"	f
invalid	src/common/tid_t.h	/^    bool invalid() volatile const { return _data == 0; }$/;"	f	class:tid_t
invalid_fhdl	src/sm/log_core.h	/^    enum { invalid_fhdl = -1 };$/;"	e	enum:log_core::__anon80
invalid_fhdl	src/sm/partition.h	/^    enum { invalid_fhdl = -1 };$/;"	e	enum:partition_t::__anon34
invalidate	src/sm/dir.cpp	/^sdesc_t::invalidate() $/;"	f	class:sdesc_t
invalidate	src/sm/newsort.cpp	/^    void    invalidate() { _invalidate(); }$/;"	f	class:sm_skey_t
invalidate	src/sm/newsort.cpp	/^    void  invalidate() { _invalidate(); }$/;"	f	class:sm_object_t
invalidate_sdesc	src/sm/sdesc.h	/^    void                invalidate_sdesc() { invalidate(); }$/;"	f	class:sdesc_t
invalidate_sli	src/sm/lock_core.cpp	/^lock_head_t::invalidate_sli()$/;"	f	class:lock_head_t
io	src/sm/sm.cpp	/^io_m* smlevel_0::io = 0;$/;"	m	class:smlevel_0	file:
io	src/sm/sm_base.h	/^    static io_m* io;$/;"	m	class:smlevel_0
ioThread	src/sthread/tests/thread2.cpp	/^io_thread_t 	**ioThread;$/;"	v
io_DEPENDENCIES	src/fc/tests/Makefile	/^io_DEPENDENCIES = ..\/libfc.a $(LOCALLDADD)$/;"	m
io_LDADD	src/fc/tests/Makefile	/^io_LDADD = $(LDADD)$/;"	m
io_OBJECTS	src/fc/tests/Makefile	/^io_OBJECTS = $(am_io_OBJECTS)$/;"	m
io_SOURCES	src/fc/tests/Makefile	/^io_SOURCES = io.cpp$/;"	m
io_dir	src/sthread/tests/thread2.cpp	/^const char* io_dir = IO_DIR;$/;"	v
io_lock_force	src/sm/sm_io.cpp	/^vol_io_shared::io_lock_force($/;"	f	class:vol_io_shared
io_m	src/sm/sm_io.cpp	/^io_m::io_m()$/;"	f	class:io_m
io_m	src/sm/sm_io.h	/^class io_m : public smlevel_0 $/;"	c
io_m_linear_search_extents	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t io_m_linear_search_extents;$/;"	v
io_m_linear_searches	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t io_m_linear_searches;$/;"	v
io_thread_t	src/sthread/tests/ioperf.cpp	/^class io_thread_t : public sthread_t {$/;"	c	file:
io_thread_t	src/sthread/tests/ioperf.cpp	/^io_thread_t::io_thread_t($/;"	f	class:io_thread_t
io_thread_t	src/sthread/tests/thread2.cpp	/^class io_thread_t : public sthread_t {$/;"	c	file:
io_thread_t	src/sthread/tests/thread2.cpp	/^io_thread_t::io_thread_t(int i, char *bf)$/;"	f	class:io_thread_t
ioperf_DEPENDENCIES	src/sthread/tests/Makefile	/^ioperf_DEPENDENCIES = ..\/libsthread.a ..\/..\/fc\/libfc.a $(LOCALLDADD)$/;"	m
ioperf_LDADD	src/sthread/tests/Makefile	/^ioperf_LDADD = $(LDADD)$/;"	m
ioperf_OBJECTS	src/sthread/tests/Makefile	/^ioperf_OBJECTS = $(am_ioperf_OBJECTS)$/;"	m
ioperf_SOURCES	src/sthread/tests/Makefile	/^ioperf_SOURCES = ioperf.cpp$/;"	m
ios_fmtflags	src/fc/w_input.cpp	/^typedef ios::fmtflags  ios_fmtflags;$/;"	t	file:
ios_fmtflags	src/sm/logrec.cpp	/^typedef        ios::fmtflags        ios_fmtflags;$/;"	t	file:
iostophere	src/sm/sm_io.cpp	/^void iostophere() { }$/;"	f
iostophere	src/sm/sm_io.cpp	69;"	d	file:
iov_base	src/sthread/sdisk.h	/^        void    *iov_base;$/;"	m	struct:sdisk_base_t::iovec_t
iov_len	src/sthread/sdisk.h	/^        size_t    iov_len;$/;"	m	struct:sdisk_base_t::iovec_t
iovec_max	src/sthread/sthread.h	/^    enum { iovec_max = 8 };$/;"	e	enum:sthread_base_t::__anon136
iovec_t	src/sthread/sdisk.h	/^        iovec_t(void *base = 0, int len = 0) $/;"	f	struct:sdisk_base_t::iovec_t
iovec_t	src/sthread/sdisk.h	/^    struct iovec_t {$/;"	s	class:sdisk_base_t
iovec_t	src/sthread/sthread.h	/^    typedef sdisk_base_t::iovec_t      iovec_t;$/;"	t	class:sthread_base_t
ip	src/sm/smsh/tcl_thread.h	/^    Tcl_Interp*                 ip;$/;"	m	class:tcl_thread_t
isBigEndian	src/sm/key_ranges_map.cpp	/^bool key_ranges_map::isBigEndian() $/;"	f	class:key_ranges_map
isStackFrameOK	src/sthread/sthread.cpp	/^bool    sthread_t::isStackFrameOK(size_t size)$/;"	f	class:sthread_t
isStackOK	src/sthread/sthread.cpp	/^bool sthread_t::isStackOK(const char * \/*file*\/, int \/*line*\/) const$/;"	f	class:sthread_t
isWaiting	src/common/tests/latch1.cpp	/^    bool                  isWaiting;$/;"	m	class:latch_thread_t	file:
isWaiting	src/sm/smsh/tcl_thread.h	/^    volatile bool                isWaiting;$/;"	m	class:tcl_thread_t
is_1thread_log_mutex_mine	src/sm/xct.cpp	/^xct_t::is_1thread_log_mutex_mine() const$/;"	f	class:xct_t
is_1thread_xct_mutex_mine	src/sm/xct.cpp	/^xct_t::is_1thread_xct_mutex_mine() const$/;"	f	class:xct_t
is_Null	src/fc/nbox.h	/^    bool is_Null() const { return (dim == 0)?true:false; }$/;"	f	class:nbox_t
is_aligned	src/common/basics.h	/^inline bool is_aligned(const void* p)$/;"	f
is_aligned	src/common/basics.h	/^inline bool is_aligned(smsize_t sz)$/;"	f
is_aligned	src/common/w_opaque.h	/^    bool          is_aligned() const  {$/;"	f	class:opaque_quantity
is_aligned	src/fc/w_base.h	/^w_base_t::is_aligned(const void* s)$/;"	f	class:w_base_t
is_aligned	src/fc/w_base.h	/^w_base_t::is_aligned(size_t sz)$/;"	f	class:w_base_t
is_aligned	src/sm/sort_s.h	/^    bool     is_aligned(int i) const {$/;"	f	class:ssm_sort::sort_keys_t
is_alloc_ext_of	src/sm/vol.cpp	/^bool vol_t::is_alloc_ext_of(extnum_t e, snum_t s) const $/;"	f	class:vol_t
is_alloc_page	src/sm/vol.cpp	/^bool vol_t::is_alloc_page(const lpid_t& pid) const$/;"	f	class:vol_t
is_alloc_page_of	src/sm/vol.h	/^    bool                is_alloc_page_of(const lpid_t& p, snum_t s) const {$/;"	f	class:vol_t
is_alloc_store	src/sm/vol.cpp	/^bool vol_t::is_alloc_store(snum_t f) const$/;"	f	class:vol_t
is_ascending	src/sm/sort_s.h	/^    bool    is_ascending() const { return _ascending; } $/;"	f	class:ssm_sort::sort_keys_t
is_backward	src/sm/btcursor.h	/^    bool            is_backward() const { return _backward; }$/;"	f	class:bt_cursor_t
is_bf_page	src/sm/bf.cpp	/^bf_m::is_bf_page(const page_s* p, bool and_in_htab \/* = true *\/)$/;"	f	class:bf_m
is_big_endian	src/fc/w_base.h	/^inline bool w_base_t::is_big_endian()$/;"	f	class:w_base_t
is_cached	src/sm/bf.cpp	/^bf_m::is_cached(const bfcb_t* b)$/;"	f	class:bf_m
is_clear	src/sm/pmap.h	/^    inline    bool    is_clear(int bit) const { return bm_is_clr(bits, bit);}$/;"	f	struct:Pmap
is_clr	src/fc/w_bitmap.h	/^w_bitmap_t::is_clr(uint4_t offset) const$/;"	f	class:w_bitmap_t
is_clr	src/sm/extent.h	/^extlink_t::is_clr(int i) const$/;"	f	class:extlink_t
is_compressed	src/sm/btree_p.h	/^inline bool btree_p::is_compressed() const$/;"	f	class:btree_p
is_consistent	src/sm/newsort.cpp	/^    bool  is_consistent() const { assert_consistent(); return true; }$/;"	f	class:meta_header_t
is_contended	src/sm/lock_x.h	/^        bool is_contended() {$/;"	f	struct:lock_head_t::my_lock
is_cpsn	src/sm/logrec.h	/^logrec_t::is_cpsn() const$/;"	f	class:logrec_t
is_current	src/sm/partition.cpp	/^partition_t::is_current()  const$/;"	f	class:partition_t
is_dec	src/fc/w_input.cpp	/^        is_hex, is_oct, is_dec, $/;"	e	enum:states	file:
is_delete	src/sm/btree_p.h	/^inline bool btree_p::is_delete() const$/;"	f	class:btree_p
is_device	src/sthread/sdisk.h	/^        bool        is_device;$/;"	m	struct:sdisk_base_t::filestat_t
is_dir	src/sthread/sdisk.h	/^        bool        is_dir;$/;"	m	struct:sdisk_base_t::filestat_t
is_dirty	src/sm/bf.cpp	/^bf_m::is_dirty(const page_s* buf)$/;"	f	class:bf_m
is_dirty	src/sm/page.h	/^page_p::is_dirty() const$/;"	f	class:page_p
is_dummy_run	src/sm/newsort.cpp	/^    bool               is_dummy_run() const {$/;"	f	class:tape_t
is_dup	src/sm/newsort.cpp	/^    bool is_dup() const { return __persistent_part._booleans & $/;"	f	class:meta_header_t
is_empty	src/fc/w_bitvector.h	/^    bool is_empty() const {$/;"	f	class:w_bitvector_t
is_empty	src/fc/w_list.h	/^w_list_base_t::is_empty() const$/;"	f	class:w_list_base_t
is_empty	src/sm/btree.cpp	/^btree_m::is_empty($/;"	f	class:btree_m
is_empty	src/sm/newsort.cpp	/^    bool              is_empty() const {$/;"	f	class:tape_t
is_empty	src/sm/pmap.h	/^    inline    bool    is_empty() const {$/;"	f	struct:Pmap
is_empty	src/sm/rtree.cpp	/^rtree_m::is_empty(const lpid_t& root)$/;"	f	class:rtree_m
is_empty	src/sm/rtree_p.h	/^    bool             is_empty()   { return _top == 0; }$/;"	f	class:rtstk_t
is_empty	src/sm/rtree_p.h	/^    bool is_empty()   { return _top == 0; }$/;"	f	class:ftstk_t
is_empty	src/sm/sort.h	/^    bool    is_empty() const { return empty; }$/;"	f	class:sort_stream_i
is_eof	src/sm/sort.h	/^    bool is_eof()   { return eof; }$/;"	f	class:run_scan_t
is_error	src/fc/w_rc.h	/^w_rc_t::is_error() const$/;"	f	class:w_rc_t
is_extern2pc	src/sm/xct.h	/^xct_t::is_extern2pc() $/;"	f	class:xct_t
is_external	src/sm/logrec.h	/^    char               is_external;$/;"	m	struct:prepare_info_t
is_file	src/sthread/sdisk.h	/^        bool        is_file;$/;"	m	struct:sdisk_base_t::filestat_t
is_file_mrbt_p	src/sm/file.h	/^inline bool file_p::is_file_mrbt_p() const$/;"	f	class:file_p
is_file_p	src/sm/file.h	/^inline bool file_p::is_file_p() const$/;"	f	class:file_p
is_finite	src/fc/w_base.cpp	/^w_base_t::is_finite(const f8_t x)$/;"	f	class:w_base_t
is_fixed	src/sm/btree_impl.h	/^    bool                  is_fixed() const { check(); return _fixed; }$/;"	f	class:tree_latch
is_fixed	src/sm/page.h	/^page_p::is_fixed() const$/;"	f	class:page_p
is_fixed	src/sm/sort_s.h	/^    bool     is_fixed(int i) const {$/;"	f	class:ssm_sort::sort_keys_t
is_for_file	src/sm/sort_s.h	/^    bool    is_for_file() const { return !_for_index; }$/;"	f	class:ssm_sort::sort_keys_t
is_for_index	src/sm/sort_s.h	/^    bool    is_for_index() const { return _for_index; }$/;"	f	class:ssm_sort::sort_keys_t
is_full	src/fc/w_bitvector.h	/^    bool is_full() const {$/;"	f	class:w_bitvector_t
is_full	src/sm/rtree_p.h	/^    bool             is_full()    { return _top >= max_rtstk_sz; }$/;"	f	class:rtstk_t
is_full	src/sm/rtree_p.h	/^    bool is_full()    { return _top >= ftstk_chunk+ftstk_chunk*ftstk_chunk; }$/;"	f	class:ftstk_t
is_good	src/sm/bf.cpp	/^bf_filter_lsn_t::is_good(const bfcb_t& p) const$/;"	f	class:bf_filter_lsn_t
is_good	src/sm/bf.cpp	/^bf_filter_none_t::is_good(const bfcb_t& p) const$/;"	f	class:bf_filter_none_t
is_good	src/sm/bf.cpp	/^bf_filter_store_t::is_good(const bfcb_t& p) const$/;"	f	class:bf_filter_store_t
is_good	src/sm/bf.cpp	/^bf_filter_sweep_t::is_good(const bfcb_t& p) const$/;"	f	class:bf_filter_sweep_t
is_good	src/sm/bf.cpp	/^bf_filter_vol_t::is_good(const bfcb_t& p) const$/;"	f	class:bf_filter_vol_t
is_good	src/sm/bf.cpp	/^bool bf_filter_sweep_old_t::is_good(const bfcb_t& p) const$/;"	f	class:bf_filter_sweep_old_t
is_hex	src/fc/w_input.cpp	/^        is_hex, is_oct, is_dec, $/;"	e	enum:states	file:
is_hot	src/sm/bf_s.h	/^    bool                is_hot() const { return $/;"	f	class:bfcb_t
is_in_buffer_pool	src/sm/sort_s.h	/^    bool        is_in_buffer_pool() const { return is_valid() && _in_bp; }$/;"	f	class:ssm_sort::object_t
is_in_hdr	src/sm/sort_s.h	/^    bool      is_in_hdr() const { return is_in_obj() && _in_hdr; }$/;"	f	class:ssm_sort::skey_t
is_in_hdr	src/sm/sort_s.h	/^    bool is_in_hdr() const { return _in_hdr; }$/;"	f	class:ssm_sort::key_location_t
is_in_large_obj	src/sm/newsort.cpp	/^    bool    is_in_large_obj() const { return  is_in_obj() && $/;"	f	class:sm_skey_t
is_in_obj	src/sm/sort_s.h	/^    bool      is_in_obj() const { return is_valid() && _in_obj; }$/;"	f	class:ssm_sort::skey_t
is_in_sm	src/sm/smthread.h	/^    bool             is_in_sm() const { return tcb()._in_sm; }$/;"	f	class:smthread_t
is_infinite	src/fc/w_base.cpp	/^w_base_t::is_infinite(const f8_t x)$/;"	f	class:w_base_t
is_infinite_or_nan	src/fc/w_base.cpp	/^w_base_t::is_infinite_or_nan(const f8_t x)$/;"	f	class:w_base_t
is_inherited	src/sm/sdesc.h	/^    bool		is_inherited() const { return _inherited; }$/;"	f	class:sdesc_t
is_instrumented	src/sm/xct.h	/^    bool                        is_instrumented() {$/;"	f	class:xct_t
is_int_aligned	src/common/umemcmp.h	/^inline bool is_int_aligned(const void *i)$/;"	f
is_large	src/sm/file_s.h	/^inline bool record_t::is_large() const    $/;"	f	class:record_t
is_large	src/sm/pin.h	/^    bool       is_large() const  { _check_lsn(); return _rec->is_large();}$/;"	f	class:pin_i
is_latched	src/common/latch.h	/^latch_t::is_latched() const$/;"	f	class:latch_t
is_latched	src/common/tests/latch1.cpp	150;"	d	file:
is_latched_by_me	src/sm/page.cpp	/^page_p::is_latched_by_me() const$/;"	f	class:page_p
is_leaf	src/sm/btree_p.h	/^inline bool btree_p::is_leaf() const$/;"	f	class:btree_p
is_leaf	src/sm/rtree_p.h	/^inline bool rtree_base_p::is_leaf() const$/;"	f	class:rtree_base_p
is_leaf_parent	src/sm/btree_p.h	/^inline bool btree_p::is_leaf_parent() const$/;"	f	class:btree_p
is_lexico	src/sm/sort_s.h	/^    bool     is_lexico(int i) const {$/;"	f	class:ssm_sort::sort_keys_t
is_little_endian	src/fc/w_base.h	/^w_base_t::is_little_endian()$/;"	f	class:w_base_t
is_locked	src/sthread/srwlock.h	/^    bool is_locked() const { return (!_is_plp && (*&_holders)==0)?false:true; }$/;"	f	class:mcs_rwlock
is_log_on	src/sm/xct.h	/^bool xct_t::is_log_on() const {$/;"	f	class:xct_t
is_logical	src/sm/logrec.h	/^logrec_t::is_logical() const$/;"	f	class:logrec_t
is_logstream	src/fc/errlog.cpp	/^is_logstream(ostream &o) $/;"	f
is_main_thread	src/sm/smsh/tcl_thread.h	/^    bool                        is_main_thread;$/;"	m	class:tcl_thread_t
is_mine	src/common/latch.cpp	/^latch_t::is_mine() const {$/;"	f	class:latch_t
is_mine	src/sm/bf.cpp	/^bf_m::is_mine(const page_s* buf) $/;"	f	class:bf_m
is_mine	src/sm/bf_core.cpp	/^bf_core_m::is_mine(const bfcb_t* p) const$/;"	f	class:bf_core_m
is_mine	src/sm/lock_x.h	/^        bool is_mine() { return _holder == me(); }$/;"	f	struct:lock_head_t::my_lock
is_mine	src/sm/page.cpp	/^page_p::is_mine() const$/;"	f	class:page_p
is_mine	src/sm/pin.cpp	/^pin_i::is_mine() const$/;"	f	class:pin_i
is_mine	src/sthread/mcs_lock.h	/^	bool is_mine(ext_qnode* me) { return me->_held == this; }$/;"	f	struct:mcs_lock
is_mine	src/sthread/sthread.h	/^    bool is_mine() const { return $/;"	f	struct:tatas_lock
is_mine	src/sthread/sthread.h	/^    bool is_mine(ext_qnode* me) const { $/;"	f	struct:w_pthread_lock_t
is_mounted	src/sm/device.cpp	/^bool device_m::is_mounted(const char* dev_name)$/;"	f	class:device_m
is_mounted	src/sm/sm_io.cpp	/^io_m::is_mounted(const char* dev_name)$/;"	f	class:io_m
is_mounted	src/sm/sm_io.cpp	/^io_m::is_mounted(vid_t vid)$/;"	f	class:io_m
is_mrbt	src/sm/btcursor.h	/^    bool is_mrbt;$/;"	m	class:bt_cursor_t
is_nan	src/fc/w_base.cpp	/^w_base_t::is_nan(const f8_t x)$/;"	f	class:w_base_t
is_neg_inf	src/common/vec_t.h	/^    bool is_neg_inf() const        { return this == &neg_inf; }$/;"	f	class:cvec_t
is_node	src/sm/btree_p.h	/^inline bool btree_p::is_node() const$/;"	f	class:btree_p
is_node	src/sm/rtree_p.h	/^inline bool rtree_base_p::is_node() const$/;"	f	class:rtree_base_p
is_nonblocking	src/sm/lock_x.h	/^    bool            is_nonblocking() const { return _noblock; }$/;"	f	class:xct_lock_info_t
is_null	src/common/vec_t.h	/^    bool is_null() const        { return size() == 0; }$/;"	f	class:cvec_t
is_null	src/sm/newsort.cpp	/^    bool is_null() const { $/;"	f	class:meta_header_t
is_null	src/sm/sm_s.h	/^    bool        is_null() const { return page == 0; }$/;"	f	class:lpid_t
is_oct	src/fc/w_input.cpp	/^        is_hex, is_oct, is_dec, $/;"	e	enum:states	file:
is_open_for_append	src/sm/partition.h	/^    bool               is_open_for_append() const {$/;"	f	class:partition_t
is_open_for_read	src/sm/partition.h	/^    bool               is_open_for_read() const {$/;"	f	class:partition_t
is_page_update	src/sm/logrec.h	/^logrec_t::is_page_update() const$/;"	f	class:logrec_t
is_plp	src/sthread/srwlock.h	/^    bool is_plp() { return _is_plp; }$/;"	f	class:mcs_rwlock
is_pos_inf	src/common/vec_t.h	/^    bool is_pos_inf() const        { return this == &pos_inf; }$/;"	f	class:cvec_t
is_primed	src/sm/vol.h	/^    bool                     is_primed(snum_t s) const { $/;"	f	class:vol_t
is_quark_marker	src/sm/lock_core.cpp	/^lock_request_t::is_quark_marker() const$/;"	f	class:lock_request_t
is_raw	src/sm/vol.h	/^    bool             is_raw() { return _is_raw; };$/;"	f	class:vol_t
is_read_only_sofar	src/sm/xct.h	/^bool xct_t::is_read_only_sofar() const$/;"	f	class:xct_t
is_reader	src/sthread/srwlock.h	/^    bool is_reader() { return _is_reader; }$/;"	f	class:mcs_rwlock
is_rec_valid	src/sm/file.h	/^    bool                is_rec_valid(slotid_t idx) { $/;"	f	class:file_p
is_reclaimed	src/sm/lock_x.h	/^    bool	     is_reclaimed() {$/;"	f	class:lock_request_t
is_reclaimed	src/sm/lock_x.h	/^    static bool	     is_reclaimed(sli_status_t s) {$/;"	f	class:lock_request_t
is_redo	src/sm/logrec.h	/^logrec_t::is_redo() const$/;"	f	class:logrec_t
is_required	src/common/option.h	/^    bool        is_required()        { return _required; }$/;"	f	class:option_t
is_rollback	src/sm/logrec.h	/^logrec_t::is_rollback() const$/;"	f	class:logrec_t
is_same	src/sm/key_ranges_map.cpp	/^bool key_ranges_map::is_same(const key_ranges_map& krm)$/;"	f	class:key_ranges_map
is_set	src/common/option.h	/^    bool        is_set()        { return _set; }$/;"	f	class:option_t
is_set	src/fc/w_bitmap.cpp	/^w_bitmap_t::is_set(uint4_t offset) const$/;"	f	class:w_bitmap_t
is_set	src/fc/w_bitvector.h	/^    bool is_set(Word idx) const {$/;"	f	class:w_bitvector_t
is_set	src/sm/extent.h	/^extlink_t::is_set(int i) const$/;"	f	class:extlink_t
is_set	src/sm/pmap.h	/^    inline    bool    is_set(int bit) const { return bm_is_set(bits, bit); }$/;"	f	struct:Pmap
is_set	src/sm/smsh/lib/smsh.tcl	/^proc is_set variable {$/;"	p
is_skip	src/sm/logrec.h	/^logrec_t::is_skip() const$/;"	f	class:logrec_t
is_small	src/sm/file_s.h	/^inline bool record_t::is_small() const $/;"	f	class:record_t
is_small	src/sm/pin.h	/^    bool       is_small() const  { _check_lsn(); return _rec->is_small();}$/;"	f	class:pin_i
is_smo	src/sm/btree_p.h	/^inline bool btree_p::is_smo() const$/;"	f	class:btree_p
is_sorted	src/sm/sort.h	/^    bool    is_sorted() const { return sorted; }$/;"	f	class:sort_stream_i
is_stable	src/sm/sort_s.h	/^    bool    is_stable() const { return _stable; }$/;"	f	class:ssm_sort::sort_keys_t
is_tuple_valid	src/sm/page.h	/^page_p::is_tuple_valid(slotid_t idx) const$/;"	f	class:page_p
is_unchecked	src/fc/w_rc.h	/^    bool is_unchecked() {$/;"	f	class:w_rc_t
is_undo	src/sm/logrec.h	/^logrec_t::is_undo() const$/;"	f	class:logrec_t
is_undoable_clr	src/sm/logrec.h	/^logrec_t::is_undoable_clr() const$/;"	f	class:logrec_t
is_unique	src/sm/sort_s.h	/^    bool    is_unique() const { return _remove_dups; } $/;"	f	class:ssm_sort::sort_keys_t
is_user_lock	src/sm/lock_s_inline.h	/^lockid_t::is_user_lock() const$/;"	f	class:lockid_t
is_valid	src/fc/w_temp_alloc.h	/^        bool is_valid() const { return _buf; }$/;"	f	struct:w_temp_alloc::ptr
is_valid	src/sm/btcursor.h	/^    bool            is_valid() const { return _slot >= 0; } $/;"	f	class:bt_cursor_t
is_valid	src/sm/sort_s.h	/^    bool        is_valid() const  { return _valid; }$/;"	f	class:ssm_sort::object_t
is_valid	src/sm/sort_s.h	/^    bool      is_valid() const { return _valid; }$/;"	f	class:ssm_sort::skey_t
is_valid_page_num	src/sm/vol.h	/^inline bool vol_t::is_valid_page_num(const lpid_t& p) const$/;"	f	class:vol_t
is_valid_page_of	src/sm/sm_io.cpp	/^io_m::is_valid_page_of(const lpid_t& pid, snum_t s)$/;"	f	class:io_m
is_valid_page_of	src/sm/vol.h	/^    bool                is_valid_page_of(const lpid_t& p, snum_t s) const {$/;"	f	class:vol_t
is_valid_store	src/sm/sm_io.cpp	/^io_m::is_valid_store(const stid_t& stid)$/;"	f	class:io_m
is_valid_store	src/sm/vol.h	/^inline bool vol_t::is_valid_store(snum_t f) const$/;"	f	class:vol_t
is_virgin	src/sthread/stcore_pthread.h	/^    int          is_virgin;        \/* TRUE if just started *\/$/;"	m	struct:sthread_core_t
is_zvec	src/common/vec_t.h	/^    bool is_zvec() const { $/;"	f	class:cvec_t
isf	src/sm/sdesc.h	/^    u_char        isf;                \/\/ index split factor$/;"	m	struct:sinfo_s
isinsets	src/common/regcomp.cpp	/^isinsets(struct re_guts *g, int c)$/;"	f	file:
istrstream	src/fc/w_compat_strstream.cpp	/^istrstream::istrstream(char* s)$/;"	f	class:shore_compat::istrstream
istrstream	src/fc/w_compat_strstream.cpp	/^istrstream::istrstream(char* s, streamsize n)$/;"	f	class:shore_compat::istrstream
istrstream	src/fc/w_compat_strstream.cpp	/^istrstream::istrstream(const char* s)$/;"	f	class:shore_compat::istrstream
istrstream	src/fc/w_compat_strstream.cpp	/^istrstream::istrstream(const char* s, streamsize n)$/;"	f	class:shore_compat::istrstream
istrstream	src/fc/w_compat_strstream.h	/^class istrstream : public basic_istream<char>$/;"	c	namespace:shore_compat
istrstream	src/fc/w_strstream.h	255;"	d
istrstream	src/fc/w_strstream.h	99;"	d
item	src/sm/extent.h	/^        stnode_t          item[max];$/;"	m	struct:stnode_p::layout_t
item	src/sm/extent.h	/^    extlink_t             item[max];$/;"	m	struct:extlink_p::layout_t
item	src/sm/extent.h	/^extlink_p::item(int i)$/;"	f	class:extlink_p
item	src/sm/extent.h	/^stnode_p::item(snum_t i)$/;"	f	class:stnode_p
iterator	src/common/latch.cpp	/^        explicit iterator(latch_holder_t* cur) : _cur(cur) { }$/;"	f	struct:holder_list::iterator
iterator	src/common/latch.cpp	/^    struct iterator {$/;"	s	class:holder_list	file:
j	src/fc/tests/test_stat_struct_gen.h	/^ w_base_t::base_stat_t j;$/;"	v
j	src/sm/tests/mrbtrees_test.cpp	/^    int j;$/;"	m	struct:el_filler_utest	file:
join	src/common/tests/latch1.cpp	42;"	d	file:
join	src/sm/smsh/tcl_thread.cpp	/^void tcl_thread_t::join(unsigned long id)$/;"	f	class:tcl_thread_t
join	src/sm/smsh/tcl_thread.h	/^    w_rc_t                      join() { return this->smthread_t::join(); }$/;"	f	class:tcl_thread_t
join	src/sm/smthread.cpp	/^smthread_t::join(timeout_in_ms timeout)$/;"	f	class:smthread_t
join	src/sthread/sthread.cpp	/^sthread_t::join(timeout_in_ms \/*timeout*\/)$/;"	f	class:sthread_t
join_xlist	src/sm/xct.cpp	/^void xct_t::join_xlist() {$/;"	f	class:xct_t
k	src/fc/tests/test_stat_struct_gen.h	/^ w_base_t::base_float_t k;$/;"	v
k	src/sm/newsort.cpp	/^    int                    k; \/\/ active key$/;"	m	class:blob	file:
kc	src/sm/btcursor.h	/^    const key_type_s*        kc()     const { return _kc; }$/;"	f	class:bt_cursor_t
kc	src/sm/sdesc.h	/^    key_type_s        kc[smlevel_0::max_keycomp];$/;"	m	struct:sinfo_s
keep_buf	src/sm/newsort.cpp	/^limited_space::keep_buf(smsize_t amt, const char * W_IFDEBUG3(b)) $/;"	f	class:limited_space
keep_going	src/sm/btcursor.h	/^    bool            keep_going;$/;"	m	class:bt_cursor_t
keep_me	src/sm/lock_x.h	/^    bool keep_me;$/;"	m	class:lock_request_t
keep_orig	src/sm/sort_s.h	/^    bool    keep_orig() const {  return _keep_orig_file; }$/;"	f	class:ssm_sort::sort_keys_t
key	src/sm/btcursor.h	/^    char*            key()     { return _eof ? 0 : _space; }$/;"	f	class:bt_cursor_t
key	src/sm/btree_p.h	/^    const cvec_t&        key() const    { return _key; }$/;"	f	class:btrec_t
key	src/sm/histo.h	/^    stid_t const    key;$/;"	m	class:histoid_compare_t
key	src/sm/keyed.h	/^inline const char* keyrec_t::key() const    { return _body(); }$/;"	f	class:keyrec_t
key	src/sm/tests/create_rec.cpp	/^    static const char* key;$/;"	m	struct:file_info_t	file:
key	src/sm/tests/create_rec.cpp	/^const char* file_info_t::key = "SCANFILE";$/;"	m	class:file_info_t	file:
key	src/sm/tests/file_scan.cpp	/^    static const char* key;$/;"	m	struct:file_info_t	file:
key	src/sm/tests/file_scan.cpp	/^const char* file_info_t::key = "SCANFILE";$/;"	m	class:file_info_t	file:
key	src/sm/tests/file_scan_many.cpp	/^    char        key[120];$/;"	m	struct:file_info_t	file:
key	src/sm/tests/file_scan_many.cpp	/^    char     *key;$/;"	m	class:smthread_main_t	file:
key	src/sm/tests/log_exceed.cpp	/^    static const char* key;$/;"	m	struct:file_info_t	file:
key	src/sm/tests/log_exceed.cpp	/^const char* file_info_t::key = "SCANFILE";$/;"	m	class:file_info_t	file:
key	src/sm/tests/mrbtrees_test.cpp	/^  static const char* key;$/;"	m	struct:file_info_t	file:
key	src/sm/tests/mrbtrees_test.cpp	/^const char* file_info_t::key = "SCANFILE";$/;"	m	class:file_info_t	file:
key	src/sm/tests/rtree_example.cpp	/^    static const char* key;$/;"	m	struct:file_info_t	file:
key	src/sm/tests/rtree_example.cpp	/^const char* file_info_t::key = "SCANFILE";$/;"	m	class:file_info_t	file:
key	src/sm/tests/sort_stream.cpp	/^    static const char* key;$/;"	m	struct:file_info_t	file:
key	src/sm/tests/sort_stream.cpp	/^const char* file_info_t::key = "SCANFILE";$/;"	m	class:file_info_t	file:
key	src/sm/tests/vtable_example.cpp	/^    static const char* key;$/;"	m	struct:file_info_t	file:
key	src/sm/tests/vtable_example.cpp	/^const char* file_info_t::key = "SCANFILE";$/;"	m	class:file_info_t	file:
key_bs	src/sm/sm_du_stats.h	/^    base_stat_t        key_bs;        \/* space used for keys      *\/$/;"	m	struct:btree_lf_stats_t
key_cookie_t	src/sm/newsort.cpp	/^typedef ssm_sort::key_cookie_t key_cookie_t;$/;"	t	file:
key_cookie_t	src/sm/sort_s.h	/^    explicit key_cookie_t () : c(NULL) { }$/;"	f	class:ssm_sort::key_cookie_t
key_cookie_t	src/sm/sort_s.h	/^    explicit key_cookie_t (int i) {$/;"	f	class:ssm_sort::key_cookie_t
key_cookie_t	src/sm/sort_s.h	/^    explicit key_cookie_t (void *v):c(v) { }$/;"	f	class:ssm_sort::key_cookie_t
key_cookie_t	src/sm/sort_s.h	/^class key_cookie_t {$/;"	c	namespace:ssm_sort
key_info_t	src/sm/newsort.cpp	/^typedef ssm_sort::key_info_t key_info_t;$/;"	t	file:
key_info_t	src/sm/sm.h	/^    typedef ssm_sort::key_info_t key_info_t;$/;"	t	class:ss_m
key_info_t	src/sm/sort.cpp	/^typedef ssm_sort::key_info_t key_info_t;$/;"	t	file:
key_info_t	src/sm/sort.h	/^    typedef ssm_sort::key_info_t key_info_t;$/;"	t	class:run_scan_t
key_info_t	src/sm/sort.h	/^  typedef ssm_sort::key_info_t key_info_t;$/;"	t	class:sort_stream_i
key_info_t	src/sm/sort_s.h	/^    key_info_t() {$/;"	f	struct:ssm_sort::key_info_t
key_info_t	src/sm/sort_s.h	/^struct key_info_t {$/;"	s	namespace:ssm_sort
key_location_t	src/sm/sort_s.h	/^    key_location_t() : _in_hdr(false), _off(0), _length(0)  {}$/;"	f	class:ssm_sort::key_location_t
key_location_t	src/sm/sort_s.h	/^    key_location_t(const key_location_t &old) : $/;"	f	class:ssm_sort::key_location_t
key_location_t	src/sm/sort_s.h	/^class key_location_t $/;"	c	namespace:ssm_sort
key_meta_t	src/sm/sort_s.h	/^        key_meta_t() : _cb_keycmp(0), _cb_keyinfo(0), $/;"	f	class:ssm_sort::sort_keys_t::key_meta_t
key_meta_t	src/sm/sort_s.h	/^        key_meta_t(const key_meta_t &old) : $/;"	f	class:ssm_sort::sort_keys_t::key_meta_t
key_meta_t	src/sm/sort_s.h	/^    class key_meta_t {$/;"	c	class:ssm_sort::sort_keys_t
key_of	src/fc/w_list.h	/^    const K&            key_of(const T& t)  {$/;"	f	class:w_keyed_list_t
key_ranges_map	src/sm/key_ranges_map.cpp	/^key_ranges_map::key_ranges_map()$/;"	f	class:key_ranges_map
key_ranges_map	src/sm/key_ranges_map.cpp	/^key_ranges_map::key_ranges_map(const sinfo_s& sinfo,$/;"	f	class:key_ranges_map
key_ranges_map	src/sm/key_ranges_map.h	/^class key_ranges_map$/;"	c
key_type_s	src/sm/sm_s.h	/^    key_type_s(type_t t = (type_t)0, char v = 0, uint2_t l = 0) $/;"	f	struct:key_type_s
key_type_s	src/sm/sm_s.h	/^struct key_type_s {$/;"	s
key_type_t	src/sm/sort_s.h	/^    typedef sortorder::keytype key_type_t;$/;"	t	struct:ssm_sort::key_info_t
key_values	src/sm/data_access_histogram.h	/^    typedef map< lpid_t, vector<foo*> >                 key_values;$/;"	t	class:data_access_histogram
key_values_citer	src/sm/data_access_histogram.h	/^    typedef map< lpid_t, vector<foo*> >::const_iterator key_values_citer;$/;"	t	class:data_access_histogram
key_values_iter	src/sm/data_access_histogram.h	/^    typedef map< lpid_t, vector<foo*> >::iterator       key_values_iter;$/;"	t	class:data_access_histogram
keycmp	src/sm/sort_s.h	/^    CF keycmp(int i) const {$/;"	f	class:ssm_sort::sort_keys_t
keycreate	src/sm/sort_s.h	/^    CSKF keycreate(int i) const {$/;"	f	class:ssm_sort::sort_keys_t
keydescr	src/sm/sm.h	/^    char        *keydescr;    $/;"	m	class:sm_store_info_t
keydescrlen	src/sm/sm.h	/^    int        keydescrlen;    $/;"	m	class:sm_store_info_t
keyed_p	src/sm/keyed.h	/^class keyed_p : public page_p {$/;"	c
keyrec_t	src/sm/keyed.h	/^class keyrec_t {$/;"	c
keys	src/sm/sort.cpp	/^    char** keys;           \/\/ keys to be sorted$/;"	m	struct:sort_desc_t	file:
keytype	src/sm/lexify.h	/^    enum keytype {$/;"	g	class:sortorder
ki	src/sm/sort.h	/^    key_info_t        ki;        \/\/ key info$/;"	m	class:sort_stream_i
kind	src/sm/crash.cpp	/^        debuginfo_enum kind;$/;"	m	struct:debuginfo	file:
kind_strings	src/common/tests/latch1.cpp	/^    static const char *kind_strings[];$/;"	m	class:latch_thread_t	file:
kind_strings	src/common/tests/latch1.cpp	/^const char *latch_thread_t::kind_strings[] = {$/;"	m	class:latch_thread_t	file:
kind_t	src/sm/logtype_gen.h	/^enum kind_t { $/;"	g
kinfo	src/sm/sort.h	/^    key_info_t kinfo;   \/\/ key description (location, len, type)$/;"	m	class:run_scan_t
klen	src/fc/nbox.h	/^    int   klen() const { return 2*sizeof(int)*dim; }$/;"	f	class:nbox_t
klen	src/sm/btcursor.h	/^    int             klen() const   { return _klen; } $/;"	f	class:bt_cursor_t
klen	src/sm/btree_p.h	/^    smsize_t            klen() const    { return _key.size(); }$/;"	f	class:btrec_t
klen	src/sm/keyed.h	/^    smsize_t klen() const     { return _hdr.klen; }$/;"	f	class:keyrec_t
klen	src/sm/keyed.h	/^    uint2_t    klen;$/;"	m	struct:keyrec_t::hdr_s
klen	src/sm/logrec.cpp	/^    uint2_t        klen;$/;"	m	struct:btree_insert_t	file:
klen	src/sm/logrec.cpp	/^    uint2_t        klen;$/;"	m	struct:rtree_insert_t	file:
klen	src/sm/sort.cpp	/^    uint2_t klen;         \/\/ key length$/;"	m	struct:file_sort_key_t	file:
klen	src/sm/sort.cpp	/^    uint2_t klen;         \/\/ key length$/;"	m	struct:sort_key_t	file:
kt_b	src/sm/lexify.h	/^        kt_b,$/;"	e	enum:sortorder::keytype
kt_f4	src/sm/lexify.h	/^        kt_f4, kt_f8, $/;"	e	enum:sortorder::keytype
kt_f8	src/sm/lexify.h	/^        kt_f4, kt_f8, $/;"	e	enum:sortorder::keytype
kt_i1	src/sm/lexify.h	/^        kt_i1, kt_u1, $/;"	e	enum:sortorder::keytype
kt_i2	src/sm/lexify.h	/^        kt_i2, kt_u2, $/;"	e	enum:sortorder::keytype
kt_i4	src/sm/lexify.h	/^        kt_i4, kt_u4, $/;"	e	enum:sortorder::keytype
kt_i8	src/sm/lexify.h	/^        kt_i8, kt_u8,$/;"	e	enum:sortorder::keytype
kt_nosuch	src/sm/lexify.h	/^        kt_nosuch,$/;"	e	enum:sortorder::keytype
kt_spatial	src/sm/lexify.h	/^        kt_spatial $/;"	e	enum:sortorder::keytype
kt_u1	src/sm/lexify.h	/^        kt_i1, kt_u1, $/;"	e	enum:sortorder::keytype
kt_u2	src/sm/lexify.h	/^        kt_i2, kt_u2, $/;"	e	enum:sortorder::keytype
kt_u4	src/sm/lexify.h	/^        kt_i4, kt_u4, $/;"	e	enum:sortorder::keytype
kt_u8	src/sm/lexify.h	/^        kt_i8, kt_u8,$/;"	e	enum:sortorder::keytype
kval	src/fc/nbox.h	/^    const void* kval() const { return (void *) array; }$/;"	f	class:nbox_t
kval1	src/sm/newsort.cpp	/^int sort_keys_t::f4_cmp(uint4_t W_IFDEBUG3(klen1), const void* kval1,$/;"	v
kval1	src/sm/newsort.cpp	/^int sort_keys_t::f8_cmp(uint4_t W_IFDEBUG3(klen1), const void* kval1,$/;"	v
kval1	src/sm/newsort.cpp	/^int sort_keys_t::int1_cmp(uint4_t W_IFDEBUG3(klen1), const void* kval1,$/;"	v
kval1	src/sm/newsort.cpp	/^int sort_keys_t::int2_cmp(uint4_t W_IFDEBUG3(klen1), const void* kval1,$/;"	v
kval1	src/sm/newsort.cpp	/^int sort_keys_t::int4_cmp(uint4_t W_IFDEBUG3(klen1), const void* kval1,$/;"	v
kval1	src/sm/newsort.cpp	/^int sort_keys_t::int8_cmp(uint4_t W_IFDEBUG3(klen1), const void* kval1,$/;"	v
kval1	src/sm/newsort.cpp	/^int sort_keys_t::uint1_cmp(uint4_t W_IFDEBUG3(klen1), const void* kval1,$/;"	v
kval1	src/sm/newsort.cpp	/^int sort_keys_t::uint2_cmp(uint4_t W_IFDEBUG3(klen1), const void* kval1,$/;"	v
kval1	src/sm/newsort.cpp	/^int sort_keys_t::uint4_cmp(uint4_t W_IFDEBUG3(klen1), const void* kval1, $/;"	v
kval1	src/sm/newsort.cpp	/^int sort_keys_t::uint8_cmp(uint4_t W_IFDEBUG3(klen1), const void* kval1,$/;"	v
kval1	src/sm/sort.cpp	/^_double_rcmp(uint4_t W_IFDEBUG9(klen1), const void* kval1,$/;"	v	file:
kval1	src/sm/sort.cpp	/^_float_rcmp(uint4_t W_IFDEBUG9(klen1), const void* kval1,$/;"	v	file:
kval1	src/sm/sort.cpp	/^_int1_rcmp(uint4_t W_IFDEBUG9(klen1), const void* kval1,$/;"	v	file:
kval1	src/sm/sort.cpp	/^_int2_rcmp(uint4_t W_IFDEBUG9(klen1), const void* kval1,$/;"	v	file:
kval1	src/sm/sort.cpp	/^_int4_rcmp(uint4_t W_IFDEBUG9(klen1), const void* kval1,$/;"	v	file:
kval1	src/sm/sort.cpp	/^_uint1_rcmp(uint4_t W_IFDEBUG9(klen1), const void* kval1,$/;"	v	file:
kval1	src/sm/sort.cpp	/^_uint2_rcmp(uint4_t W_IFDEBUG9(klen1), const void* kval1,$/;"	v	file:
kval1	src/sm/sort.cpp	/^_uint4_rcmp(uint4_t W_IFDEBUG9(klen1), const void* kval1,$/;"	v	file:
kvl	src/sm/tests/lockid_test.cpp	/^kvl_t    kvl;$/;"	v
kvl_DEPENDENCIES	src/common/tests/Makefile	/^kvl_DEPENDENCIES = ..\/libcommon.a ..\/..\/sthread\/libsthread.a \\$/;"	m
kvl_LDADD	src/common/tests/Makefile	/^kvl_LDADD = $(LDADD)$/;"	m
kvl_OBJECTS	src/common/tests/Makefile	/^kvl_OBJECTS = $(am_kvl_OBJECTS)$/;"	m
kvl_SOURCES	src/common/tests/Makefile	/^kvl_SOURCES = kvl.cpp$/;"	m
kvl_t	src/common/kvl_t.h	/^kvl_t::kvl_t()$/;"	f	class:kvl_t
kvl_t	src/common/kvl_t.h	/^kvl_t::kvl_t(const kvl_t& k)$/;"	f	class:kvl_t
kvl_t	src/common/kvl_t.h	/^kvl_t::kvl_t(stid_t id, const cvec_t& v)$/;"	f	class:kvl_t
kvl_t	src/common/kvl_t.h	/^kvl_t::kvl_t(stid_t id, const cvec_t& v1, const cvec_t& v2)$/;"	f	class:kvl_t
kvl_t	src/common/kvl_t.h	/^struct kvl_t {$/;"	s
l	src/fc/tests/ntime.cpp	/^    stime_test_t    l;$/;"	m	struct:stime_pair	file:
l	src/fc/tests/rand.cpp	/^    long long l;$/;"	m	union:__anon132	file:
l	src/fc/tests/test_stat_struct_gen.h	/^ w_base_t::base_stat_t l;$/;"	v
l	src/sm/lock_s.h	/^        w_base_t::uint8_t l[2]; $/;"	m	union:lockid_t::__anon61
l_and	src/sm/page.h	/^        l_and,$/;"	e	enum:page_p::logical_operation
l_none	src/sm/page.h	/^        l_none=0,$/;"	e	enum:page_p::logical_operation
l_not	src/sm/page.h	/^        l_not$/;"	e	enum:page_p::logical_operation
l_or	src/sm/page.h	/^        l_or,$/;"	e	enum:page_p::logical_operation
l_set	src/sm/page.h	/^        l_set, \/\/ same as a 1-byte splice$/;"	e	enum:page_p::logical_operation
l_xor	src/sm/page.h	/^        l_xor,$/;"	e	enum:page_p::logical_operation
large	src/sm/sm_du_stats.h	/^    SmStoreMetaStats    large;$/;"	m	class:SmFileMetaStats
largeSnum	src/sm/sm_du_stats.h	/^    snum_t            largeSnum;$/;"	m	class:SmFileMetaStats
large_impl	src/sm/file_s.h	/^inline int record_t::large_impl() const    $/;"	f	class:record_t
large_impl	src/sm/pin.h	/^    int        large_impl() const  { _check_lsn(); return _rec->large_impl();}$/;"	f	class:pin_i
large_stat_t	src/fc/w_base.h	/^    typedef uint8_t         large_stat_t; $/;"	t	class:w_base_t
large_stid	src/sm/sdesc.h	/^    const stid_t        large_stid() const {$/;"	f	class:sdesc_t
large_store	src/sm/sdesc.h	/^    snum_t        large_store;        \/\/ store for large record pages$/;"	m	struct:sinfo_s
large_store	src/sm/sm.h	/^    snum_t    large_store; $/;"	m	class:sm_store_info_t
last	src/fc/w_list.h	/^    T*                last()  { return w_list_t<T,LOCK>::bottom(); }$/;"	f	class:w_keyed_list_t
last	src/sm/newsort.cpp	/^    bool last() const { return (_high == 1)? true : false; }$/;"	f	class:phase_mgr
last_allocated_page	src/sm/vol.cpp	/^vol_t::last_allocated_page( snum_t snum, lpid_t&   pid)$/;"	f	class:vol_t
last_box	src/sm/rtree.cpp	/^    nbox_t* last_box;$/;"	m	class:rtld_cache_t	file:
last_clear	src/sm/pmap.h	/^    inline    int    last_clear(int start) const {$/;"	f	struct:Pmap
last_clr	src/sm/extent.h	/^extlink_t::last_clr(int start) const$/;"	f	class:extlink_t
last_extent	src/sm/histo.cpp	/^static __thread struct { extnum_t e; snum_t s; } last_extent = {0,0};$/;"	v	typeref:struct:__anon51	file:
last_extent	src/sm/vol.cpp	/^vol_t::last_extent(snum_t fnum, extnum_t &ext, bool *empty\/*=NULL*\/)$/;"	f	class:vol_t
last_inputfile_page_read	src/sm/newsort.cpp	/^    file_p        last_inputfile_page_read;$/;"	m	class:ssm_sort::run_mgr	file:
last_log	src/sm/xct.h	/^xct_t::last_log() const$/;"	f	class:xct_t
last_lsn	src/sm/logrec.h	/^    lsn_t                last_lsn;$/;"	m	struct:chkpt_xct_tab_t::xrec_t
last_lsn	src/sm/xct.h	/^xct_t::last_lsn() const$/;"	f	class:xct_t
last_marker	src/sm/sort.cpp	/^    rid_t last_marker;  \/\/ rid of last marker$/;"	m	struct:sort_desc_t	file:
last_page	src/sm/file.cpp	/^file_m::last_page(const stid_t& fid, lpid_t& pid, bool* allocated)$/;"	f	class:file_m
last_page	src/sm/newsort.cpp	/^    shpid_t          last_page() const { return _last_page; }$/;"	f	class:run_t
last_page	src/sm/sm_io.cpp	/^io_m::last_page($/;"	f	class:io_m
last_page_written	src/sm/newsort.cpp	/^    file_p&        last_page_written,$/;"	v
last_page_written	src/sm/newsort.cpp	/^    file_p&       last_page_written,$/;"	v
last_pid	src/sm/file.cpp	/^record_t::last_pid(const file_p& page) const$/;"	f	class:record_t
last_pid	src/sm/lgrec.h	/^    lpid_t     last_pid()      const$/;"	f	class:lg_tag_chunks_h
last_pid	src/sm/lgrec.h	/^    lpid_t     last_pid()      const$/;"	f	class:lg_tag_indirect_h
last_pid	src/sm/lgrec.h	/^    shpid_t     last_pid()       const { return first_pid+npages-1; }$/;"	f	struct:lg_chunk_s
last_pid	src/sm/lgrec.h	/^    shpid_t    last_pid() const$/;"	f	class:lgindex_p
last_rc	src/sm/log.h	/^    w_rc_t                       last_rc;$/;"	m	class:log_i
last_reserved_page	src/sm/vol.cpp	/^vol_t::last_reserved_page(snum_t snum, lpid_t&  pid, bool &allocated)$/;"	f	class:vol_t
last_rid	src/sm/sort.cpp	/^    rid_t last_rid;     \/\/ rid of last record in last run$/;"	m	struct:sort_desc_t	file:
last_rid	src/sm/tests/mrbtrees_test.cpp	/^  rid_t       last_rid;$/;"	m	struct:file_info_t	file:
last_run	src/sm/newsort.cpp	/^    int                last_run() const { return _last_run; }$/;"	f	class:tape_t
last_set	src/sm/extent.h	/^extlink_t::last_set(int start) const$/;"	f	class:extlink_t
last_set	src/sm/pmap.h	/^    inline    int    last_set(int start) const {$/;"	f	struct:Pmap
last_skip_lsn	src/sm/partition.h	/^    const lsn_t&       last_skip_lsn() const { return _last_skip_lsn; }$/;"	f	class:partition_t
last_slot	src/sm/newsort.cpp	/^    slotid_t         last_slot() const { return _last_slot; }$/;"	f	class:run_t
lastpos	src/common/regex_engine.cpp	/^    char **lastpos;        \/* [nplus+1] *\/$/;"	m	struct:match	file:
laststate	src/common/regex2.h	/^    sopno laststate;    \/* the final OEND *\/$/;"	m	struct:re_guts
latch	src/sm/bf_s.h	/^    latch_t     latch;          \/\/ latch on the frame$/;"	m	class:bfcb_t
latch1_DEPENDENCIES	src/common/tests/Makefile	/^latch1_DEPENDENCIES = ..\/libcommon.a ..\/..\/sthread\/libsthread.a \\$/;"	m
latch1_LDADD	src/common/tests/Makefile	/^latch1_LDADD = $(LDADD)$/;"	m
latch1_OBJECTS	src/common/tests/Makefile	/^latch1_OBJECTS = $(am_latch1_OBJECTS)$/;"	m
latch1_SOURCES	src/common/tests/Makefile	/^latch1_SOURCES = latch1.cpp$/;"	m
latch_acquire	src/common/latch.cpp	/^latch_t::latch_acquire(latch_mode_t mode, sthread_t::timeout_in_ms timeout) $/;"	f	class:latch_t
latch_cnt	src/common/latch.h	/^    int                     latch_cnt() const { return _total_count; }$/;"	f	class:latch_t
latch_cnt	src/common/tests/latch1.cpp	149;"	d	file:
latch_holder_t	src/common/latch.h	/^    latch_holder_t()$/;"	f	class:latch_holder_t
latch_holder_t	src/common/latch.h	/^class latch_holder_t $/;"	c
latch_lock_get_slot	src/sm/histo.cpp	/^histoid_t::latch_lock_get_slot($/;"	f	class:histoid_t
latch_map	src/common/store_latch_manager.h	/^    typedef std::map<stid_t, latch_t*, stid_cmp> latch_map;$/;"	t	class:store_latch_manager
latch_mode	src/sm/bf.cpp	/^bf_m::latch_mode(const page_s* buf)$/;"	f	class:bf_m
latch_mode	src/sm/bf_core.cpp	/^bf_core_m::latch_mode(const bfcb_t* p) const$/;"	f	class:bf_core_m
latch_mode	src/sm/btree_impl.h	/^    latch_mode_t          latch_mode() const { check(); return _latch.mode(); }$/;"	f	class:tree_latch
latch_mode	src/sm/page.h	/^page_p::latch_mode() const$/;"	f	class:page_p
latch_mode_str	src/common/latch.cpp	/^const char* const  latch_t::latch_mode_str[3] = { "NL", "SH", "EX" };$/;"	m	class:latch_t	file:
latch_mode_str	src/common/latch.h	/^    static const char* const    latch_mode_str[3];$/;"	m	class:latch_t
latch_mode_str	src/common/tests/latch1.cpp	/^const char* const  latch_mode_str[3] = { "NL", "SH", "EX" };$/;"	v
latch_mode_t	src/common/latch.h	/^enum latch_mode_t { LATCH_NL = 0, LATCH_SH = 1, LATCH_EX = 2,$/;"	g
latch_release	src/common/latch.cpp	/^void latch_t::latch_release() $/;"	f	class:latch_t
latch_t	src/common/latch.cpp	/^latch_t::latch_t(const char* const desc) :$/;"	f	class:latch_t
latch_t	src/common/latch.h	/^class latch_t : public sthread_named_base_t {$/;"	c
latch_thread_id_t	src/common/tests/latch1.cpp	/^    latch_thread_id_t (int x): _id(x) {};$/;"	f	struct:latch_thread_id_t
latch_thread_id_t	src/common/tests/latch1.cpp	/^struct latch_thread_id_t {$/;"	s	file:
latch_thread_t	src/common/tests/latch1.cpp	/^class latch_thread_t : public sthread_t {$/;"	c	file:
latch_thread_t	src/common/tests/latch1.cpp	/^latch_thread_t::latch_thread_t(int _id)$/;"	f	class:latch_thread_t
latched_by_me	src/sm/bf_core.cpp	/^bf_core_m::latched_by_me( bfcb_t* p) const$/;"	f	class:bf_core_m
layers	src/sm/rtree.cpp	/^    rtld_cache_t*         layers;$/;"	m	class:rtld_stk_t	file:
layout_t	src/sm/extent.h	/^    struct layout_t {$/;"	s	class:extlink_p
layout_t	src/sm/extent.h	/^    struct layout_t {$/;"	s	class:stnode_p
le	src/sm/sm_base.h	/^                 gt=gtOp, ge=geOp, lt=ltOp, le=leOp };$/;"	e	enum:smlevel_0::cmp_t
leNegInf	src/fc/w_base.h	/^    NegInf=0x100, eqNegInf, gtNegInf, geNegInf, ltNegInf, leNegInf,$/;"	e	enum:w_base_t::CompareOp
leOp	src/fc/w_base.h	/^    badOp=0x0, eqOp=0x1, gtOp=0x2, geOp=0x3, ltOp=0x4, leOp=0x5,$/;"	e	enum:w_base_t::CompareOp
lePosInf	src/fc/w_base.h	/^    PosInf=0x400, eqPosInf, gtPosInf, gePosInf, ltPosInf, lePosInf$/;"	e	enum:w_base_t::CompareOp
leadz	src/fc/w_input.cpp	/^enum states {   start, sgned, leadz,  $/;"	e	enum:states	file:
leaf_pages	src/sm/btree_bl.cpp	/^    uint4_t        leaf_pages()        { return _leaf_pages; }$/;"	f	class:btsink_t
leaf_pages	src/sm/rtree.cpp	/^    uint4_t leaf_pages;$/;"	m	class:rtld_stk_t	file:
leaf_pg	src/sm/sm_du_stats.h	/^    btree_lf_stats_t    leaf_pg;  \/\/ byte counts for leaf pages$/;"	m	struct:btree_stats_t
leaf_pg_cnt	src/sm/sm_du_stats.h	/^    base_stat_t        leaf_pg_cnt;$/;"	m	struct:rtree_stats_t
leaf_pg_cnt	src/sm/sm_du_stats.h	/^    base_stat_t     leaf_pg_cnt; \/\/ level-1 pages found by tree traversal$/;"	m	struct:btree_stats_t
leaf_stats	src/sm/btree_p.cpp	/^btree_p::leaf_stats(btree_lf_stats_t& _stats)$/;"	f	class:btree_p
left	src/sm/newsort.cpp	/^    smsize_t left() const { return _left; }$/;"	f	class:limited_space
len	src/common/vec_t.h	/^    size_t         len;$/;"	m	struct:vec_pair_t
len	src/common/vec_t.h	/^    size_t        len(int index) const { return (index >= 0 && index < _cnt) ? $/;"	f	class:vec_t
len	src/sm/logrec.cpp	/^    uint2_t len;$/;"	m	class:page_mark_t	file:
len	src/sm/page.h	/^        slot_length_t len;$/;"	m	struct:page_p::splice_info_t
len	src/sm/sort_s.h	/^    w_base_t::uint4_t    len;        $/;"	m	struct:ssm_sort::key_info_t
len1	src/sm/logrec.cpp	/^    slot_length_t         len1;        $/;"	m	class:page_shift_t	file:
length	src/common/w_opaque.h	/^    uint4_t          length() const {$/;"	f	class:opaque_quantity
length	src/sm/logrec.h	/^logrec_t::length() const$/;"	f	class:logrec_t
length	src/sm/page_s.h	/^        slot_length_t length;$/;"	m	struct:page_s::slot_t
length	src/sm/pin.h	/^    smsize_t   length() const     { _check_lsn(); return _len;}$/;"	f	class:pin_i
length	src/sm/sm_s.h	/^    uint2_t        length;        $/;"	m	struct:key_type_s
length	src/sm/smsh/sort_funcs.h	/^    smsize_t      length;$/;"	m	struct:metadata
length	src/sm/sort_s.h	/^    smsize_t   length;$/;"	m	struct:ssm_sort::generic_CSKF_cookie
length	src/sm/sort_s.h	/^    smsize_t length(int i) const {$/;"	f	class:ssm_sort::sort_keys_t
level	src/sm/btree_p.h	/^        int2_t    level;        \/\/ leaf if 1, non-leaf if > 1$/;"	m	struct:btree_p::btctrl_t
level	src/sm/btree_p.h	/^inline int btree_p::level() const$/;"	f	class:btree_p
level	src/sm/rtree_p.h	/^    int2_t    level;    \/\/ leaf if 1, non-leaf if > 1$/;"	m	struct:rtctrl_t
level	src/sm/rtree_p.h	/^inline int rtree_base_p::level() const$/;"	f	class:rtree_base_p
level_cnt	src/sm/sm_du_stats.h	/^    base_stat_t        level_cnt;     \/* number of levels in rtree *\/$/;"	m	struct:rtree_stats_t
level_cnt	src/sm/sm_du_stats.h	/^    base_stat_t     level_cnt;    \/* number of levels in btree *\/$/;"	m	struct:btree_stats_t
levels	src/sm/newsort.cpp	/^    int        levels() const { return _levels; }$/;"	f	class:fib_t
lex_cmp	src/sm/smsh/shell2.cpp	/^int lex_cmp(const void *_p, const void *_q, int len) $/;"	f
lex_cmp1	src/sm/smsh/shell2.cpp	/^int lex_cmp1(const void *p, const void *q) $/;"	f
lex_cmp23	src/sm/smsh/shell2.cpp	/^int lex_cmp23(const void *p, const void *q) $/;"	f
lex_cmplarge	src/sm/smsh/shell2.cpp	/^int lex_cmplarge(const void *p, const void *q) $/;"	f
lex_cmpv	src/sm/smsh/shell2.cpp	/^int lex_cmpv(const void *p, const void *q) $/;"	f
lexico	src/sm/smsh/sort_funcs.h	/^    bool     lexico;$/;"	m	struct:metadata
lexify	src/sm/lexify.cpp	/^sortorder::lexify($/;"	f	class:sortorder
lexify_index_key	src/sm/sort_s.h	/^    CSKF    lexify_index_key() const { return _cb_lexify_index_key; }$/;"	f	class:ssm_sort::sort_keys_t
lexify_index_key_cookie	src/sm/sort_s.h	/^    key_cookie_t     lexify_index_key_cookie() const { return _cb_lexify_index_key_cookie; }$/;"	f	class:ssm_sort::sort_keys_t
lg_chunk_s	src/sm/lgrec.h	/^    lg_chunk_s() : first_pid(0), npages(0) {}$/;"	f	struct:lg_chunk_s
lg_chunk_s	src/sm/lgrec.h	/^struct lg_chunk_s {$/;"	s
lg_rec_cnt	src/sm/sm_du_stats.h	/^    base_stat_t        lg_rec_cnt;        \/* # large-obj records *\/$/;"	m	struct:file_pg_stats_t
lg_rec_page_space	src/sm/app_support.h	/^    lg_rec_page_space = page_s::data_sz$/;"	e	enum:ssm_constants::__anon68
lg_rec_page_space	src/sm/smstats.h	/^    u_long lg_rec_page_space;    $/;"	m	struct:sm_config_info_t
lg_tag_chunks_h	src/sm/lgrec.h	/^    lg_tag_chunks_h(const file_p& p, lg_tag_chunks_s& chunks) :$/;"	f	class:lg_tag_chunks_h
lg_tag_chunks_h	src/sm/lgrec.h	/^class lg_tag_chunks_h {$/;"	c
lg_tag_chunks_s	src/sm/lgrec.h	/^    lg_tag_chunks_s(snum_t s) : store(s), chunk_cnt(0) {}$/;"	f	struct:lg_tag_chunks_s
lg_tag_chunks_s	src/sm/lgrec.h	/^struct lg_tag_chunks_s {$/;"	s
lg_tag_indirect_h	src/sm/lgrec.h	/^    lg_tag_indirect_h(const file_p& p, lg_tag_indirect_s& i, uint4_t page_cnt) :$/;"	f	class:lg_tag_indirect_h
lg_tag_indirect_h	src/sm/lgrec.h	/^class lg_tag_indirect_h : public w_base_t {$/;"	c
lg_tag_indirect_s	src/sm/lgrec.h	/^    lg_tag_indirect_s(snum_t s) : indirect_root(0), store(s) {}$/;"	f	struct:lg_tag_indirect_s
lg_tag_indirect_s	src/sm/lgrec.h	/^struct lg_tag_indirect_s {$/;"	s
lgdata_p	src/sm/lgrec.h	/^class lgdata_p : public page_p {$/;"	c
lgdata_pg	src/sm/sm_du_stats.h	/^    lgdata_pg_stats_t    lgdata_pg;   \/\/ byte counts for slots$/;"	m	struct:file_stats_t
lgdata_pg_cnt	src/sm/sm_du_stats.h	/^    base_stat_t            lgdata_pg_cnt; \/\/ large data pages needed to$/;"	m	struct:file_stats_t
lgdata_pg_stats_t	src/sm/sm_du_stats.h	/^    NORET             lgdata_pg_stats_t() {clear();}$/;"	f	struct:lgdata_pg_stats_t
lgdata_pg_stats_t	src/sm/sm_du_stats.h	/^struct lgdata_pg_stats_t {$/;"	s
lgindex_p	src/sm/lgrec.h	/^class lgindex_p : public page_p {$/;"	c
lgindex_pg	src/sm/sm_du_stats.h	/^    lgindex_pg_stats_t    lgindex_pg;  \/\/ byte counts for slots$/;"	m	struct:file_stats_t
lgindex_pg_cnt	src/sm/sm_du_stats.h	/^    base_stat_t            lgindex_pg_cnt; \/\/ large index pages references in$/;"	m	struct:file_stats_t
lgindex_pg_stats_t	src/sm/sm_du_stats.h	/^    NORET              lgindex_pg_stats_t() {clear();}$/;"	f	struct:lgindex_pg_stats_t
lgindex_pg_stats_t	src/sm/sm_du_stats.h	/^struct lgindex_pg_stats_t {$/;"	s
lgmetadata	src/sm/newsort.cpp	/^    const sm_skey_t&         lgmetadata() const { return _lgmetadata; }$/;"	f	class:meta_header_t
lgmetadata_non_const	src/sm/newsort.cpp	/^    sm_skey_t&               lgmetadata_non_const() { return _lgmetadata; }$/;"	f	class:meta_header_t
lgmetasize	src/sm/newsort.cpp	/^    smsize_t         lgmetasize() const { return smsize_t(__persistent_part._lgmeta); }$/;"	f	class:meta_header_t
lgrec_type	src/sm/sort.cpp	/^lgrec_type(uint2_t rec_sz)$/;"	f	file:
lib_LIBRARIES	src/atomic_ops/Makefile	/^lib_LIBRARIES = libatomic_ops.a$/;"	m
lib_LIBRARIES	src/common/Makefile	/^lib_LIBRARIES = libcommon.a$/;"	m
lib_LIBRARIES	src/fc/Makefile	/^lib_LIBRARIES = libfc.a$/;"	m
lib_LIBRARIES	src/sm/Makefile	/^lib_LIBRARIES = libsm.a$/;"	m
lib_LIBRARIES	src/sthread/Makefile	/^lib_LIBRARIES = libsthread.a$/;"	m
lib_dir	src/sm/smsh/tcl_thread.h	/^    const char *                lib_dir;$/;"	m	class:tcl_thread_t
libatomic_ops_a_AR	src/atomic_ops/Makefile	/^libatomic_ops_a_AR = $(AR) $(ARFLAGS)$/;"	m
libatomic_ops_a_LIBADD	src/atomic_ops/Makefile	/^libatomic_ops_a_LIBADD =$/;"	m
libatomic_ops_a_OBJECTS	src/atomic_ops/Makefile	/^libatomic_ops_a_OBJECTS = $(am_libatomic_ops_a_OBJECTS)$/;"	m
libatomic_ops_a_SOURCES	src/atomic_ops/Makefile	/^libatomic_ops_a_SOURCES = $(OSOURCES)$/;"	m
libcommon_a_AR	src/common/Makefile	/^libcommon_a_AR = $(AR) $(ARFLAGS)$/;"	m
libcommon_a_LIBADD	src/common/Makefile	/^libcommon_a_LIBADD =$/;"	m
libcommon_a_OBJECTS	src/common/Makefile	/^libcommon_a_OBJECTS = $(am_libcommon_a_OBJECTS)$/;"	m
libcommon_a_SOURCES	src/common/Makefile	/^libcommon_a_SOURCES = \\$/;"	m
libdir	Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	config/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/atomic_ops/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/atomic_ops/asm_linkage/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/atomic_ops/asm_linkage/usr/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/atomic_ops/asm_linkage/usr/src/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/atomic_ops/atomic_ops/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/atomic_ops/atomic_ops/amd64/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/atomic_ops/atomic_ops/i386/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/atomic_ops/atomic_ops/sparc/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/atomic_ops/ia32/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/atomic_ops/ia32/sys/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/atomic_ops/intel/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/atomic_ops/intel/ia32/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/atomic_ops/intel/ia32/sys/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/atomic_ops/intel/sys/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/atomic_ops/sparc/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/atomic_ops/sparc/sys/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/common/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/common/tests/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/fc/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/fc/tests/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/sm/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/sm/smsh/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/sm/smsh/lib/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/sm/smsh/scripts/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/sm/tests/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/sthread/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/sthread/tests/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	tools/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libexecdir	Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	config/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/atomic_ops/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/atomic_ops/asm_linkage/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/atomic_ops/asm_linkage/usr/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/atomic_ops/asm_linkage/usr/src/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/atomic_ops/atomic_ops/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/atomic_ops/atomic_ops/amd64/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/atomic_ops/atomic_ops/i386/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/atomic_ops/atomic_ops/sparc/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/atomic_ops/ia32/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/atomic_ops/ia32/sys/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/atomic_ops/intel/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/atomic_ops/intel/ia32/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/atomic_ops/intel/ia32/sys/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/atomic_ops/intel/sys/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/atomic_ops/sparc/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/atomic_ops/sparc/sys/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/common/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/common/tests/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/fc/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/fc/tests/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/sm/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/sm/smsh/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/sm/smsh/lib/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/sm/smsh/scripts/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/sm/tests/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/sthread/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/sthread/tests/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	tools/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libfc_a_AR	src/fc/Makefile	/^libfc_a_AR = $(AR) $(ARFLAGS)$/;"	m
libfc_a_LIBADD	src/fc/Makefile	/^libfc_a_LIBADD =$/;"	m
libfc_a_OBJECTS	src/fc/Makefile	/^libfc_a_OBJECTS = $(am_libfc_a_OBJECTS)$/;"	m
libfc_a_SOURCES	src/fc/Makefile	/^libfc_a_SOURCES = \\$/;"	m
libsm_a_AR	src/sm/Makefile	/^libsm_a_AR = $(AR) $(ARFLAGS)$/;"	m
libsm_a_LIBADD	src/sm/Makefile	/^libsm_a_LIBADD =$/;"	m
libsm_a_OBJECTS	src/sm/Makefile	/^libsm_a_OBJECTS = $(am_libsm_a_OBJECTS)$/;"	m
libsm_a_SOURCES	src/sm/Makefile	/^libsm_a_SOURCES = \\$/;"	m
libsthread_a_AR	src/sthread/Makefile	/^libsthread_a_AR = $(AR) $(ARFLAGS)$/;"	m
libsthread_a_LIBADD	src/sthread/Makefile	/^libsthread_a_LIBADD =$/;"	m
libsthread_a_OBJECTS	src/sthread/Makefile	/^libsthread_a_OBJECTS = $(am_libsthread_a_OBJECTS)$/;"	m
libsthread_a_SOURCES	src/sthread/Makefile	/^libsthread_a_SOURCES = \\$/;"	m
lid	src/sm/sm.cpp	/^lid_m* smlevel_4::lid = 0;$/;"	m	class:smlevel_4	file:
lid	src/sm/sm_int_4.h	/^    static lid_m*    lid;$/;"	m	class:smlevel_4
lid_m	src/sm/lid.h	/^    NORET            lid_m() {};$/;"	f	class:lid_m
lid_m	src/sm/lid.h	/^class lid_m : public smlevel_4 $/;"	c
limit	src/fc/dynarray.h	/^    size_t limit() const {$/;"	f	struct:dynvector
limit	src/sm/log.h	/^    fileoff_t limit() const { return _partition_size; }$/;"	f	class:log_m
limited_space	src/sm/newsort.cpp	/^    NORET limited_space(smsize_t buffer_sz) : $/;"	f	class:limited_space
limited_space	src/sm/newsort.cpp	/^class limited_space : public smlevel_top, public factory_t $/;"	c	file:
line	src/fc/w_error.h	/^    const uint4_t                line;$/;"	m	class:w_error_t
line	src/sm/histo.cpp	/^    int line;$/;"	m	struct:trace_info	file:
line	src/sm/smsh/tcl_thread.cpp	/^    char                line[1000];$/;"	m	class:__shared	file:
line_number	src/sm/smsh/tcl_thread.cpp	/^    int                 line_number;$/;"	m	class:__shared	file:
link	src/fc/tests/hash1.cpp	/^    w_link_t        link;$/;"	m	struct:element_t	file:
link	src/fc/tests/hash2.cpp	/^    w_link_t        link;$/;"	m	struct:elem_t	file:
link	src/fc/tests/list1.cpp	/^    w_link_t        link;$/;"	m	struct:elem1_t	file:
link	src/fc/tests/list2.cpp	/^    w_link_t        link;$/;"	m	struct:elem2_t	file:
link	src/fc/tests/list3.cpp	/^    w_link_t        link;$/;"	m	struct:elem3_t	file:
link	src/sm/device.h	/^    w_link_t    link;$/;"	m	struct:device_s
link	src/sm/histo.h	/^    w_link_t                 link;$/;"	m	class:histoid_t
link	src/sm/restart_s.h	/^    w_link_t    link;$/;"	m	struct:dp_entry_t
link	src/sm/smsh/tcl_thread.h	/^    w_link_t                     link;$/;"	m	class:tcl_thread_t
link_of	src/fc/w_list.h	/^    const w_link_t*         link_of(const T* t) const {$/;"	f	class:w_list_t
link_of	src/fc/w_list.h	/^    w_link_t*             link_of(T* t) {$/;"	f	class:w_list_t
link_offset	src/sm/xct.h	/^    static w_base_t::uint4_t    link_offset()$/;"	f	class:stid_list_elem_t
link_up	src/sm/file.h	/^    void                link_up(shpid_t nprv, shpid_t nnxt) {$/;"	f	class:file_p
link_up	src/sm/keyed.h	/^keyed_p::link_up(shpid_t new_prev, shpid_t new_next)$/;"	f	class:keyed_p
link_up	src/sm/page.cpp	/^page_p::link_up(shpid_t new_prev, shpid_t new_next)$/;"	f	class:page_p
link_up	src/sm/zkeyed.h	/^zkeyed_p::link_up(shpid_t new_prev, shpid_t new_next)$/;"	f	class:zkeyed_p
linked	src/sm/smsh/smsh.cpp	/^struct linked_vars linked;$/;"	v	typeref:struct:linked_vars
linked_vars	src/sm/smsh/smsh.h	/^struct linked_vars {$/;"	s
list	src/sm/logrec.cpp	/^    extnum_t            list[stnode_p::max];$/;"	m	struct:create_ext_list_t	file:
list1_DEPENDENCIES	src/fc/tests/Makefile	/^list1_DEPENDENCIES = ..\/libfc.a $(LOCALLDADD)$/;"	m
list1_LDADD	src/fc/tests/Makefile	/^list1_LDADD = $(LDADD)$/;"	m
list1_OBJECTS	src/fc/tests/Makefile	/^list1_OBJECTS = $(am_list1_OBJECTS)$/;"	m
list1_SOURCES	src/fc/tests/Makefile	/^list1_SOURCES = list1.cpp$/;"	m
list2_DEPENDENCIES	src/fc/tests/Makefile	/^list2_DEPENDENCIES = ..\/libfc.a $(LOCALLDADD)$/;"	m
list2_LDADD	src/fc/tests/Makefile	/^list2_LDADD = $(LDADD)$/;"	m
list2_OBJECTS	src/fc/tests/Makefile	/^list2_OBJECTS = $(am_list2_OBJECTS)$/;"	m
list2_SOURCES	src/fc/tests/Makefile	/^list2_SOURCES = list2.cpp$/;"	m
list3_DEPENDENCIES	src/fc/tests/Makefile	/^list3_DEPENDENCIES = ..\/libfc.a $(LOCALLDADD)$/;"	m
list3_LDADD	src/fc/tests/Makefile	/^list3_LDADD = $(LDADD)$/;"	m
list3_OBJECTS	src/fc/tests/Makefile	/^list3_OBJECTS = $(am_list3_OBJECTS)$/;"	m
list3_SOURCES	src/fc/tests/Makefile	/^list3_SOURCES = list3.cpp$/;"	m
list_devices	src/sm/device.cpp	/^rc_t device_m::list_devices(const char**& dev_list, devid_t*& devid_list, u_int& dev_cnt)$/;"	f	class:device_m
list_devices	src/sm/sm.cpp	/^ss_m::list_devices(const char**& dev_list, devid_t*& devid_list, u_int& dev_cnt)$/;"	f	class:ss_m
list_devices	src/sm/sm_io.cpp	/^io_m::list_devices($/;"	f	class:io_m
list_volumes	src/sm/sm.cpp	/^ss_m::list_volumes(const char* device, $/;"	f	class:ss_m
lit	src/fc/tests/rand.cpp	/^    w_ieee_double_little lit;$/;"	m	union:__anon132	file:
lk_ext_acq	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lk_ext_acq;$/;"	v
lk_ext_wait	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lk_ext_wait;$/;"	v
lk_kvl_acq	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lk_kvl_acq;$/;"	v
lk_kvl_wait	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lk_kvl_wait;$/;"	v
lk_page_acq	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lk_page_acq;$/;"	v
lk_page_wait	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lk_page_wait;$/;"	v
lk_rec_acq	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lk_rec_acq;$/;"	v
lk_rec_wait	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lk_rec_wait;$/;"	v
lk_store_acq	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lk_store_acq;$/;"	v
lk_store_wait	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lk_store_wait;$/;"	v
lk_user1_acq	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lk_user1_acq;$/;"	v
lk_user1_wait	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lk_user1_wait;$/;"	v
lk_user2_acq	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lk_user2_acq;$/;"	v
lk_user2_wait	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lk_user2_wait;$/;"	v
lk_user3_acq	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lk_user3_acq;$/;"	v
lk_user3_wait	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lk_user3_wait;$/;"	v
lk_user4_acq	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lk_user4_acq;$/;"	v
lk_user4_wait	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lk_user4_wait;$/;"	v
lk_vol_acq	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lk_vol_acq;$/;"	v
lk_vol_wait	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lk_vol_wait;$/;"	v
lm	src/sm/sm.cpp	/^lock_m* smlevel_0::lm = 0;$/;"	m	class:smlevel_0	file:
lm	src/sm/sm_base.h	/^    static lock_m* lm;$/;"	m	class:smlevel_0
lmode_t	src/sm/lock.h	/^    typedef lock_base_t::lmode_t lmode_t;$/;"	t	class:lock_m
lmode_t	src/sm/lock_core.h	/^    typedef lock_base_t::lmode_t lmode_t;$/;"	t	class:lock_core_m
lmode_t	src/sm/lock_s.h	/^    typedef smlevel_0::lock_mode_t lmode_t;$/;"	t	class:lock_base_t
lmode_t	src/sm/lock_x.h	/^    typedef lock_base_t::lmode_t lmode_t; \/\/ common\/basics.h: lock_mode_t$/;"	t	class:lock_request_t
lmode_t	src/sm/lock_x.h	/^    typedef lock_base_t::lmode_t lmode_t;$/;"	t	class:lock_head_t
lo	src/common/lsn.h	/^    sm_diskaddr_t     lo()   const  { return rba(); }$/;"	f	class:lsn_t
local_ns	src/sm/smstats.cpp	/^namespace local_ns {$/;"	n	file:
localedir	Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	config/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/atomic_ops/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/atomic_ops/asm_linkage/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/atomic_ops/asm_linkage/usr/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/atomic_ops/asm_linkage/usr/src/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/atomic_ops/atomic_ops/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/atomic_ops/atomic_ops/amd64/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/atomic_ops/atomic_ops/i386/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/atomic_ops/atomic_ops/sparc/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/atomic_ops/ia32/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/atomic_ops/ia32/sys/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/atomic_ops/intel/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/atomic_ops/intel/ia32/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/atomic_ops/intel/ia32/sys/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/atomic_ops/intel/sys/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/atomic_ops/sparc/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/atomic_ops/sparc/sys/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/common/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/common/tests/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/fc/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/fc/tests/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/sm/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/sm/smsh/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/sm/smsh/lib/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/sm/smsh/scripts/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/sm/tests/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/sthread/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/sthread/tests/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	tools/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localstatedir	Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	config/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/atomic_ops/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/atomic_ops/asm_linkage/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/atomic_ops/asm_linkage/usr/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/atomic_ops/asm_linkage/usr/src/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/atomic_ops/atomic_ops/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/atomic_ops/atomic_ops/amd64/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/atomic_ops/atomic_ops/i386/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/atomic_ops/atomic_ops/sparc/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/atomic_ops/ia32/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/atomic_ops/ia32/sys/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/atomic_ops/intel/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/atomic_ops/intel/ia32/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/atomic_ops/intel/ia32/sys/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/atomic_ops/intel/sys/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/atomic_ops/sparc/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/atomic_ops/sparc/sys/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/common/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/common/tests/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/fc/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/fc/tests/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/sm/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/sm/smsh/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/sm/smsh/lib/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/sm/smsh/scripts/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/sm/tests/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/sthread/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/sthread/tests/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	tools/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
locate	src/sm/bf_core.h	/^    static pthread_mutex_t* locate(lpid_t const &pid) $/;"	f	class:page_write_mutex_t
locate_page	src/sm/file.h	/^    static rc_t                locate_page(const rid_t& rid, $/;"	f	class:file_m
lock	src/common/tests/latch1.cpp	/^    pthread_mutex_t       lock;$/;"	m	class:latch_thread_t	file:
lock	src/fc/w_list.h	/^    LOCK *lock;$/;"	m	class:w_list_t
lock	src/sm/lock.cpp	/^lock_m::lock($/;"	f	class:lock_m
lock	src/sm/sm.cpp	/^ss_m::lock(const lockid_t& n, lock_mode_t m,$/;"	f	class:ss_m
lock	src/sm/smsh/tcl_thread.h	/^    pthread_mutex_t              lock; \/\/ paired with quiesced, proceed$/;"	m	class:tcl_thread_t
lock_acquire_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lock_acquire_cnt;$/;"	v
lock_await_alt_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lock_await_alt_cnt;$/;"	v
lock_base_t	src/sm/lock_s.h	/^class lock_base_t : public smlevel_1 {$/;"	c
lock_block_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lock_block_cnt;$/;"	v
lock_cache_elem_t	src/sm/lock_cache.h	/^    lock_cache_elem_t()$/;"	f	struct:lock_cache_elem_t
lock_cache_elem_t	src/sm/lock_cache.h	/^struct lock_cache_elem_t : public w_base_t {$/;"	s
lock_cache_enabled	src/sm/sm.cpp	/^ss_m::lock_cache_enabled(bool& enable)$/;"	f	class:ss_m
lock_cache_enabled	src/sm/xct.cpp	/^xct_t::lock_cache_enabled() $/;"	f	class:xct_t
lock_cache_hit_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lock_cache_hit_cnt;$/;"	v
lock_cache_size	src/sm/lock_x.h	/^    enum { lock_cache_size = 25};$/;"	e	enum:xct_lock_info_t::__anon24
lock_cache_t	src/sm/lock_cache.h	/^class lock_cache_t : public w_base_t {$/;"	c
lock_cache_test_DEPENDENCIES	src/sm/tests/Makefile	/^lock_cache_test_DEPENDENCIES = $(top_builddir)\/src\/sm\/libsm.a \\$/;"	m
lock_cache_test_LDADD	src/sm/tests/Makefile	/^lock_cache_test_LDADD = $(LDADD)$/;"	m
lock_cache_test_OBJECTS	src/sm/tests/Makefile	/^lock_cache_test_OBJECTS = $(am_lock_cache_test_OBJECTS)$/;"	m
lock_cache_test_SOURCES	src/sm/tests/Makefile	/^lock_cache_test_SOURCES = lock_cache_test.cpp $/;"	m
lock_children_attr	src/sm/lock_core.cpp	/^    lock_children_attr,$/;"	e	enum:__anon63	file:
lock_collect	src/sm/vtable_sm.cpp	/^ss_m::lock_collect( vtable_t& res, bool names_too) $/;"	f	class:ss_m
lock_conversion_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lock_conversion_cnt;$/;"	v
lock_core_m	src/sm/lock_core.cpp	/^lock_core_m::lock_core_m(uint sz)$/;"	f	class:lock_core_m
lock_core_m	src/sm/lock_core.h	/^class lock_core_m : public lock_base_t{$/;"	c
lock_deadlock_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lock_deadlock_cnt;$/;"	v
lock_dld_call_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lock_dld_call_cnt;$/;"	v
lock_dld_false_victim_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lock_dld_false_victim_cnt;$/;"	v
lock_dld_first_call_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lock_dld_first_call_cnt;$/;"	v
lock_dld_victim_other_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lock_dld_victim_other_cnt;$/;"	v
lock_dld_victim_self_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lock_dld_victim_self_cnt;$/;"	v
lock_dump_locks	src/sm/lock.cpp	/^void lock_dump_locks() { $/;"	f
lock_duration_attr	src/sm/lock_core.cpp	/^    lock_duration_attr,$/;"	e	enum:__anon63	file:
lock_duration_t	src/common/basics.h	/^	typedef w_base_t::lock_duration_t  lock_duration_t; $/;"	t	namespace:locking
lock_duration_t	src/fc/w_base.h	/^    enum lock_duration_t {$/;"	g	class:w_base_t
lock_esc_to_page	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lock_esc_to_page;$/;"	v
lock_esc_to_store	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lock_esc_to_store;$/;"	v
lock_esc_to_volume	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lock_esc_to_volume;$/;"	v
lock_extraneous_req_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lock_extraneous_req_cnt;$/;"	v
lock_false_deadlock_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lock_false_deadlock_cnt;$/;"	v
lock_for_read	src/sm/smthread.h	/^    void lock_for_read() const {$/;"	f	class:atomic_thread_map_t
lock_for_write	src/sm/smthread.h	/^    void lock_for_write() {$/;"	f	class:atomic_thread_map_t
lock_force	src/sm/lock.cpp	/^lock_m::lock_force($/;"	f	class:lock_m
lock_force	src/sm/sm_io.cpp	/^io_m::lock_force($/;"	f	class:io_m
lock_head_t	src/sm/lock_x.h	/^class lock_head_t {$/;"	c
lock_head_t	src/sm/lock_x.h	/^lock_head_t::lock_head_t( const lockid_t& n, lmode_t m)$/;"	f	class:lock_head_t
lock_head_t_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lock_head_t_cnt;$/;"	v
lock_hierarchy	src/sm/smthread.h	/^    lockid_t *       lock_hierarchy() { return tcb()._lock_hierarchy; }$/;"	f	class:smthread_t
lock_id	src/sm/lock_cache.h	/^    lockid_t                lock_id;$/;"	m	struct:lock_cache_elem_t
lock_info	src/sm/xct.cpp	/^xct_t::lock_info() const {$/;"	f	class:xct_t
lock_info_hierarchy	src/sm/xct.h	/^    lockid_t*                   lock_info_hierarchy() const {$/;"	f	class:xct_t
lock_info_mutex	src/sm/lock_x.h	/^    lock_x          lock_info_mutex; $/;"	m	class:xct_lock_info_t
lock_info_ptr	src/sm/xct.cpp	/^    lock_info_ptr() : _ptr(0) { }$/;"	f	struct:lock_info_ptr
lock_info_ptr	src/sm/xct.cpp	/^struct lock_info_ptr {$/;"	s	file:
lock_last	src/sm/lock_core.cpp	/^    lock_last $/;"	e	enum:__anon63	file:
lock_level	src/sm/lock_x.h	/^    lockid_t::name_space_t lock_level() const { return _lock_level;}$/;"	f	class:xct_lock_info_t
lock_level	src/sm/xct.cpp	/^xct_t::lock_level(concurrency_t l) $/;"	f	class:xct_t
lock_m	src/sm/lock.cpp	/^lock_m::lock_m(int sz)$/;"	f	class:lock_m
lock_m	src/sm/lock.h	/^class lock_m : public lock_base_t {$/;"	c
lock_mode_attr	src/sm/lock_core.cpp	/^    lock_mode_attr,$/;"	e	enum:__anon63	file:
lock_mode_t	src/common/basics.h	/^	typedef w_base_t::lock_mode_t  lock_mode_t; $/;"	t	namespace:locking
lock_mode_t	src/fc/w_base.h	/^    enum lock_mode_t {$/;"	g	class:w_base_t
lock_mode_t	src/sm/logrec.h	/^typedef smlevel_0::lock_mode_t lock_mode_t;$/;"	t
lock_name_attr	src/sm/lock_core.cpp	/^    lock_name_attr,$/;"	e	enum:__anon63	file:
lock_query_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lock_query_cnt;$/;"	v
lock_request_cache_t	src/sm/lock_core.cpp	/^typedef object_cache<lock_request_t, object_cache_initializing_factory<lock_request_t> > lock_request_cache_t;$/;"	t	file:
lock_request_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lock_request_cnt;$/;"	v
lock_request_t	src/sm/lock_core.cpp	/^lock_request_t::lock_request_t()$/;"	f	class:lock_request_t
lock_request_t	src/sm/lock_x.h	/^class lock_request_t : public w_base_t {$/;"	c
lock_request_t	src/sm/tests/lock_cache_test.cpp	/^class lock_request_t {};$/;"	c	file:
lock_request_t_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lock_request_t_cnt;$/;"	v
lock_state	src/sm/sm_io.h	/^    typedef void *     lock_state;$/;"	t	class:io_m
lock_state	src/sm/vol.h	/^    typedef void *     lock_state;$/;"	t	class:vol_t
lock_status_attr	src/sm/lock_core.cpp	/^    lock_status_attr,$/;"	e	enum:__anon63	file:
lock_tid_attr	src/sm/lock_core.cpp	/^    lock_tid_attr,$/;"	e	enum:__anon63	file:
lock_timeout	src/sm/smthread.h	/^        timeout_in_ms lock_timeout;    \/\/ timeout to use for lock acquisitions$/;"	m	struct:smthread_t::tcb_t
lock_timeout	src/sm/smthread.h	/^    timeout_in_ms        lock_timeout() { $/;"	f	class:smthread_t
lock_timeout	src/sm/smthread.h	/^    void             lock_timeout(timeout_in_ms i) { $/;"	f	class:smthread_t
lock_to_latch	src/sm/pin.h	/^inline latch_mode_t pin_i::lock_to_latch(lock_mode_t m, bool bIgnoreLatches) {$/;"	f	class:pin_i
lock_vtable_attr_names	src/sm/lock_core.cpp	/^const char *lock_vtable_attr_names[] =$/;"	v
lock_wait_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t lock_wait_cnt;$/;"	v
lockblock	src/sm/xct.cpp	/^xct_t::lockblock(timeout_in_ms timeout)$/;"	f	class:xct_t
lockhashfunc	src/sm/lock.cpp	/^w_hashing::uhash lockid_t::lockhashfunc;$/;"	m	class:lockid_t	file:
lockhashfunc	src/sm/lock_s.h	/^    static w_hashing::uhash lockhashfunc;$/;"	m	class:lockid_t
lockid_t	src/sm/lock_s.h	/^class lockid_t {$/;"	c
lockid_t	src/sm/lock_s_inline.h	/^lockid_t::lockid_t()$/;"	f	class:lockid_t
lockid_t	src/sm/lock_s_inline.h	/^lockid_t::lockid_t(const extid_t& extid)$/;"	f	class:lockid_t
lockid_t	src/sm/lock_s_inline.h	/^lockid_t::lockid_t(const kvl_t& kvl)$/;"	f	class:lockid_t
lockid_t	src/sm/lock_s_inline.h	/^lockid_t::lockid_t(const lockid_t& i)$/;"	f	class:lockid_t
lockid_t	src/sm/lock_s_inline.h	/^lockid_t::lockid_t(const lpid_t& lpid)$/;"	f	class:lockid_t
lockid_t	src/sm/lock_s_inline.h	/^lockid_t::lockid_t(const rid_t& rid)$/;"	f	class:lockid_t
lockid_t	src/sm/lock_s_inline.h	/^lockid_t::lockid_t(const stid_t& stid)$/;"	f	class:lockid_t
lockid_t	src/sm/lock_s_inline.h	/^lockid_t::lockid_t(const user1_t& u)$/;"	f	class:lockid_t
lockid_t	src/sm/lock_s_inline.h	/^lockid_t::lockid_t(const user2_t& u)$/;"	f	class:lockid_t
lockid_t	src/sm/lock_s_inline.h	/^lockid_t::lockid_t(const user3_t& u)$/;"	f	class:lockid_t
lockid_t	src/sm/lock_s_inline.h	/^lockid_t::lockid_t(const user4_t& u)$/;"	f	class:lockid_t
lockid_t	src/sm/lock_s_inline.h	/^lockid_t::lockid_t(const vid_t& vid)$/;"	f	class:lockid_t
lockid_test_DEPENDENCIES	src/sm/tests/Makefile	/^lockid_test_DEPENDENCIES = $(top_builddir)\/src\/sm\/libsm.a \\$/;"	m
lockid_test_LDADD	src/sm/tests/Makefile	/^lockid_test_LDADD = $(LDADD)$/;"	m
lockid_test_OBJECTS	src/sm/tests/Makefile	/^lockid_test_OBJECTS = $(am_lockid_test_OBJECTS)$/;"	m
lockid_test_SOURCES	src/sm/tests/Makefile	/^lockid_test_SOURCES = lockid_test.cpp $/;"	m
locking	src/common/basics.h	/^namespace locking {$/;"	n
lockunblock	src/sm/xct.cpp	/^xct_t::lockunblock()$/;"	f	class:xct_t
log	src/fc/errlog.cpp	/^ErrLog::log(enum LogPriority prio, const char *format, ...) $/;"	f	class:ErrLog
log	src/sm/log.h	/^    log_m&                       log;$/;"	m	class:log_i
log	src/sm/sm.cpp	/^log_m* smlevel_0::log = 0;$/;"	m	class:smlevel_0	file:
log	src/sm/sm_base.h	/^    static log_m* log;$/;"	m	class:smlevel_0
log2	src/fc/block_alloc.cpp	/^    static size_t log2(long n) {$/;"	f	struct:blob_pool::helper
log2	src/fc/nbox.cpp	/^static int log2(int value)$/;"	f	file:
log2	src/fc/nbox.cpp	471;"	d	file:
log_alert	src/fc/errlog.h	/^    log_alert = log_fatal,        \/\/ alias$/;"	e	enum:shore_errlog::LogPriority
log_all	src/fc/errlog.h	/^    log_all,$/;"	e	enum:shore_errlog::LogPriority
log_alloc_file_page	src/sm/logstub_gen.cpp	/^rc_t log_alloc_file_page(const lpid_t& pid)$/;"	f
log_alloc_pages_in_ext	src/sm/logstub_gen.cpp	/^rc_t log_alloc_pages_in_ext(const page_p& page, snum_t snum, extnum_t idx, const Pmap& pmap)$/;"	f
log_archived_callback	src/sm/sm.cpp	/^                     smlevel_0::log_archived_callback = 0;$/;"	m	class:smlevel_0	file:
log_archived_callback	src/sm/sm_base.h	/^    static LOG_ARCHIVED_CALLBACK_FUNC log_archived_callback;$/;"	m	class:smlevel_0
log_btree_insert	src/sm/logstub_gen.cpp	/^rc_t log_btree_insert(const page_p& page, int idx, const cvec_t& key, const cvec_t& el, bool unique)$/;"	f
log_btree_purge	src/sm/logstub_gen.cpp	/^rc_t log_btree_purge(const page_p& page)$/;"	f
log_btree_remove	src/sm/logstub_gen.cpp	/^rc_t log_btree_remove(const page_p& page, int idx, const cvec_t& key, const cvec_t& el, bool unique)$/;"	f
log_bytes_generated	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t log_bytes_generated;$/;"	v
log_chkpt_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t log_chkpt_cnt;$/;"	v
log_chkpt_wake	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t log_chkpt_wake;$/;"	v
log_comment	src/sm/logstub_gen.cpp	/^rc_t log_comment(const char* msg)$/;"	f
log_compensate	src/sm/logstub_gen.cpp	/^rc_t log_compensate(lsn_t rec_lsn)$/;"	f
log_core	src/sm/log_core.cpp	/^log_core::log_core($/;"	f	class:log_core
log_core	src/sm/log_core.h	/^class log_core : public log_m $/;"	c
log_create_ext_list	src/sm/logstub_gen.cpp	/^rc_t log_create_ext_list(const page_p& page, const stid_t& stid, extnum_t prev, extnum_t next, extnum_t count, const extnum_t* list)$/;"	f
log_debug	src/fc/errlog.h	/^    log_debug=LOG_DEBUG,        \/\/ for debugging gory details $/;"	e	enum:shore_errlog::LogPriority
log_dup_sync_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t log_dup_sync_cnt;$/;"	v
log_emerg	src/fc/errlog.h	/^    log_emerg = LOG_EMERG,        \/\/ no point in continuing (syslog's LOG_EMERG)$/;"	e	enum:shore_errlog::LogPriority
log_error	src/fc/errlog.h	/^    log_error = LOG_ERR,        \/\/ client error $/;"	e	enum:shore_errlog::LogPriority
log_fatal	src/fc/errlog.h	/^    log_fatal = LOG_ALERT,        \/\/ no point in continuing (syslog's LOG_ALERT)$/;"	e	enum:shore_errlog::LogPriority
log_fetches	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t log_fetches;$/;"	v
log_file_was_archived	src/sm/sm.cpp	/^ss_m::log_file_was_archived(const char * logfile)$/;"	f	class:ss_m
log_file_wrap	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t log_file_wrap;$/;"	v
log_free_ext_list	src/sm/logstub_gen.cpp	/^rc_t log_free_ext_list(const page_p& page, const stid_t& stid, extnum_t head, extnum_t count)$/;"	f
log_free_pages_in_ext	src/sm/logstub_gen.cpp	/^rc_t log_free_pages_in_ext(const page_p& page, snum_t snum, extnum_t idx, const Pmap& pmap)$/;"	f
log_fsync_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t log_fsync_cnt;$/;"	v
log_full	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t log_full;$/;"	v
log_full_force	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t log_full_force;$/;"	v
log_full_giveup	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t log_full_giveup;$/;"	v
log_full_old_page	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t log_full_old_page;$/;"	v
log_full_old_xct	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t log_full_old_xct;$/;"	v
log_full_wait	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t log_full_wait;$/;"	v
log_i	src/sm/log.h	/^class log_i {$/;"	c
log_i	src/sm/log.h	/^log_i::log_i(log_m& l, const lsn_t& lsn) $/;"	f	class:log_i
log_info	src/fc/errlog.h	/^    log_info = LOG_INFO,        \/\/ just for yucks $/;"	e	enum:shore_errlog::LogPriority
log_inserts	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t log_inserts;$/;"	v
log_internal	src/fc/errlog.h	/^    log_internal = LOG_CRIT,    \/\/ internal error $/;"	e	enum:shore_errlog::LogPriority
log_m	src/sm/log.cpp	/^log_m::log_m()$/;"	f	class:log_m
log_m	src/sm/log.h	/^class log_m : public smlevel_0 $/;"	c
log_none	src/fc/errlog.h	/^    log_none = -1,    \/\/ none (for global variable logging_level only)$/;"	e	enum:shore_errlog::LogPriority
log_page_format	src/sm/logstub_gen.cpp	/^rc_t log_page_format(const page_p& page, int idx, int cnt, const cvec_t* vec)$/;"	f
log_page_image	src/sm/logstub_gen.cpp	/^rc_t log_page_image(const page_p& page)$/;"	f
log_page_insert	src/sm/logstub_gen.cpp	/^rc_t log_page_insert(const page_p& page, int idx, int cnt, const cvec_t* vec)$/;"	f
log_page_link	src/sm/logstub_gen.cpp	/^rc_t log_page_link(const page_p& page, shpid_t new_prev, shpid_t new_next)$/;"	f
log_page_mark	src/sm/logstub_gen.cpp	/^rc_t log_page_mark(const page_p& page, int idx)$/;"	f
log_page_reclaim	src/sm/logstub_gen.cpp	/^rc_t log_page_reclaim(const page_p& page, int idx, const cvec_t& vec)$/;"	f
log_page_remove	src/sm/logstub_gen.cpp	/^rc_t log_page_remove(const page_p& page, int idx, int cnt)$/;"	f
log_page_set_byte	src/sm/logstub_gen.cpp	/^rc_t log_page_set_byte(const page_p& page, int idx, u_char old, u_char bits, int op)$/;"	f
log_page_shift	src/sm/logstub_gen.cpp	/^rc_t log_page_shift(const page_p& page, int idx2, page_s::slot_length_t off2, page_s::slot_length_t len2, int idx1, page_s::slot_length_t off1)$/;"	f
log_page_splice	src/sm/logstub_gen.cpp	/^rc_t log_page_splice(const page_p& page, int idx, int start, int len, const cvec_t& vec)$/;"	f
log_page_splicez	src/sm/logstub_gen.cpp	/^rc_t log_page_splicez(const page_p& page, int idx, int start, int len, int osave, int nsave, const cvec_t& vec)$/;"	f
log_prefix	src/sm/log.h	/^    static const char *log_prefix() { return _log_prefix; }$/;"	f	class:log_m
log_prepared	src/sm/xct.cpp	/^xct_t::log_prepared(bool in_chkpt)$/;"	f	class:xct_t
log_rtree_insert	src/sm/logstub_gen.cpp	/^rc_t log_rtree_insert(const page_p& page, int idx, const nbox_t& key, const cvec_t& el)$/;"	f
log_rtree_remove	src/sm/logstub_gen.cpp	/^rc_t log_rtree_remove(const page_p& page, int idx, const nbox_t& key, const cvec_t& el)$/;"	f
log_set_ext_next	src/sm/logstub_gen.cpp	/^rc_t log_set_ext_next(const page_p& page, extnum_t ext, extnum_t new_next)$/;"	f
log_stats	src/sm/log_core.cpp	/^stat_map log_stats;$/;"	v
log_store_operation	src/sm/logstub_gen.cpp	/^rc_t log_store_operation(const page_p& page, const store_operation_param& op)$/;"	f
log_switches	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t log_switches;$/;"	v
log_sync_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t log_sync_cnt;$/;"	v
log_to_ether	src/fc/errlog.h	/^    log_to_ether, \/*! no logging *\/$/;"	e	enum:LoggingDestination
log_to_open_file	src/fc/errlog.h	/^    log_to_open_file, \/*! sent to an open unix FILE* *\/$/;"	e	enum:LoggingDestination
log_to_stderr	src/fc/errlog.h	/^    log_to_stderr  \/*! sent to stderr *\/$/;"	e	enum:LoggingDestination
log_to_unix_file	src/fc/errlog.h	/^    log_to_unix_file, \/*! sent to a unix file identified by name *\/$/;"	e	enum:LoggingDestination
log_warn_abort_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t log_warn_abort_cnt;$/;"	v
log_warn_callback	src/sm/sm.cpp	/^                     smlevel_0::log_warn_callback = 0;$/;"	m	class:smlevel_0	file:
log_warn_callback	src/sm/sm_base.h	/^    static LOG_WARN_CALLBACK_FUNC log_warn_callback;$/;"	m	class:smlevel_0
log_warn_callback	src/sm/smsh/smsh.cpp	/^bool log_warn_callback = false;$/;"	v
log_warn_callback_flag	src/sm/smsh/smsh.h	/^    w_base_t::uint4_t  log_warn_callback_flag;$/;"	m	struct:linked_vars
log_warn_disable	src/sm/xct.cpp	/^xct_t::log_warn_disable()$/;"	f	class:xct_t
log_warn_exceed_percent	src/sm/sm.cpp	/^int                  smlevel_0::log_warn_exceed_percent = $/;"	m	class:smlevel_0	file:
log_warn_exceed_percent	src/sm/sm_base.h	/^    static int                    log_warn_exceed_percent; $/;"	m	class:smlevel_0
log_warn_is_on	src/sm/xct.cpp	/^xct_t::log_warn_is_on() const$/;"	f	class:xct_t
log_warn_resume	src/sm/xct.cpp	/^xct_t::log_warn_resume()$/;"	f	class:xct_t
log_warn_trigger	src/sm/sm.cpp	/^smlevel_0::fileoff_t smlevel_0::log_warn_trigger = 0;$/;"	m	class:smlevel_0	file:
log_warn_trigger	src/sm/sm_base.h	/^    static fileoff_t              log_warn_trigger; $/;"	m	class:smlevel_0
log_warning	src/fc/errlog.h	/^    log_warning = LOG_WARNING,    \/\/ client error $/;"	e	enum:shore_errlog::LogPriority
log_xct_abort	src/sm/logstub_gen.cpp	/^rc_t log_xct_abort()$/;"	f
log_xct_end	src/sm/logstub_gen.cpp	/^rc_t log_xct_end()$/;"	f
log_xct_freeing_space	src/sm/logstub_gen.cpp	/^rc_t log_xct_freeing_space()$/;"	f
log_xct_prepare_alk	src/sm/logstub_gen.cpp	/^rc_t log_xct_prepare_alk(int num, lockid_t* lks, lock_mode_t* modes)$/;"	f
log_xct_prepare_fi	src/sm/logstub_gen.cpp	/^rc_t log_xct_prepare_fi(int numex, int numix, int numsix, int numextent, const lsn_t& first)$/;"	f
log_xct_prepare_lk	src/sm/logstub_gen.cpp	/^rc_t log_xct_prepare_lk(int num, lock_mode_t mode, lockid_t* lks)$/;"	f
log_xct_prepare_st	src/sm/logstub_gen.cpp	/^rc_t log_xct_prepare_st(const gtid_t* g, const server_handle_t& h)$/;"	f
log_xct_prepare_stores	src/sm/logstub_gen.cpp	/^rc_t log_xct_prepare_stores(int num, const stid_t* stids)$/;"	f
logged_size	src/sm/extent.h	/^extlink_t::logged_size() {$/;"	f	class:extlink_t
logging	src/sm/smstats.h	/^    bool   logging; $/;"	m	struct:sm_config_info_t
logging_enabled	src/sm/sm.cpp	/^bool        smlevel_0::logging_enabled = true;$/;"	m	class:smlevel_0	file:
logging_enabled	src/sm/sm_base.h	/^    static bool        logging_enabled;$/;"	m	class:smlevel_0
logical_operation	src/sm/page.h	/^    enum logical_operation {$/;"	g	class:page_p
logrec_t	src/sm/logrec.h	/^class logrec_t {$/;"	c
logstream	src/fc/errlog.h	/^    logstream(char *buf, size_t bufsize = 1000)$/;"	f	class:logstream
logstream	src/fc/errlog.h	/^class logstream : public w_ostrstream {$/;"	c
lonehilbert	src/sm/smsh/sort_funcs3.cpp	/^lonehilbert ($/;"	f
long_t	src/atomic_ops/atomic_ops.h	/^typedef long   long_t;$/;"	t
longest_chain	src/sm/lock_core.cpp	/^static int longest_chain=0;$/;"	v	file:
look_up	src/sm/restart.cpp	/^dirty_pages_tab_t::look_up(const lpid_t& pid, lsn_t** lsn)$/;"	f	class:dirty_pages_tab_t
look_up	src/sm/xct.cpp	/^xct_t::look_up(const tid_t& tid)$/;"	f	class:xct_t
lookup	src/common/option.cpp	/^w_rc_t option_group_t::lookup(const char* name, bool exact, option_t*& returnOption)$/;"	f	class:option_group_t
lookup	src/fc/w_hash.h	/^w_hash_t<T,LOCK, K>::lookup(const K& k) const$/;"	f	class:w_hash_t
lookup	src/sm/bf_htab.cpp	/^bfcb_t *bf_core_m::htab::lookup(bfpid_t const &pid) const$/;"	f	class:bf_core_m::htab
lookup	src/sm/btree.cpp	/^btree_m::lookup($/;"	f	class:btree_m
lookup	src/sm/dir.cpp	/^sdesc_cache_t::lookup(const stid_t& stid)$/;"	f	class:sdesc_cache_t
lookup	src/sm/rtree.cpp	/^rtree_m::lookup($/;"	f	class:rtree_m
lookup_by_class	src/common/option.cpp	/^option_group_t::lookup_by_class($/;"	f	class:option_group_t
lookup_prev	src/sm/btree.cpp	/^btree_m::lookup_prev($/;"	f	class:btree_m
low	src/common/lid_t.h	/^    uint4_t low;$/;"	m	struct:lvid_t
low	src/sm/newsort.cpp	/^    int low() const  { return _low; }        \/\/ smallest non-zero # runs on any tape$/;"	f	class:phase_mgr
lower_alpha	src/sm/smsh/sort_funcs3.cpp	/^const int lower_alpha = 0x61;$/;"	v
lower_bound	src/sm/vol.h	/^        cache::iterator lower_bound(snum_t snum) { return _cache.lower_bound($/;"	f	class:vol_t::ext_cache_t
lpid_cmp	src/sm/btree_latch_manager.h	/^    struct lpid_cmp {$/;"	s	class:btree_latch_manager
lpid_t	src/sm/sm_s.h	/^class lpid_t {$/;"	c
lpid_t	src/sm/sm_s.h	/^inline lpid_t::lpid_t() : page(0) {}$/;"	f	class:lpid_t
lpid_t	src/sm/sm_s.h	/^inline lpid_t::lpid_t(const stid_t& s, shpid_t p) : _stid(s), page(p)$/;"	f	class:lpid_t
lpid_t	src/sm/sm_s.h	/^inline lpid_t::lpid_t(vid_t v, snum_t s, shpid_t p) :$/;"	f	class:lpid_t
lseek	src/sthread/io.cpp	/^w_rc_t sthread_t::lseek(int fd, fileoff_t offset, int whence)$/;"	f	class:sthread_t
lseek	src/sthread/io.cpp	/^w_rc_t sthread_t::lseek(int fd, fileoff_t pos, int whence, fileoff_t& ret)$/;"	f	class:sthread_t
lsn	src/sm/btcursor.h	/^    const lsn_t&        lsn()     const { return _lsn; }$/;"	f	class:bt_cursor_t
lsn	src/sm/log_core.cpp	/^	lsn_t lsn;		\/\/ where will we end up on disk?$/;"	m	struct:log_core::insert_info	file:
lsn	src/sm/page.h	/^page_p::lsn() const$/;"	f	class:page_p
lsn1	src/sm/page_s.h	/^    lsn_t    lsn1;$/;"	m	class:page_s
lsn2	src/sm/page_s.h	/^    lsn_t    lsn2;$/;"	m	class:page_s
lsn_ck	src/sm/logrec.h	/^    const lsn_t&         lsn_ck() const {  return *_lsn_ck(); }$/;"	f	class:logrec_t
lsn_t	src/common/lsn.h	/^    lsn_t() : _data(0) { }$/;"	f	class:lsn_t
lsn_t	src/common/lsn.h	/^    lsn_t(const lsn_t & other) : _data(other._data) { }$/;"	f	class:lsn_t
lsn_t	src/common/lsn.h	/^    lsn_t(w_base_t::uint4_t f, sm_diskaddr_t r) : $/;"	f	class:lsn_t
lsn_t	src/common/lsn.h	/^class lsn_t {$/;"	c
lsns_DEPENDENCIES	src/common/tests/Makefile	/^lsns_DEPENDENCIES = ..\/libcommon.a ..\/..\/sthread\/libsthread.a \\$/;"	m
lsns_LDADD	src/common/tests/Makefile	/^lsns_LDADD = $(LDADD)$/;"	m
lsns_OBJECTS	src/common/tests/Makefile	/^lsns_OBJECTS = $(am_lsns_OBJECTS)$/;"	m
lsns_SOURCES	src/common/tests/Makefile	/^lsns_SOURCES = lsns.cpp$/;"	m
lspace	src/sm/lock_s_inline.h	/^lockid_t::lspace() const $/;"	f	class:lockid_t
lspace_bits	src/sm/lock_s_inline.h	/^lockid_t::lspace_bits() const $/;"	f	class:lockid_t
lt	src/sm/sm_base.h	/^                 gt=gtOp, ge=geOp, lt=ltOp, le=leOp };$/;"	e	enum:smlevel_0::cmp_t
ltNegInf	src/fc/w_base.h	/^    NegInf=0x100, eqNegInf, gtNegInf, geNegInf, ltNegInf, leNegInf,$/;"	e	enum:w_base_t::CompareOp
ltOp	src/fc/w_base.h	/^    badOp=0x0, eqOp=0x1, gtOp=0x2, geOp=0x3, ltOp=0x4, leOp=0x5,$/;"	e	enum:w_base_t::CompareOp
ltPosInf	src/fc/w_base.h	/^    PosInf=0x400, eqPosInf, gtPosInf, gePosInf, ltPosInf, lePosInf$/;"	e	enum:w_base_t::CompareOp
ltestCSKF	src/sm/smsh/sort_funcs3.cpp	/^ltestCSKF($/;"	f
lvid	src/sm/device.h	/^    lvid_t        lvid;$/;"	m	struct:device_hdr_s
lvid	src/sm/vol.h	/^    const lvid_t&   lvid() const { return _lvid; }$/;"	f	class:volhdr_t
lvid	src/sm/vol.h	/^inline lvid_t vol_t::lvid() const$/;"	f	class:vol_t
lvid_t	src/common/lid_t.h	/^    lvid_t() : high(0), low(0) {}$/;"	f	struct:lvid_t
lvid_t	src/common/lid_t.h	/^    lvid_t(uint4_t hi, uint4_t lo) : high(hi), low(lo) {}$/;"	f	struct:lvid_t
lvid_t	src/common/lid_t.h	/^struct lvid_t {$/;"	s
lvid_t_is_null	src/common/lid_t.cpp	/^lvid_t_is_null(const lvid_t &x)$/;"	f
lvid_to_vid	src/sm/smfile.cpp	/^ss_m::lvid_to_vid(const lvid_t& lvid, vid_t& vid)$/;"	f	class:ss_m
m	src/sm/newsort.cpp	/^    const meta_header_t*        m,$/;"	v
m	src/sm/newsort.cpp	/^    meta_header_t *m,        $/;"	v
m_exists	src/sm/partition.h	/^    m_exists=0x2,$/;"	e	enum:__anon32
m_flushed	src/sm/partition.h	/^    m_flushed=0x10    \/\/ has no data cached$/;"	e	enum:__anon32
m_not_found_end_of_file	src/sm/btree_impl.h	/^typedef enum {  m_not_found_end_of_file, $/;"	e	enum:__anon48
m_not_found_end_of_non_empty_page	src/sm/btree_impl.h	/^        m_not_found_end_of_non_empty_page, $/;"	e	enum:__anon48
m_not_found_page_is_empty	src/sm/btree_impl.h	/^        m_not_found_page_is_empty } m_page_search_cases;$/;"	e	enum:__anon48
m_open_for_append	src/sm/partition.h	/^    m_open_for_append=0x8,$/;"	e	enum:__anon32
m_open_for_read	src/sm/partition.h	/^    m_open_for_read=0x4,$/;"	e	enum:__anon32
m_page_search_cases	src/sm/btree_impl.h	/^        m_not_found_page_is_empty } m_page_search_cases;$/;"	t	typeref:enum:__anon48
m_satisfying_key_found_same_page	src/sm/btree_impl.h	/^        m_satisfying_key_found_same_page,$/;"	e	enum:__anon48
magic	src/common/regex2.h	/^    int magic;$/;"	m	struct:re_guts
main	config/config.guess	/^		main()$/;"	f
main	config/config.guess	/^	main ()$/;"	f
main	config/config.guess	/^main ()$/;"	f
main	src/common/tests/bitmap.cpp	/^int main(int argc, char **argv)$/;"	f
main	src/common/tests/errcodes.cpp	/^int main()$/;"	f
main	src/common/tests/kvl.cpp	/^int main(int argc, const char *argv[])$/;"	f
main	src/common/tests/latch1.cpp	/^int main(int argc, char ** argv)$/;"	f
main	src/common/tests/lsns.cpp	/^int main()$/;"	f
main	src/common/tests/mapp.cpp	/^int main(int , char **)$/;"	f
main	src/common/tests/opaque.cpp	/^int main()$/;"	f
main	src/common/tests/vectors.cpp	/^int main()$/;"	f
main	src/fc/tests/basic_sizes.cpp	/^main()$/;"	f
main	src/fc/tests/bitvector.cpp	/^int main()$/;"	f
main	src/fc/tests/box.cpp	/^main(int argc, char *argv[])$/;"	f
main	src/fc/tests/container.cpp	/^main(int argc, char *argv[])$/;"	f
main	src/fc/tests/cuckoo.cpp	/^main(int argc, char *argv[])$/;"	f
main	src/fc/tests/darray.cpp	/^int main() {$/;"	f
main	src/fc/tests/errlogtest.cpp	/^main()$/;"	f
main	src/fc/tests/findprime.cpp	/^main(int argc, char *argv[])$/;"	f
main	src/fc/tests/findsizes.cpp	/^main(int argc, char *argv[])$/;"	f
main	src/fc/tests/hash1.cpp	/^int main()$/;"	f
main	src/fc/tests/hash2.cpp	/^int main()$/;"	f
main	src/fc/tests/heap.cpp	/^int main()$/;"	f
main	src/fc/tests/io.cpp	/^main(int argc, const char *argv[])$/;"	f
main	src/fc/tests/list1.cpp	/^int main()$/;"	f
main	src/fc/tests/list2.cpp	/^int main()$/;"	f
main	src/fc/tests/list3.cpp	/^int main()$/;"	f
main	src/fc/tests/memblock.cpp	/^int main() {$/;"	f
main	src/fc/tests/ntime.cpp	/^int main(int argc, char **argv)$/;"	f
main	src/fc/tests/rand.cpp	/^main(int argc, char *argv[])$/;"	f
main	src/fc/tests/random.cpp	/^main(int argc, char *argv[])$/;"	f
main	src/fc/tests/rc.cpp	/^int main()$/;"	f
main	src/fc/tests/ss.cpp	/^int main(int argc, char **argv)$/;"	f
main	src/fc/tests/stats.cpp	/^main()$/;"	f
main	src/fc/tests/stats2.cpp	/^int main()$/;"	f
main	src/fc/w_rand.cpp	/^int main() {$/;"	f
main	src/sm/smsh/random_kick.cpp	/^main($/;"	f
main	src/sm/smsh/smsh.cpp	/^int main(int argc, const char** argv)$/;"	f
main	src/sm/tests/create_rec.cpp	/^main(int argc, char* argv[])$/;"	f
main	src/sm/tests/file_scan.cpp	/^main(int argc, char* argv[])$/;"	f
main	src/sm/tests/file_scan_many.cpp	/^main(int argc, char* argv[])$/;"	f
main	src/sm/tests/htab.cpp	/^main (int argc, char *const argv[])$/;"	f
main	src/sm/tests/lock_cache_test.cpp	/^main(int \/*argc*\/, char* \/*argv*\/[])$/;"	f
main	src/sm/tests/lockid_test.cpp	/^main(int \/*argc*\/, char* \/*argv*\/[])$/;"	f
main	src/sm/tests/log_exceed.cpp	/^main(int argc, char* argv[])$/;"	f
main	src/sm/tests/mrbtrees_test.cpp	/^int main(int argc, char* argv[])$/;"	f
main	src/sm/tests/rtree_example.cpp	/^main(int argc, char* argv[])$/;"	f
main	src/sm/tests/sort_stream.cpp	/^main(int argc, char* argv[])$/;"	f
main	src/sm/tests/startstop.cpp	/^main(int argc, char* argv[])$/;"	f
main	src/sm/tests/vtable_example.cpp	/^main(int argc, char* argv[])$/;"	f
main	src/sthread/tests/except.cpp	/^int main(int argc, char **argv)$/;"	f
main	src/sthread/tests/ioperf.cpp	/^main(int argc, char** argv)$/;"	f
main	src/sthread/tests/mmap.cpp	/^int main()$/;"	f
main	src/sthread/tests/pthread_test.cpp	/^main()$/;"	f
main	src/sthread/tests/thread1.cpp	/^int	main(int argc, char* argv[])$/;"	f
main	src/sthread/tests/thread2.cpp	/^int main(int argc, char **argv)$/;"	f
main	src/sthread/tests/thread3.cpp	/^int main(int argc, char **argv)$/;"	f
main	src/sthread/tests/thread4.cpp	/^int main(int argc, char **argv)$/;"	f
make	src/fc/w_error.cpp	/^w_error_t::make($/;"	f	class:w_error_t
make	src/sm/tests/file_scan_many.cpp	/^    char *make(int _id, int \/*n*\/) {$/;"	f	class:smthread_main_t
make	src/sthread/sdisk_unix.cpp	/^w_rc_t    sdisk_unix_t::make(const char *name, int flags, int mode,$/;"	f	class:sdisk_unix_t
make_dummy_depfile	config/depcomp	/^make_dummy_depfile ()$/;"	f
make_equal_partitions	src/sm/smindex.cpp	/^rc_t ss_m::make_equal_partitions(stid_t stid, const vec_t& minKey,$/;"	f	class:ss_m
make_in_transit_out	src/sm/bf_transit_bucket.h	/^    void make_in_transit_out(const bfpid_t &pid) {$/;"	f	class:transit_bucket_t
make_int	src/sm/sort_s.h	/^    int make_int() const { return operator int(); }$/;"	f	class:ssm_sort::key_cookie_t
make_log_name	src/sm/log.cpp	/^log_m::make_log_name(uint4_t idx, char* buf, int bufsz)$/;"	f	class:log_m
make_not_in_transit_out	src/sm/bf_transit_bucket.h	/^    void make_not_in_transit_out(const bfpid_t &pid) $/;"	f	class:transit_bucket_t
make_printable	src/sm/smsh/shell2.cpp	/^char *make_printable(int i, int limit)$/;"	f
make_ptr	src/sm/sort_s.h	/^    void *make_ptr() const { return c; }$/;"	f	class:ssm_sort::key_cookie_t
make_random_alpha	src/sm/smsh/sort_funcs3.cpp	/^make_random_alpha(char *object, w_base_t::uint4_t length)$/;"	f
make_random_box	src/sm/smsh/sort_funcs3.cpp	/^make_random_box(char *object, w_base_t::uint4_t W_IFDEBUG1(length))$/;"	f
make_rec	src/sm/btcursor.cpp	/^bt_cursor_t::make_rec(const btree_p& page, int slot)$/;"	f	class:bt_cursor_t
make_smsize_t	src/sm/sort_s.h	/^    int make_smsize_t() const { return operator smsize_t(); }$/;"	f	class:ssm_sort::key_cookie_t
make_vec	src/sthread/tests/thread2.cpp	/^int make_vec(char *buf, int size, int vec_size, $/;"	f
make_vid_from_lvid	src/sm/smsh/shell.cpp	/^make_vid_from_lvid(const char* lv)$/;"	f
mandir	Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	config/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/atomic_ops/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/atomic_ops/asm_linkage/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/atomic_ops/asm_linkage/usr/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/atomic_ops/asm_linkage/usr/src/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/atomic_ops/atomic_ops/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/atomic_ops/atomic_ops/amd64/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/atomic_ops/atomic_ops/i386/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/atomic_ops/atomic_ops/sparc/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/atomic_ops/ia32/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/atomic_ops/ia32/sys/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/atomic_ops/intel/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/atomic_ops/intel/ia32/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/atomic_ops/intel/ia32/sys/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/atomic_ops/intel/sys/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/atomic_ops/sparc/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/atomic_ops/sparc/sys/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/common/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/common/tests/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/fc/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/fc/tests/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/sm/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/sm/smsh/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/sm/smsh/lib/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/sm/smsh/scripts/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/sm/tests/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/sthread/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/sthread/tests/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	tools/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mant1	src/fc/tests/rand.cpp	/^    unsigned int mant1:20;$/;"	m	struct:__anon129	file:
mant1	src/fc/tests/rand.cpp	/^    unsigned int mant1:20;$/;"	m	struct:__anon130	file:
mant1	src/fc/tests/rand.cpp	/^    unsigned int mant1:20;$/;"	m	struct:__anon131	file:
mant2	src/fc/tests/rand.cpp	/^    unsigned int mant2:32;$/;"	m	struct:__anon129	file:
mant2	src/fc/tests/rand.cpp	/^    unsigned int mant2:32;$/;"	m	struct:__anon130	file:
mant2	src/fc/tests/rand.cpp	/^    unsigned int mant2:32;$/;"	m	struct:__anon131	file:
map_to_root	src/sm/btree_bl.cpp	/^btsink_t::map_to_root()$/;"	f	class:btsink_t
mapp_DEPENDENCIES	src/common/tests/Makefile	/^mapp_DEPENDENCIES = ..\/libcommon.a ..\/..\/sthread\/libsthread.a \\$/;"	m
mapp_LDADD	src/common/tests/Makefile	/^mapp_LDADD = $(LDADD)$/;"	m
mapp_OBJECTS	src/common/tests/Makefile	/^mapp_OBJECTS = $(am_mapp_OBJECTS)$/;"	m
mapp_SOURCES	src/common/tests/Makefile	/^mapp_SOURCES = mapp.cpp$/;"	m
margin	src/fc/nbox.cpp	/^int nbox_t::margin()$/;"	f	class:nbox_t
mark	src/fc/w_temp_alloc.cpp	/^w_temp_alloc::mark::mark()$/;"	f	class:w_temp_alloc::mark
mark	src/fc/w_temp_alloc.h	/^    struct mark {$/;"	s	struct:w_temp_alloc
mark	src/sm/tests/stopwatch.h	/^    long long mark;$/;"	m	class:stopwatch_t
mark_clean	src/sm/bf.cpp	/^void  bfcb_t::mark_clean() {$/;"	f	class:bfcb_t
mark_dup	src/sm/newsort.cpp	/^    void mark_dup() { __persistent_part._booleans |= $/;"	f	class:meta_header_t
mark_free	src/sm/page.cpp	/^page_p::mark_free(slotid_t idx)$/;"	f	class:page_p
mark_pieces	src/sm/newsort.cpp	/^    void mark_pieces(int k) { $/;"	f	class:meta_header_t
mark_pin_count	src/sm/smthread.h	/^smthread_t::mark_pin_count()$/;"	f	class:smthread_t
marshal_cookie	src/sm/sort_s.h	/^    key_cookie_t    marshal_cookie() const { return _cb_marshal_cookie; }$/;"	f	class:ssm_sort::sort_keys_t
marshal_func	src/sm/sort_s.h	/^    MOF     marshal_func() const { return _cb_marshal; }$/;"	f	class:ssm_sort::sort_keys_t
marshal_sortkeys	src/sm/newsort.cpp	/^meta_header_t::marshal_sortkeys($/;"	f	class:meta_header_t
mask	src/common/lsn.h	/^    static w_base_t::uint8_t mask() {$/;"	f	class:lsn_t
mask	src/common/regex2.h	/^    uch mask;        \/* bit within array *\/$/;"	m	struct:__anon9
mask	src/fc/w_debug.h	/^        unsigned int        mask;$/;"	m	class:w_debug
mask	src/sm/sort_s.h	/^    enum mask { t_none = 0x0, $/;"	g	class:ssm_sort::sort_keys_t
master_lsn	src/sm/log.h	/^    lsn_t               master_lsn() const {$/;"	f	class:log_m
master_prefix	src/sm/log.h	/^    static const char *master_prefix() { return _master_prefix; }$/;"	f	class:log_m
match	src/common/option.cpp	/^bool option_t::match(const char* matchName, bool exact)$/;"	f	class:option_t
match	src/common/regex_engine.cpp	/^struct match {$/;"	s	file:
match	src/common/regex_engine.cpp	1028;"	d	file:
match	src/common/regex_engine.cpp	68;"	d	file:
match	src/common/regex_engine.cpp	79;"	d	file:
match	src/sm/histo.cpp	/^histoid_compare_t::match(const pginfo_t& left, const pginfo_t& right) const$/;"	f	class:histoid_compare_t
matcher	src/common/regex_engine.cpp	/^matcher(struct re_guts *g, char *string, size_t nmatch, regmatch_t pmatch[], $/;"	f	file:
matcher	src/common/regex_engine.cpp	1020;"	d	file:
matcher	src/common/regex_engine.cpp	60;"	d	file:
matcher	src/common/regex_engine.cpp	71;"	d	file:
matches	src/sm/crash.cpp	/^        int           matches;$/;"	m	struct:debuginfo	file:
max	src/common/lsn.h	/^    static const lsn_t max;$/;"	m	class:lsn_t
max	src/fc/w_minmax.h	/^max(const T x, const T y)$/;"	f
max	src/sm/device.h	/^    enum { max = smlevel_0::max_vols };$/;"	e	enum:device_m::__anon26
max	src/sm/dir.h	/^    enum { max = max_vols };$/;"	e	enum:dir_vol_m::__anon55
max	src/sm/extent.h	/^    enum { max = data_sz \/ sizeof(extlink_t) };$/;"	e	enum:extlink_p::__anon16
max	src/sm/extent.h	/^    enum { max = data_sz \/ sizeof(stnode_t) };$/;"	e	enum:stnode_p::__anon17
max	src/sm/logrec.cpp	/^    enum { max = ((logrec_t::data_sz - 2*sizeof(uint2_t)) - sizeof(page_init_t)) };$/;"	e	enum:page_insert_t::__anon86	file:
max	src/sm/logrec.cpp	/^    enum { max = ((logrec_t::data_sz - 2*sizeof(uint2_t)) - sizeof(page_init_t)) };$/;"	e	enum:page_mark_t::__anon87	file:
max	src/sm/logrec.cpp	/^    enum { max = (logrec_t::data_sz - sizeof(page_init_t)) };$/;"	e	enum:page_format_t::__anon88	file:
max	src/sm/logrec.h	/^    enum {     max = ((logrec_t::data_sz - sizeof(tid_t) -$/;"	e	enum:chkpt_xct_tab_t::__anon44
max	src/sm/logrec.h	/^    enum { max = ((logrec_t::data_sz - 2*sizeof(uint4_t)) \/ sizeof(devrec_t))$/;"	e	enum:chkpt_dev_tab_t::__anon45
max	src/sm/logrec.h	/^    enum { max = (logrec_t::data_sz - 2 * sizeof(uint4_t)) \/ sizeof(brec_t) };$/;"	e	enum:chkpt_bf_tab_t::__anon42
max	src/sm/logrec.h	/^    enum { max = (logrec_t::data_sz - sizeof(uint4_t)) \/ sizeof(stid_t) };$/;"	e	enum:prepare_stores_to_free_t::__anon43
maxNumElements	src/fc/w_heap.h	/^        int                maxNumElements;$/;"	m	class:Heap
max_btree_entry_size	src/sm/smstats.h	/^    u_long max_btree_entry_size;$/;"	m	struct:sm_config_info_t
max_chkpt_size	src/sm/log.cpp	/^long log_m::max_chkpt_size() const $/;"	f	class:log_m
max_chunks	src/sm/lgrec.h	/^    enum     {max_chunks = 4};$/;"	e	enum:lg_tag_chunks_h::__anon19
max_chunks	src/sm/lgrec.h	/^    enum     {max_chunks = 4};$/;"	e	enum:lg_tag_chunks_s::__anon18
max_devname	src/sm/sm_base.h	/^        max_devname = _POSIX_PATH_MAX,        \/\/ max length of unix path name$/;"	e	enum:smlevel_0::__anon28
max_dimension	src/fc/nbox.h	/^    enum { max_dimension = 4 }; $/;"	e	enum:nbox_t::__anon105
max_dir_cache	src/sm/sm_base.h	/^        max_dir_cache = max_vols * 10,$/;"	e	enum:smlevel_0::__anon28
max_entry_size	src/sm/btree.cpp	/^btree_m::max_entry_size() {$/;"	f	class:btree_m
max_entry_size	src/sm/btree_p.cpp	/^btree_p::max_entry_size = \/\/ must be able to fit 2 entries to a page$/;"	m	class:btree_p	file:
max_entry_size	src/sm/btree_p.h	/^    static smsize_t         max_entry_size;$/;"	m	class:btree_p
max_extents_on_page	src/sm/sm_io.cpp	/^io_m::max_extents_on_page() $/;"	f	class:io_m
max_extents_on_page	src/sm/vol.cpp	/^vol_t::max_extents_on_page() $/;"	f	class:vol_t
max_exts	src/sm/sm_base.h	/^        max_exts = max_int4,        \/\/ max no. extents, must fit extnum_t$/;"	e	enum:smlevel_0::__anon28
max_gtid_len	src/common/tid_t.h	167;"	d
max_gtid_len	src/common/tid_t.h	169;"	d
max_int2	src/common/basics.h	/^const int2_t    max_int2 = 0x7fff;         \/*  (1 << 15) - 1;     *\/$/;"	v
max_int4	src/common/basics.h	/^const int4_t    max_int4 = 0x7fffffff;         \/*  (1 << 31) - 1;  *\/$/;"	v
max_int4	src/fc/nbox.cpp	/^const nbox_t::int4_t        nbox_t::max_int4 = w_base_t::int4_max;$/;"	m	class:nbox_t	file:
max_int4	src/fc/nbox.h	/^    static const int4_t    max_int4;$/;"	m	class:nbox_t
max_int4_minus1	src/common/basics.h	/^const int4_t    max_int4_minus1 = max_int4 -1;$/;"	v
max_keycomp	src/sm/sm_base.h	/^        max_keycomp = 20,        \/\/ max key component (for btree)$/;"	e	enum:smlevel_0::__anon28
max_keys_handled	src/sm/newsort.cpp	/^const int max_keys_handled = 5; \/\/ TODO: make more flexible$/;"	v
max_ldstk_sz	src/sm/rtree.cpp	/^    enum { max_ldstk_sz = 10 };$/;"	e	enum:rtld_stk_t::__anon101	file:
max_len	src/sm/file_s.h	/^    enum {max_len = smlevel_0::max_rec_len };$/;"	e	enum:record_t::__anon49
max_len	src/sm/sm_s.h	/^    enum { max_len = 2000 };$/;"	e	enum:key_type_s::__anon100
max_list_sz	src/sm/sort.cpp	/^    uint2_t max_list_sz;  \/\/ max size for run list array$/;"	m	struct:sort_desc_t	file:
max_locks_logged	src/sm/logrec.h	/^    enum            { max_locks_logged = (logrec_t::data_sz - sizeof(lock_mode_t) - sizeof(uint4_t)) \/ sizeof(lockid_t) };$/;"	e	enum:prepare_lock_t::__anon46
max_locks_logged	src/sm/logrec.h	/^    enum            { max_locks_logged = (logrec_t::data_sz - sizeof(uint4_t)) \/ sizeof(LockAndModePair) };$/;"	e	enum:prepare_all_lock_t::__anon47
max_logsz	src/sm/sm.cpp	/^smlevel_0::fileoff_t        smlevel_0::max_logsz = 0;$/;"	m	class:smlevel_0	file:
max_logsz	src/sm/sm_base.h	/^    static fileoff_t max_logsz; \/\/ max log file size$/;"	m	class:smlevel_0
max_lsn	src/sm/sm_s.h	234;"	d
max_many_pages	src/sm/sm_base.h	/^        max_many_pages = 8,$/;"	e	enum:smlevel_0::__anon28
max_num_entries	src/sm/zkeyed.h	/^zkeyed_p::max_num_entries() const$/;"	f	class:zkeyed_p
max_openlog	src/sm/sm_base.h	/^        max_openlog = SM_LOG_PARTITIONS,        \/\/ max # log partitions$/;"	e	enum:smlevel_0::__anon28
max_os_file_size	src/sthread/sthread.cpp	/^w_base_t::int8_t     sthread_t::max_os_file_size;$/;"	m	class:sthread_t	file:
max_os_file_size	src/sthread/sthread.h	/^    static w_base_t::int8_t     max_os_file_size;$/;"	m	class:sthread_t
max_partition_size	src/sm/log.cpp	/^fileoff_t log_m::max_partition_size() {$/;"	f	class:log_m
max_pids	src/sm/lgrec.h	/^    enum { max_pids = page_p::data_sz \/ sizeof(shpid_t)};$/;"	e	enum:lgindex_p::__anon21
max_prefix_level	src/sm/zkeyed.cpp	/^static int max_prefix_level = MAX_PREFIX_LEVEL;$/;"	v	file:
max_priority	src/sthread/sthread.h	/^        max_priority    = t_time_critical,$/;"	e	enum:sthread_t::priority_t
max_range	src/fc/w_error.h	/^    enum { max_range = 10, max_trace = 10 };$/;"	e	enum:w_error_t::__anon127
max_rec_cnt	src/sm/sort.cpp	/^    uint max_rec_cnt;   \/\/ max # of records for this run$/;"	m	struct:sort_desc_t	file:
max_rec_len	src/sm/sm_base.h	/^        max_rec_len = max_uint4$/;"	e	enum:smlevel_0::__anon29
max_rtstk_sz	src/sm/rtree_p.h	/^    enum { max_rtstk_sz = 10 };$/;"	e	enum:rtstk_t::__anon65
max_scnt	src/sm/rtree_p.h	/^    max_scnt = (data_sz - sizeof(rtctrl_t)) \/ $/;"	e	enum:rtree_base_p::__anon64
max_server_handle_len	src/common/tid_t.h	173;"	d
max_server_handle_len	src/common/tid_t.h	175;"	d
max_servers	src/sm/sm_base.h	/^        max_servers = 15,       \/\/ max servers to be connected with$/;"	e	enum:smlevel_0::__anon28
max_size	src/fc/vtable.h	/^    int max_size() const { return int(_size); }$/;"	f	class:vtable_names_init_t
max_size	src/fc/w_temp_alloc.h	/^        size_type max_size() const { return size_t(-8); }$/;"	f	struct:w_temp_alloc::allocator
max_slot	src/sm/page.h	/^        max_slot = data_sz \/ sizeof(slot_t) + 2$/;"	e	enum:page_p::__anon71
max_slot	src/sm/page_s.h	/^        max_slot = data_sz \/ sizeof(slot_t) + 2$/;"	e	enum:page_s::__anon78
max_small	src/common/vec_t.h	/^    enum dummy_enumid { max_small = MAX_SMALL_VEC_SIZE };$/;"	e	enum:cvec_t::dummy_enumid
max_small_rec	src/sm/app_support.h	/^    max_small_rec = page_s::data_sz - sizeof(file_p_hdr_t) -$/;"	e	enum:ssm_constants::__anon68
max_small_rec	src/sm/smstats.h	/^    u_long max_small_rec;      \/\/ maximum number of bytes in a "small"$/;"	m	struct:sm_config_info_t
max_store_id_in_use	src/sm/sm_io.cpp	/^io_m::max_store_id_in_use(vid_t volid, snum_t& snum) $/;"	f	class:io_m
max_store_id_in_use	src/sm/vol.cpp	/^vol_t::max_store_id_in_use() const$/;"	f	class:vol_t
max_stores_in_table	src/sm/histo.cpp	/^        max_stores_in_table = 33 };$/;"	e	enum:__anon50	file:
max_sz	src/sm/logrec.h	/^        max_sz = 3 * sizeof(page_s),$/;"	e	enum:logrec_t::__anon40
max_trace	src/fc/w_error.h	/^    enum { max_range = 10, max_trace = 10 };$/;"	e	enum:w_error_t::__anon127
max_uint2	src/common/basics.h	/^const uint2_t    max_uint2 = 0xffff;$/;"	v
max_uint4	src/common/basics.h	/^const uint4_t    max_uint4 = 0xffffffff;$/;"	v
max_vols	src/sm/sm_base.h	/^        max_vols = 20,                \/\/ max mounted volumes$/;"	e	enum:smlevel_0::__anon28
max_xct_thread	src/sm/sm_base.h	/^        max_xct_thread = 20,        \/\/ max threads in a xct$/;"	e	enum:smlevel_0::__anon28
maybe_lock	src/sm/xct.cpp	/^xct_i::maybe_lock::maybe_lock(bool already_locked)$/;"	f	class:xct_i::maybe_lock
maybe_lock	src/sm/xct.h	/^    struct maybe_lock {$/;"	s	struct:xct_i
mbb	src/sm/rtree.cpp	/^    nbox_t* mbb;$/;"	m	class:rtwork_p	file:
mblock	src/fc/block_alloc.h	/^    typedef memory_block::block mblock;$/;"	t	struct:dynpool
mcadd	src/common/regcomp.cpp	/^mcadd(struct parse *p, cset *cs, const char *cp)$/;"	f	file:
mccase	src/common/regcomp.cpp	/^mccase(struct parse *, cset * W_IFDEBUG3(cs))$/;"	f	file:
mcinvert	src/common/regcomp.cpp	/^mcinvert(struct parse *, cset * W_IFDEBUG3(cs))$/;"	f	file:
mcs_lock	src/sthread/mcs_lock.h	/^	mcs_lock() : _tail(NULL) { }$/;"	f	struct:mcs_lock
mcs_lock	src/sthread/mcs_lock.h	/^struct mcs_lock {$/;"	s
mcs_rwlock	src/sthread/srwlock.h	/^    mcs_rwlock() : _holders(0), _is_plp(false), _is_reader(false) { }$/;"	f	class:mcs_rwlock
mcs_rwlock	src/sthread/srwlock.h	/^class mcs_rwlock : protected queue_based_lock_t $/;"	c
me	src/sm/log_core.cpp	/^	mcs_lock::qnode me;$/;"	m	struct:log_core::insert_info	file:
me	src/sm/smthread.h	/^    static smthread_t*         me() { return (smthread_t*) sthread_t::me(); }$/;"	f	class:smthread_t
me	src/sm/smthread.h	/^me() $/;"	f
me	src/sthread/sthread.h	/^    static sthread_t*    me() { return me_lval(); }$/;"	f	class:sthread_t
me2	src/sm/log_core.cpp	/^		mcs_lock::qnode me2;$/;"	m	union:log_core::insert_info::__anon93	file:
me2h	src/sm/log_core.cpp	/^		hacked_qnode me2h;$/;"	m	union:log_core::insert_info::__anon93	file:
me_lval	src/sthread/sthread.cpp	/^sthread_t* &sthread_t::me_lval() {$/;"	f	class:sthread_t
mem_alloc	src/fc/w_bitmap.h	/^    bool            mem_alloc;$/;"	m	class:w_bitmap_t
mem_needed	src/sm/bf.cpp	/^bf_m::mem_needed(int n)$/;"	f	class:bf_m
membar_consumer	src/atomic_ops/atomic_ops_builtin.h	/^static inline void membar_consumer(void) {$/;"	f
membar_enter	src/atomic_ops/atomic_ops_builtin.h	/^static inline void membar_enter(void) {$/;"	f
membar_exit	src/atomic_ops/atomic_ops_builtin.h	/^static inline void membar_exit(void) {$/;"	f
membar_producer	src/atomic_ops/atomic_ops_builtin.h	/^static inline void membar_producer(void) {$/;"	f
member	src/fc/w_hash.h	/^w_hash_t<T,LOCK, K>::member(T const* t) const$/;"	f	class:w_hash_t
member_of	src/fc/w_list.h	/^w_link_t::member_of() const$/;"	f	class:w_link_t
members	src/sm/histo.cpp	/^    int members;$/;"	m	struct:trace_info	file:
memblock_DEPENDENCIES	src/fc/tests/Makefile	/^memblock_DEPENDENCIES = ..\/libfc.a $(LOCALLDADD)$/;"	m
memblock_LDADD	src/fc/tests/Makefile	/^memblock_LDADD = $(LDADD)$/;"	m
memblock_OBJECTS	src/fc/tests/Makefile	/^memblock_OBJECTS = $(am_memblock_OBJECTS)$/;"	m
memblock_SOURCES	src/fc/tests/Makefile	/^memblock_SOURCES = memblock.cpp$/;"	m
memdump	src/fc/w_debug.cpp	/^w_debug::memdump(void *p, int len)$/;"	f	class:w_debug
memmove	src/common/regex_utils.h	80;"	d
memory_block	src/fc/mem_block.cpp	/^namespace memory_block {$/;"	n	file:
memory_block	src/fc/mem_block.h	/^namespace memory_block {$/;"	n
merge	src/sm/newsort.cpp	/^run_mgr::merge($/;"	f	class:run_mgr
merge	src/sm/sort.cpp	/^sort_stream_i::merge(bool skip_last_pass=false)$/;"	f	class:sort_stream_i
merge_slots	src/sm/page.cpp	/^page_p::merge_slots(slotid_t idx, slot_offset_t off1, slot_offset_t off2)$/;"	f	class:page_p
merge_trees	src/sm/btree.cpp	/^btree_m::merge_trees($/;"	f	class:btree_m
meta	src/sm/newsort.cpp	/^    const meta_header_t *meta() const { return _meta; }$/;"	f	class:tape_t
meta_header_t	src/sm/newsort.cpp	/^    NORET meta_header_t() :$/;"	f	class:meta_header_t
meta_header_t	src/sm/newsort.cpp	/^class meta_header_t $/;"	c	file:
meta_rid	src/sm/newsort.cpp	/^    rid_t              meta_rid() const { return run_beg(); }$/;"	f	class:tape_t
metadata	src/sm/smsh/sort_funcs.h	/^    NORET metadata() : t(test_nosuch), $/;"	f	struct:metadata
metadata	src/sm/smsh/sort_funcs.h	/^struct metadata {$/;"	s
metafp	src/sm/newsort.cpp	/^    file_p&          metafp() { return _metafp; }$/;"	f	class:tape_t
mhilbert	src/sm/smsh/sort_funcs3.cpp	/^mhilbert ($/;"	f
middle	src/sm/smsh/scripts/bt.tcl	/^proc middle  { a b } {$/;"	p
min	src/fc/w_minmax.h	/^min(const T x, const T y)$/;"	f
min_chkpt_rec_lsn	src/sm/log.h	/^    lsn_t               min_chkpt_rec_lsn() const {$/;"	f	class:log_m
min_entry_size	src/sm/zkeyed.h	/^zkeyed_p::min_entry_size()const$/;"	f	class:zkeyed_p
min_int2	src/common/basics.h	/^const int2_t    min_int2 = (short)0x8000;     \/* -(1 << 15);        *\/$/;"	v
min_int4	src/common/basics.h	/^const int4_t    min_int4 = 0x80000000;         \/* -(1 << 31);        *\/$/;"	v
min_int4	src/fc/nbox.cpp	/^const nbox_t::int4_t        nbox_t::min_int4 = w_base_t::int4_min;$/;"	m	class:nbox_t	file:
min_int4	src/fc/nbox.h	/^    static const int4_t    min_int4;$/;"	m	class:nbox_t
min_num_buckets	src/sm/sdesc.h	/^                min_num_buckets = 8$/;"	e	enum:sdesc_cache_t::__anon15
min_partition_size	src/sm/log.cpp	/^fileoff_t log_m::min_partition_size()$/;"	f	class:log_m
min_partition_size	src/sm/log_core.cpp	/^log_core::min_partition_size() { $/;"	f	class:log_core
min_priority	src/sthread/sthread.h	/^        min_priority    = t_regular$/;"	e	enum:sthread_t::priority_t
min_rec_lsn	src/sm/bf.cpp	/^bf_m::min_rec_lsn()$/;"	f	class:bf_m
min_rec_lsn	src/sm/restart.cpp	/^dirty_pages_tab_t::min_rec_lsn()$/;"	f	class:dirty_pages_tab_t
min_rec_size	src/sm/file.h	/^           min_rec_size = sizeof(rectag_t) + sizeof(slot_t)$/;"	e	enum:file_p::__anon69
min_sdesc	src/sm/sdesc.h	/^                min_sdesc = 4,$/;"	e	enum:sdesc_cache_t::__anon15
min_uint2	src/common/basics.h	/^const uint2_t    min_uint2 = 0;$/;"	v
min_uint4	src/common/basics.h	/^const uint4_t    min_uint4 = 0;$/;"	v
misc	src/fc/tests/ntime.cpp	/^void misc()$/;"	f
mix_it_up	src/sthread/tests/thread3.cpp	/^bool	mix_it_up = false;$/;"	v
mixed	src/fc/tests/errlogtest.cpp	/^void mixed(ErrLog &e) { $/;"	f
mk_kvl	src/sm/btree_impl.cpp	/^btree_impl::mk_kvl(concurrency_t cc, lockid_t& kvl, $/;"	f	class:btree_impl
mk_kvl	src/sm/btree_impl.h	/^    static void                 mk_kvl($/;"	f	class:btree_impl
mk_kvl_eof	src/sm/btree_impl.h	/^    static void                 mk_kvl_eof($/;"	f	class:btree_impl
mkchunk	src/common/vec_mkchunk.cpp	/^vec_t::mkchunk($/;"	f	class:vec_t
mkdir_p	Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	config/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/atomic_ops/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/atomic_ops/asm_linkage/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/atomic_ops/asm_linkage/usr/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/atomic_ops/asm_linkage/usr/src/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/atomic_ops/atomic_ops/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/atomic_ops/atomic_ops/amd64/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/atomic_ops/atomic_ops/i386/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/atomic_ops/atomic_ops/sparc/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/atomic_ops/ia32/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/atomic_ops/ia32/sys/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/atomic_ops/intel/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/atomic_ops/intel/ia32/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/atomic_ops/intel/ia32/sys/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/atomic_ops/intel/sys/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/atomic_ops/sparc/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/atomic_ops/sparc/sys/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/common/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/common/tests/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/fc/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/fc/tests/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/sm/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/sm/smsh/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/sm/smsh/lib/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/sm/smsh/scripts/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/sm/tests/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/sthread/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/sthread/tests/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	tools/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkinstalldirs	Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	config/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/atomic_ops/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/atomic_ops/asm_linkage/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/atomic_ops/asm_linkage/usr/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/atomic_ops/asm_linkage/usr/src/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/atomic_ops/atomic_ops/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/atomic_ops/atomic_ops/amd64/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/atomic_ops/atomic_ops/i386/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/atomic_ops/atomic_ops/sparc/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/atomic_ops/ia32/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/atomic_ops/ia32/sys/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/atomic_ops/intel/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/atomic_ops/intel/ia32/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/atomic_ops/intel/ia32/sys/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/atomic_ops/intel/sys/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/atomic_ops/sparc/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/atomic_ops/sparc/sys/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/common/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/common/tests/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/fc/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/fc/tests/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/sm/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/sm/smsh/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/sm/smsh/lib/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/sm/smsh/scripts/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/sm/tests/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/sthread/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/sthread/tests/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	tools/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkkey	src/sm/smsh/scripts/bt.tcl	/^proc mkkey { k l } {$/;"	p
mkval	src/sm/smsh/scripts/bt.tcl	/^proc mkval { e } {$/;"	p
mlen	src/common/regex2.h	/^    int mlen;        \/* length of must *\/$/;"	m	struct:re_guts
mmap_DEPENDENCIES	src/sthread/tests/Makefile	/^mmap_DEPENDENCIES = ..\/libsthread.a ..\/..\/fc\/libfc.a $(LOCALLDADD)$/;"	m
mmap_LDADD	src/sthread/tests/Makefile	/^mmap_LDADD = $(LDADD)$/;"	m
mmap_OBJECTS	src/sthread/tests/Makefile	/^mmap_OBJECTS = $(am_mmap_OBJECTS)$/;"	m
mmap_SOURCES	src/sthread/tests/Makefile	/^mmap_SOURCES = mmap.cpp$/;"	m
mmm	src/sm/lock_core.cpp	/^const int mmm=10;$/;"	v
mod32	src/common/bitmap.cpp	/^inline int mod32(int x)        { return x & 31; }$/;"	f
mod32	src/fc/w_bitmap.cpp	/^inline int mod32(long x)        { return x & 31; }$/;"	f
mod8	src/common/bitmap.cpp	/^inline int mod8(int x)         { return x & 7; }$/;"	f
mod8	src/fc/w_bitmap.cpp	/^inline int mod8(long x)         { return x & 7; }$/;"	f
mode	src/common/latch.h	/^latch_t::mode() const$/;"	f	class:latch_t
mode	src/sm/btcursor.h	/^    lock_mode_t            mode()   const { return _mode; }$/;"	f	class:bt_cursor_t
mode	src/sm/lock_cache.h	/^    lock_base_t::lmode_t    mode;$/;"	m	struct:lock_cache_elem_t
mode	src/sm/lock_x.h	/^    lmode_t           mode() const { return _mode; } \/\/ mode requested &granted)$/;"	f	class:lock_request_t
mode	src/sm/logrec.h	/^		lock_mode_t    mode; \/\/ for this lock$/;"	m	struct:prepare_all_lock_t::LockAndModePair
mode	src/sm/logrec.h	/^	lock_mode_t    mode; \/\/ for this group of locks$/;"	m	struct:prepare_lock_t
mode	src/sthread/srwlock.h	/^    rwmode_t mode() const { int holders = *&_holders; $/;"	f	class:mcs_rwlock
modeBits	src/sthread/sdisk.cpp	/^int    sdisk_t::modeBits(int mode)$/;"	f	class:sdisk_t
mode_str	src/sm/lock_core.cpp	/^const char* const lock_base_t::mode_str[NUM_MODES] = {$/;"	m	class:lock_base_t	file:
mode_str	src/sm/lock_s.h	/^    static const char* const         mode_str[NUM_MODES];$/;"	m	class:lock_base_t
module_name	src/fc/w_error.cpp	/^w_error_t::module_name(err_num_t err_num)$/;"	f	class:w_error_t
more	src/fc/valgrind_help.h	/^    bool more() const { return (_check_failed>0); }$/;"	f	class:valgrind_check
more	src/sm/newsort.cpp	/^    bool more() {$/;"	f	class:blob
more_info_msg	src/fc/w_error.h	/^    const char*                  more_info_msg;$/;"	m	class:w_error_t
mount	src/sm/device.cpp	/^w_rc_t device_m::mount($/;"	f	class:device_m
mount	src/sm/dir.h	/^dir_m::mount(const char* const devname, vid_t vid)$/;"	f	class:dir_m
mount	src/sm/dir.h	/^dir_vol_m::mount(const char* const devname, vid_t vid)$/;"	f	class:dir_vol_m
mount	src/sm/sm_io.cpp	/^io_m::mount(const char* device, vid_t vid,$/;"	f	class:io_m
mount	src/sm/vol.cpp	/^vol_t::mount(const char* devname, vid_t vid)$/;"	f	class:vol_t
mount_dev	src/sm/sm.cpp	/^ss_m::mount_dev(const char* device, u_int& vol_cnt, devid_t& devid, vid_t local_vid)$/;"	f	class:ss_m
mount_dev	src/sm/sm_io.cpp	/^io_m::mount_dev(const char* dev_name, u_int& _vol_cnt)$/;"	f	class:io_m
mount_vol_log	src/sm/logdef_gen.cpp	/^	mount_vol_log (logrec_t*)   {};$/;"	f	class:mount_vol_log
mount_vol_log	src/sm/logdef_gen.cpp	/^    class mount_vol_log : public logrec_t {$/;"	c	file:
mount_vol_log	src/sm/logrec.cpp	/^mount_vol_log::mount_vol_log($/;"	f	class:mount_vol_log
move_mrbt_rec_to_given_page	src/sm/file.cpp	/^file_m::move_mrbt_rec_to_given_page($/;"	f	class:file_m
move_sort_keys	src/sm/newsort.cpp	/^meta_header_t::move_sort_keys(meta_header_t& other) $/;"	f	class:meta_header_t
mpl_attach_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t mpl_attach_cnt;$/;"	v
mr_fetch_init	src/sm/btree.cpp	/^btree_m::mr_fetch_init($/;"	f	class:btree_m
mr_index_test0	src/sm/tests/mrbtrees_test.cpp	/^rc_t smthread_main_t::mr_index_test0()$/;"	f	class:smthread_main_t
mr_index_test1	src/sm/tests/mrbtrees_test.cpp	/^rc_t smthread_main_t::mr_index_test1()$/;"	f	class:smthread_main_t
mr_index_test2	src/sm/tests/mrbtrees_test.cpp	/^rc_t smthread_main_t::mr_index_test2()$/;"	f	class:smthread_main_t
mr_index_test3	src/sm/tests/mrbtrees_test.cpp	/^rc_t smthread_main_t::mr_index_test3()$/;"	f	class:smthread_main_t
mr_index_test4	src/sm/tests/mrbtrees_test.cpp	/^rc_t smthread_main_t::mr_index_test4()$/;"	f	class:smthread_main_t
mr_index_test5	src/sm/tests/mrbtrees_test.cpp	/^rc_t smthread_main_t::mr_index_test5()$/;"	f	class:smthread_main_t
mr_index_test6	src/sm/tests/mrbtrees_test.cpp	/^rc_t smthread_main_t::mr_index_test6()$/;"	f	class:smthread_main_t
mr_index_test7	src/sm/tests/mrbtrees_test.cpp	/^rc_t smthread_main_t::mr_index_test7()$/;"	f	class:smthread_main_t
mr_insert	src/sm/btree.cpp	/^btree_m::mr_insert($/;"	f	class:btree_m
mr_insert_l	src/sm/btree.cpp	/^btree_m::mr_insert_l($/;"	f	class:btree_m
mr_insert_p	src/sm/btree.cpp	/^btree_m::mr_insert_p($/;"	f	class:btree_m
mr_lookup	src/sm/btree.cpp	/^btree_m::mr_lookup($/;"	f	class:btree_m
mr_remove	src/sm/btree.cpp	/^btree_m::mr_remove($/;"	f	class:btree_m
mr_remove_key	src/sm/btree.cpp	/^btree_m::mr_remove_key($/;"	f	class:btree_m
mr_update	src/sm/btree.cpp	/^btree_m::mr_update($/;"	f	class:btree_m
mrb_KEY_BOUNDARIES_NOT_ORDERED	src/sm/key_ranges_map.h	/^    mrb_KEY_BOUNDARIES_NOT_ORDERED    = 0x830003,$/;"	e	enum:__anon94
mrb_LAST_PARTITION	src/sm/key_ranges_map.h	/^    mrb_LAST_PARTITION                = 0x830002,$/;"	e	enum:__anon94
mrb_NOT_PHYSICAL_MRBT	src/sm/key_ranges_map.h	/^    mrb_NOT_PHYSICAL_MRBT             = 0x830006$/;"	e	enum:__anon94
mrb_OUT_OF_BOUNDS	src/sm/key_ranges_map.h	/^    mrb_OUT_OF_BOUNDS                 = 0x830004,$/;"	e	enum:__anon94
mrb_PARTITION_EXISTS	src/sm/key_ranges_map.h	/^    mrb_PARTITION_EXISTS              = 0x830005,$/;"	e	enum:__anon94
mrb_PARTITION_NOT_FOUND	src/sm/key_ranges_map.h	/^    mrb_PARTITION_NOT_FOUND           = 0x830001,$/;"	e	enum:__anon94
mrbtrees_test_DEPENDENCIES	src/sm/tests/Makefile	/^mrbtrees_test_DEPENDENCIES = $(top_builddir)\/src\/sm\/libsm.a \\$/;"	m
mrbtrees_test_LDADD	src/sm/tests/Makefile	/^mrbtrees_test_LDADD = $(LDADD)$/;"	m
mrbtrees_test_OBJECTS	src/sm/tests/Makefile	/^mrbtrees_test_OBJECTS = $(am_mrbtrees_test_OBJECTS)$/;"	m
mrbtrees_test_SOURCES	src/sm/tests/Makefile	/^mrbtrees_test_SOURCES = mrbtrees_test.cpp init_config_options.cpp$/;"	m
mrbtrees_test_all	src/sm/tests/testall	/^function mrbtrees_test_all {$/;"	f
msec	src/fc/stime.cpp	/^stime_t    stime_t::msec(int ms, int sec)$/;"	f	class:stime_t
msecs	src/fc/stime.cpp	/^long    stime_t::msecs() const$/;"	f	class:stime_t
multi_threaded_xct	src/sm/smstats.h	/^    bool   multi_threaded_xct;  $/;"	m	struct:sm_config_info_t
multis	src/common/regex2.h	/^    char *multis;        \/* -> char[smulti]  ab\\0cd\\0ef\\0\\0 *\/$/;"	m	struct:__anon9
multis	src/common/regex_cclass.h	/^    const char *multis;$/;"	m	struct:cclass
must	src/common/regex2.h	/^    char *must;        \/* match must contain this string *\/$/;"	m	struct:re_guts
mutex	src/sm/lock_core.cpp	/^    lock_x                        mutex;   \/\/ serialize access to lock_info_t$/;"	m	class:bucket_t	file:
mutex	src/sm/lock_x.h	/^        queue_based_lock_t mutex;$/;"	m	struct:lock_head_t::my_lock
mutex	src/sthread/macpthread_barrier.h	/^    pthread_mutex_t mutex;$/;"	m	struct:__anon148
my_latch	src/sm/bf.cpp	/^bf_m::my_latch(const page_s* buf) $/;"	f	class:bf_m
my_latch	src/sm/bf_core.cpp	/^bf_core_m::my_latch(const bfcb_t* p) const$/;"	f	class:bf_core_m
my_latch	src/sm/page.cpp	/^page_p::my_latch() const$/;"	f	class:page_p
my_lock	src/sm/lock_x.h	/^        my_lock(char const* = NULL) $/;"	f	struct:lock_head_t::my_lock
my_lock	src/sm/lock_x.h	/^    struct my_lock {$/;"	s	class:lock_head_t
my_req_list	src/sm/lock_x.h	/^    request_list_t  my_req_list[t_num_durations];$/;"	m	class:xct_lock_info_t
my_time	src/sm/bf_core.cpp	/^static __thread timeval my_time;$/;"	v	file:
my_time	src/sm/btree_impl.cpp	/^static __thread timeval my_time;$/;"	v	file:
mybarrier	src/sm/smsh/tcl_thread.h	/^    pthread_barrier_t            mybarrier; \/\/ of 2$/;"	m	class:tcl_thread_t
myself	src/sthread/sthread.cpp	/^pthread_t sthread_t::myself() { return _core->pthread; }$/;"	f	class:sthread_t
n	src/fc/atomic_container.h	/^    union pvn { ptr* p; void* v; long n; };$/;"	m	union:atomic_container::pvn
n	src/fc/atomic_container.h	/^    union vpn { void* v; ptr* p; long n; };$/;"	m	union:atomic_container::vpn
n	src/fc/vtable.h	/^    int n() const { return N; }$/;"	f	class:vtable_row_t
name	src/common/option.h	/^    const char*        name()                { return _name; }$/;"	f	class:option_t
name	src/common/regerror.cpp	/^    const char *name;$/;"	m	struct:rerr	file:
name	src/common/regex_cclass.h	/^    const char *name;$/;"	m	struct:cclass
name	src/common/regex_cname.h	/^    const char *name;$/;"	m	struct:cname
name	src/fc/vtable.h	/^    const char *name(int i) const {$/;"	f	class:vtable_names_init_t
name	src/sm/crash.cpp	/^        char*         name;$/;"	m	struct:debuginfo	file:
name	src/sm/device.h	/^    char       name[smlevel_0::max_devname+1];$/;"	m	struct:device_s
name	src/sm/lock_x.h	/^    lockid_t         name;        \/\/ the name of this lock$/;"	m	class:lock_head_t
name	src/sm/logrec.h	/^        lockid_t    name;$/;"	m	struct:prepare_all_lock_t::LockAndModePair
name	src/sm/logrec.h	/^    lockid_t    name[max_locks_logged];$/;"	m	struct:prepare_lock_t
name	src/sm/smsh/shell.cpp	/^    const char*         name;$/;"	m	struct:nda_t	file:
name	src/sm/smsh/shell.cpp	/^    const char* name;$/;"	m	struct:cmd_t	file:
name	src/sm/smsh/shell2.cpp	/^    const char*         name;$/;"	m	struct:name2type_t	file:
name	src/sthread/sthread.h	/^sthread_named_base_t::name() const$/;"	f	class:sthread_named_base_t
name2type	src/sm/smsh/shell2.cpp	/^} name2type[] = {$/;"	v	typeref:struct:name2type_t	file:
name2type_t	src/sm/smsh/shell2.cpp	/^static const struct name2type_t {$/;"	s	file:
name_space_t	src/sm/lock_s.h	/^    enum name_space_t { \/\/ you cannot change these values with impunity$/;"	g	class:lockid_t
nbol	src/common/regex2.h	/^    int nbol;        \/* number of ^ used *\/$/;"	m	struct:re_guts
nbox_t	src/fc/nbox.cpp	/^nbox_t::nbox_t(const char* s)$/;"	f	class:nbox_t
nbox_t	src/fc/nbox.cpp	/^nbox_t::nbox_t(const char* s, int len)$/;"	f	class:nbox_t
nbox_t	src/fc/nbox.cpp	/^nbox_t::nbox_t(const nbox_t& r)$/;"	f	class:nbox_t
nbox_t	src/fc/nbox.cpp	/^nbox_t::nbox_t(int dimension)$/;"	f	class:nbox_t
nbox_t	src/fc/nbox.cpp	/^nbox_t::nbox_t(int dimension, int box[])$/;"	f	class:nbox_t
nbox_t	src/fc/nbox.h	/^class nbox_t {$/;"	c
nbufpages	src/sm/tests/htab.cpp	/^uint4_t  nbufpages = 0;$/;"	v
nbytes	src/fc/atomic_class_pool.h	/^    uint nbytes() { return _nbytes; }$/;"	f	struct:atomic_class_pool
nbytes	src/fc/block_alloc.h	/^    size_t nbytes() const { return _chip_size; }$/;"	f	struct:blob_pool
ncalls	src/sm/smsh/out_of_log_space.cpp	/^int    ncalls = 0; \/\/ just for the heck of it.$/;"	v
ncategories	src/common/regex2.h	/^    int ncategories;    \/* how many character categories *\/$/;"	m	struct:re_guts
nch	src/common/regcomp.cpp	/^nch(struct parse *p, cset *cs)$/;"	f	file:
ncsalloc	src/common/regcomp.cpp	/^    int ncsalloc;        \/* number of csets allocated *\/$/;"	m	struct:parse	file:
ncsets	src/common/regex2.h	/^    int ncsets;        \/* number of csets in use *\/$/;"	m	struct:re_guts
nda	src/sm/smsh/shell.cpp	/^} nda[] = {$/;"	v	typeref:struct:nda_t	file:
nda_t	src/sm/smsh/shell.cpp	/^static const struct nda_t {$/;"	s	file:
ndx	src/sm/scan.h	/^    ndx_t            ndx() const { return ntype; }$/;"	f	class:scan_index_i
ndx_t	src/sm/sm.h	/^    typedef smlevel_0::ndx_t ndx_t;$/;"	t	class:ss_m
ndx_t	src/sm/sm_base.h	/^    enum ndx_t { $/;"	g	class:smlevel_0
need_vol_lock_r	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t need_vol_lock_r;$/;"	v
need_vol_lock_w	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t need_vol_lock_w;$/;"	v
needed	src/sm/log_core.h	/^		fileoff_t* needed;$/;"	m	struct:log_core::waiting_xct
neg_inf	src/common/vec_t.cpp	/^cvec_t                cvec_t::neg_inf;$/;"	m	class:cvec_t	file:
neg_inf	src/common/vec_t.cpp	/^vec_t&                vec_t::neg_inf = *(vec_t*) &cvec_t::neg_inf;$/;"	m	class:vec_t	file:
neg_inf	src/common/vec_t.h	/^    static cvec_t neg_inf;$/;"	m	class:cvec_t
neg_inf	src/common/vec_t.h	/^    static vec_t& neg_inf;$/;"	m	class:vec_t
neol	src/common/regex2.h	/^    int neol;        \/* number of $ used *\/$/;"	m	struct:re_guts
never	src/common/regcomp.cpp	/^static int never = 0;        \/* for use in asserts; shuts lint up *\/$/;"	v	file:
never	src/common/regcomp.cpp	149;"	d	file:
new_base	src/sm/log_core.cpp	/^	long new_base;	\/\/ positive if we started a new partition$/;"	m	struct:log_core::insert_info	file:
new_c_str	src/fc/w_strstream.h	/^    const char *new_c_str()$/;"	f	class:w_ostrstream
new_dec	src/fc/w_input.cpp	/^        new_hex, new_oct, new_dec,$/;"	e	enum:states	file:
new_deleting_value	src/sm/sm_io.h	/^        store_deleting_t new_deleting_value()  const$/;"	f	class:store_operation_param
new_end	src/sm/log_core.cpp	/^	long new_end;	\/\/ eventually assigned to _cur_epoch $/;"	m	struct:log_core::insert_info	file:
new_hex	src/fc/w_input.cpp	/^        new_hex, new_oct, new_dec,$/;"	e	enum:states	file:
new_image	src/sm/logrec.cpp	/^    void*                 new_image()   { return data + old_len; }$/;"	f	struct:page_splice_t
new_image	src/sm/logrec.cpp	/^    void*                 new_image()   { return data + olen; }$/;"	f	struct:page_splicez_t
new_len	src/sm/logrec.cpp	/^    uint2_t                 new_len;\/\/ len of new data (# bytes inserted or written by the splice)$/;"	m	struct:page_splice_t	file:
new_len	src/sm/logrec.cpp	/^    uint2_t                 new_len;\/\/ len of new data (# bytes inserted or written by the splice)$/;"	m	struct:page_splicez_t	file:
new_lock_hierarchy	src/sm/xct.cpp	/^xct_t::new_lock_hierarchy()$/;"	f	class:xct_t
new_log_m	src/sm/log.cpp	/^log_m::new_log_m(log_m   *&the_log,$/;"	f	class:log_m
new_log_m	src/sm/log_core.cpp	/^log_core::new_log_m($/;"	f	class:log_core
new_next	src/sm/logrec.cpp	/^    extnum_t        new_next;$/;"	m	struct:set_ext_next_t	file:
new_next	src/sm/logrec.cpp	/^    shpid_t new_prev, new_next;$/;"	m	struct:page_link_t	file:
new_oct	src/fc/w_input.cpp	/^        new_hex, new_oct, new_dec,$/;"	e	enum:states	file:
new_prev	src/sm/logrec.cpp	/^    shpid_t new_prev, new_next;$/;"	m	struct:page_link_t	file:
new_sdesc_cache_t	src/sm/xct.cpp	/^xct_t::new_sdesc_cache_t()$/;"	f	class:xct_t
new_sort_file	src/sm/newsort.cpp	/^ss_m::new_sort_file($/;"	f	class:ss_m
new_state	src/sm/bf_prefetch.cpp	/^bf_prefetch_thread_t::new_state(int i, prefetch_event_t e)$/;"	f	class:bf_prefetch_thread_t
new_store_flags	src/sm/sm_io.h	/^        store_flag_t new_store_flags()  const$/;"	f	class:store_operation_param
new_xct	src/sm/smthread.cpp	/^smthread_t::new_xct(xct_t *x)$/;"	f	class:smthread_t
new_xct	src/sm/xct.cpp	/^xct_t::new_xct($/;"	f	class:xct_t
new_xct	src/sm/xct.cpp	/^xct_t::new_xct(const tid_t& t, state_t s, const lsn_t& last_lsn,$/;"	f	class:xct_t
new_xct_log_t	src/sm/xct.cpp	/^xct_t::new_xct_log_t()$/;"	f	class:xct_t
newsort	src/sm/smsh/sort_funcs3.cpp	/^bool newsort = true ;$/;"	v
next	src/common/regcomp.cpp	/^    char *next;        \/* next character in RE *\/$/;"	m	struct:parse	file:
next	src/common/tid_t.h	/^    tid_t next() const {$/;"	f	class:tid_t
next	src/fc/atomic_container.h	/^    struct ptr { ptr* next; }; $/;"	m	struct:atomic_container::ptr
next	src/fc/w_error.h	/^    w_error_t const*             next() const { return _next; }$/;"	f	class:w_error_t
next	src/fc/w_error.h	/^    w_error_t*                   next() { return _next; }$/;"	f	class:w_error_t
next	src/fc/w_hash.h	/^T* w_hash_i<T,LOCK, K>::next()$/;"	f	class:w_hash_i
next	src/fc/w_list.h	/^    T*                next()     $/;"	f	class:w_list_i
next	src/fc/w_list.h	/^    T*                next(w_link_t* p) {$/;"	f	class:w_list_t
next	src/fc/w_list.h	/^    const T*            next() { return w_list_i<T,LOCK>::next(); }$/;"	f	class:w_list_const_i
next	src/fc/w_list.h	/^w_link_t::next() const$/;"	f	class:w_link_t
next	src/fc/w_rc.h	/^    w_error_t const     *next() {$/;"	f	class:w_rc_i
next	src/sm/extent.h	/^    extnum_t           next;        \/\/ 4 bytes$/;"	m	class:extlink_t
next	src/sm/log.cpp	/^bool log_i::next(lsn_t& lsn, logrec_t*& r)  $/;"	f	class:log_i
next	src/sm/logrec.cpp	/^    extnum_t            next;$/;"	m	struct:create_ext_list_t	file:
next	src/sm/logrec.h	/^    extnum_t next;  \/\/ order info$/;"	m	class:ext_log_info_t
next	src/sm/newsort.cpp	/^    w_rc_t next(file_p& fp) {$/;"	f	class:run_t
next	src/sm/newsort.cpp	/^blob::next(const char *&key1, smsize_t& l) $/;"	f	class:blob
next	src/sm/page.h	/^page_p::next() const $/;"	f	class:page_p
next	src/sm/page_s.h	/^    shpid_t    next;          \/\/ next page$/;"	m	class:page_s
next	src/sm/scan.cpp	/^append_file_i::next(pin_i*&, smsize_t, bool& )$/;"	f	class:append_file_i
next	src/sm/scan.cpp	/^scan_file_i::next(pin_i*& pin_ptr, smsize_t start, bool& eof)$/;"	f	class:scan_file_i
next	src/sm/scan.h	/^    rc_t             next(bool& eof)  {$/;"	f	class:scan_index_i
next	src/sm/scan.h	/^    rc_t            next($/;"	f	class:scan_rt_i
next	src/sm/smsh/shell.cpp	/^        int        next;$/;"	m	struct:BoxMinder	file:
next	src/sm/sort.cpp	/^run_scan_t::next(bool& end)$/;"	f	class:run_scan_t
next	src/sm/sort.h	/^    s_chunk* next;$/;"	m	struct:s_chunk
next	src/sm/xct.cpp	/^xct_t* xct_i::next(bool can_delete) {$/;"	f	class:xct_i
next_box	src/sm/smsh/shell.cpp	/^        nbox_t        *next_box(const nbox_t &universe)$/;"	f	struct:BoxMinder
next_bytes	src/sm/pin.cpp	/^rc_t pin_i::next_bytes(bool& eof)$/;"	f	class:pin_i
next_errnum	src/fc/w_rc.h	/^    w_base_t::int4_t    next_errnum() {$/;"	f	class:w_rc_i
next_ext	src/sm/vol.cpp	/^rc_t vol_t::next_ext(extnum_t ext, extnum_t &result)$/;"	f	class:vol_t
next_page	src/sm/file.cpp	/^file_m::next_page(lpid_t& pid, bool& eof, bool* allocated)$/;"	f	class:file_m
next_page	src/sm/scan.cpp	/^scan_file_i::next_page(pin_i*& pin_ptr, smsize_t start, bool& eof)$/;"	f	class:scan_file_i
next_page	src/sm/sm_io.cpp	/^rc_t io_m::next_page($/;"	f	class:io_m
next_page	src/sm/vol.cpp	/^vol_t::next_page(lpid_t& pid, bool* allocated)$/;"	f	class:vol_t
next_page_with_space	src/sm/file.cpp	/^file_m::next_page_with_space(lpid_t& pid, bool& eof, space_bucket_t b)$/;"	f	class:file_m
next_page_with_space	src/sm/sm_io.cpp	/^rc_t io_m::next_page_with_space($/;"	f	class:io_m
next_page_with_space	src/sm/vol.cpp	/^vol_t::next_page_with_space(lpid_t& pid, space_bucket_t needed)$/;"	f	class:vol_t
next_pointer	src/fc/atomic_container.h	/^    static pvn next_pointer(pvn value) {$/;"	f	class:atomic_container
next_slot	src/sm/file.cpp	/^slotid_t file_p::next_slot(slotid_t curr)$/;"	f	class:file_p
next_slot	src/sm/page.cpp	/^page_p::next_slot($/;"	f	class:page_p
nfree	src/sm/page.h	/^page_p::nfree() const$/;"	f	class:page_p
nfree	src/sm/page_s.h	/^        int nfree() const    { return _nfree; }$/;"	f	class:page_s::space_t
nine	src/fc/w_input.cpp	/^        nine=9, ten=10, eleven=11,$/;"	e	enum:charclass	file:
nkc	src/sm/btcursor.h	/^    int                nkc()     const { return _nkc; }$/;"	f	class:bt_cursor_t
nkc	src/sm/sdesc.h	/^    w_base_t::uint4_t        nkc;                \/\/ # components in key$/;"	m	struct:sinfo_s
nkc	src/sm/sm.h	/^    w_base_t::uint4_t    nkc;  $/;"	m	class:sm_store_info_t
nkeys	src/sm/newsort.cpp	/^    int              nkeys() const { return int(__persistent_part._nkeys); }$/;"	f	class:meta_header_t
nkeys	src/sm/newsort.cpp	/^    int         nkeys() const { return info.nkeys(); }$/;"	f	class:ssm_sort::run_mgr
nkeys	src/sm/sort_s.h	/^    int     nkeys() const { return _nkeys; }$/;"	f	class:ssm_sort::sort_keys_t
nlen	src/sm/logrec.cpp	/^    uint2_t                 nlen;   \/\/ len of new data stroed in _data[]$/;"	m	struct:page_splicez_t	file:
noCSKF	src/sm/newsort.cpp	/^sort_keys_t::noCSKF($/;"	f	class:sort_keys_t
noLEXFUNC	src/sm/newsort.cpp	/^noLEXFUNC (const void *from, smsize_t howmuch , void *to) $/;"	f	class:sort_keys_t
noMOF	src/sm/newsort.cpp	/^sort_keys_t::noMOF ($/;"	f	class:sort_keys_t
noUMOF	src/sm/newsort.cpp	/^sort_keys_t::noUMOF ($/;"	f	class:sort_keys_t
no_charclass	src/fc/w_input.cpp	/^        exx, JJJJ, eofile, white, sign, no_charclass$/;"	e	enum:charclass	file:
no_error	src/fc/w_error.cpp	/^w_error_t* const w_error_t::no_error = const_cast<w_error_t *>(&no_error_instance);$/;"	m	class:w_error_t	file:
no_error	src/fc/w_error.h	/^    static w_error_t* const      no_error;$/;"	m	class:w_error_t
no_error_instance	src/fc/w_error.h	/^    static const w_error_t       no_error_instance;$/;"	m	class:w_error_t
no_factory_t	src/sm/newsort.cpp	/^class no_factory_t : public factory_t {$/;"	c	file:
no_hex	src/fc/w_input.cpp	/^        _end, error, no_hex, no_state };$/;"	e	enum:states	file:
no_init	src/sm/tests/create_rec.cpp	/^smthread_user_t::no_init()$/;"	f	class:smthread_user_t
no_init	src/sm/tests/log_exceed.cpp	/^smthread_user_t::no_init()$/;"	f	class:smthread_user_t
no_init	src/sm/tests/mrbtrees_test.cpp	/^rc_t smthread_main_t::no_init()$/;"	f	class:smthread_main_t
no_init	src/sm/tests/rtree_example.cpp	/^smthread_user_t::no_init()$/;"	f	class:smthread_user_t
no_init	src/sm/tests/sort_stream.cpp	/^smthread_user_t::no_init()$/;"	f	class:smthread_user_t
no_init	src/sm/tests/vtable_example.cpp	/^smthread_user_t::no_init()$/;"	f	class:smthread_user_t
no_longer_in_xct	src/sm/prologue.h	/^prologue_rc_t::no_longer_in_xct()$/;"	f	class:prologue_rc_t
no_object	src/sm/newsort.cpp	/^const sm_object_t no_object;$/;"	v
no_state	src/fc/w_input.cpp	/^        _end, error, no_hex, no_state };$/;"	e	enum:states	file:
no_xct	src/sm/smthread.cpp	/^smthread_t::no_xct(xct_t *x)$/;"	f	class:smthread_t
nochecknecessary	src/sm/page.h	/^        void        nochecknecessary() { _checked=1; }$/;"	f	class:page_p::page_bucket_info_t
nohook	src/sm/histo.h	/^        nohook = -1 \/\/ bad hook - hook not found$/;"	e	enum:histoid_t::__anon96
none	src/fc/w_debug.h	/^        int            none(void) { return (mask & _none) ? 1 : 0; }$/;"	f	class:w_debug
none	src/sm/newsort.cpp	/^const object_t& object_t::none = no_object;$/;"	m	class:object_t	file:
none	src/sm/newsort.cpp	/^factory_t* factory_t::none = &_none;$/;"	m	class:factory_t	file:
none	src/sm/sort_s.h	/^    static const object_t& none;$/;"	m	class:ssm_sort::object_t
none	src/sm/sort_s.h	/^   static factory_t*    none;$/;"	m	class:ssm_sort::factory_t
nonnewline	src/common/regcomp.cpp	/^nonnewline(struct parse *p)$/;"	f	file:
nonunique_fingerprints	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t nonunique_fingerprints;$/;"	v
nophy_equal_partitions	src/sm/key_ranges_map.cpp	/^w_rc_t key_ranges_map::nophy_equal_partitions(const sinfo_s& sinfo,$/;"	f	class:key_ranges_map
normal	src/fc/tests/ntime.cpp	/^void normal()$/;"	f
normalize	src/fc/stime.cpp	/^void stime_t::normalize()$/;"	f	class:stime_t
normalize	src/fc/tests/ntime.cpp	/^    void    normalize() { stime_t::normalize(); }$/;"	f	class:stime_test_t
nosize	src/sm/partition.h	/^    enum { nosize = -1 };$/;"	e	enum:partition_t::__anon35
not_in_xct	src/sm/prologue.h	/^        not_in_xct,     \/\/ may not have tx, regardless of state$/;"	e	enum:prologue_rc_t::xct_state_t
note	src/sthread/tests/thread1.cpp	/^	wait_for_t	&note;$/;"	m	class:pong_thread_t	file:
now	src/fc/stime.cpp	/^stime_t    stime_t::now()$/;"	f	class:stime_t
now	src/sm/tests/stopwatch.h	/^    long long now() {$/;"	f	class:stopwatch_t
npages	src/sm/bf.cpp	/^bf_m::npages()$/;"	f	class:bf_m
npages	src/sm/lgrec.h	/^    uint4_t    npages;        \/\/ number of pages in chunk$/;"	m	struct:lg_chunk_s
nplus	src/common/regex2.h	/^    sopno nplus;        \/* how deep does it nest +s? *\/$/;"	m	struct:re_guts
nrecs	src/fc/tests/hash1.cpp	/^const int nrecs = 20;$/;"	v
nrecs	src/fc/tests/hash2.cpp	/^const int nrecs = 20;$/;"	v
nrecs	src/sm/btree_p.h	/^btree_p::nrecs() const$/;"	f	class:btree_p
nrecs	src/sm/keyed.h	/^keyed_p::nrecs() const$/;"	f	class:keyed_p
nrecs	src/sm/rtree_p.h	/^rtree_base_p::nrecs() const$/;"	f	class:rtree_base_p
nrecs	src/sm/zkeyed.h	/^inline int zkeyed_p::nrecs() const$/;"	f	class:zkeyed_p
nrsvd	src/sm/page.h	/^page_p::nrsvd() const$/;"	f	class:page_p
nrsvd	src/sm/page_s.h	/^        page_bytes_t    nrsvd() const { return _nrsvd; }$/;"	f	class:page_s::space_t
nsec	src/fc/stime.cpp	/^stime_t    stime_t::nsec(int ns, int sec)$/;"	f	class:stime_t
nsecs	src/fc/stime.cpp	/^long    stime_t::nsecs() const$/;"	f	class:stime_t
nslots	src/sm/page.h	/^page_p::nslots() const$/;"	f	class:page_p
nslots	src/sm/page_s.h	/^    slot_index_t  nslots;     \/\/ number of slots$/;"	m	class:page_s
nstates	src/common/regex2.h	/^    sopno nstates;        \/* = number of sops *\/$/;"	m	struct:re_guts
nsub	src/common/regex2.h	/^    size_t nsub;        \/* copy of re_nsub *\/$/;"	m	struct:re_guts
ntime_DEPENDENCIES	src/fc/tests/Makefile	/^ntime_DEPENDENCIES = ..\/libfc.a $(LOCALLDADD)$/;"	m
ntime_LDADD	src/fc/tests/Makefile	/^ntime_LDADD = $(LDADD)$/;"	m
ntime_OBJECTS	src/fc/tests/Makefile	/^ntime_OBJECTS = $(am_ntime_OBJECTS)$/;"	m
ntime_SOURCES	src/fc/tests/Makefile	/^ntime_SOURCES = ntime.cpp$/;"	m
ntoh	src/common/w_opaque.h	/^    void          ntoh()  {$/;"	f	class:opaque_quantity
ntype	src/sm/scan.h	/^    ndx_t                ntype;$/;"	m	class:scan_index_i
ntype	src/sm/scan.h	/^    ndx_t             ntype;$/;"	m	class:scan_rt_i
ntype	src/sm/sdesc.h	/^    u_char        ntype;                \/\/ ndx_t$/;"	m	struct:sinfo_s
ntype	src/sm/sm.h	/^    u_char    ntype;        $/;"	m	class:sm_store_info_t
null	src/common/devid_t.cpp	/^const devid_t devid_t::null;$/;"	m	class:devid_t	file:
null	src/common/devid_t.h	/^    static const devid_t null;$/;"	m	struct:devid_t
null	src/common/lid_t.cpp	/^const lvid_t    lvid_t::null;            $/;"	m	class:lvid_t	file:
null	src/common/lid_t.h	/^    static const lvid_t null;$/;"	m	struct:lvid_t
null	src/common/lsn.h	/^    static const lsn_t null;$/;"	m	class:lsn_t
null	src/common/stid_t.cpp	/^const stid_t stid_t::null;$/;"	m	class:stid_t	file:
null	src/common/stid_t.h	/^    static const stid_t null;$/;"	m	struct:stid_t
null	src/common/tid_t.h	/^    static const tid_t null;$/;"	m	class:tid_t
null	src/common/vid_t.cpp	/^const vid_t vid_t::null;$/;"	m	class:vid_t	file:
null	src/common/vid_t.h	/^    static const vid_t null;$/;"	m	struct:vid_t
null	src/fc/atomic_container.h	/^    void* null() { $/;"	f	class:atomic_container
null	src/sm/bf_s.h	/^    static const bfpid_t    null;$/;"	m	class:bfpid_t
null	src/sm/sm_s.cpp	/^const lpid_t lpid_t::null;$/;"	m	class:lpid_t	file:
null	src/sm/sm_s.cpp	/^const rid_t rid_t::null;$/;"	m	class:rid_t	file:
null	src/sm/sm_s.h	/^    static const lpid_t null;$/;"	m	class:lpid_t
null	src/sm/sm_s.h	/^    static const rid_t null;$/;"	m	class:rid_t
null	src/sm/sort_s.h	/^    static key_cookie_t   null; \/\/ newsort.cpp$/;"	m	class:ssm_sort::key_cookie_t
null_lsn	src/sm/sm_s.h	233;"	d
null_pid	src/sm/logrec.h	/^logrec_t::null_pid() const$/;"	f	class:logrec_t
null_unique	src/sm/sort_s.h	/^    bool    null_unique() const { return _remove_dup_nulls; } $/;"	f	class:ssm_sort::sort_keys_t
nullable	src/sm/smsh/sort_funcs.h	/^    bool     nullable;$/;"	m	struct:metadata
nullify	src/fc/nbox.cpp	/^void nbox_t::nullify()$/;"	f	class:nbox_t
nuls	src/common/regcomp.cpp	/^static char nuls[10];        \/* place to point scanner in event of error *\/$/;"	v	file:
num	src/sm/logrec.h	/^    uint4_t            num;$/;"	m	struct:prepare_stores_to_free_t
num	src/sm/newsort.cpp	/^    int        num(int i) const { return _f[i]; }$/;"	f	class:fib_t
num	src/sm/newsort.cpp	/^    int num(int i) const { return _f[i]; }$/;"	f	class:phase_mgr
num	src/sm/partition.h	/^    partition_number_t num() const   { return _num; }$/;"	f	class:partition_t
num	src/sthread/tests/mmap.cpp	99;"	d	file:
numAllocPages	src/sm/sm_du_stats.h	/^    base_stat_t        numAllocPages;        \/\/ total num pages allocated to stores$/;"	m	class:SmVolumeMetaStats
numAllocPages	src/sm/sm_du_stats.h	/^    base_stat_t        numAllocPages;    \/\/ pages with alloc bit set$/;"	m	class:SmStoreMetaStats
numAllocStores	src/sm/sm_du_stats.h	/^    base_stat_t        numAllocStores;        \/\/ total num of stores allocated$/;"	m	class:SmVolumeMetaStats
numElements	src/fc/w_heap.h	/^        int                numElements;$/;"	m	class:Heap
numPages	src/sm/sm_du_stats.h	/^    base_stat_t        numPages;        \/\/ total num pages on volume$/;"	m	class:SmVolumeMetaStats
numReservedPages	src/sm/sm_du_stats.h	/^    base_stat_t        numReservedPages;    \/\/ total num pages in allocated exts$/;"	m	class:SmVolumeMetaStats
numReservedPages	src/sm/sm_du_stats.h	/^    base_stat_t        numReservedPages; \/\/ extents * pages-per-extent$/;"	m	class:SmStoreMetaStats
numStores	src/sm/sm_du_stats.h	/^    base_stat_t        numStores;        \/\/ total max num of stores in volume$/;"	m	class:SmVolumeMetaStats
numSystemPages	src/sm/sm_du_stats.h	/^    base_stat_t        numSystemPages;        \/\/ total num header pages on volume$/;"	m	class:SmVolumeMetaStats
num_EX	src/sm/logrec.h	/^    int    num_EX;$/;"	m	struct:prepare_lock_totals_t
num_IX	src/sm/logrec.h	/^    int    num_IX;$/;"	m	struct:prepare_lock_totals_t
num_SIX	src/sm/logrec.h	/^    int    num_SIX;$/;"	m	struct:prepare_lock_totals_t
num_active_xcts	src/sm/sm.cpp	/^ss_m::num_active_xcts()$/;"	f	class:ss_m
num_active_xcts	src/sm/xct.cpp	/^xct_t::num_active_xcts()$/;"	f	class:xct_t
num_bits	src/fc/w_bitvector.h	/^    int num_bits() const { $/;"	f	class:w_bitvector_t
num_bits_set	src/fc/w_bitvector.h	/^    int num_bits_set() const {$/;"	f	class:w_bitvector_t
num_children	src/sm/lock_x.h	/^    int4_t            num_children() const { return _num_children;}    $/;"	f	class:lock_request_t
num_class_levels	src/common/option.h	/^    int                num_class_levels(){ return _numLevels; }        $/;"	f	class:option_group_t
num_clear	src/sm/pmap.h	/^    inline    int    num_clear() const { return bm_num_clr(bits, _count); }$/;"	f	struct:Pmap
num_clr	src/fc/w_bitmap.h	/^w_bitmap_t::num_clr() const$/;"	f	class:w_bitmap_t
num_clr	src/sm/extent.h	/^extlink_t::num_clr() const$/;"	f	class:extlink_t
num_duplicate_box	src/sm/smsh/sort_funcs2.cpp	/^int     num_duplicate_box=0;$/;"	v
num_extents	src/sm/logrec.h	/^    int    num_extents;$/;"	m	struct:prepare_lock_totals_t
num_extents_marked_for_deletion	src/sm/xct.cpp	/^xct_t::num_extents_marked_for_deletion(base_stat_t &num)$/;"	f	class:xct_t
num_exts	src/sm/vol.cpp	/^vol_t::num_exts(snum_t snum, extnum_t& cnt)$/;"	f	class:vol_t
num_exts	src/sm/vol.h	/^    extnum_t         num_exts() const {  return _num_exts; }$/;"	f	class:volhdr_t
num_exts	src/sm/vol.h	/^inline extnum_t vol_t::num_exts() const$/;"	f	class:vol_t
num_free_exts	src/sm/vol.cpp	/^vol_t::num_free_exts(extnum_t& nfree)$/;"	f	class:vol_t
num_holders	src/common/latch.h	/^latch_t::num_holders() const$/;"	f	class:latch_t
num_holders	src/sthread/srwlock.h	/^    int num_holders() const { int holders = *&_holders; $/;"	f	class:mcs_rwlock
num_io	src/sthread/sthread_stats_struct_gen.h	/^ w_base_t::base_stat_t num_io;$/;"	v
num_locks	src/sm/logrec.h	/^    uint4_t             num_locks; \/\/ in the array below$/;"	m	struct:prepare_all_lock_t
num_locks	src/sm/logrec.h	/^    uint4_t     num_locks; \/\/ in the array below$/;"	m	struct:prepare_lock_t
num_members	src/fc/w_hash.h	/^    uint4_t                     num_members() const { return _cnt; }$/;"	f	class:w_hash_t
num_members	src/fc/w_list.h	/^w_list_base_t::num_members() const$/;"	f	class:w_list_base_t
num_pages	src/sm/btree_bl.cpp	/^    uint4_t        num_pages()        { return _num_pages; }$/;"	f	class:btsink_t
num_pages	src/sm/rtree.cpp	/^    uint4_t num_pages;$/;"	m	class:rtld_stk_t	file:
num_pages	src/sm/sort.cpp	/^    uint num_pages;     \/\/ number of pages$/;"	m	struct:sort_desc_t	file:
num_pages	src/sm/vol.cpp	/^vol_t::num_pages(snum_t snum, uint4_t& cnt)$/;"	f	class:vol_t
num_rec	src/sm/tests/create_rec.cpp	/^    int         num_rec;$/;"	m	struct:file_info_t	file:
num_rec	src/sm/tests/file_scan.cpp	/^    int     num_rec;$/;"	m	struct:file_info_t	file:
num_rec	src/sm/tests/file_scan_many.cpp	/^    int         num_rec;$/;"	m	struct:file_info_t	file:
num_rec	src/sm/tests/file_scan_many.cpp	/^    int num_rec;$/;"	m	class:smthread_creator_t	file:
num_rec	src/sm/tests/file_scan_many.cpp	/^    int num_rec;$/;"	m	class:smthread_scanner_t	file:
num_rec	src/sm/tests/log_exceed.cpp	/^    int         num_rec;$/;"	m	struct:file_info_t	file:
num_rec	src/sm/tests/mrbtrees_test.cpp	/^  int         num_rec;$/;"	m	struct:file_info_t	file:
num_rec	src/sm/tests/rtree_example.cpp	/^    int         num_rec;$/;"	m	struct:file_info_t	file:
num_rec	src/sm/tests/sort_stream.cpp	/^    int         num_rec;$/;"	m	struct:file_info_t	file:
num_rec	src/sm/tests/vtable_example.cpp	/^    int         num_rec;$/;"	m	struct:file_info_t	file:
num_runs	src/sm/sort.h	/^    w_base_t::uint4_t num_runs;      \/\/ # of runs for each merge$/;"	m	class:sort_stream_i
num_set	src/fc/w_bitmap.cpp	/^w_bitmap_t::num_set() const$/;"	f	class:w_bitmap_t
num_set	src/sm/extent.h	/^extlink_t::num_set() const$/;"	f	class:extlink_t
num_set	src/sm/pmap.h	/^    inline    int    num_set() const { return bm_num_set(bits, _count); }$/;"	f	struct:Pmap
num_slot	src/sm/rtree_p.h	/^    int2_t    num_slot;$/;"	m	class:rt_cursor_t
num_slots	src/sm/file.h	/^    int                 num_slots()          { return page_p::nslots(); }$/;"	f	class:file_p
num_tcl_threads_running	src/sm/smsh/tcl_thread.cpp	/^extern "C" int num_tcl_threads_running() { return num_tcl_threads; }$/;"	f
num_threads	src/sm/xct.cpp	/^xct_t::num_threads()$/;"	f	class:xct_t
num_used_exts	src/sm/vol.cpp	/^vol_t::num_used_exts(extnum_t& nused)$/;"	f	class:vol_t
num_vols	src/sm/sm_io.h	/^io_m::num_vols()$/;"	f	class:io_m
num_words	src/fc/w_bitvector.h	/^    int num_words() const { $/;"	f	class:w_bitvector_t
numberof	src/sm/smsh/shell.cpp	5312;"	d	file:
numberof	src/sm/smsh/sm_sizeof.cpp	156;"	d	file:
numobjects	src/sm/smsh/shell.cpp	/^numobjects(const char *str)$/;"	f
nvacant	src/sm/page.h	/^page_p::nvacant() const$/;"	f	class:page_p
nvacant	src/sm/page_s.h	/^    slot_offset_t  nvacant;     \/\/ number of vacant slots$/;"	m	class:page_s
o	src/sm/xct.cpp	/^        ostream&        o;$/;"	m	class:PrintSmthreadById	file:
obj	src/fc/w_autodel.h	/^    T*                obj;$/;"	m	class:w_auto_delete_array_t
obj	src/fc/w_autodel.h	/^    T*                obj;$/;"	m	class:w_auto_delete_t
obj	src/sthread/auto_release.h	/^    T&                          obj;$/;"	m	class:auto_release_t
obj	src/sthread/auto_release.h	/^    T&         obj;$/;"	m	class:auto_release_r_t
obj	src/sthread/auto_release.h	/^    T&         obj;$/;"	m	class:auto_release_w_t
obj	src/sthread/auto_release.h	/^    pthread_mutex_t*                obj;$/;"	m	class:auto_release_t
obj	src/sthread/auto_release.h	/^    w_pthread_lock_t&                obj;$/;"	m	class:auto_release_t
obj_in	src/sm/smsh/sort_funcs3.cpp	/^    const object_t&        obj_in,$/;"	v
object_cache	src/fc/block_alloc.h	/^struct object_cache {$/;"	s
object_cache_default_factory	src/fc/block_alloc.h	/^struct object_cache_default_factory {$/;"	s
object_cache_initializing_factory	src/fc/block_alloc.h	/^struct object_cache_initializing_factory {$/;"	s
object_t	src/sm/newsort.cpp	/^object_t::object_t() :$/;"	f	class:object_t
object_t	src/sm/newsort.cpp	/^typedef ssm_sort::object_t object_t;$/;"	t	file:
object_t	src/sm/sort_s.h	/^    NORET     object_t($/;"	f	class:ssm_sort::object_t
object_t	src/sm/sort_s.h	/^    NORET     object_t(const object_t&o) $/;"	f	class:ssm_sort::object_t
object_t	src/sm/sort_s.h	/^class object_t : public smlevel_top $/;"	c	namespace:ssm_sort
objectsize	src/sm/smsh/shell.cpp	/^objectsize(const char *str)$/;"	f
obtain_locks	src/sm/xct.cpp	/^xct_t::obtain_locks(lock_mode_t mode, int num, const lockid_t *locks)$/;"	f	class:xct_t
obtain_one_lock	src/sm/xct.cpp	/^xct_t::obtain_one_lock(lock_mode_t mode, const lockid_t &lock)$/;"	f	class:xct_t
occ_rlock	src/sthread/sthread.h	/^    struct occ_rlock {$/;"	s	struct:occ_rwlock
occ_rwlock	src/sthread/sthread.cpp	/^occ_rwlock::occ_rwlock()$/;"	f	class:occ_rwlock
occ_rwlock	src/sthread/sthread.h	/^struct occ_rwlock {$/;"	s
occ_wlock	src/sthread/sthread.h	/^    struct occ_wlock {$/;"	s	struct:occ_rwlock
off1	src/sm/logrec.cpp	/^    slot_length_t         off1;        \/\/ 0->offset is from first slot, rest$/;"	m	class:page_shift_t	file:
off2	src/sm/logrec.cpp	/^    slot_length_t         off2;        $/;"	m	class:page_shift_t	file:
offp	src/common/regex_engine.cpp	/^    char *offp;        \/* offsets work from here *\/$/;"	m	struct:match	file:
offset	src/fc/atomic_container.h	/^    offset_typ offset() const { return  _offset; } $/;"	f	class:atomic_container
offset	src/sm/newsort.cpp	/^    smsize_t offset() const { return _offset; }$/;"	f	class:sm_skey_t
offset	src/sm/page_s.h	/^        slot_offset_t offset;        \/\/ -1 if vacant$/;"	m	struct:page_s::slot_t
offset	src/sm/smsh/sort_funcs.h	/^    smsize_t      offset;$/;"	m	struct:metadata
offset	src/sm/sort_s.h	/^    smsize_t   offset;$/;"	m	struct:ssm_sort::generic_CSKF_cookie
offset	src/sm/sort_s.h	/^    smsize_t offset(int i) const {$/;"	f	class:ssm_sort::sort_keys_t
offset	src/sm/sort_s.h	/^    w_base_t::uint4_t    offset;     $/;"	m	struct:ssm_sort::key_info_t
offset_typ	src/fc/atomic_container.h	/^    typedef long int offset_typ;$/;"	t	class:atomic_container
offsetof	src/fc/w_workaround.h	369;"	d
old	src/sm/page.h	/^        space_bucket_t        old() const { return _old; }$/;"	f	class:page_p::page_bucket_info_t
old_deleting_value	src/sm/sm_io.h	/^        store_deleting_t old_deleting_value()  const$/;"	f	class:store_operation_param
old_end	src/sm/log_core.cpp	/^	long old_end;	\/\/ end point of our predecessor$/;"	m	struct:log_core::insert_info	file:
old_image	src/sm/logrec.cpp	/^    void*                 old_image()   { return data; }$/;"	f	struct:page_splice_t
old_image	src/sm/logrec.cpp	/^    void*                 old_image()   { return data; }$/;"	f	struct:page_splicez_t
old_len	src/sm/logrec.cpp	/^    uint2_t                 old_len;\/\/ len of old data (# bytes removed or overwritten by$/;"	m	struct:page_splice_t	file:
old_len	src/sm/logrec.cpp	/^    uint2_t                 old_len;\/\/ len of old data (# bytes removed or overwritten by$/;"	m	struct:page_splicez_t	file:
old_next	src/sm/logrec.cpp	/^    shpid_t old_prev, old_next;$/;"	m	struct:page_link_t	file:
old_pid	src/sm/bf_s.h	/^    const bfpid_t &old_pid() const  { return _old_pid;   }$/;"	f	class:bfcb_t
old_pid_valid	src/sm/bf_s.h	/^    bool  old_pid_valid() const  { return _old_pid_valid;  }$/;"	f	class:bfcb_t
old_prev	src/sm/logrec.cpp	/^    shpid_t old_prev, old_next;$/;"	m	struct:page_link_t	file:
old_pthread_create	src/fc/cpu_info.cpp	/^    static pthread_create_fn* old_pthread_create;$/;"	m	struct:cpu_info::impl_helper	file:
old_pthread_create	src/fc/cpu_info.cpp	/^pthread_create_fn* cpu_info::impl_helper::old_pthread_create=0;$/;"	m	class:cpu_info::impl_helper	file:
old_rec	src/sm/sort.h	/^    const record_t*   old_rec;    \/\/ used for sort unique$/;"	m	class:sort_stream_i
old_rec_lsn	src/sm/bf_s.h	/^    const lsn_t&  old_rec_lsn() const { return _old_rec_lsn; }$/;"	f	class:bfcb_t
old_state	src/sm/xct.h	/^    switch_t old_state;$/;"	m	class:xct_log_switch_t
old_store_flags	src/sm/sm_io.h	/^        store_flag_t old_store_flags()  const$/;"	f	class:store_operation_param
old_value	src/sm/logrec.cpp	/^    u_char        old_value;$/;"	m	struct:page_set_byte_t	file:
old_xct_tracker	src/sm/chkpt.cpp	/^    old_xct_tracker() : _list(W_LIST_ARG(dependent, _link), 0) , _count(0)$/;"	f	struct:old_xct_tracker
old_xct_tracker	src/sm/chkpt.cpp	/^struct old_xct_tracker {$/;"	s	file:
oldest_tid	src/sm/xct.cpp	/^    tid_t oldest_tid() { return anchor()->_tid.next(); }$/;"	f	struct:xct_list
oldest_tid	src/sm/xct.cpp	/^xct_t::oldest_tid()$/;"	f	class:xct_t
oldincludedir	Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	config/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/atomic_ops/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/atomic_ops/asm_linkage/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/atomic_ops/asm_linkage/usr/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/atomic_ops/asm_linkage/usr/src/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/atomic_ops/atomic_ops/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/atomic_ops/atomic_ops/amd64/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/atomic_ops/atomic_ops/i386/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/atomic_ops/atomic_ops/sparc/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/atomic_ops/ia32/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/atomic_ops/ia32/sys/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/atomic_ops/intel/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/atomic_ops/intel/ia32/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/atomic_ops/intel/ia32/sys/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/atomic_ops/intel/sys/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/atomic_ops/sparc/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/atomic_ops/sparc/sys/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/common/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/common/tests/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/fc/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/fc/tests/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/sm/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/sm/smsh/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/sm/smsh/lib/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/sm/smsh/scripts/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/sm/tests/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/sthread/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/sthread/tests/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	tools/Makefile	/^oldincludedir = \/usr\/include$/;"	m
olen	src/sm/logrec.cpp	/^    uint2_t                 olen;   \/\/ len of old data stored in _data[]$/;"	m	struct:page_splicez_t	file:
on_entering	src/sm/sm_io.cpp	/^    void on_entering() { $/;"	f	class:io_m::auto_leave_and_trx_release_t	file:
on_entering	src/sm/sm_io.cpp	/^io_m::auto_leave_t::on_entering() $/;"	f	class:io_m::auto_leave_t
on_leaving	src/sm/sm_io.cpp	/^    void on_leaving() const { _x->stop_crit(); }$/;"	f	class:io_m::auto_leave_and_trx_release_t	file:
on_leaving	src/sm/sm_io.cpp	/^io_m::auto_leave_t::on_leaving() const$/;"	f	class:io_m::auto_leave_t
on_same_page	src/sm/extent.h	/^extlink_p::on_same_page(extnum_t e1, extnum_t e2)$/;"	f	class:extlink_p
on_same_page	src/sm/vol.cpp	/^extlink_i::on_same_page(extnum_t ext1, extnum_t ext2)  const$/;"	f	class:extlink_i
on_thread_destroy	src/common/latch.cpp	/^void latch_t::on_thread_destroy(sthread_t *who) $/;"	f	class:latch_t
on_thread_init	src/common/latch.cpp	/^void latch_t::on_thread_init(sthread_t *who) $/;"	f	class:latch_t
once	src/fc/w_rand.cpp	/^void __attribute__((noinline)) once(w_rand &rng) {$/;"	f
one	src/fc/w_input.cpp	/^enum charclass { zero=0, one=1, two=2, three=3, four=4, $/;"	e	enum:charclass	file:
one_ex	src/common/tests/latch1.cpp	/^    typedef enum { all_sh, one_ex, all_ex } testKind;$/;"	e	enum:latch_thread_t::__anon10	file:
one_thread_attached	src/sm/xct.cpp	/^xct_t::one_thread_attached() const$/;"	f	class:xct_t
onehilbert	src/sm/smsh/sort_funcs3.cpp	/^onehilbert ($/;"	f
onestate	src/common/regexec.cpp	113;"	d	file:
onestate	src/common/regexec.cpp	136;"	d	file:
onestate	src/common/regexec.cpp	87;"	d	file:
op	src/sm/sm_io.h	/^        store_operation_t op()  const$/;"	f	class:store_operation_param
opaque_DEPENDENCIES	src/common/tests/Makefile	/^opaque_DEPENDENCIES = ..\/libcommon.a ..\/..\/sthread\/libsthread.a \\$/;"	m
opaque_LDADD	src/common/tests/Makefile	/^opaque_LDADD = $(LDADD)$/;"	m
opaque_OBJECTS	src/common/tests/Makefile	/^opaque_OBJECTS = $(am_opaque_OBJECTS)$/;"	m
opaque_SOURCES	src/common/tests/Makefile	/^opaque_SOURCES = opaque.cpp$/;"	m
opaque_quantity	src/common/w_opaque.h	/^    opaque_quantity() {$/;"	f	class:opaque_quantity
opaque_quantity	src/common/w_opaque.h	/^    opaque_quantity(const char* s)$/;"	f	class:opaque_quantity
opaque_quantity	src/common/w_opaque.h	/^class opaque_quantity $/;"	c
open	src/sm/sm.cpp	/^sm_quark_t::open() {$/;"	f	class:sm_quark_t
open	src/sthread/io.cpp	/^sthread_t::open(const char* path, int flags, int mode, int &ret_fd)$/;"	f	class:sthread_t
open	src/sthread/sdisk_unix.cpp	/^w_rc_t    sdisk_unix_t::open(const char *name, int flags, int mode)$/;"	f	class:sdisk_unix_t
open_count	src/sthread/io.cpp	/^unsigned        sthread_t::open_count = 0;$/;"	m	class:sthread_t	file:
open_count	src/sthread/sthread.h	/^    static    unsigned       open_count;$/;"	m	class:sthread_t
open_for_append	src/sm/partition.cpp	/^partition_t::open_for_append(partition_number_t __num, $/;"	f	class:partition_t
open_for_read	src/sm/partition.cpp	/^partition_t::open_for_read($/;"	f	class:partition_t
open_max	src/sthread/io.cpp	/^unsigned        sthread_t::open_max = 0;$/;"	m	class:sthread_t	file:
open_max	src/sthread/sthread.h	/^    static    unsigned       open_max;$/;"	m	class:sthread_t
open_quark	src/sm/lock.cpp	/^lock_m::open_quark()$/;"	f	class:lock_m
open_quark	src/sm/lock_core.cpp	/^lock_core_m::open_quark($/;"	f	class:lock_core_m
oper_t	src/sm/rtree.h	/^enum oper_t { t_read = 0, t_insert, t_remove };$/;"	g
operating_mode	src/sm/sm.cpp	/^            smlevel_0::operating_mode = smlevel_0::t_not_started;$/;"	m	class:smlevel_0	file:
operating_mode	src/sm/sm_base.h	/^    static operating_mode_t operating_mode;$/;"	m	class:smlevel_0
operating_mode_t	src/sm/sm_base.h	/^    enum operating_mode_t {$/;"	g	class:smlevel_0
operation	src/sm/logrec.cpp	/^    int                operation;$/;"	m	struct:page_set_byte_t	file:
operator !=	src/common/devid_t.h	/^    bool operator!=(const devid_t& d) const {return !(*this==d);}$/;"	f	struct:devid_t
operator !=	src/common/kvl_t.h	/^kvl_t::operator!=(const kvl_t& k) const$/;"	f	class:kvl_t
operator !=	src/common/lid_t.h	/^    bool operator!=(const lvid_t& s) const$/;"	f	struct:lvid_t
operator !=	src/common/lsn.h	/^    bool operator!=(const lsn_t& l) const { return !(*this == l); }$/;"	f	class:lsn_t
operator !=	src/common/stid_t.h	/^inline bool stid_t::operator!=(const stid_t& s) const$/;"	f	class:stid_t
operator !=	src/common/tid_t.h	/^    inline bool operator!=(const tid_t& tid) const  {$/;"	f	class:tid_t
operator !=	src/common/vec_t.h	/^inline bool operator!=(const cvec_t& v1, const cvec_t& v2)$/;"	f
operator !=	src/common/vid_t.h	/^    friend bool operator!=(const vid_t& v1, const vid_t& v2)  {$/;"	f	struct:vid_t
operator !=	src/fc/errlog_s.h	/^    bool operator!=(const simple_string &another) const {$/;"	f	class:simple_string
operator !=	src/fc/stime.h	/^    bool    operator!=(const stime_t &r) const { return !(*this == r); }$/;"	f	class:stime_t
operator !=	src/fc/w_temp_alloc.h	/^bool operator!=(w_temp_alloc::allocator<A> const &, w_temp_alloc::allocator<B> const &) {$/;"	f
operator !=	src/sm/key_ranges_map.h	/^inline bool operator!=(const foo& v1, const foo& v2)$/;"	f
operator !=	src/sm/lgrec.h	/^    bool operator!=(const lg_tag_indirect_s& l) const { return !(*this == l);}$/;"	f	struct:lg_tag_indirect_s
operator !=	src/sm/lock_s_inline.h	/^lockid_t::operator!=(const lockid_t& lid) const$/;"	f	class:lockid_t
operator !=	src/sm/sm_s.h	/^inline bool lpid_t::operator!=(const lpid_t& p) const$/;"	f	class:lpid_t
operator !=	src/sm/sm_s.h	/^inline bool rid_t::operator!=(const rid_t& r) const$/;"	f	class:rid_t
operator ()	src/common/stid_t.h	/^    bool operator() (snum_t const &a, snum_t const &b) const$/;"	f	struct:compare_snum_t
operator ()	src/common/store_latch_manager.h	/^        bool operator() (const stid_t &lhs, const stid_t &rhs) const$/;"	f	struct:store_latch_manager::stid_cmp
operator ()	src/fc/vtable.h	/^    void operator()(const T& t) \/\/ gather func$/;"	f	class:vtable_func
operator ()	src/fc/w_hashing.h	/^    u64 operator()(u64 x) const { return (a*x+b) >> bitshift; }$/;"	f	class:w_hashing::uhash
operator ()	src/fc/w_hashing.h	/^    unsigned operator()(unsigned x) const { return a(x) ^ b(x); }$/;"	f	class:w_hashing::hash2
operator ()	src/fc/w_hashing.h	/^    w_base_t::uint8_t operator()(unsigned x) const { $/;"	f	class:w_hashing::hash2
operator ()	src/fc/w_rand.h	/^    uint32_t operator()(uint32_t end) { return randn(end); }$/;"	f	struct:w_rand
operator ()	src/sm/btree_latch_manager.h	/^        bool operator() (const lpid_t &lhs, const lpid_t &rhs) const$/;"	f	struct:btree_latch_manager::lpid_cmp
operator ()	src/sm/key_ranges_map.h	/^inline bool cmp_greater::operator()(const foo& a, const foo& b) const$/;"	f	class:cmp_greater
operator ()	src/sm/smthread.cpp	/^        void                operator()(const sthread_t& thread)$/;"	f	class:PrintBlockedThread
operator ()	src/sm/smthread.cpp	/^    void operator()(const sthread_t& thread) {$/;"	f	class:SelectSmthreadsFunc
operator ()	src/sm/xct.cpp	/^void PrintSmthreadById::operator()(const smthread_t& smthread)$/;"	f	class:PrintSmthreadById
operator *	src/fc/nbox.cpp	/^double nbox_t::operator*(const nbox_t& other) const$/;"	f	class:nbox_t
operator *	src/fc/stime.cpp	/^stime_t    stime_t::operator*(const double factor) const$/;"	f	class:stime_t
operator *	src/fc/stime.cpp	/^stime_t stime_t::operator*(const int factor) const$/;"	f	class:stime_t
operator *	src/fc/w_autodel.h	/^    T &operator*() { return *obj; }$/;"	f	class:w_auto_delete_array_t
operator *	src/fc/w_autodel.h	/^    T &operator*() { return *obj; }$/;"	f	class:w_auto_delete_t
operator *	src/fc/w_autodel.h	/^    T const &operator*() const { return *obj; }$/;"	f	class:w_auto_delete_t
operator *	src/fc/w_rc.h	/^    w_error_t &operator*() { return *ptr(); }$/;"	f	class:w_rc_t
operator *	src/fc/w_rc.h	/^    w_error_t const &operator*() const { return *ptr(); }$/;"	f	class:w_rc_t
operator +	src/common/lsn.h	/^    lsn_t operator+(long delta) const { return lsn_t(*this).advance(delta); }$/;"	f	class:lsn_t
operator +	src/fc/nbox.cpp	/^nbox_t nbox_t::operator+(const nbox_t& other) const$/;"	f	class:nbox_t
operator +	src/fc/stime.cpp	/^stime_t    stime_t::operator+(const stime_t &r) const$/;"	f	class:stime_t
operator ++	src/common/latch.cpp	/^        iterator &operator++() { _cur = _cur->_next; return *this; }$/;"	f	struct:holder_list::iterator
operator ++	src/common/latch.cpp	/^        iterator operator++(int) { return ++iterator(*this); }$/;"	f	struct:holder_list::iterator
operator +=	src/common/lsn.h	/^    lsn_t &operator+=(long delta) { return advance(delta); }$/;"	f	class:lsn_t
operator +=	src/common/w_opaque.h	/^    operator+=(const char* s)$/;"	f	class:opaque_quantity
operator +=	src/fc/nbox.cpp	/^nbox_t& nbox_t::operator+=(const nbox_t& other)$/;"	f	class:nbox_t
operator +=	src/fc/stime.cpp	/^stime_t &stime_t::operator+=(const stime_t &r)$/;"	f	class:stime_t
operator +=	src/fc/tests/test_stat_inc_gen.cpp	/^operator+=(test_stat &s,const test_stat &t)$/;"	f
operator +=	src/sm/bf_htab_stats_t_inc_gen.cpp	/^operator+=(bf_htab_stats_t &s,const bf_htab_stats_t &t)$/;"	f
operator +=	src/sm/log_core.cpp	/^	histo &operator+=(histo const &other) {$/;"	f	struct:histo
operator +=	src/sm/sm_du_stats.h	/^inline SmFileMetaStats& SmFileMetaStats::operator+=(const SmFileMetaStats& fileStats)$/;"	f	class:SmFileMetaStats
operator +=	src/sm/sm_du_stats.h	/^inline SmStoreMetaStats& SmStoreMetaStats::operator+=(const SmStoreMetaStats& storeStats)$/;"	f	class:SmStoreMetaStats
operator +=	src/sm/sm_du_stats.h	/^inline SmVolumeMetaStats& SmVolumeMetaStats::operator+=(const SmVolumeMetaStats& volumeStats)$/;"	f	class:SmVolumeMetaStats
operator +=	src/sm/sm_stats_t_inc_gen.cpp	/^operator+=(sm_stats_t &s,const sm_stats_t &t)$/;"	f
operator +=	src/sm/smstats.cpp	/^sm_stats_info_t &operator+=(sm_stats_info_t &s, const sm_stats_info_t &t)$/;"	f
operator +=	src/sthread/sthread_stats_inc_gen.cpp	/^operator+=(sthread_stats &s,const sthread_stats &t)$/;"	f
operator -	src/fc/stime.cpp	/^stime_t    stime_t::operator-() const$/;"	f	class:stime_t
operator -	src/fc/stime.cpp	/^stime_t    stime_t::operator-(const stime_t &r) const$/;"	f	class:stime_t
operator -=	src/common/w_opaque.h	/^    operator-=(uint4_t len)$/;"	f	class:opaque_quantity
operator -=	src/fc/stime.cpp	/^stime_t &stime_t::operator-=(const stime_t &r)$/;"	f	class:stime_t
operator -=	src/fc/tests/test_stat_dec_gen.cpp	/^operator-=(test_stat &s,const test_stat &t)$/;"	f
operator -=	src/sm/bf_htab_stats_t_dec_gen.cpp	/^operator-=(bf_htab_stats_t &s,const bf_htab_stats_t &t)$/;"	f
operator -=	src/sm/sm_stats_t_dec_gen.cpp	/^operator-=(sm_stats_t &s,const sm_stats_t &t)$/;"	f
operator -=	src/sm/smstats.cpp	/^sm_stats_info_t &operator-=(sm_stats_info_t &s, const sm_stats_info_t &t)$/;"	f
operator -=	src/sthread/sthread_stats_dec_gen.cpp	/^operator-=(sthread_stats &s,const sthread_stats &t)$/;"	f
operator ->	src/common/latch.cpp	/^        latch_holder_t* operator->() const { return *this; }$/;"	f	struct:holder_list::iterator
operator ->	src/common/latch.cpp	/^    latch_holder_t* operator->() { return this->value(); }$/;"	f	class:holder_search
operator ->	src/fc/w_autodel.h	/^    T const* operator->() const { return obj; }$/;"	f	class:w_auto_delete_t
operator ->	src/fc/w_autodel.h	/^    T* operator->() { return obj; }$/;"	f	class:w_auto_delete_array_t
operator ->	src/fc/w_autodel.h	/^    T* operator->() { return obj; }$/;"	f	class:w_auto_delete_t
operator ->	src/fc/w_rc.h	/^    w_error_t const* operator->() const { return ptr(); }$/;"	f	class:w_rc_t
operator ->	src/fc/w_rc.h	/^    w_error_t* operator->() { return ptr(); }$/;"	f	class:w_rc_t
operator /	src/fc/nbox.cpp	/^bool nbox_t::operator\/(const nbox_t& other) const$/;"	f	class:nbox_t
operator /	src/fc/stime.cpp	/^stime_t    stime_t::operator\/(const double factor) const$/;"	f	class:stime_t
operator /	src/fc/stime.cpp	/^stime_t stime_t::operator\/(const int factor) const$/;"	f	class:stime_t
operator <	src/common/lsn.h	/^    bool operator<(const lsn_t& l) const { return _data < l._data; }$/;"	f	class:lsn_t
operator <	src/common/stid_t.h	/^inline bool stid_t::operator<(const stid_t& s) const$/;"	f	class:stid_t
operator <	src/common/tid_t.h	/^    inline bool operator<(const tid_t& tid) const  {$/;"	f	class:tid_t
operator <	src/common/vec_t.h	/^inline bool operator<(const cvec_t& v1, const cvec_t& v2)$/;"	f
operator <	src/common/vid_t.h	/^    friend bool operator<(const vid_t& v1, const vid_t& v2)  {$/;"	f	struct:vid_t
operator <	src/fc/nbox.cpp	/^bool nbox_t::operator<(const nbox_t& other) const$/;"	f	class:nbox_t
operator <	src/fc/stime.cpp	/^bool    stime_t::operator<(const stime_t &r) const$/;"	f	class:stime_t
operator <	src/sm/key_ranges_map.h	/^inline bool operator<(const foo& v1, const foo& v2) $/;"	f
operator <	src/sm/lock_s_inline.h	/^lockid_t::operator<(lockid_t const &lid) const$/;"	f	class:lockid_t
operator <	src/sm/sm_s.h	/^inline bool lpid_t::operator<(const lpid_t& p) const$/;"	f	class:lpid_t
operator <	src/sm/sm_s.h	/^inline bool rid_t::operator<(const rid_t& r) const$/;"	f	class:rid_t
operator <	src/sm/vol.h	/^            bool operator <(ext_info const &other) const {$/;"	f	struct:vol_t::ext_cache_t::ext_info
operator <<	src/common/devid_t.cpp	/^ostream& operator<<(ostream& o, const devid_t& d)$/;"	f
operator <<	src/common/kvl_t.cpp	/^operator<<(ostream& o, const kvl_t& kvl)$/;"	f
operator <<	src/common/latch.cpp	/^ostream& operator<<(ostream& out, const latch_t& l)$/;"	f
operator <<	src/common/lid_t.cpp	/^ostream& operator<<(ostream& o, const lvid_t& lvid)$/;"	f
operator <<	src/common/stid_t.cpp	/^ostream& operator<<(ostream& o, const stid_t& stid)$/;"	f
operator <<	src/common/tests/latch1.cpp	/^operator << (ostream &o, const latch_thread_id_t &ID)$/;"	f
operator <<	src/common/tid_t.cpp	/^operator<<(ostream &o, const opaque_quantity<max_gtid_len>    &b) $/;"	f
operator <<	src/common/tid_t.cpp	/^operator<<(ostream &o, const opaque_quantity<max_server_handle_len>    &b) $/;"	f
operator <<	src/common/tid_t.h	/^inline ostream& operator<<(ostream& o, const tid_t& t)$/;"	f
operator <<	src/common/vec_t.cpp	/^ostream& operator<<(ostream& o, const cvec_t& v)$/;"	f
operator <<	src/common/vid_t.h	/^inline ostream& operator<<(ostream& o, const vid_t& v)$/;"	f
operator <<	src/common/w_opaque.h	/^operator<<(ostream &o, const opaque_quantity<LEN>    &b) $/;"	f
operator <<	src/fc/errlog.cpp	/^ostream &operator<<(ostream &out, const simple_string x) {$/;"	f
operator <<	src/fc/nbox.cpp	/^ostream& operator<<(ostream& os, const nbox_t& box)$/;"	f
operator <<	src/fc/stime.cpp	/^ostream &operator<<(ostream &s, const sinterval_t &t)$/;"	f
operator <<	src/fc/stime.cpp	/^ostream &operator<<(ostream &s, const stime_t &t)$/;"	f
operator <<	src/fc/tests/cuckoo.cpp	/^operator << (ostream &o, const bfpid_t &p)$/;"	f
operator <<	src/fc/tests/list1.cpp	/^ostream& operator<<(ostream& o, const elem1_t& e)$/;"	f
operator <<	src/fc/tests/ntime.cpp	/^ostream &operator<<(ostream &s, const stime_test_t &gr)$/;"	f
operator <<	src/fc/tests/ntime.cpp	/^ostream &operator<<(ostream &s, const struct timespec &ts)$/;"	f
operator <<	src/fc/tests/ntime.cpp	/^ostream &operator<<(ostream &s, const struct timeval &tv)$/;"	f
operator <<	src/fc/tests/test_stat_out_gen.cpp	/^operator<<(ostream &o,const test_stat &t)$/;"	f
operator <<	src/fc/vtable.cpp	/^vtable_row_t::operator<<(ostream &o) $/;"	f	class:vtable_row_t
operator <<	src/fc/vtable.cpp	/^vtable_t::operator<<(ostream &o) const {$/;"	f	class:vtable_t
operator <<	src/fc/w_base.cpp	/^operator<<(ostream& o, const w_base_t&)$/;"	f
operator <<	src/fc/w_bitmap.cpp	/^ostream& operator<<(ostream& o, const w_bitmap_t& obj)$/;"	f
operator <<	src/fc/w_error.cpp	/^ostream &operator<<(ostream &o, const w_error_t &obj)$/;"	f
operator <<	src/fc/w_hash.h	/^ostream& operator<<($/;"	f
operator <<	src/fc/w_list.h	/^operator<<($/;"	f
operator <<	src/fc/w_listm.cpp	/^operator<<(ostream& o, const w_link_t& n)  $/;"	f
operator <<	src/fc/w_rc.cpp	/^operator<<($/;"	f
operator <<	src/sm/bf_core.cpp	/^operator<<(ostream& out, const bf_core_m& mgr)$/;"	f
operator <<	src/sm/bf_htab_stats_t_out_gen.cpp	/^operator<<(ostream &o,const bf_htab_stats_t &t)$/;"	f
operator <<	src/sm/dir.cpp	/^ostream &operator<<(ostream &os, sdesc_cache_t const  &sdc) {$/;"	f
operator <<	src/sm/dir.cpp	/^ostream &operator<<(ostream &os, sdesc_t const &sd) {$/;"	f
operator <<	src/sm/histo.cpp	/^operator<<(ostream&o, const histoid_update_t&u)$/;"	f
operator <<	src/sm/histo.cpp	/^ostream &operator<<(ostream &o,$/;"	f
operator <<	src/sm/histo.cpp	/^ostream &operator<<(ostream&o, const histoid_t&h)$/;"	f
operator <<	src/sm/lgrec.cpp	/^ostream &operator<<(ostream& o, const lg_tag_chunks_h &l)$/;"	f
operator <<	src/sm/lock_core.cpp	/^operator<<(ostream &o, const xct_lock_info_t &x)$/;"	f
operator <<	src/sm/lock_core.cpp	/^operator<<(ostream& o, const lock_head_t& l)$/;"	f
operator <<	src/sm/lock_core.cpp	/^operator<<(ostream& o, const lock_request_t& r)$/;"	f
operator <<	src/sm/lock_core.cpp	/^operator<<(ostream& o, const lockid_t& i)$/;"	f
operator <<	src/sm/lock_s_inline.h	/^ostream& operator<<(ostream& o, const lockid_t::user1_t& u)$/;"	f
operator <<	src/sm/lock_s_inline.h	/^ostream& operator<<(ostream& o, const lockid_t::user2_t& u)$/;"	f
operator <<	src/sm/lock_s_inline.h	/^ostream& operator<<(ostream& o, const lockid_t::user3_t& u)$/;"	f
operator <<	src/sm/lock_s_inline.h	/^ostream& operator<<(ostream& o, const lockid_t::user4_t& u)$/;"	f
operator <<	src/sm/logrec.cpp	/^operator<<(ostream& o, const logrec_t& l)$/;"	f
operator <<	src/sm/newsort.cpp	/^ostream & operator<< (ostream &o, const run_t& r)  $/;"	f
operator <<	src/sm/newsort.cpp	/^ostream & operator<< (ostream &o, const tape_t& t)  $/;"	f
operator <<	src/sm/page.cpp	/^operator<<(ostream& o, const store_histo_t&s)$/;"	f
operator <<	src/sm/page_h.h	/^ostream &operator<<(ostream&o, const pginfo_t&p) {$/;"	f
operator <<	src/sm/pmap.cpp	/^ostream    &operator<<(ostream &s, const Pmap &pmap)$/;"	f
operator <<	src/sm/restart.cpp	/^ostream& operator<<(ostream& o, const dirty_pages_tab_t& s)$/;"	f
operator <<	src/sm/sm.cpp	/^operator<<(ostream &o, const sm_stats_info_t &s) $/;"	f
operator <<	src/sm/sm.cpp	/^operator<<(ostream& o, const sm_quark_t& q)$/;"	f
operator <<	src/sm/sm.cpp	/^operator<<(ostream& o, const smlevel_0::store_deleting_t value)$/;"	f
operator <<	src/sm/sm.cpp	/^operator<<(ostream& o, const smlevel_0::store_operation_t op)$/;"	f
operator <<	src/sm/sm.cpp	/^operator<<(ostream& o, smlevel_0::store_flag_t flag)$/;"	f
operator <<	src/sm/sm.cpp	/^operator<<(ostream& o, smlevel_3::sm_store_property_t p)$/;"	f
operator <<	src/sm/sm.cpp	/^ostream& operator<<(ostream& o, const extid_t& x)$/;"	f
operator <<	src/sm/sm.cpp	/^ostream& operator<<(ostream& o, const lpid_t& pid)$/;"	f
operator <<	src/sm/sm.cpp	/^ostream& operator<<(ostream& o, const rid_t& rid)$/;"	f
operator <<	src/sm/sm.cpp	/^ostream& operator<<(ostream& o, const shrid_t& r)$/;"	f
operator <<	src/sm/sm.cpp	/^ostream& operator<<(ostream& o, const smlevel_1::xct_state_t& xct_state)$/;"	f
operator <<	src/sm/sm.h	/^    friend ostream& operator<<(ostream& o, const sm_save_point_t& p) {$/;"	f	class:sm_save_point_t
operator <<	src/sm/sm.h	/^ostream& operator<<(ostream& o, const sm_config_info_t& s)$/;"	f
operator <<	src/sm/sm_du_stats.cpp	/^ostream& operator<<(ostream& o, const btree_int_stats_t& s)$/;"	f
operator <<	src/sm/sm_du_stats.cpp	/^ostream& operator<<(ostream& o, const btree_lf_stats_t& s)$/;"	f
operator <<	src/sm/sm_du_stats.cpp	/^ostream& operator<<(ostream& o, const btree_stats_t& s)$/;"	f
operator <<	src/sm/sm_du_stats.cpp	/^ostream& operator<<(ostream& o, const file_pg_stats_t& s)$/;"	f
operator <<	src/sm/sm_du_stats.cpp	/^ostream& operator<<(ostream& o, const file_stats_t& s)$/;"	f
operator <<	src/sm/sm_du_stats.cpp	/^ostream& operator<<(ostream& o, const lgdata_pg_stats_t& s)$/;"	f
operator <<	src/sm/sm_du_stats.cpp	/^ostream& operator<<(ostream& o, const lgindex_pg_stats_t& s)$/;"	f
operator <<	src/sm/sm_du_stats.cpp	/^ostream& operator<<(ostream& o, const rtree_stats_t& s)$/;"	f
operator <<	src/sm/sm_du_stats.cpp	/^ostream& operator<<(ostream& o, const sm_du_stats_t& s)$/;"	f
operator <<	src/sm/sm_du_stats.cpp	/^ostream& operator<<(ostream& o, const volume_hdr_stats_t& s)$/;"	f
operator <<	src/sm/sm_du_stats.cpp	/^ostream& operator<<(ostream& o, const volume_map_stats_t& s)$/;"	f
operator <<	src/sm/sm_io.cpp	/^ostream& operator<<(ostream& o, const store_operation_param& param)$/;"	f
operator <<	src/sm/sm_s.h	/^inline ostream& operator<<(ostream& o, const lsn_t& l)$/;"	f
operator <<	src/sm/sm_stats_t_out_gen.cpp	/^operator<<(ostream &o,const sm_stats_t &t)$/;"	f
operator <<	src/sm/smsh/sort_funcs4.cpp	/^operator<<(ostream &o, const struct metadata &m)$/;"	f
operator <<	src/sm/tests/create_rec.cpp	/^operator << (ostream &o, const file_info_t &info)$/;"	f
operator <<	src/sm/tests/file_scan.cpp	/^operator << (ostream &o, const file_info_t &info)$/;"	f
operator <<	src/sm/tests/file_scan_many.cpp	/^operator << (ostream &o, const file_info_t &info)$/;"	f
operator <<	src/sm/tests/log_exceed.cpp	/^operator << (ostream &o, const file_info_t &info)$/;"	f
operator <<	src/sm/tests/mrbtrees_test.cpp	/^ostream & operator << (ostream &o, const file_info_t &info)$/;"	f
operator <<	src/sm/tests/rtree_example.cpp	/^operator << (ostream &o, const file_info_t &info)$/;"	f
operator <<	src/sm/tests/sort_stream.cpp	/^operator << (ostream &o, const file_info_t &info)$/;"	f
operator <<	src/sm/tests/vtable_example.cpp	/^operator << (ostream &o, const file_info_t &info)$/;"	f
operator <<	src/sm/vol.cpp	/^ostream& operator<<(ostream &o, const extlink_t &e)$/;"	f
operator <<	src/sm/xct.cpp	/^operator<<(ostream& o, const xct_t& x)$/;"	f
operator <<	src/sthread/sthread.cpp	/^ostream& operator<<(ostream &o, const sthread_t &t)$/;"	f
operator <<	src/sthread/sthread_core_pthread.cpp	/^ostream &operator<<(ostream &o, const sthread_core_t &core)$/;"	f
operator <<	src/sthread/sthread_stats.cpp	/^ostream &operator <<(ostream &o, const sthread_stats &s)$/;"	f
operator <<	src/sthread/sthread_stats_out_gen.cpp	/^operator<<(ostream &o,const sthread_stats &t)$/;"	f
operator <<	src/sthread/tests/except.cpp	/^ostream &operator<<(ostream &o, const MyException &e)$/;"	f
operator <=	src/common/lsn.h	/^    bool operator<=(const lsn_t& l) const { return !(*this > l); }$/;"	f	class:lsn_t
operator <=	src/common/tid_t.h	/^    inline bool operator<=(const tid_t& tid) const  {$/;"	f	class:tid_t
operator <=	src/common/vec_t.h	/^inline bool operator<=(const cvec_t& v1, const cvec_t& v2)$/;"	f
operator <=	src/fc/stime.cpp	/^bool    stime_t::operator<=(const stime_t &r) const$/;"	f	class:stime_t
operator <=	src/sm/sm_s.h	/^inline bool lpid_t::operator<=(const lpid_t& p) const$/;"	f	class:lpid_t
operator =	src/common/kvl_t.h	/^kvl_t::operator=(const kvl_t& k)$/;"	f	class:kvl_t
operator =	src/common/tid_t.h	/^    tid_t& operator=(const tid_t& t)    {$/;"	f	class:tid_t
operator =	src/common/w_opaque.h	/^    operator=(const char* s)$/;"	f	class:opaque_quantity
operator =	src/common/w_opaque.h	/^    operator=(const opaque_quantity<LEN>    &r) $/;"	f	class:opaque_quantity
operator =	src/fc/block_alloc.h	/^    block_pool &operator=(block_pool const&) { return *this; }$/;"	f	struct:block_pool
operator =	src/fc/nbox.h	/^inline nbox_t& nbox_t::operator=(const nbox_t &r)$/;"	f	class:nbox_t
operator =	src/fc/w_autodel.h	/^    w_auto_delete_array_t&    operator=(const w_auto_delete_array_t &) {return *this;};$/;"	f	class:w_auto_delete_array_t
operator =	src/fc/w_autodel.h	/^    w_auto_delete_t&        operator=(const w_auto_delete_t &) {return *this;};$/;"	f	class:w_auto_delete_t
operator =	src/fc/w_list.h	/^w_link_t::operator=(const w_link_t&)$/;"	f	class:w_link_t
operator =	src/fc/w_rc.h	/^    w_rc_t &operator=(w_rc_t const &other) { $/;"	f	class:w_rc_t
operator =	src/fc/w_temp_alloc.h	/^w_temp_alloc::buf &w_temp_alloc::buf::operator=(w_temp_alloc::buf v) {$/;"	f	class:w_temp_alloc::buf
operator =	src/sm/bf_s.h	/^bfpid_t::operator=(const lpid_t& p)  $/;"	f	class:bfpid_t
operator =	src/sm/data_access_histogram.cpp	/^data_access_histogram& data_access_histogram::operator=(const data_access_histogram& \/*rhs*\/)$/;"	f	class:data_access_histogram
operator =	src/sm/dir.cpp	/^sdesc_t::operator=(const sdesc_t& other) $/;"	f	class:sdesc_t
operator =	src/sm/extent.h	/^extlink_t::operator=(const extlink_t& e)$/;"	f	class:extlink_t
operator =	src/sm/key_ranges_map.cpp	/^foo& foo::operator=(const foo& v)$/;"	f	class:foo
operator =	src/sm/key_ranges_map.cpp	/^key_ranges_map& key_ranges_map::operator=(const key_ranges_map& krm)$/;"	f	class:key_ranges_map
operator =	src/sm/lock_cache.h	/^    const lock_cache_elem_t &operator=(const lock_cache_elem_t &r)$/;"	f	struct:lock_cache_elem_t
operator =	src/sm/lock_s_inline.h	/^lockid_t::operator=(const lockid_t& i)$/;"	f	class:lockid_t
operator =	src/sm/page.cpp	/^page_p::operator=(const page_p& p)$/;"	f	class:page_p
operator =	src/sm/pmap.h	/^    inline    Pmap_Align4    &operator=(const Pmap &from) {$/;"	f	class:Pmap_Align4
operator =	src/sm/sdesc.h	/^    sinfo_s& operator=(const sinfo_s& other) {$/;"	f	struct:sinfo_s
operator =	src/sm/smthread.h	/^    atomic_thread_map_t &operator=(const atomic_thread_map_t &other) {$/;"	f	class:atomic_thread_map_t
operator ==	src/common/devid_t.h	/^    bool operator==(const devid_t& d) const {$/;"	f	struct:devid_t
operator ==	src/common/kvl_t.h	/^kvl_t::operator==(const kvl_t& k) const$/;"	f	class:kvl_t
operator ==	src/common/latch.h	/^    bool operator==(latch_holder_t const &other) const {$/;"	f	class:latch_holder_t
operator ==	src/common/lid_t.h	/^    bool operator==(const lvid_t& s) const$/;"	f	struct:lvid_t
operator ==	src/common/lsn.h	/^    bool operator==(const lsn_t& l) const { return _data == l._data; }$/;"	f	class:lsn_t
operator ==	src/common/stid_t.h	/^inline bool stid_t::operator==(const stid_t& s) const$/;"	f	class:stid_t
operator ==	src/common/tid_t.cpp	/^bool operator==(const opaque_quantity<max_gtid_len> &l, const opaque_quantity <max_gtid_len> &r) $/;"	f
operator ==	src/common/tid_t.cpp	/^bool operator==(const opaque_quantity<max_server_handle_len> &l, const opaque_quantity <max_server_handle_len> &r) $/;"	f
operator ==	src/common/tid_t.h	/^    inline bool operator==(const tid_t& tid) const  {$/;"	f	class:tid_t
operator ==	src/common/vec_t.h	/^inline bool operator==(const cvec_t& v1, const cvec_t& v2)$/;"	f
operator ==	src/common/vid_t.h	/^    friend bool operator==(const vid_t& v1, const vid_t& v2)  {$/;"	f	struct:vid_t
operator ==	src/common/w_opaque.h	/^bool operator==(const opaque_quantity<LEN> &a,$/;"	f
operator ==	src/fc/errlog_s.h	/^    bool operator==(const simple_string &another) const {$/;"	f	class:simple_string
operator ==	src/fc/nbox.cpp	/^bool nbox_t::operator==(const nbox_t& other) const$/;"	f	class:nbox_t
operator ==	src/fc/stime.cpp	/^bool    stime_t::operator==(const stime_t &r) const$/;"	f	class:stime_t
operator ==	src/fc/tests/rand.cpp	/^   bool operator == (const randorig & other)const $/;"	f	struct:randorig
operator ==	src/fc/w_temp_alloc.h	/^bool operator==(w_temp_alloc::allocator<A> const &, w_temp_alloc::allocator<B> const &) {$/;"	f
operator ==	src/sm/bf_s.h	/^bfpid_t::operator==(const bfpid_t& p) const$/;"	f	class:bfpid_t
operator ==	src/sm/key_ranges_map.h	/^inline bool operator==(const foo& v1, const foo& v2)$/;"	f
operator ==	src/sm/lgrec.h	/^    bool operator==(const lg_tag_indirect_s& l) const$/;"	f	struct:lg_tag_indirect_s
operator ==	src/sm/lock_s_inline.h	/^lockid_t::operator==(const lockid_t& lid) const$/;"	f	class:lockid_t
operator ==	src/sm/sm_s.h	/^inline bool lpid_t::operator==(const lpid_t& p) const$/;"	f	class:lpid_t
operator ==	src/sm/sm_s.h	/^inline bool rid_t::operator==(const rid_t& r) const$/;"	f	class:rid_t
operator >	src/common/lsn.h	/^    bool operator>(const lsn_t& l) const { return l < *this; }$/;"	f	class:lsn_t
operator >	src/common/tid_t.h	/^    inline bool operator>(const tid_t& tid) const  {$/;"	f	class:tid_t
operator >	src/common/vec_t.h	/^inline bool operator>(const cvec_t& v1, const cvec_t& v2)$/;"	f
operator >	src/fc/nbox.cpp	/^bool nbox_t::operator>(const nbox_t& other) const$/;"	f	class:nbox_t
operator >	src/fc/stime.h	/^    bool    operator>(const stime_t &r) const { return !(*this <= r); }$/;"	f	class:stime_t
operator >	src/sm/key_ranges_map.h	/^inline bool operator>(const foo& v1, const foo& v2) $/;"	f
operator >	src/sm/sort.cpp	/^operator>(run_scan_t& s1, run_scan_t& s2)$/;"	f
operator >	src/sm/xct.h	/^operator>(const xct_t& x1, const xct_t& x2)$/;"	f
operator >=	src/common/lsn.h	/^    bool operator>=(const lsn_t& l) const { return !(*this < l); }$/;"	f	class:lsn_t
operator >=	src/common/tid_t.h	/^    inline bool operator>=(const tid_t& tid) const  {$/;"	f	class:tid_t
operator >=	src/common/vec_t.h	/^inline bool operator>=(const cvec_t& v1, const cvec_t& v2)$/;"	f
operator >=	src/fc/stime.h	/^    bool    operator>=(const stime_t &r) const { return !(*this < r); }$/;"	f	class:stime_t
operator >=	src/sm/sm_s.h	/^inline bool lpid_t::operator>=(const lpid_t& p) const$/;"	f	class:lpid_t
operator >>	src/common/kvl_t.cpp	/^operator>>(istream& i, kvl_t& kvl)$/;"	f
operator >>	src/common/lid_t.cpp	/^istream& operator>>(istream& is, lvid_t& lvid)$/;"	f
operator >>	src/common/stid_t.cpp	/^istream& operator>>(istream& i, stid_t& stid)$/;"	f
operator >>	src/common/tid_t.h	/^inline istream& operator>>(istream& i, tid_t& t)$/;"	f
operator >>	src/common/vec_t.cpp	/^istream& operator>>(istream& is, cvec_t& v)$/;"	f
operator >>	src/common/vid_t.h	/^inline istream& operator>>(istream& i, vid_t& v)$/;"	f
operator >>	src/sm/lock_core.cpp	/^operator>>(istream& i, lockid_t::user1_t& u)$/;"	f
operator >>	src/sm/lock_core.cpp	/^operator>>(istream& i, lockid_t::user2_t& u)$/;"	f
operator >>	src/sm/lock_core.cpp	/^operator>>(istream& i, lockid_t::user3_t& u)$/;"	f
operator >>	src/sm/lock_core.cpp	/^operator>>(istream& i, lockid_t::user4_t& u)$/;"	f
operator >>	src/sm/sm.cpp	/^istream& operator>>(istream& i, extid_t &extid)$/;"	f
operator >>	src/sm/sm.cpp	/^istream& operator>>(istream& i, lpid_t& pid)$/;"	f
operator >>	src/sm/sm.cpp	/^istream& operator>>(istream& i, rid_t& rid)$/;"	f
operator >>	src/sm/sm.cpp	/^istream& operator>>(istream& i, shrid_t& r)$/;"	f
operator >>	src/sm/sm.cpp	/^operator>>(istream& i, sm_quark_t& q)$/;"	f
operator >>	src/sm/sm.h	/^    friend istream& operator>>(istream& i, sm_save_point_t& p) {$/;"	f	class:sm_save_point_t
operator >>	src/sm/sm_s.h	/^inline istream& operator>>(istream& i, lsn_t& l)$/;"	f
operator T const*	src/fc/w_autodel.h	/^    operator T const*() const { return obj; }$/;"	f	class:w_auto_delete_t
operator T const*	src/fc/w_temp_alloc.h	/^            operator T const*() const { return (T const*) buf; }$/;"	f	struct:w_temp_alloc::ptr::_decay_const
operator T*	src/fc/w_autodel.h	/^    operator T*() { return obj; }$/;"	f	class:w_auto_delete_array_t
operator T*	src/fc/w_autodel.h	/^    operator T*() { return obj; }$/;"	f	class:w_auto_delete_t
operator T*	src/fc/w_temp_alloc.h	/^            operator T*() const { return (T*) buf; }$/;"	f	struct:w_temp_alloc::ptr::_decay
operator T*	src/fc/w_temp_alloc.h	/^    operator T*() { return _ptr.decay(); }$/;"	f	struct:w_temp_alloc
operator []	src/fc/dynarray.h	/^    T &operator[](size_t i) { return *_at(i).t; }$/;"	f	struct:dynvector
operator []	src/fc/dynarray.h	/^    T const &operator[](size_t i) const { return *_at(i).tc; }$/;"	f	struct:dynvector
operator []	src/fc/vtable.h	/^    const char *operator[](int a) const {$/;"	f	class:vtable_row_t
operator []	src/fc/vtable.h	/^    vtable_row_t& operator[] (int i) const {$/;"	f	class:vtable_t
operator []	src/sm/log_core.cpp	/^	bool operator[](char c) const {$/;"	f	struct:feature_set
operator []	src/sm/log_core.cpp	/^	long &operator[](long idx) {$/;"	f	struct:histo
operator ^	src/fc/nbox.cpp	/^nbox_t nbox_t::operator^(const nbox_t& other) const$/;"	f	class:nbox_t
operator bool	src/sm/sm.h	/^    operator         bool()const { return (_tid != tid_t::null); }$/;"	f	class:sm_quark_t
operator char const*	src/fc/dynarray.h	/^    operator char const*() const { return _base; }$/;"	f	struct:dynarray
operator char const*	src/sm/dir.cpp	/^    operator char const*() { _tmp = _out.str(); _out.str(""); return _tmp.c_str(); }$/;"	f	struct:pretty_printer
operator char const*	src/sm/lock_core.cpp	/^    operator char const*() { _tmp = _out.str(); _out.str(""); return _tmp.c_str(); }$/;"	f	struct:pretty_printer
operator char*	src/fc/dynarray.h	/^    operator char*() { return _base; }$/;"	f	struct:dynarray
operator char*	src/fc/nbox.cpp	/^nbox_t::operator char*()$/;"	f	class:nbox_t
operator const void*	src/common/stid_t.h	/^inline stid_t::operator const void*() const$/;"	f	class:stid_t
operator delete	src/fc/atomic_class_pool.h	/^inline void operator delete(void* ptr, atomic_class_pool<T>& pool) {$/;"	f
operator delete	src/fc/block_alloc.h	/^void operator delete(void* ptr, blob_pool &alloc) $/;"	f
operator delete	src/fc/block_alloc.h	/^void operator delete(void* ptr, block_alloc<T,MaxBytes> &alloc) $/;"	f
operator delete	src/fc/w_error.cpp	/^void w_error_t::operator delete(void* p) {$/;"	f	class:w_error_t
operator double	src/fc/stime.cpp	/^stime_t::operator double() const$/;"	f	class:stime_t
operator float	src/fc/stime.cpp	/^stime_t::operator float() const$/;"	f	class:stime_t
operator int	src/fc/w_stat.h	/^    operator int() const { return _u.i; }$/;"	f	class:w_stat_t
operator int	src/sm/sort_s.h	/^    operator int () const { $/;"	f	class:ssm_sort::key_cookie_t
operator latch_holder_t*	src/common/latch.cpp	/^        operator latch_holder_t*() const { return _cur; }$/;"	f	struct:holder_list::iterator
operator lsn_t const&	src/sm/xct.h	/^    operator lsn_t const&() const { return _anchor; }$/;"	f	class:auto_release_anchor_t
operator new	src/fc/atomic_class_pool.h	/^inline void* operator new(size_t nbytes, atomic_class_pool<T>& pool) {$/;"	f
operator new	src/fc/block_alloc.h	/^void* operator new(size_t nbytes, block_alloc<T,MaxBytes> &alloc) $/;"	f
operator new	src/fc/w_temp_alloc.h	/^void *operator new(size_t n, _w_temp_alloc_new &) {$/;"	f
operator ostream&	src/sm/dir.cpp	/^    operator ostream&() { return _out; }$/;"	f	struct:pretty_printer
operator ostream&	src/sm/lock_core.cpp	/^    operator ostream&() { return _out; }$/;"	f	struct:pretty_printer
operator pthread_mutex_t*	src/sm/bf_core.h	/^    operator pthread_mutex_t*() { return &_page_mutex; }$/;"	f	class:page_write_mutex_t
operator ptr	src/fc/w_temp_alloc.h	/^    operator ptr() { return _ptr; }$/;"	f	struct:w_temp_alloc
operator qnode*	src/sthread/mcs_lock.h	/^		operator qnode*() { return &_node; }$/;"	f	struct:mcs_lock::ext_qnode
operator smsize_t	src/sm/sort_s.h	/^    operator smsize_t () const { $/;"	f	class:ssm_sort::key_cookie_t
operator struct timespec	src/fc/stime.cpp	/^stime_t::operator struct timespec() const$/;"	f	class:stime_t
operator struct timeval	src/fc/stime.cpp	/^stime_t::operator struct timeval() const$/;"	f	class:stime_t
operator uint2_t	src/common/vid_t.h	/^                    operator uint2_t () const {return vol;}$/;"	f	struct:vid_t
operator void*	src/fc/w_defines.h	/^  operator void*() { return aligned_cast<uintptr_t>(_buf); }$/;"	f	class:allocaN
operator w_base_t::base_float_t	src/fc/w_stat.h	/^    operator w_base_t::base_float_t() const { return _u.f; }$/;"	f	class:w_stat_t
operator ||	src/fc/nbox.cpp	/^bool nbox_t::operator||(const nbox_t& other) const$/;"	f	class:nbox_t
opt_errmsg	src/common/opt_errmsg_gen.h	/^static char* opt_errmsg[] = {$/;"	v
opt_error_info	src/common/opt_einfo_gen.h	/^w_error_info_t opt_error_info[] = {$/;"	v
opt_error_info_bakw	src/common/opt_einfo_bakw_gen.h	/^w_error_info_t opt_error_info_bakw[] = {$/;"	v
opt_msg_size	src/common/opt_errmsg_gen.h	/^const opt_msg_size = 9;$/;"	v
optarg	src/fc/w_getopt.cpp	/^char*        optarg = 0;$/;"	v
opterr	src/fc/w_getopt.cpp	/^int        opterr = 1;    \/* print error message by default *\/$/;"	v
optind	src/fc/w_getopt.cpp	/^int        optind = 1;$/;"	v
option_file_scan_t	src/common/option.cpp	/^option_file_scan_t::option_file_scan_t(const char* optFile, option_group_t* list)$/;"	f	class:option_file_scan_t
option_file_scan_t	src/common/option.h	/^class option_file_scan_t : public w_base_t {$/;"	c
option_group_t	src/common/option.cpp	/^option_group_t::option_group_t(int maxNameLevels)$/;"	f	class:option_group_t
option_group_t	src/common/option.h	/^class option_group_t : public w_base_t {$/;"	c
option_list	src/common/option.h	/^    w_list_t<option_t,unsafe_list_dummy_lock_t>& option_list() {return _options;}$/;"	f	class:option_group_t
option_stream_scan_t	src/common/option.cpp	/^option_stream_scan_t::option_stream_scan_t(istream &is, option_group_t *list)$/;"	f	class:option_stream_scan_t
option_stream_scan_t	src/common/option.h	/^class option_stream_scan_t : public w_base_t {$/;"	c
option_t	src/common/option.cpp	/^option_t::option_t() : _name(NULL), _value(NULL), _setFunc(NULL)$/;"	f	class:option_t
option_t	src/common/option.h	/^class option_t : public w_base_t {$/;"	c
optopt	src/fc/w_getopt.cpp	/^int        optopt = 0;$/;"	v
order	src/sm/newsort.cpp	/^    int        order() const { return _order; }$/;"	f	class:fib_t
order	src/sm/newsort.cpp	/^    int order() const{ return _order; }$/;"	f	class:phase_mgr
ordinal	src/sm/newsort.cpp	/^    ordinal_number_t ordinal() const { return __persistent_part._ordinal; }$/;"	f	class:meta_header_t
ordinal_number_t	src/sm/newsort.cpp	/^    typedef uint4_t        ordinal_number_t;$/;"	t	class:meta_header_t	file:
ordinal_number_t	src/sm/smthread.h	/^        typedef uint4_t        ordinal_number_t;$/;"	t	struct:smthread_t::tcb_t
ordinary	src/common/regcomp.cpp	/^ordinary(struct parse *p, int ch)$/;"	f	file:
orig	src/fc/tests/rand.cpp	/^randorig orig;$/;"	v
orig_rec_page	src/sm/newsort.cpp	/^    file_p&        orig_rec_page,$/;"	v
origfp	src/sm/newsort.cpp	/^    file_p&          origfp() { return _origfp; }$/;"	f	class:tape_t
originalboxCSKF	src/sm/smsh/sort_funcs3.cpp	/^originalboxCSKF($/;"	f
os_close	src/sthread/os_interface.h	68;"	d
os_closedir	src/sthread/os_interface.h	112;"	d
os_dir_t	src/sthread/os_interface.h	/^typedef    DIR    *os_dir_t;$/;"	t
os_dirent_t	src/sthread/os_interface.h	/^typedef    struct dirent    os_dirent_t;$/;"	t	typeref:struct:dirent
os_fstat	src/sthread/os_interface.h	83;"	d
os_fsync	src/sthread/os_interface.h	98;"	d
os_ftruncate	src/sthread/os_interface.h	91;"	d
os_getrlimit	src/sthread/os_interface.h	140;"	d
os_lockf	src/sthread/os_interface.h	101;"	d
os_lseek	src/sthread/os_interface.h	79;"	d
os_open	src/sthread/os_interface.h	64;"	d
os_opendir	src/sthread/os_interface.h	111;"	d
os_pread	src/sthread/os_interface.h	75;"	d
os_pwrite	src/sthread/os_interface.h	76;"	d
os_read	src/sthread/os_interface.h	71;"	d
os_readdir	src/sthread/os_interface.h	121;"	d
os_readv	src/sthread/os_interface.h	73;"	d
os_rlimit_t	src/sthread/os_interface.h	/^typedef struct rlimit os_rlimit_t;$/;"	t	typeref:struct:rlimit
os_setrlimit	src/sthread/os_interface.h	141;"	d
os_stat	src/sthread/os_interface.h	87;"	d
os_stat_t	src/sthread/os_interface.h	/^typedef struct stat    os_stat_t;$/;"	t	typeref:struct:stat
os_truncate	src/sthread/os_interface.h	95;"	d
os_write	src/sthread/os_interface.h	72;"	d
os_writev	src/sthread/os_interface.h	74;"	d
ostrstream	src/fc/w_compat_strstream.cpp	/^ostrstream::ostrstream()$/;"	f	class:shore_compat::ostrstream
ostrstream	src/fc/w_compat_strstream.cpp	/^ostrstream::ostrstream(char* s, int n, ios_base::openmode mode)$/;"	f	class:shore_compat::ostrstream
ostrstream	src/fc/w_compat_strstream.h	/^class ostrstream : public basic_ostream<char>$/;"	c	namespace:shore_compat
ostrstream	src/fc/w_strstream.h	100;"	d
ostrstream	src/fc/w_strstream.h	256;"	d
other	src/fc/w_temp_alloc.h	/^        template <class U> struct rebind { typedef allocator<U> other; };$/;"	t	struct:w_temp_alloc::allocator::rebind
othercase	src/common/regcomp.cpp	/^othercase(int ch)$/;"	f	file:
out	src/fc/rand48.cpp	/^void out(ofstream& o, const unsigned48_t& what)$/;"	f
out	src/sm/smthread.cpp	/^        ostream&        out;$/;"	m	class:PrintBlockedThread	file:
out_of_log_space	src/sm/smsh/out_of_log_space.cpp	/^w_rc_t out_of_log_space ($/;"	f
out_of_log_space	src/sm/tests/log_exceed.cpp	/^w_rc_t out_of_log_space ($/;"	f
outbuf	src/sm/smsh/shell.cpp	/^__thread char   outbuf[(ss_m::page_sz * 4) > (1024 * 16) ? $/;"	v
output	src/fc/tests/ntime.cpp	/^void output()$/;"	f
output_single_run	src/sm/newsort.cpp	/^run_mgr::output_single_run($/;"	f	class:run_mgr
ov_remove	src/sm/rtree.cpp	/^rtree_p::ov_remove(rtree_p* dst, const nbox_t& key, const nbox_t& bound)$/;"	f	class:rtree_p
overflow	src/fc/w_compat_strstream.cpp	/^strstreambuf::int_type strstreambuf::overflow(int_type c) {$/;"	f	class:shore_compat::strstreambuf
overflowFrameSize	src/sthread/tests/thread1.cpp	/^	enum	{ overflowFrameSize = 8192 };$/;"	e	enum:overflow_thread_t::__anon149	file:
overflow_thread_t	src/sthread/tests/thread1.cpp	/^	overflow_thread_t() : sthread_t(t_regular, "overflow")$/;"	f	class:overflow_thread_t
overflow_thread_t	src/sthread/tests/thread1.cpp	/^class overflow_thread_t : public sthread_t {$/;"	c	file:
overhead_requirement_per_entry	src/sm/btree_p.cpp	/^btree_p::overhead_requirement_per_entry =$/;"	m	class:btree_p	file:
overhead_requirement_per_entry	src/sm/btree_p.h	/^    static smsize_t         overhead_requirement_per_entry;$/;"	m	class:btree_p
overlap	src/fc/w_bitvector.h	/^    bool overlap(w_bitvector_t &merged, const w_bitvector_t &other)  const$/;"	f	class:w_bitvector_t
overlap	src/sm/rtree.cpp	/^overlap(const nbox_t& target, int2_t index, $/;"	f	file:
overwrite	src/sm/page.h	/^page_p::overwrite(slotid_t idx, slot_length_t start, const cvec_t& data)$/;"	f	class:page_p
ovp	src/sm/rtree.cpp	/^rtree_p::ovp()$/;"	f	class:rtree_p
owner	src/sm/extent.h	/^    snum_t             owner;       \/\/ 4 bytes$/;"	m	class:extlink_t
p	src/fc/atomic_container.h	/^    union pvn { ptr* p; void* v; long n; };$/;"	m	union:atomic_container::pvn
p	src/fc/atomic_container.h	/^    union vpn { void* v; ptr* p; long n; };$/;"	m	union:atomic_container::vpn
p	src/fc/tests/rand.cpp	/^void p(const char *str,  const PUN &u)$/;"	f
p	src/fc/tests/rand.cpp	/^void p(const char *str,  const signed48_t &g)$/;"	f
p	src/fc/tests/rand.cpp	/^void p(const char *str,  const unsigned48_t &g)$/;"	f
p	src/fc/tests/rand.cpp	/^void p(const char *str, const double &d)$/;"	f
p_b_cclass	src/common/regcomp.cpp	/^p_b_cclass(struct parse *p, cset *cs)$/;"	f	file:
p_b_coll_elem	src/common/regcomp.cpp	/^p_b_coll_elem(struct parse *p, int endc)$/;"	f	file:
p_b_eclass	src/common/regcomp.cpp	/^p_b_eclass(struct parse *p, cset *cs)$/;"	f	file:
p_b_symbol	src/common/regcomp.cpp	/^p_b_symbol(struct parse *p)$/;"	f	file:
p_b_term	src/common/regcomp.cpp	/^p_b_term(struct parse *p, cset *cs)$/;"	f	file:
p_bracket	src/common/regcomp.cpp	/^p_bracket(struct parse *p)$/;"	f	file:
p_bre	src/common/regcomp.cpp	/^p_bre(struct parse *p, int end1, int end2)$/;"	f	file:
p_count	src/common/regcomp.cpp	/^p_count(struct parse *p)$/;"	f	file:
p_ere	src/common/regcomp.cpp	/^p_ere(struct parse *p, int stop) \/* character this ERE should end at *\/$/;"	f	file:
p_ere_exp	src/common/regcomp.cpp	/^p_ere_exp(struct parse *p)$/;"	f	file:
p_simp_re	src/common/regcomp.cpp	/^p_simp_re(struct parse *p, int starordinary)$/;"	f	file:
p_str	src/common/regcomp.cpp	/^p_str(struct parse *p)$/;"	f	file:
paddle	src/sthread/tests/thread1.cpp	/^	pthread_cond_t paddle[2];$/;"	m	struct:ping_pong_t	file:
page	src/fc/tests/cuckoo.cpp	/^    uint   page;$/;"	m	struct:bfpid_t	file:
page	src/sm/extent.h	/^    const extlink_p& page() const { return _page; } \/\/ for logging purposes$/;"	f	class:extlink_i
page	src/sm/lock_s_inline.h	/^lockid_t::page() const $/;"	f	class:lockid_t
page	src/sm/newsort.cpp	/^    shpid_t          page() const  { return __persistent_part._page; }$/;"	f	class:meta_header_t
page	src/sm/page_h.h	/^    shpid_t   page() const { return _pgid; }$/;"	f	class:pginfo_t
page	src/sm/rtree_p.h	/^    rtree_base_p page;$/;"	m	struct:rtstk_entry
page	src/sm/rtree_p.h	/^    rtree_p     page;$/;"	m	class:rt_cursor_t
page	src/sm/sm_s.h	/^    shpid_t        page;$/;"	m	class:lpid_t
page	src/sm/sm_s.h	/^    shpid_t        page;$/;"	m	class:shrid_t
page	src/sm/sort.h	/^    const lpid_t& page() const { return pid; }$/;"	f	class:run_scan_t
pageSindex	src/sm/lock_s.h	/^    enum { pageSindex=4, slotSindex=6, user4Sindex=6 };$/;"	e	enum:lockid_t::__anon60
pageWindex	src/sm/lock_s.h	/^    enum { pageWindex=2, slotWindex=3, user4Windex=3 };$/;"	e	enum:lockid_t::__anon59
page_alloc_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t page_alloc_cnt;$/;"	v
page_bits	src/sm/lock_s_inline.h	/^lockid_t::page_bits() const $/;"	f	class:lockid_t
page_bits_t	src/sm/lock_s.h	/^    typedef uint4_t          page_bits_t;$/;"	t	class:lockid_t
page_btree_alloc	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t page_btree_alloc;$/;"	v
page_btree_dealloc	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t page_btree_dealloc;$/;"	v
page_bucket_info	src/sm/page.h	/^    page_bucket_info_t          page_bucket_info;$/;"	m	class:page_p
page_bucket_info_t	src/sm/page.h	/^        NORET        page_bucket_info_t() : _old(uninit), _checked(1) { }$/;"	f	class:page_p::page_bucket_info_t
page_bucket_info_t	src/sm/page.h	/^    class page_bucket_info_t : smlevel_0 {$/;"	c	class:page_p
page_bytes_t	src/sm/page_s.h	/^    typedef slot_offset_t  page_bytes_t; \/\/ to avoid explicit sized-types below$/;"	t	class:page_s
page_cache	src/sm/vol.h	/^    typedef std::map<snum_t, extnum_t> page_cache;$/;"	t	class:vol_t
page_cache_find	src/sm/vol.cpp	/^vol_t::page_cache_find(snum_t snum,$/;"	f	class:vol_t
page_cache_update	src/sm/vol.cpp	/^vol_t::page_cache_update(snum_t snum, extnum_t e) const $/;"	f	class:vol_t
page_check_enabled	src/sm/page.cpp	/^bool page_check_enabled = true; \/\/ see vol.cpp$/;"	v
page_containing	src/sm/pin.cpp	/^pin_i::page_containing(smsize_t offset, smsize_t& start_byte) const $/;"	f	class:pin_i
page_count	src/sm/file.cpp	/^record_t::page_count() const$/;"	f	class:record_t
page_count	src/sm/lgrec.h	/^    smsize_t    page_count() const $/;"	f	class:lg_tag_chunks_h
page_dealloc_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t page_dealloc_cnt;$/;"	v
page_file_alloc	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t page_file_alloc;$/;"	v
page_file_dealloc	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t page_file_dealloc;$/;"	v
page_file_mrbt_alloc	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t page_file_mrbt_alloc;$/;"	v
page_file_mrbt_dealloc	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t page_file_mrbt_dealloc;$/;"	v
page_fix_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t page_fix_cnt;$/;"	v
page_flag	src/sm/logrec.cpp	/^    page_p::page_flag_t      page_flag() const  {$/;"	f	class:page_init_t
page_flag_t	src/sm/page.h	/^    enum page_flag_t {$/;"	g	class:page_p
page_flags	src/sm/page.h	/^page_p::page_flags() const$/;"	f	class:page_p
page_flags	src/sm/page_s.h	/^    w_base_t::uint4_t    page_flags;        \/\/ page_p::page_flag_t$/;"	m	class:page_s
page_format_log	src/sm/logdef_gen.cpp	/^	page_format_log (logrec_t*)   {};$/;"	f	class:page_format_log
page_format_log	src/sm/logdef_gen.cpp	/^    class page_format_log : public logrec_t {$/;"	c	file:
page_format_log	src/sm/logrec.cpp	/^page_format_log::page_format_log(const page_p& p,$/;"	f	class:page_format_log
page_format_t	src/sm/logrec.cpp	/^    page_format_t(  uint2_t tag, uint4_t page_flag, uint4_t store_flag,$/;"	f	class:page_format_t
page_format_t	src/sm/logrec.cpp	/^class page_format_t {$/;"	c	file:
page_image_log	src/sm/logdef_gen.cpp	/^	page_image_log (logrec_t*)   {};$/;"	f	class:page_image_log
page_image_log	src/sm/logdef_gen.cpp	/^    class page_image_log : public logrec_t {$/;"	c	file:
page_image_log	src/sm/logrec.cpp	/^page_image_log::page_image_log(const page_p& page)$/;"	f	class:page_image_log
page_image_t	src/sm/logrec.cpp	/^    page_image_t(const page_p& page)  {$/;"	f	struct:page_image_t
page_image_t	src/sm/logrec.cpp	/^struct page_image_t {$/;"	s	file:
page_init_t	src/sm/logrec.cpp	/^    page_init_t(uint2_t t, uint2_t pf, uint2_t sf): $/;"	f	class:page_init_t
page_init_t	src/sm/logrec.cpp	/^class page_init_t {$/;"	c	file:
page_insert_log	src/sm/logdef_gen.cpp	/^	page_insert_log (logrec_t*)   {};$/;"	f	class:page_insert_log
page_insert_log	src/sm/logdef_gen.cpp	/^    class page_insert_log : public logrec_t {$/;"	c	file:
page_insert_log	src/sm/logrec.cpp	/^page_insert_log::page_insert_log($/;"	f	class:page_insert_log
page_insert_t	src/sm/logrec.cpp	/^class page_insert_t {$/;"	c	file:
page_insert_t	src/sm/logrec.cpp	/^page_insert_t::page_insert_t(const page_p& page, int i, int c)$/;"	f	class:page_insert_t
page_insert_t	src/sm/logrec.cpp	/^page_insert_t::page_insert_t(int i, int c, const cvec_t* v)$/;"	f	class:page_insert_t
page_link_log	src/sm/logdef_gen.cpp	/^	page_link_log (logrec_t*)   {};$/;"	f	class:page_link_log
page_link_log	src/sm/logdef_gen.cpp	/^    class page_link_log : public logrec_t {$/;"	c	file:
page_link_log	src/sm/logrec.cpp	/^page_link_log::page_link_log($/;"	f	class:page_link_log
page_link_t	src/sm/logrec.cpp	/^    page_link_t(shpid_t op, shpid_t on, shpid_t np, shpid_t nn)  $/;"	f	struct:page_link_t
page_link_t	src/sm/logrec.cpp	/^struct page_link_t {$/;"	s	file:
page_mark_log	src/sm/logdef_gen.cpp	/^	page_mark_log (logrec_t*)   {};$/;"	f	class:page_mark_log
page_mark_log	src/sm/logdef_gen.cpp	/^    class page_mark_log : public logrec_t {$/;"	c	file:
page_mark_log	src/sm/logrec.cpp	/^page_mark_log::page_mark_log(const page_p& page, int idx)$/;"	f	class:page_mark_log
page_mark_t	src/sm/logrec.cpp	/^    page_mark_t(int i, const cvec_t& v) : idx(i), len((uint2_t)v.size()) {$/;"	f	class:page_mark_t
page_mark_t	src/sm/logrec.cpp	/^    page_mark_t(int i, smsize_t l, const void* d) : idx(i), len((uint2_t)l) {$/;"	f	class:page_mark_t
page_mark_t	src/sm/logrec.cpp	/^class page_mark_t {$/;"	c	file:
page_overhead	src/sm/page_h.h	/^    page_overhead = (page_sz - page_s::data_sz) + 2*sizeof(page_s::slot_t),$/;"	e	enum:__anon54
page_p	src/sm/page.h	/^    NORET                        page_p() : _pp(0), _mode(LATCH_NL), _refbit(0) {};$/;"	f	class:page_p
page_p	src/sm/page.h	/^    NORET                        page_p(const page_p& p) { W_COERCE(_copy(p)); }$/;"	f	class:page_p
page_p	src/sm/page.h	/^    NORET                        page_p(page_s* s, $/;"	f	class:page_p
page_p	src/sm/page.h	/^class page_p : public smlevel_0 $/;"	c
page_reclaim_log	src/sm/logdef_gen.cpp	/^	page_reclaim_log (logrec_t*)   {};$/;"	f	class:page_reclaim_log
page_reclaim_log	src/sm/logdef_gen.cpp	/^    class page_reclaim_log : public logrec_t {$/;"	c	file:
page_reclaim_log	src/sm/logrec.cpp	/^page_reclaim_log::page_reclaim_log(const page_p& page, int idx,$/;"	f	class:page_reclaim_log
page_reclaim_t	src/sm/logrec.cpp	/^typedef page_mark_t page_reclaim_t;$/;"	t	file:
page_refix_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t page_refix_cnt;$/;"	v
page_remove_log	src/sm/logdef_gen.cpp	/^	page_remove_log (logrec_t*)   {};$/;"	f	class:page_remove_log
page_remove_log	src/sm/logdef_gen.cpp	/^    class page_remove_log : public logrec_t {$/;"	c	file:
page_remove_log	src/sm/logrec.cpp	/^page_remove_log::page_remove_log($/;"	f	class:page_remove_log
page_remove_t	src/sm/logrec.cpp	/^typedef page_insert_t page_remove_t;$/;"	t	file:
page_s	src/sm/page_s.h	/^    page_s() { }$/;"	f	class:page_s
page_s	src/sm/page_s.h	/^class page_s {$/;"	c
page_set_byte_log	src/sm/logdef_gen.cpp	/^	page_set_byte_log (logrec_t*)   {};$/;"	f	class:page_set_byte_log
page_set_byte_log	src/sm/logdef_gen.cpp	/^    class page_set_byte_log : public logrec_t {$/;"	c	file:
page_set_byte_log	src/sm/logrec.cpp	/^page_set_byte_log::page_set_byte_log(const page_p& page, int idx, $/;"	f	class:page_set_byte_log
page_set_byte_t	src/sm/logrec.cpp	/^    NORET        page_set_byte_t(uint2_t i, u_char old, u_char oper, int op) : $/;"	f	struct:page_set_byte_t
page_set_byte_t	src/sm/logrec.cpp	/^struct page_set_byte_t {$/;"	s	file:
page_shift_log	src/sm/logdef_gen.cpp	/^	page_shift_log (logrec_t*)   {};$/;"	f	class:page_shift_log
page_shift_log	src/sm/logdef_gen.cpp	/^    class page_shift_log : public logrec_t {$/;"	c	file:
page_shift_log	src/sm/logrec.cpp	/^page_shift_log::page_shift_log($/;"	f	class:page_shift_log
page_shift_t	src/sm/logrec.cpp	/^    NORET                page_shift_t($/;"	f	class:page_shift_t
page_shift_t	src/sm/logrec.cpp	/^class page_shift_t {$/;"	c	file:
page_size	src/sm/smstats.h	/^    u_long page_size;         \/\/ bytes in page, including all headers$/;"	m	struct:sm_config_info_t
page_splice_log	src/sm/logdef_gen.cpp	/^	page_splice_log (logrec_t*)   {};$/;"	f	class:page_splice_log
page_splice_log	src/sm/logdef_gen.cpp	/^    class page_splice_log : public logrec_t {$/;"	c	file:
page_splice_log	src/sm/logrec.cpp	/^page_splice_log::page_splice_log($/;"	f	class:page_splice_log
page_splice_t	src/sm/logrec.cpp	/^page_splice_t::page_splice_t($/;"	f	class:page_splice_t
page_splice_t	src/sm/logrec.cpp	/^struct page_splice_t {$/;"	s	file:
page_splicez_log	src/sm/logdef_gen.cpp	/^	page_splicez_log (logrec_t*)   {};$/;"	f	class:page_splicez_log
page_splicez_log	src/sm/logdef_gen.cpp	/^    class page_splicez_log : public logrec_t {$/;"	c	file:
page_splicez_log	src/sm/logrec.cpp	/^page_splicez_log::page_splicez_log($/;"	f	class:page_splicez_log
page_splicez_t	src/sm/logrec.cpp	/^page_splicez_t::page_splicez_t($/;"	f	class:page_splicez_t
page_splicez_t	src/sm/logrec.cpp	/^struct page_splicez_t {$/;"	s	file:
page_sz	src/fc/tests/cuckoo.cpp	198;"	d	file:
page_sz	src/fc/tests/findsizes.cpp	123;"	d	file:
page_sz	src/sm/page_h.h	/^    page_sz = smlevel_0::page_sz$/;"	e	enum:__anon53
page_sz	src/sm/sm_base.h	/^        page_sz = SM_PAGESIZE,        \/\/ page size (SM_PAGESIZE is set by makemake)$/;"	e	enum:smlevel_0::__anon28
page_sz	src/sm/vol.h	/^    w_base_t::uint4_t page_sz() const {  return _page_sz; }$/;"	f	class:volhdr_t
page_tag	src/sm/logrec.cpp	/^    page_p::tag_t            page_tag() const  {$/;"	f	class:page_init_t
page_tag_to_str	src/sm/log.cpp	/^static char const* page_tag_to_str(int page_tag) {$/;"	f	file:
page_unfix_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t page_unfix_cnt;$/;"	v
page_usage	src/sm/page.cpp	/^page_p::page_usage(int& data_size, int& header_size, int& unused,$/;"	f	class:page_p
page_write_mutex	src/sm/bf_core.cpp	/^page_write_mutex_t page_write_mutex_t::page_write_mutex[page_write_mutex_t::PWM_COUNT];$/;"	m	class:page_write_mutex_t	file:
page_write_mutex	src/sm/bf_core.h	/^    static page_write_mutex_t page_write_mutex[PWM_COUNT];$/;"	m	class:page_write_mutex_t
page_write_mutex_t	src/sm/bf_core.h	/^    page_write_mutex_t() { DO_PTHREAD(pthread_mutex_init(*this, NULL)); }$/;"	f	class:page_write_mutex_t
page_write_mutex_t	src/sm/bf_core.h	/^class page_write_mutex_t {$/;"	c
page_writer_thread_t	src/sm/bf.cpp	/^    page_writer_thread_t() : $/;"	f	class:page_writer_thread_t
page_writer_thread_t	src/sm/bf.cpp	/^class page_writer_thread_t : public smthread_t $/;"	c	file:
pages_claimed	src/sm/bf.cpp	/^    int pages_claimed;    \/\/ index of last page for which a single writer thread has$/;"	m	struct:bf_page_writer_control_t	file:
pages_in_ext_t	src/sm/logrec.cpp	/^pages_in_ext_t::pages_in_ext_t(snum_t theStore, extnum_t theExt, const Pmap& thePmap)$/;"	f	class:pages_in_ext_t
pages_in_ext_t	src/sm/logrec.cpp	/^struct pages_in_ext_t  {$/;"	s	file:
pages_in_heap	src/sm/histo.cpp	/^        pages_in_heap = 20, $/;"	e	enum:__anon50	file:
pages_per_ext	src/sm/smstats.h	/^    u_long pages_per_ext; $/;"	m	struct:sm_config_info_t
pages_submitted	src/sm/bf.cpp	/^    int pages_submitted;  \/\/ # pages the master asked the slaves to write$/;"	m	struct:bf_page_writer_control_t	file:
pages_written	src/sm/bf.cpp	/^    int pages_written;    \/\/ running total of # pages written by slaves$/;"	m	struct:bf_page_writer_control_t	file:
pagestophere	src/sm/page.cpp	/^extern "C" void pagestophere()$/;"	f
pair	src/sm/logrec.h	/^    LockAndModePair pair[max_locks_logged];$/;"	m	struct:prepare_all_lock_t
pan	src/sm/smsh/out_of_log_space.cpp	/^static tid_t    pan;$/;"	v	file:
parent_lock	src/sthread/srwlock.h	/^    typedef queue_based_lock_t parent_lock;$/;"	t	class:mcs_rwlock
parent_mode	src/sm/lock.h	/^    static const lmode_t         parent_mode[NUM_MODES];$/;"	m	class:lock_m
parent_mode	src/sm/lock_core.cpp	/^const lock_base_t::lmode_t lock_m::parent_mode[NUM_MODES] = {$/;"	m	class:lock_m	file:
parent_procs	src/sm/smsh/tcl_thread.h	/^    Tcl_DString *               parent_procs;$/;"	m	class:tcl_thread_t
parent_vars	src/sm/smsh/tcl_thread.h	/^    Tcl_DString *               parent_vars;$/;"	m	class:tcl_thread_t
parse	src/common/regcomp.cpp	/^struct parse {$/;"	s	file:
parse	src/fc/errlog.cpp	/^ErrLog::parse(const char *arg, bool *ok)$/;"	f	class:ErrLog
parse_args	src/fc/tests/container.cpp	/^int        parse_args(int argc, char **argv)$/;"	f
parse_args	src/fc/tests/cuckoo.cpp	/^int        parse_args(int argc, char **argv)$/;"	f
parse_args	src/fc/tests/findprime.cpp	/^int        parse_args(int argc, char **argv)$/;"	f
parse_args	src/fc/tests/findsizes.cpp	/^int        parse_args(int argc, char **argv)$/;"	f
parse_args	src/fc/tests/rand.cpp	/^int    parse_args(int argc, char **argv)$/;"	f
parse_args	src/sthread/tests/except.cpp	/^int	parse_args(int argc, char **argv)$/;"	f
parse_args	src/sthread/tests/thread1.cpp	/^int	parse_args(int argc, char **argv)$/;"	f
parse_args	src/sthread/tests/thread3.cpp	/^int	parse_args(int argc, char **argv)$/;"	f
parse_command_line	src/common/option.cpp	/^w_rc_t option_group_t::parse_command_line(const char** argv, int& argc, size_t min_len, ostream* err_stream)$/;"	f	class:option_group_t
parse_escalation_thresholds	src/sm/smsh/shell.cpp	/^parse_escalation_thresholds(const char *s)$/;"	f	file:
parse_key_type	src/sm/sm_s.cpp	/^w_rc_t key_type_s::parse_key_type($/;"	f	class:key_type_s
parse_vec	src/sm/smsh/shell.cpp	/^parse_vec(const char *c, int len) $/;"	f
partition_data_size	src/sm/log.h	/^    fileoff_t           partition_data_size() const { $/;"	f	class:log_m
partition_index	src/sm/log_core.h	/^    partition_index_t   partition_index() const { return _curr_index; }$/;"	f	class:log_core
partition_index_t	src/sm/log_core.h	/^typedef    int    partition_index_t;$/;"	t
partition_mask_values	src/sm/partition.h	/^} partition_mask_values;$/;"	t	typeref:enum:__anon32
partition_num	src/sm/log_core.h	/^    partition_number_t  partition_num() const { return _curr_num; }$/;"	f	class:log_core
partition_number_t	src/sm/log_core.h	/^typedef    smlevel_0::partition_number_t partition_number_t; $/;"	t
partition_number_t	src/sm/sm_base.h	/^    typedef    w_base_t::uint4_t partition_number_t; $/;"	t	class:smlevel_0
partition_size	src/sm/log.cpp	/^fileoff_t log_m::partition_size(long psize)$/;"	f	class:log_m
partition_size	src/sm/log_core.cpp	/^log_core::partition_size(long psize) {$/;"	f	class:log_core
partition_t	src/sm/partition.h	/^    NORET             partition_t() :$/;"	f	class:partition_t
partition_t	src/sm/partition.h	/^class partition_t {$/;"	c
partitions	src/sm/dir.cpp	/^key_ranges_map& sdesc_t::partitions()$/;"	f	class:sdesc_t
paste	src/sm/page.h	/^page_p::paste(slotid_t idx, slot_length_t start, const cvec_t& data)$/;"	f	class:page_p
path	src/sthread/sdisk_unix.h	/^    const char *    path() const { return &_path[0]; }$/;"	f	class:sdisk_unix_t
pbackfail	src/fc/w_compat_strstream.cpp	/^strstreambuf::int_type strstreambuf::pbackfail(int_type c)$/;"	f	class:shore_compat::strstreambuf
pbegin	src/common/regcomp.cpp	/^    sopno pbegin[NPAREN];    \/* -> ( ([0] unused) *\/$/;"	m	struct:parse	file:
pbucketmap	src/sm/extent.h	/^    uint4_t            pbucketmap; \/\/ 4 bytes, unlogged !!! used by$/;"	m	class:extlink_t
pchar	src/common/regex_engine.cpp	/^pchar(int ch)$/;"	f	file:
pcount	src/fc/w_compat_strstream.cpp	/^int ostrstream::pcount() const$/;"	f	class:shore_compat::ostrstream
pcount	src/fc/w_compat_strstream.cpp	/^int strstreambuf::pcount() const$/;"	f	class:shore_compat::strstreambuf
pdfdir	Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	config/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/atomic_ops/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/atomic_ops/asm_linkage/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/atomic_ops/asm_linkage/usr/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/atomic_ops/asm_linkage/usr/src/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/atomic_ops/atomic_ops/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/atomic_ops/atomic_ops/amd64/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/atomic_ops/atomic_ops/i386/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/atomic_ops/atomic_ops/sparc/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/atomic_ops/ia32/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/atomic_ops/ia32/sys/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/atomic_ops/intel/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/atomic_ops/intel/ia32/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/atomic_ops/intel/ia32/sys/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/atomic_ops/intel/sys/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/atomic_ops/sparc/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/atomic_ops/sparc/sys/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/common/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/common/tests/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/fc/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/fc/tests/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/sm/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/sm/smsh/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/sm/smsh/lib/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/sm/smsh/scripts/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/sm/tests/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/sthread/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/sthread/tests/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	tools/Makefile	/^pdfdir = ${docdir}$/;"	m
peek	src/sm/partition.cpp	/^partition_t::peek($/;"	f	class:partition_t
pelse	tools/stats.pl	/^sub pelse {$/;"	s
pend	src/common/regcomp.cpp	/^    sopno pend[NPAREN];    \/* -> ) ([0] unused) *\/$/;"	m	struct:parse	file:
pendif	tools/stats.pl	/^sub pendif {$/;"	s
percent_07	src/sm/page_h.h	/^    percent_07 = (page_sz >> 4),$/;"	e	enum:__anon54
percent_100	src/sm/page_h.h	/^    percent_100 = page_sz,$/;"	e	enum:__anon54
percent_12	src/sm/page_h.h	/^    percent_12 = (page_sz >> 3),$/;"	e	enum:__anon54
percent_19	src/sm/page_h.h	/^    percent_19 = (percent_12 | percent_07),$/;"	e	enum:__anon54
percent_25	src/sm/page_h.h	/^    percent_25 = (page_sz >> 2),$/;"	e	enum:__anon54
percent_32	src/sm/page_h.h	/^    percent_32 = (percent_25 | percent_07),$/;"	e	enum:__anon54
percent_37	src/sm/page_h.h	/^    percent_37 = (percent_25 | percent_12),$/;"	e	enum:__anon54
percent_44	src/sm/page_h.h	/^    percent_44 = (percent_25 | percent_12 | percent_07),$/;"	e	enum:__anon54
percent_50	src/sm/page_h.h	/^    percent_50 = (page_sz >> 1),$/;"	e	enum:__anon54
percent_57	src/sm/page_h.h	/^    percent_57 = (percent_50 | percent_07),$/;"	e	enum:__anon54
percent_62	src/sm/page_h.h	/^    percent_62 = (percent_50 | percent_12),$/;"	e	enum:__anon54
percent_69	src/sm/page_h.h	/^    percent_69 = (percent_50 | percent_12 | percent_07),$/;"	e	enum:__anon54
percent_75	src/sm/page_h.h	/^    percent_75 = (percent_50 | percent_25),$/;"	e	enum:__anon54
percent_82	src/sm/page_h.h	/^    percent_82 = (percent_50 | percent_25 | percent_07),$/;"	e	enum:__anon54
percent_87	src/sm/page_h.h	/^    percent_87 = (percent_50 | percent_25 | percent_12),$/;"	e	enum:__anon54
percent_94	src/sm/page_h.h	/^    percent_94 = (percent_50 | percent_25 | percent_12 | percent_07),$/;"	e	enum:__anon54
persistent_part	src/sm/page.h	/^page_p::persistent_part()$/;"	f	class:page_p
persistent_part_const	src/sm/page.h	/^page_p::persistent_part_const() const$/;"	f	class:page_p
persistent_size	src/sm/newsort.cpp	/^    smsize_t        persistent_size() const {$/;"	f	class:meta_header_t
pf_available	src/sm/bf_prefetch.h	/^    pf_init=0, pf_requested, pf_in_transit, pf_available, pf_grabbed,$/;"	e	enum:bf_prefetch_thread_t::prefetch_status_t
pf_destructor	src/sm/bf_prefetch.h	/^    pf_destructor, $/;"	e	enum:bf_prefetch_thread_t::prefetch_event_t
pf_end_fix	src/sm/bf_prefetch.h	/^    pf_request=0, pf_get_error, pf_start_fix, pf_end_fix, pf_fetch,$/;"	e	enum:bf_prefetch_thread_t::prefetch_event_t
pf_error	src/sm/bf_prefetch.h	/^    pf_error, $/;"	e	enum:bf_prefetch_thread_t::prefetch_event_t
pf_failure	src/sm/bf_prefetch.h	/^    pf_failure, $/;"	e	enum:bf_prefetch_thread_t::prefetch_status_t
pf_fatal	src/sm/bf_prefetch.h	/^    pf_fatal,$/;"	e	enum:bf_prefetch_thread_t::prefetch_status_t
pf_fetch	src/sm/bf_prefetch.h	/^    pf_request=0, pf_get_error, pf_start_fix, pf_end_fix, pf_fetch,$/;"	e	enum:bf_prefetch_thread_t::prefetch_event_t
pf_get_error	src/sm/bf_prefetch.h	/^    pf_request=0, pf_get_error, pf_start_fix, pf_end_fix, pf_fetch,$/;"	e	enum:bf_prefetch_thread_t::prefetch_event_t
pf_grabbed	src/sm/bf_prefetch.h	/^    pf_init=0, pf_requested, pf_in_transit, pf_available, pf_grabbed,$/;"	e	enum:bf_prefetch_thread_t::prefetch_status_t
pf_in_transit	src/sm/bf_prefetch.h	/^    pf_init=0, pf_requested, pf_in_transit, pf_available, pf_grabbed,$/;"	e	enum:bf_prefetch_thread_t::prefetch_status_t
pf_init	src/sm/bf_prefetch.h	/^    pf_init=0, pf_requested, pf_in_transit, pf_available, pf_grabbed,$/;"	e	enum:bf_prefetch_thread_t::prefetch_status_t
pf_max_unused_event	src/sm/bf_prefetch.h	/^    pf_max_unused_event$/;"	e	enum:bf_prefetch_thread_t::prefetch_event_t
pf_max_unused_status	src/sm/bf_prefetch.h	/^    pf_max_unused_status $/;"	e	enum:bf_prefetch_thread_t::prefetch_status_t
pf_request	src/sm/bf_prefetch.h	/^    pf_request=0, pf_get_error, pf_start_fix, pf_end_fix, pf_fetch,$/;"	e	enum:bf_prefetch_thread_t::prefetch_event_t
pf_requested	src/sm/bf_prefetch.h	/^    pf_init=0, pf_requested, pf_in_transit, pf_available, pf_grabbed,$/;"	e	enum:bf_prefetch_thread_t::prefetch_status_t
pf_start_fix	src/sm/bf_prefetch.h	/^    pf_request=0, pf_get_error, pf_start_fix, pf_end_fix, pf_fetch,$/;"	e	enum:bf_prefetch_thread_t::prefetch_event_t
pfx	src/sm/zkeyed.cpp	/^    const char *pfx; \/\/ the string$/;"	m	struct:pxinfo_t	file:
pg_policy_t	src/sm/file_s.h	/^enum pg_policy_t { $/;"	g
pgheap	src/sm/histo.h	/^    SearchableHeap<pginfo_t, histoid_compare_t>* pgheap;$/;"	m	class:histoid_t
pginfo_t	src/sm/page_h.h	/^    NORET       pginfo_t():  _space_left(0), _pgid(0) {}$/;"	f	class:pginfo_t
pginfo_t	src/sm/page_h.h	/^    NORET       pginfo_t(const pginfo_t& other):  $/;"	f	class:pginfo_t
pginfo_t	src/sm/page_h.h	/^    NORET     pginfo_t(const shpid_t& pg, smsize_t sl): $/;"	f	class:pginfo_t
pginfo_t	src/sm/page_h.h	/^class pginfo_t {$/;"	c
phase_mgr	src/sm/newsort.cpp	/^    NORET phase_mgr(const fib_t *f) : $/;"	f	class:phase_mgr
phase_mgr	src/sm/newsort.cpp	/^class phase_mgr : public smlevel_top$/;"	c	file:
phases_left	src/sm/newsort.cpp	/^    int phases_left() const{ return _level; }$/;"	f	class:phase_mgr
pick_ei	src/sm/vol.cpp	/^pick_ei(extnum_t ext, extnum_t* exts, extlink_i** extlinks, extnum_t num_ext_pages, extlink_i& ei)$/;"	f	file:
pick_optimum	src/sm/rtree.cpp	/^rtree_p::pick_optimum(const nbox_t& key, slotid_t& ret_slot)$/;"	f	class:rtree_p
pid	src/sm/bf_s.h	/^    const bfpid_t &pid() const  { return _pid;   }$/;"	f	class:bfcb_t
pid	src/sm/btcursor.h	/^    const lpid_t&        pid()     const { return _pid; }$/;"	f	class:bt_cursor_t
pid	src/sm/btree_impl.h	/^    const lpid_t&         pid() const { check(); return _pid; }$/;"	f	class:tree_latch
pid	src/sm/lgrec.h	/^    lpid_t     pid(uint4_t pid_num ) const$/;"	f	class:lg_tag_indirect_h
pid	src/sm/lgrec.h	/^    lpid_t     pid(uint4_t pid_num) const$/;"	f	class:lg_tag_chunks_h
pid	src/sm/lgrec.h	/^    shpid_t     pid(shpid_t pid_num) const { return first_pid+pid_num; }$/;"	f	struct:lg_chunk_s
pid	src/sm/logrec.h	/^    lpid_t    pid;$/;"	m	struct:chkpt_bf_tab_t::brec_t
pid	src/sm/logrec.h	/^logrec_t::pid() const$/;"	f	class:logrec_t
pid	src/sm/page.h	/^page_p::pid() const$/;"	f	class:page_p
pid	src/sm/page_s.h	/^    lpid_t    pid;            \/\/ id of the page$/;"	m	class:page_s
pid	src/sm/restart_s.h	/^    bfpid_t      pid;$/;"	m	struct:dp_entry_t
pid	src/sm/sm_s.h	/^    lpid_t        pid;$/;"	m	class:rid_t
pid	src/sm/sort.h	/^    lpid_t pid;         \/\/ current page id$/;"	m	class:run_scan_t
pid	src/sm/tests/htab.cpp	/^        lpid_t pid; \/\/ index i -> pid$/;"	m	struct:htab_tester::pidinfo	file:
pid0	src/sm/btree_p.h	/^        shpid_t    pid0;        \/\/ first ptr in non-leaf nodes$/;"	m	struct:btree_p::btctrl_t
pid0	src/sm/btree_p.h	/^inline shpid_t btree_p::pid0() const$/;"	f	class:btree_p
pid2ext	src/sm/vol.h	/^inline extnum_t vol_t::pid2ext(const lpid_t& pid) const$/;"	f	class:vol_t
pid2ext	src/sm/vol.h	/^inline extnum_t vol_t::pid2ext(shpid_t p)$/;"	f	class:vol_t
pid2info	src/sm/tests/htab.cpp	/^    pidinfo & pid2info(const lpid_t &p) { return _pid2info[p.page]; }$/;"	f	class:htab_tester
pid_containing	src/sm/file.cpp	/^record_t::pid_containing(uint4_t offset, uint4_t& start_byte, const file_p& page) const$/;"	f	class:record_t
pid_count	src/sm/lgrec.h	/^    uint4_t        pid_count() const { return tuple_size(0)\/sizeof(shpid_t); }$/;"	f	class:lgindex_p
pidinfo	src/sm/tests/htab.cpp	/^        pidinfo() : status(Zero),count(0),count_removes(0),$/;"	f	struct:htab_tester::pidinfo
pidinfo	src/sm/tests/htab.cpp	/^    struct pidinfo $/;"	s	class:htab_tester	file:
pids	src/sm/bf.cpp	/^    lpid_t* pids;$/;"	m	struct:bf_page_writer_control_t	file:
pids	src/sm/lgrec.h	/^    shpid_t    pids(uint4_t pid_num) const $/;"	f	class:lgindex_p
pieces	src/sm/newsort.cpp	/^    bool pieces(int k) const { return $/;"	f	class:meta_header_t
pifdef	tools/stats.pl	/^sub pifdef {$/;"	s
pin	src/sm/bf_core.cpp	/^bf_core_m::pin(bfcb_t* p, latch_mode_t mode)$/;"	f	class:bf_core_m
pin	src/sm/pin.cpp	/^rc_t pin_i::pin(const rid_t& rid, smsize_t start, $/;"	f	class:pin_i
pin	src/sm/pin.cpp	/^rc_t pin_i::pin(const rid_t& rid, smsize_t start, lock_mode_t lmode,$/;"	f	class:pin_i
pin_cnt	src/sm/bf_s.h	/^    int4_t              pin_cnt() const { return _pin_cnt; }$/;"	f	class:bfcb_t
pin_cnt	src/sm/lock_x.h	/^    int volatile     pin_cnt;$/;"	m	class:lock_head_t
pin_count	src/sm/smthread.h	/^        int      pin_count;      \/\/ number of rsrc_m pins$/;"	m	struct:smthread_t::tcb_t
pin_count	src/sm/smthread.h	/^smthread_t::pin_count() $/;"	f	class:smthread_t
pin_empty	src/sm/pin.h	/^        pin_empty                = 0x0,$/;"	e	enum:pin_i::flags_t
pin_frame	src/sm/bf_core.cpp	/^void bfcb_t::pin_frame() { $/;"	f	class:bfcb_t
pin_frame_if_pinned	src/sm/bf_core.cpp	/^bool bfcb_t::pin_frame_if_pinned() {$/;"	f	class:bfcb_t
pin_hdr_only	src/sm/pin.h	/^        pin_hdr_only                = 0x02, $/;"	e	enum:pin_i::flags_t
pin_i	src/sm/pin.h	/^    NORET        pin_i() {_init_constructor();}$/;"	f	class:pin_i
pin_i	src/sm/pin.h	/^class pin_i : public smlevel_top {$/;"	c
pin_lg_data_pinned	src/sm/pin.h	/^        pin_lg_data_pinned        = 0x08  \/\/ large data page is pinned$/;"	e	enum:pin_i::flags_t
pin_orig_rec	src/sm/newsort.cpp	/^tape_t::pin_orig_rec(file_p& ifile_page, $/;"	f	class:tape_t
pin_rec_pinned	src/sm/pin.h	/^        pin_rec_pinned                = 0x01,$/;"	e	enum:pin_i::flags_t
pin_separate_data	src/sm/pin.h	/^        pin_separate_data        = 0x04,$/;"	e	enum:pin_i::flags_t
ping	src/sthread/tests/thread1.cpp	/^	pong_thread_t	*ping;$/;"	m	struct:ping_pong_t	file:
ping_pong_t	src/sthread/tests/thread1.cpp	/^	ping_pong_t() : whoseShot(0), ping(0), pong(0) { $/;"	f	struct:ping_pong_t
ping_pong_t	src/sthread/tests/thread1.cpp	/^struct ping_pong_t {$/;"	s	file:
pinned	src/sm/pin.h	/^    bool       pinned() const     { return _flags & pin_rec_pinned; }$/;"	f	class:pin_i
pinned_all	src/sm/pin.h	/^    bool       pinned_all() const $/;"	f	class:pin_i
pinned_by_me	src/sm/btree_impl.h	/^    bool                  pinned_by_me() const {check();  $/;"	f	class:tree_latch
pinned_by_me	src/sm/page.cpp	/^page_p::pinned_by_me() const$/;"	f	class:page_p
pkgdatadir	Makefile	/^pkgdatadir = $(datadir)\/shore-storage-manager$/;"	m
pkgdatadir	config/Makefile	/^pkgdatadir = $(datadir)\/shore-storage-manager$/;"	m
pkgdatadir	src/Makefile	/^pkgdatadir = $(datadir)\/shore-storage-manager$/;"	m
pkgdatadir	src/atomic_ops/Makefile	/^pkgdatadir = $(datadir)\/shore-storage-manager$/;"	m
pkgdatadir	src/atomic_ops/asm_linkage/Makefile	/^pkgdatadir = $(datadir)\/shore-storage-manager$/;"	m
pkgdatadir	src/atomic_ops/asm_linkage/usr/Makefile	/^pkgdatadir = $(datadir)\/shore-storage-manager$/;"	m
pkgdatadir	src/atomic_ops/asm_linkage/usr/src/Makefile	/^pkgdatadir = $(datadir)\/shore-storage-manager$/;"	m
pkgdatadir	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^pkgdatadir = $(datadir)\/shore-storage-manager$/;"	m
pkgdatadir	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^pkgdatadir = $(datadir)\/shore-storage-manager$/;"	m
pkgdatadir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^pkgdatadir = $(datadir)\/shore-storage-manager$/;"	m
pkgdatadir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^pkgdatadir = $(datadir)\/shore-storage-manager$/;"	m
pkgdatadir	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^pkgdatadir = $(datadir)\/shore-storage-manager$/;"	m
pkgdatadir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^pkgdatadir = $(datadir)\/shore-storage-manager$/;"	m
pkgdatadir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^pkgdatadir = $(datadir)\/shore-storage-manager$/;"	m
pkgdatadir	src/atomic_ops/atomic_ops/Makefile	/^pkgdatadir = $(datadir)\/shore-storage-manager$/;"	m
pkgdatadir	src/atomic_ops/atomic_ops/amd64/Makefile	/^pkgdatadir = $(datadir)\/shore-storage-manager$/;"	m
pkgdatadir	src/atomic_ops/atomic_ops/i386/Makefile	/^pkgdatadir = $(datadir)\/shore-storage-manager$/;"	m
pkgdatadir	src/atomic_ops/atomic_ops/sparc/Makefile	/^pkgdatadir = $(datadir)\/shore-storage-manager$/;"	m
pkgdatadir	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^pkgdatadir = $(datadir)\/shore-storage-manager$/;"	m
pkgdatadir	src/atomic_ops/ia32/Makefile	/^pkgdatadir = $(datadir)\/shore-storage-manager$/;"	m
pkgdatadir	src/atomic_ops/ia32/sys/Makefile	/^pkgdatadir = $(datadir)\/shore-storage-manager$/;"	m
pkgdatadir	src/atomic_ops/intel/Makefile	/^pkgdatadir = $(datadir)\/shore-storage-manager$/;"	m
pkgdatadir	src/atomic_ops/intel/ia32/Makefile	/^pkgdatadir = $(datadir)\/shore-storage-manager$/;"	m
pkgdatadir	src/atomic_ops/intel/ia32/sys/Makefile	/^pkgdatadir = $(datadir)\/shore-storage-manager$/;"	m
pkgdatadir	src/atomic_ops/intel/sys/Makefile	/^pkgdatadir = $(datadir)\/shore-storage-manager$/;"	m
pkgdatadir	src/atomic_ops/sparc/Makefile	/^pkgdatadir = $(datadir)\/shore-storage-manager$/;"	m
pkgdatadir	src/atomic_ops/sparc/sys/Makefile	/^pkgdatadir = $(datadir)\/shore-storage-manager$/;"	m
pkgdatadir	src/common/Makefile	/^pkgdatadir = $(datadir)\/shore-storage-manager$/;"	m
pkgdatadir	src/common/tests/Makefile	/^pkgdatadir = $(datadir)\/shore-storage-manager$/;"	m
pkgdatadir	src/fc/Makefile	/^pkgdatadir = $(datadir)\/shore-storage-manager$/;"	m
pkgdatadir	src/fc/tests/Makefile	/^pkgdatadir = $(datadir)\/shore-storage-manager$/;"	m
pkgdatadir	src/sm/Makefile	/^pkgdatadir = $(datadir)\/shore-storage-manager$/;"	m
pkgdatadir	src/sm/smsh/Makefile	/^pkgdatadir = $(datadir)\/shore-storage-manager$/;"	m
pkgdatadir	src/sm/smsh/lib/Makefile	/^pkgdatadir = $(datadir)\/shore-storage-manager$/;"	m
pkgdatadir	src/sm/smsh/scripts/Makefile	/^pkgdatadir = $(datadir)\/shore-storage-manager$/;"	m
pkgdatadir	src/sm/tests/Makefile	/^pkgdatadir = $(datadir)\/shore-storage-manager$/;"	m
pkgdatadir	src/sthread/Makefile	/^pkgdatadir = $(datadir)\/shore-storage-manager$/;"	m
pkgdatadir	src/sthread/tests/Makefile	/^pkgdatadir = $(datadir)\/shore-storage-manager$/;"	m
pkgdatadir	tools/Makefile	/^pkgdatadir = $(datadir)\/shore-storage-manager$/;"	m
pkgincludedir	Makefile	/^pkgincludedir = $(includedir)\/shore-storage-manager$/;"	m
pkgincludedir	config/Makefile	/^pkgincludedir = $(includedir)\/shore-storage-manager$/;"	m
pkgincludedir	src/Makefile	/^pkgincludedir = $(includedir)\/shore-storage-manager$/;"	m
pkgincludedir	src/atomic_ops/Makefile	/^pkgincludedir = $(includedir)\/shore-storage-manager$/;"	m
pkgincludedir	src/atomic_ops/asm_linkage/Makefile	/^pkgincludedir = $(includedir)\/shore-storage-manager$/;"	m
pkgincludedir	src/atomic_ops/asm_linkage/usr/Makefile	/^pkgincludedir = $(includedir)\/shore-storage-manager$/;"	m
pkgincludedir	src/atomic_ops/asm_linkage/usr/src/Makefile	/^pkgincludedir = $(includedir)\/shore-storage-manager$/;"	m
pkgincludedir	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^pkgincludedir = $(includedir)\/shore-storage-manager$/;"	m
pkgincludedir	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^pkgincludedir = $(includedir)\/shore-storage-manager$/;"	m
pkgincludedir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^pkgincludedir = $(includedir)\/shore-storage-manager$/;"	m
pkgincludedir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^pkgincludedir = $(includedir)\/shore-storage-manager$/;"	m
pkgincludedir	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^pkgincludedir = $(includedir)\/shore-storage-manager$/;"	m
pkgincludedir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^pkgincludedir = $(includedir)\/shore-storage-manager$/;"	m
pkgincludedir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^pkgincludedir = $(includedir)\/shore-storage-manager$/;"	m
pkgincludedir	src/atomic_ops/atomic_ops/Makefile	/^pkgincludedir = $(includedir)\/shore-storage-manager$/;"	m
pkgincludedir	src/atomic_ops/atomic_ops/amd64/Makefile	/^pkgincludedir = $(includedir)\/shore-storage-manager$/;"	m
pkgincludedir	src/atomic_ops/atomic_ops/i386/Makefile	/^pkgincludedir = $(includedir)\/shore-storage-manager$/;"	m
pkgincludedir	src/atomic_ops/atomic_ops/sparc/Makefile	/^pkgincludedir = $(includedir)\/shore-storage-manager$/;"	m
pkgincludedir	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^pkgincludedir = $(includedir)\/shore-storage-manager$/;"	m
pkgincludedir	src/atomic_ops/ia32/Makefile	/^pkgincludedir = $(includedir)\/shore-storage-manager$/;"	m
pkgincludedir	src/atomic_ops/ia32/sys/Makefile	/^pkgincludedir = $(includedir)\/shore-storage-manager$/;"	m
pkgincludedir	src/atomic_ops/intel/Makefile	/^pkgincludedir = $(includedir)\/shore-storage-manager$/;"	m
pkgincludedir	src/atomic_ops/intel/ia32/Makefile	/^pkgincludedir = $(includedir)\/shore-storage-manager$/;"	m
pkgincludedir	src/atomic_ops/intel/ia32/sys/Makefile	/^pkgincludedir = $(includedir)\/shore-storage-manager$/;"	m
pkgincludedir	src/atomic_ops/intel/sys/Makefile	/^pkgincludedir = $(includedir)\/shore-storage-manager$/;"	m
pkgincludedir	src/atomic_ops/sparc/Makefile	/^pkgincludedir = $(includedir)\/shore-storage-manager$/;"	m
pkgincludedir	src/atomic_ops/sparc/sys/Makefile	/^pkgincludedir = $(includedir)\/shore-storage-manager$/;"	m
pkgincludedir	src/common/Makefile	/^pkgincludedir = $(includedir)\/shore-storage-manager$/;"	m
pkgincludedir	src/common/tests/Makefile	/^pkgincludedir = $(includedir)\/shore-storage-manager$/;"	m
pkgincludedir	src/fc/Makefile	/^pkgincludedir = $(includedir)\/shore-storage-manager$/;"	m
pkgincludedir	src/fc/tests/Makefile	/^pkgincludedir = $(includedir)\/shore-storage-manager$/;"	m
pkgincludedir	src/sm/Makefile	/^pkgincludedir = $(includedir)\/shore-storage-manager$/;"	m
pkgincludedir	src/sm/smsh/Makefile	/^pkgincludedir = $(includedir)\/shore-storage-manager$/;"	m
pkgincludedir	src/sm/smsh/lib/Makefile	/^pkgincludedir = $(includedir)\/shore-storage-manager$/;"	m
pkgincludedir	src/sm/smsh/scripts/Makefile	/^pkgincludedir = $(includedir)\/shore-storage-manager$/;"	m
pkgincludedir	src/sm/tests/Makefile	/^pkgincludedir = $(includedir)\/shore-storage-manager$/;"	m
pkgincludedir	src/sthread/Makefile	/^pkgincludedir = $(includedir)\/shore-storage-manager$/;"	m
pkgincludedir	src/sthread/tests/Makefile	/^pkgincludedir = $(includedir)\/shore-storage-manager$/;"	m
pkgincludedir	tools/Makefile	/^pkgincludedir = $(includedir)\/shore-storage-manager$/;"	m
pkglibdir	Makefile	/^pkglibdir = $(libdir)\/shore-storage-manager$/;"	m
pkglibdir	config/Makefile	/^pkglibdir = $(libdir)\/shore-storage-manager$/;"	m
pkglibdir	src/Makefile	/^pkglibdir = $(libdir)\/shore-storage-manager$/;"	m
pkglibdir	src/atomic_ops/Makefile	/^pkglibdir = $(libdir)\/shore-storage-manager$/;"	m
pkglibdir	src/atomic_ops/asm_linkage/Makefile	/^pkglibdir = $(libdir)\/shore-storage-manager$/;"	m
pkglibdir	src/atomic_ops/asm_linkage/usr/Makefile	/^pkglibdir = $(libdir)\/shore-storage-manager$/;"	m
pkglibdir	src/atomic_ops/asm_linkage/usr/src/Makefile	/^pkglibdir = $(libdir)\/shore-storage-manager$/;"	m
pkglibdir	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^pkglibdir = $(libdir)\/shore-storage-manager$/;"	m
pkglibdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^pkglibdir = $(libdir)\/shore-storage-manager$/;"	m
pkglibdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^pkglibdir = $(libdir)\/shore-storage-manager$/;"	m
pkglibdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^pkglibdir = $(libdir)\/shore-storage-manager$/;"	m
pkglibdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^pkglibdir = $(libdir)\/shore-storage-manager$/;"	m
pkglibdir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^pkglibdir = $(libdir)\/shore-storage-manager$/;"	m
pkglibdir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^pkglibdir = $(libdir)\/shore-storage-manager$/;"	m
pkglibdir	src/atomic_ops/atomic_ops/Makefile	/^pkglibdir = $(libdir)\/shore-storage-manager$/;"	m
pkglibdir	src/atomic_ops/atomic_ops/amd64/Makefile	/^pkglibdir = $(libdir)\/shore-storage-manager$/;"	m
pkglibdir	src/atomic_ops/atomic_ops/i386/Makefile	/^pkglibdir = $(libdir)\/shore-storage-manager$/;"	m
pkglibdir	src/atomic_ops/atomic_ops/sparc/Makefile	/^pkglibdir = $(libdir)\/shore-storage-manager$/;"	m
pkglibdir	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^pkglibdir = $(libdir)\/shore-storage-manager$/;"	m
pkglibdir	src/atomic_ops/ia32/Makefile	/^pkglibdir = $(libdir)\/shore-storage-manager$/;"	m
pkglibdir	src/atomic_ops/ia32/sys/Makefile	/^pkglibdir = $(libdir)\/shore-storage-manager$/;"	m
pkglibdir	src/atomic_ops/intel/Makefile	/^pkglibdir = $(libdir)\/shore-storage-manager$/;"	m
pkglibdir	src/atomic_ops/intel/ia32/Makefile	/^pkglibdir = $(libdir)\/shore-storage-manager$/;"	m
pkglibdir	src/atomic_ops/intel/ia32/sys/Makefile	/^pkglibdir = $(libdir)\/shore-storage-manager$/;"	m
pkglibdir	src/atomic_ops/intel/sys/Makefile	/^pkglibdir = $(libdir)\/shore-storage-manager$/;"	m
pkglibdir	src/atomic_ops/sparc/Makefile	/^pkglibdir = $(libdir)\/shore-storage-manager$/;"	m
pkglibdir	src/atomic_ops/sparc/sys/Makefile	/^pkglibdir = $(libdir)\/shore-storage-manager$/;"	m
pkglibdir	src/common/Makefile	/^pkglibdir = $(libdir)\/shore-storage-manager$/;"	m
pkglibdir	src/common/tests/Makefile	/^pkglibdir = $(libdir)\/shore-storage-manager$/;"	m
pkglibdir	src/fc/Makefile	/^pkglibdir = $(libdir)\/shore-storage-manager$/;"	m
pkglibdir	src/fc/tests/Makefile	/^pkglibdir = $(libdir)\/shore-storage-manager$/;"	m
pkglibdir	src/sm/Makefile	/^pkglibdir = $(libdir)\/shore-storage-manager$/;"	m
pkglibdir	src/sm/smsh/Makefile	/^pkglibdir = $(libdir)\/shore-storage-manager$/;"	m
pkglibdir	src/sm/smsh/lib/Makefile	/^pkglibdir = $(libdir)\/shore-storage-manager$/;"	m
pkglibdir	src/sm/smsh/scripts/Makefile	/^pkglibdir = $(libdir)\/shore-storage-manager$/;"	m
pkglibdir	src/sm/tests/Makefile	/^pkglibdir = $(libdir)\/shore-storage-manager$/;"	m
pkglibdir	src/sthread/Makefile	/^pkglibdir = $(libdir)\/shore-storage-manager$/;"	m
pkglibdir	src/sthread/tests/Makefile	/^pkglibdir = $(libdir)\/shore-storage-manager$/;"	m
pkglibdir	tools/Makefile	/^pkglibdir = $(libdir)\/shore-storage-manager$/;"	m
pkglibexecdir	Makefile	/^pkglibexecdir = $(libexecdir)\/shore-storage-manager$/;"	m
pkglibexecdir	config/Makefile	/^pkglibexecdir = $(libexecdir)\/shore-storage-manager$/;"	m
pkglibexecdir	src/Makefile	/^pkglibexecdir = $(libexecdir)\/shore-storage-manager$/;"	m
pkglibexecdir	src/atomic_ops/Makefile	/^pkglibexecdir = $(libexecdir)\/shore-storage-manager$/;"	m
pkglibexecdir	src/atomic_ops/asm_linkage/Makefile	/^pkglibexecdir = $(libexecdir)\/shore-storage-manager$/;"	m
pkglibexecdir	src/atomic_ops/asm_linkage/usr/Makefile	/^pkglibexecdir = $(libexecdir)\/shore-storage-manager$/;"	m
pkglibexecdir	src/atomic_ops/asm_linkage/usr/src/Makefile	/^pkglibexecdir = $(libexecdir)\/shore-storage-manager$/;"	m
pkglibexecdir	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^pkglibexecdir = $(libexecdir)\/shore-storage-manager$/;"	m
pkglibexecdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^pkglibexecdir = $(libexecdir)\/shore-storage-manager$/;"	m
pkglibexecdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^pkglibexecdir = $(libexecdir)\/shore-storage-manager$/;"	m
pkglibexecdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^pkglibexecdir = $(libexecdir)\/shore-storage-manager$/;"	m
pkglibexecdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^pkglibexecdir = $(libexecdir)\/shore-storage-manager$/;"	m
pkglibexecdir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^pkglibexecdir = $(libexecdir)\/shore-storage-manager$/;"	m
pkglibexecdir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^pkglibexecdir = $(libexecdir)\/shore-storage-manager$/;"	m
pkglibexecdir	src/atomic_ops/atomic_ops/Makefile	/^pkglibexecdir = $(libexecdir)\/shore-storage-manager$/;"	m
pkglibexecdir	src/atomic_ops/atomic_ops/amd64/Makefile	/^pkglibexecdir = $(libexecdir)\/shore-storage-manager$/;"	m
pkglibexecdir	src/atomic_ops/atomic_ops/i386/Makefile	/^pkglibexecdir = $(libexecdir)\/shore-storage-manager$/;"	m
pkglibexecdir	src/atomic_ops/atomic_ops/sparc/Makefile	/^pkglibexecdir = $(libexecdir)\/shore-storage-manager$/;"	m
pkglibexecdir	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^pkglibexecdir = $(libexecdir)\/shore-storage-manager$/;"	m
pkglibexecdir	src/atomic_ops/ia32/Makefile	/^pkglibexecdir = $(libexecdir)\/shore-storage-manager$/;"	m
pkglibexecdir	src/atomic_ops/ia32/sys/Makefile	/^pkglibexecdir = $(libexecdir)\/shore-storage-manager$/;"	m
pkglibexecdir	src/atomic_ops/intel/Makefile	/^pkglibexecdir = $(libexecdir)\/shore-storage-manager$/;"	m
pkglibexecdir	src/atomic_ops/intel/ia32/Makefile	/^pkglibexecdir = $(libexecdir)\/shore-storage-manager$/;"	m
pkglibexecdir	src/atomic_ops/intel/ia32/sys/Makefile	/^pkglibexecdir = $(libexecdir)\/shore-storage-manager$/;"	m
pkglibexecdir	src/atomic_ops/intel/sys/Makefile	/^pkglibexecdir = $(libexecdir)\/shore-storage-manager$/;"	m
pkglibexecdir	src/atomic_ops/sparc/Makefile	/^pkglibexecdir = $(libexecdir)\/shore-storage-manager$/;"	m
pkglibexecdir	src/atomic_ops/sparc/sys/Makefile	/^pkglibexecdir = $(libexecdir)\/shore-storage-manager$/;"	m
pkglibexecdir	src/common/Makefile	/^pkglibexecdir = $(libexecdir)\/shore-storage-manager$/;"	m
pkglibexecdir	src/common/tests/Makefile	/^pkglibexecdir = $(libexecdir)\/shore-storage-manager$/;"	m
pkglibexecdir	src/fc/Makefile	/^pkglibexecdir = $(libexecdir)\/shore-storage-manager$/;"	m
pkglibexecdir	src/fc/tests/Makefile	/^pkglibexecdir = $(libexecdir)\/shore-storage-manager$/;"	m
pkglibexecdir	src/sm/Makefile	/^pkglibexecdir = $(libexecdir)\/shore-storage-manager$/;"	m
pkglibexecdir	src/sm/smsh/Makefile	/^pkglibexecdir = $(libexecdir)\/shore-storage-manager$/;"	m
pkglibexecdir	src/sm/smsh/lib/Makefile	/^pkglibexecdir = $(libexecdir)\/shore-storage-manager$/;"	m
pkglibexecdir	src/sm/smsh/scripts/Makefile	/^pkglibexecdir = $(libexecdir)\/shore-storage-manager$/;"	m
pkglibexecdir	src/sm/tests/Makefile	/^pkglibexecdir = $(libexecdir)\/shore-storage-manager$/;"	m
pkglibexecdir	src/sthread/Makefile	/^pkglibexecdir = $(libexecdir)\/shore-storage-manager$/;"	m
pkglibexecdir	src/sthread/tests/Makefile	/^pkglibexecdir = $(libexecdir)\/shore-storage-manager$/;"	m
pkglibexecdir	tools/Makefile	/^pkglibexecdir = $(libexecdir)\/shore-storage-manager$/;"	m
playPong	src/sthread/tests/thread1.cpp	/^void playPong()$/;"	f
plen	src/sm/btree_p.h	/^    smsize_t            plen() const    { return (smsize_t)_prefix_bytes; }$/;"	f	class:btrec_t
plp_tracing_level_t	src/sm/sm_base.h	/^    enum plp_tracing_level_t { $/;"	g	class:smlevel_0
pluscount	src/common/regcomp.cpp	/^pluscount(struct parse *p, struct re_guts *g)$/;"	f	file:
pmap	src/sm/extent.h	/^    Pmap_Align4        pmap;        \/\/ LOGGED. this must be first$/;"	m	class:extlink_t
pmap	src/sm/logrec.cpp	/^    Pmap_Align4                pmap; \/\/ grot: for purify -because$/;"	m	struct:pages_in_ext_t	file:
pmap	src/sm/logrec.h	/^    Pmap_Align4    pmap;    \/\/ 4 bytes$/;"	m	class:ext_log_info_t
pmatch	src/common/regex_engine.cpp	/^    regmatch_t *pmatch;    \/* [nsub+1] (0 element unused) *\/$/;"	m	struct:match	file:
pnzstats	src/sm/smsh/lib/smsh.tcl	/^proc pnzstats { n } {$/;"	p
pointer	src/fc/atomic_container.h	/^    static long pointer(Union value) { return value.n &~VERSION_MASK; }$/;"	f	class:atomic_container
pointer	src/fc/w_temp_alloc.h	/^        typedef T *pointer;$/;"	t	struct:w_temp_alloc::allocator
polygon	src/sm/smsh/shell.h	/^    char    polygon[sizeof(nbox_t)]; \/\/ for rtree test$/;"	m	union:typed_value::__anon75
pong	src/sthread/tests/thread1.cpp	/^	pong_thread_t	*pong;$/;"	m	struct:ping_pong_t	file:
pong_thread_t	src/sthread/tests/thread1.cpp	/^class pong_thread_t : public sthread_t {$/;"	c	file:
pong_thread_t	src/sthread/tests/thread1.cpp	/^pong_thread_t::pong_thread_t(ping_pong_t &which_game,$/;"	f	class:pong_thread_t
pool	src/fc/w_temp_alloc.h	/^        pool() : end(0), hiwater(0) { }$/;"	f	struct:w_temp_alloc::pool
pool	src/fc/w_temp_alloc.h	/^    struct pool {$/;"	s	struct:w_temp_alloc
pool_fini	src/fc/w_temp_alloc.cpp	/^void pool_fini(w_temp_alloc::pool *p) {$/;"	f
pool_init_once	src/fc/w_temp_alloc.cpp	/^static pthread_once_t pool_init_once = PTHREAD_ONCE_INIT;$/;"	v	file:
pool_key	src/fc/w_temp_alloc.cpp	/^static pthread_key_t pool_key;$/;"	v	file:
pool_swap	src/fc/w_temp_alloc.cpp	/^w_temp_alloc::pool_swap::pool_swap(w_temp_alloc::pool *p)$/;"	f	class:w_temp_alloc::pool_swap
pool_swap	src/fc/w_temp_alloc.h	/^    struct pool_swap {$/;"	s	struct:w_temp_alloc
pop	src/fc/atomic_container.h	/^    void* pop() {$/;"	f	class:atomic_container
pop	src/fc/w_list.h	/^    T*                  pop()   {$/;"	f	class:w_list_t
pop	src/sm/rtree_p.h	/^    shpid_t pop() {$/;"	f	class:ftstk_t
pop	src/sm/rtree_p.h	/^rtstk_t::pop()$/;"	f	class:rtstk_t
pop1	src/fc/tests/container.cpp	/^int pop1()$/;"	f
pop1	src/fc/tests/container.cpp	/^int pop1(int i)$/;"	f
pop_back	src/fc/w_list.h	/^    T*	pop_back()  { return chop(); }$/;"	f	class:w_list_t
pop_front	src/fc/w_list.h	/^    T*	pop_front() { return pop(); }$/;"	f	class:w_list_t
popc64	src/fc/mem_block.cpp	/^long popc64(u64 x) {$/;"	f	namespace:memory_block
popped	src/fc/tests/container.cpp	/^int* pushed, *popped;$/;"	v
pos	src/sm/log_core.cpp	/^	long pos;		\/\/ how much of the allocation already claimed?$/;"	m	struct:log_core::insert_info	file:
pos_inf	src/common/vec_t.cpp	/^cvec_t                cvec_t::pos_inf;$/;"	m	class:cvec_t	file:
pos_inf	src/common/vec_t.cpp	/^vec_t&                vec_t::pos_inf = *(vec_t*) &cvec_t::pos_inf;$/;"	m	class:vec_t	file:
pos_inf	src/common/vec_t.h	/^    static cvec_t pos_inf;$/;"	m	class:cvec_t
pos_inf	src/common/vec_t.h	/^    static vec_t& pos_inf;$/;"	m	class:vec_t
possible	src/sm/smsh/shell2.cpp	/^void possible() { }$/;"	f
possible_values	src/common/option.h	/^    const char*        possible_values(){ return _possible_values; }        $/;"	f	class:option_t
power	src/fc/nbox.cpp	/^static int power(int base, int index)$/;"	f	file:
power_of_two	src/fc/mem_block.h	/^    fail_unless<((BYTES &- BYTES) == BYTES)>     power_of_two;$/;"	m	struct:memory_block::bounds_check
pread	src/sthread/io.cpp	/^w_rc_t    sthread_t::pread(int fd, void *buf, int n, fileoff_t pos)$/;"	f	class:sthread_t
pread	src/sthread/sdisk.cpp	/^w_rc_t    sdisk_t::pread(void *buf, int size, fileoff_t pos,$/;"	f	class:sdisk_t
pread	src/sthread/sdisk_unix.cpp	/^w_rc_t    sdisk_unix_t::pread(void *buf, int count, fileoff_t pos, int &done)$/;"	f	class:sdisk_unix_t
pred2	src/sm/log_core.cpp	/^	mcs_lock::qnode* pred2;$/;"	m	struct:log_core::insert_info	file:
prefetch_event_t	src/sm/bf_prefetch.h	/^    enum prefetch_event_t {$/;"	g	class:bf_prefetch_thread_t
prefetch_status_t	src/sm/bf_prefetch.h	/^    enum prefetch_status_t {$/;"	g	class:bf_prefetch_thread_t
prefix	Makefile	/^prefix = \/usr\/local$/;"	m
prefix	config/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/atomic_ops/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/atomic_ops/asm_linkage/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/atomic_ops/asm_linkage/usr/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/atomic_ops/asm_linkage/usr/src/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/atomic_ops/atomic_ops/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/atomic_ops/atomic_ops/amd64/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/atomic_ops/atomic_ops/i386/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/atomic_ops/atomic_ops/sparc/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/atomic_ops/ia32/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/atomic_ops/ia32/sys/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/atomic_ops/intel/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/atomic_ops/intel/ia32/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/atomic_ops/intel/ia32/sys/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/atomic_ops/intel/sys/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/atomic_ops/sparc/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/atomic_ops/sparc/sys/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/common/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/common/tests/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/fc/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/fc/tests/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/sm/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/sm/smsh/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/sm/smsh/lib/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/sm/smsh/scripts/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/sm/tests/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/sthread/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/sthread/tests/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	tools/Makefile	/^prefix = \/usr\/local$/;"	m
prepare	src/fc/atomic_container.h	/^    void* prepare(Union rval) {$/;"	f	class:atomic_container
prepare	src/sm/xct.cpp	/^xct_t::prepare()$/;"	f	class:xct_t
prepare_all_lock_t	src/sm/logrec.h	/^    prepare_all_lock_t(uint4_t num, $/;"	f	struct:prepare_all_lock_t
prepare_all_lock_t	src/sm/logrec.h	/^struct prepare_all_lock_t $/;"	s
prepare_for_blkld	src/sm/smsh/shell.cpp	/^prepare_for_blkld(sort_stream_i& s_stream, $/;"	f	file:
prepare_info_t	src/sm/logrec.h	/^    prepare_info_t(const gtid_t *_g, $/;"	f	struct:prepare_info_t
prepare_info_t	src/sm/logrec.h	/^struct prepare_info_t {$/;"	s
prepare_lock_t	src/sm/logrec.h	/^    prepare_lock_t(uint4_t num, lock_base_t::lmode_t _mode, $/;"	f	struct:prepare_lock_t
prepare_lock_t	src/sm/logrec.h	/^struct prepare_lock_t $/;"	s
prepare_lock_totals_t	src/sm/logrec.h	/^    prepare_lock_totals_t(int a, int b, int c, int d, const lsn_t &l) :$/;"	f	struct:prepare_lock_totals_t
prepare_lock_totals_t	src/sm/logrec.h	/^struct prepare_lock_totals_t {$/;"	s
prepare_stores_to_free_t	src/sm/logrec.h	/^    prepare_stores_to_free_t(uint4_t theNum, const stid_t* theStids)$/;"	f	struct:prepare_stores_to_free_t
prepare_stores_to_free_t	src/sm/logrec.h	/^struct prepare_stores_to_free_t  $/;"	s
prepare_tape_buffer	src/sm/newsort.cpp	/^tape_t::prepare_tape_buffer(meta_header_t *m)$/;"	f	class:tape_t
prepare_to_block	src/sm/smthread.cpp	/^void smthread_t::prepare_to_block()$/;"	f	class:smthread_t
prepare_xct	src/sm/sm.cpp	/^ss_m::prepare_xct(sm_stats_info_t*&    _stats, vote_t &v)$/;"	f	class:ss_m
prepare_xct	src/sm/sm.cpp	/^ss_m::prepare_xct(vote_t &v)$/;"	f	class:ss_m
prepare_xct_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t prepare_xct_cnt;$/;"	v
pretty_print	src/sm/xct.cpp	/^static void pretty_print(ostream &out, xct_list const* \/* rec *\/) {$/;"	f	file:
pretty_printer	src/sm/dir.cpp	/^struct pretty_printer {$/;"	s	file:
pretty_printer	src/sm/lock_core.cpp	/^struct pretty_printer {$/;"	s	file:
prev	src/common/tid_t.h	/^    tid_t prev() const {$/;"	f	class:tid_t
prev	src/fc/valgrind_help.h	/^    int prev() const { return _current_errors - _check_failed; } };$/;"	f	class:valgrind_check
prev	src/fc/w_list.h	/^    T*                prev(w_link_t* p) {$/;"	f	class:w_list_t
prev	src/fc/w_list.h	/^w_link_t::prev() const$/;"	f	class:w_link_t
prev	src/sm/extent.h	/^    extnum_t           prev;        \/\/ 4 bytes$/;"	m	class:extlink_t
prev	src/sm/logrec.cpp	/^    extnum_t            prev;$/;"	m	struct:create_ext_list_t	file:
prev	src/sm/logrec.h	/^    extnum_t prev;  \/\/ order info$/;"	m	class:ext_log_info_t
prev	src/sm/logrec.h	/^logrec_t::prev() const$/;"	f	class:logrec_t
prev	src/sm/page.h	/^page_p::prev() const$/;"	f	class:page_p
prev	src/sm/page_s.h	/^    shpid_t    prev;          \/\/ previous page$/;"	m	class:page_s
prev_pin_count	src/sm/smthread.h	/^        int      prev_pin_count; \/\/ previous # of rsrc_m pins$/;"	m	struct:smthread_t::tcb_t
prime	src/sm/log_core.cpp	/^log_core::prime(char* buf, int fd, fileoff_t start, lsn_t next)$/;"	f	class:log_core
prime	src/sm/newsort.cpp	/^blob::prime(const sm_skey_t &key) $/;"	f	class:blob
prime_cache	src/sm/vol.cpp	/^vol_t::prime_cache(snum_t snum)$/;"	f	class:vol_t
prime_record	src/sm/newsort.cpp	/^tape_t::prime_record($/;"	f	class:tape_t
prime_tape_for_input	src/sm/newsort.cpp	/^tape_t::prime_tape_for_input()$/;"	f	class:tape_t
prime_tape_for_output	src/sm/newsort.cpp	/^tape_t::prime_tape_for_output()$/;"	f	class:tape_t
primed_for_input	src/sm/newsort.cpp	/^    bool               primed_for_input()const { return _primed_for_input; }$/;"	f	class:tape_t
primed_for_output	src/sm/newsort.cpp	/^    bool               primed_for_output()const { return _primed_for_output; }$/;"	f	class:tape_t
primes	src/sm/lock_core.cpp	/^static const uint4_t primes[] = {$/;"	v	file:
print	src/common/latch.cpp	/^    void print(holder_list holders)$/;"	f	class:holders_print	file:
print	src/common/latch.cpp	/^ostream &latch_t::print(ostream &out) const$/;"	f	class:latch_t
print	src/common/latch.cpp	/^void latch_holder_t::print(ostream &o) const$/;"	f	class:latch_holder_t
print	src/common/regex_engine.cpp	/^print(match *m, char *caption, states st, int ch, FILE *d)$/;"	f	file:
print	src/common/regex_engine.cpp	1026;"	d	file:
print	src/common/regex_engine.cpp	66;"	d	file:
print	src/common/regex_engine.cpp	77;"	d	file:
print	src/common/w_opaque.h	/^    ostream        &print(ostream & o) const {$/;"	f	class:opaque_quantity
print	src/fc/nbox.cpp	/^void nbox_t::print(ostream &o, int level) const$/;"	f	class:nbox_t
print	src/fc/stime.cpp	/^ostream    &sinterval_t::print(ostream &s) const$/;"	f	class:sinterval_t
print	src/fc/stime.cpp	/^ostream    &stime_t::print(ostream &s) const$/;"	f	class:stime_t
print	src/fc/tests/ntime.cpp	/^ostream &stime_test_t::print(ostream &s) const$/;"	f	class:stime_test_t
print	src/fc/w_bitvector.h	/^    ostream &print(ostream &o) const $/;"	f	class:w_bitvector_t
print	src/fc/w_error.cpp	/^w_error_t::print(ostream &out)$/;"	f	class:w_error_t
print	src/sm/btree.cpp	/^btree_m::print(const lpid_t& root, $/;"	f	class:btree_m
print	src/sm/btree_p.cpp	/^btree_p::print($/;"	f	class:btree_p
print	src/sm/histo.cpp	/^ostream &histoid_t::print(ostream &o) const$/;"	f	class:histoid_t
print	src/sm/lgrec.cpp	/^lg_tag_chunks_h::print(ostream &o) const$/;"	f	class:lg_tag_chunks_h
print	src/sm/log_core.cpp	/^	void print() const {$/;"	f	struct:histo
print	src/sm/newsort.cpp	/^    void print(ostream &o) const {$/;"	f	class:phase_mgr
print	src/sm/newsort.cpp	/^    void print(ostream& o) const {$/;"	f	class:fib_t
print	src/sm/pmap.cpp	/^ostream    &Pmap::print(ostream &s) const$/;"	f	class:Pmap
print	src/sm/rtree.cpp	/^rtree_m::print(const lpid_t& root)$/;"	f	class:rtree_m
print	src/sm/rtree.cpp	/^rtree_p::print()$/;"	f	class:rtree_p
print	src/sm/sm_du_stats.cpp	/^void btree_int_stats_t::print(ostream& o, const char *pfx) const$/;"	f	class:btree_int_stats_t
print	src/sm/sm_du_stats.cpp	/^void btree_lf_stats_t::print(ostream& o, const char *pfx) const$/;"	f	class:btree_lf_stats_t
print	src/sm/sm_du_stats.cpp	/^void btree_stats_t::print(ostream& o, const char *pfx) const$/;"	f	class:btree_stats_t
print	src/sm/sm_du_stats.cpp	/^void file_pg_stats_t::print(ostream& o, const char *pfx) const$/;"	f	class:file_pg_stats_t
print	src/sm/sm_du_stats.cpp	/^void file_stats_t::print(ostream& o, const char *pfx) const$/;"	f	class:file_stats_t
print	src/sm/sm_du_stats.cpp	/^void lgdata_pg_stats_t::print(ostream& o, const char *pfx) const$/;"	f	class:lgdata_pg_stats_t
print	src/sm/sm_du_stats.cpp	/^void lgindex_pg_stats_t::print(ostream& o, const char *pfx) const$/;"	f	class:lgindex_pg_stats_t
print	src/sm/sm_du_stats.cpp	/^void rtree_stats_t::print(ostream& o, const char *pfx) const$/;"	f	class:rtree_stats_t
print	src/sm/sm_du_stats.cpp	/^void sm_du_stats_t::print(ostream& o, const char *pfx) const$/;"	f	class:sm_du_stats_t
print	src/sm/sm_du_stats.cpp	/^void volume_hdr_stats_t::print(ostream& o, const char *pfx) const$/;"	f	class:volume_hdr_stats_t
print	src/sm/sm_du_stats.cpp	/^void volume_map_stats_t::print(ostream& o, const char *pfx) const$/;"	f	class:volume_map_stats_t
print	src/sm/tests/testall	/^function print  {$/;"	f
print	src/sthread/sthread.cpp	/^ostream &sthread_t::print(ostream &o) const$/;"	f	class:sthread_t
print	src/sthread/tests/except.cpp	/^	ostream &print(ostream &o) const {$/;"	f	class:MyException
printPartitions	src/sm/key_ranges_map.cpp	/^void key_ranges_map::printPartitions()$/;"	f	class:key_ranges_map
printPartitionsInBytes	src/sm/key_ranges_map.cpp	/^void key_ranges_map::printPartitionsInBytes()$/;"	f	class:key_ranges_map
print_all_latches	src/common/latch.cpp	/^void print_all_latches()$/;"	f
print_bf_fill	src/sm/tests/htab.cpp	/^htab_tester::print_bf_fill(ostream &o) const$/;"	f	class:htab_tester
print_cache	src/sm/histo.cpp	/^ostream &histoid_t::print_cache(ostream &o, bool locked)$/;"	f	class:histoid_t
print_error	src/fc/w_error.cpp	/^ostream& w_error_t::print_error(ostream &o) const$/;"	f	class:w_error_t
print_expose_groups	src/sm/log_core.cpp	/^bool print_expose_groups = false;$/;"	v
print_frame	src/sm/bf_core.cpp	/^bfcb_t::print_frame(ostream& o, bool in_htab)$/;"	f	class:bfcb_t
print_histograms	src/sthread/tests/thread2.cpp	/^void print_histograms(ostream &o)$/;"	f
print_index	src/sm/smindex.cpp	/^ss_m::print_index(stid_t stid)$/;"	f	class:ss_m
print_info	src/fc/tests/memblock.cpp	/^static void print_info() {$/;"	f	file:
print_latch	src/common/latch.cpp	/^void print_latch(const latch_t *l)$/;"	f
print_log_stats	src/sm/log_core.cpp	/^void print_log_stats() {$/;"	f
print_lsn_groups	src/sm/log_core.cpp	/^bool print_lsn_groups = false;$/;"	v
print_md_index	src/sm/smindex.cpp	/^ss_m::print_md_index(stid_t stid)$/;"	f	class:ss_m
print_mr_index	src/sm/smindex.cpp	/^rc_t ss_m::print_mr_index(stid_t stid)$/;"	f	class:ss_m
print_multikey_sort_file_DSCB	src/sm/smsh/sort_funcs4.cpp	/^void print_multikey_sort_file_DSCB(pin_i &pin)$/;"	f
print_mutex	src/common/tests/latch1.cpp	/^queue_based_block_lock_t print_mutex;$/;"	v
print_my_latches	src/common/latch.cpp	/^void print_my_latches()$/;"	f
print_propagate	src/sm/btree_impl.cpp	104;"	d	file:
print_propagate	src/sm/btree_impl.cpp	112;"	d	file:
print_ptraverse	src/sm/btree_impl.cpp	101;"	d	file:
print_ptraverse	src/sm/btree_impl.cpp	110;"	d	file:
print_remove	src/sm/btree_impl.cpp	103;"	d	file:
print_remove	src/sm/btree_impl.cpp	111;"	d	file:
print_sanity	src/sm/btree_impl.cpp	107;"	d	file:
print_sanity	src/sm/btree_impl.cpp	97;"	d	file:
print_sli_list	src/sm/lock_core.cpp	/^void xct_lock_info_t::print_sli_list() {$/;"	f	class:xct_lock_info_t
print_split	src/sm/btree_impl.cpp	98;"	d	file:
print_the_index	src/sm/tests/mrbtrees_test.cpp	/^rc_t smthread_main_t::print_the_index() $/;"	f	class:smthread_main_t
print_time	src/sthread/sthread.cpp	/^static void print_time(ostream &o, const sinterval_t &real,$/;"	f	file:
print_timeout	src/sthread/sthread.cpp	/^void print_timeout(ostream& o, const sthread_base_t::timeout_in_ms timeout)$/;"	f
print_traverse	src/sm/btree_impl.cpp	100;"	d	file:
print_traverse	src/sm/btree_impl.cpp	109;"	d	file:
print_traverse	src/sm/btree_impl.cpp	99;"	d	file:
print_updated_rids	src/sm/tests/mrbtrees_test.cpp	/^rc_t smthread_main_t::print_updated_rids(vector<rid_t>& old_rids, vector<rid_t>& new_rids)$/;"	f	class:smthread_main_t
print_usage	config/test-driver	/^print_usage ()$/;"	f
print_usage	src/common/option.cpp	/^option_group_t::print_usage(bool longForm, ostream& err_stream)$/;"	f	class:option_group_t
print_usage	src/sm/smsh/smsh.cpp	/^void print_usage(ostream& err_stream, const char* prog_name,$/;"	f
print_values	src/common/option.cpp	/^void option_group_t::print_values(bool longForm, ostream& err_stream)$/;"	f	class:option_group_t
print_wholetree	src/sm/btree_impl.cpp	102;"	d	file:
print_wholetreee	src/sm/btree_impl.cpp	108;"	d	file:
print_working_set	src/sm/log_core.cpp	/^bool print_working_set = false;$/;"	v
printstats	src/sm/tests/htab.cpp	/^htab_tester::printstats(ostream &o, bool final) $/;"	f	class:htab_tester
priority	src/sthread/sthread.h	/^sthread_t::priority() const$/;"	f	class:sthread_t
priority_strings	src/sthread/sthread.cpp	/^const char *sthread_t::priority_strings[]= {$/;"	m	class:sthread_t	file:
priority_strings	src/sthread/sthread.h	/^    static const char *priority_strings[];$/;"	m	class:sthread_t
priority_t	src/sthread/sthread.h	/^    enum priority_t {$/;"	g	class:sthread_t
probe	src/sm/lock_cache.h	/^    lock_cache_elem_t* probe(const lockid_t& id, int l) {$/;"	f	class:lock_cache_t
proceed	src/common/tests/latch1.cpp	/^    pthread_cond_t        proceed;$/;"	m	class:latch_thread_t	file:
proceed	src/sm/smsh/tcl_thread.h	/^    pthread_cond_t               proceed; \/\/ paired with lock$/;"	m	class:tcl_thread_t
process_stdin	src/sm/smsh/tcl_thread.cpp	/^static void process_stdin(Tcl_Interp* ip)$/;"	f	file:
program_details	config/missing	/^program_details ()$/;"	f
program_transform_name	Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	config/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/atomic_ops/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/atomic_ops/asm_linkage/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/atomic_ops/asm_linkage/usr/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/atomic_ops/asm_linkage/usr/src/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/atomic_ops/atomic_ops/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/atomic_ops/atomic_ops/amd64/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/atomic_ops/atomic_ops/i386/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/atomic_ops/atomic_ops/sparc/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/atomic_ops/ia32/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/atomic_ops/ia32/sys/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/atomic_ops/intel/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/atomic_ops/intel/ia32/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/atomic_ops/intel/ia32/sys/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/atomic_ops/intel/sys/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/atomic_ops/sparc/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/atomic_ops/sparc/sys/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/common/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/common/tests/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/fc/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/fc/tests/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/sm/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/sm/smsh/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/sm/smsh/lib/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/sm/smsh/scripts/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/sm/tests/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/sthread/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/sthread/tests/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	tools/Makefile	/^program_transform_name = s,x,x,$/;"	m
prolog	src/sm/vol.cpp	/^const char* vol_t::prolog[] = {$/;"	m	class:vol_t	file:
prolog	src/sm/vol.h	/^    static const char*       prolog[]; \/\/ string array for volume hdr$/;"	m	class:vol_t
prologue	src/sm/newsort.cpp	/^run_mgr::prologue() $/;"	f	class:run_mgr
prologue_rc_t	src/sm/prologue.h	/^class prologue_rc_t {$/;"	c
prologue_rc_t	src/sm/prologue.h	/^prologue_rc_t::prologue_rc_t($/;"	f	class:prologue_rc_t
property	src/sm/sort_s.h	/^    smlevel_3::sm_store_property_t property; $/;"	m	struct:ssm_sort::sort_parm_t
protectFDs	src/sthread/io.cpp	/^static          queue_based_lock_t    protectFDs;$/;"	v	file:
prototypes	configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
psdir	Makefile	/^psdir = ${docdir}$/;"	m
psdir	config/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/atomic_ops/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/atomic_ops/asm_linkage/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/atomic_ops/asm_linkage/usr/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/atomic_ops/asm_linkage/usr/src/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/atomic_ops/atomic_ops/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/atomic_ops/atomic_ops/amd64/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/atomic_ops/atomic_ops/i386/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/atomic_ops/atomic_ops/sparc/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/atomic_ops/ia32/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/atomic_ops/ia32/sys/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/atomic_ops/intel/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/atomic_ops/intel/ia32/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/atomic_ops/intel/ia32/sys/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/atomic_ops/intel/sys/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/atomic_ops/sparc/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/atomic_ops/sparc/sys/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/common/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/common/tests/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/fc/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/fc/tests/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/sm/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/sm/smsh/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/sm/smsh/lib/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/sm/smsh/scripts/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/sm/tests/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/sthread/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/sthread/tests/Makefile	/^psdir = ${docdir}$/;"	m
psdir	tools/Makefile	/^psdir = ${docdir}$/;"	m
pstats	src/sm/smsh/lib/smsh.tcl	/^proc pstats {} {$/;"	p
pthread	src/sthread/stcore_pthread.h	/^    pthread_t   pthread;$/;"	m	struct:sthread_core_t
pthread_barrier_destroy	src/sthread/macpthread_barrier.h	/^int pthread_barrier_destroy(pthread_barrier_t *barrier)$/;"	f
pthread_barrier_init	src/sthread/macpthread_barrier.h	/^int pthread_barrier_init(pthread_barrier_t *barrier, const pthread_barrierattr_t *attr, unsigned int count)$/;"	f
pthread_barrier_t	src/sthread/macpthread_barrier.h	/^} pthread_barrier_t;$/;"	t	typeref:struct:__anon148
pthread_barrier_wait	src/sthread/macpthread_barrier.h	/^int pthread_barrier_wait(pthread_barrier_t *barrier)$/;"	f
pthread_barrierattr_t	src/sthread/macpthread_barrier.h	/^typedef int pthread_barrierattr_t;$/;"	t
pthread_core_start	src/sthread/sthread_core_pthread.cpp	/^void *pthread_core_start(void *_arg)$/;"	f
pthread_create	src/fc/cpu_info.cpp	/^pthread_create(pthread_t *tid, pthread_attr_t const* attr,$/;"	f
pthread_create_fn	src/fc/cpu_info.cpp	/^    typedef int pthread_create_fn(pthread_t*, pthread_attr_t const*, pthread_run_fn*, void*);$/;"	t	file:
pthread_run_fn	src/fc/cpu_info.cpp	/^    typedef void* pthread_run_fn(void*);$/;"	t	file:
pthread_test_DEPENDENCIES	src/sthread/tests/Makefile	/^pthread_test_DEPENDENCIES = ..\/libsthread.a ..\/..\/fc\/libfc.a \\$/;"	m
pthread_test_LDADD	src/sthread/tests/Makefile	/^pthread_test_LDADD = $(LDADD)$/;"	m
pthread_test_OBJECTS	src/sthread/tests/Makefile	/^pthread_test_OBJECTS = $(am_pthread_test_OBJECTS)$/;"	m
pthread_test_SOURCES	src/sthread/tests/Makefile	/^pthread_test_SOURCES = pthread_test.cpp$/;"	m
ptr	src/common/regex2.h	/^    uch *ptr;        \/* -> uch [csetsize] *\/$/;"	m	struct:__anon9
ptr	src/common/vec_t.h	/^    CADDR_T        ptr;$/;"	m	struct:vec_pair_t
ptr	src/common/vec_t.h	/^    CADDR_T       ptr(int index) const { return (index >= 0 && index < _cnt) ? $/;"	f	class:vec_t
ptr	src/fc/atomic_container.h	/^    struct ptr { ptr* next; }; $/;"	s	class:atomic_container
ptr	src/fc/dynarray.h	/^    union ptr { char const* cc; T const* tc; char* c; T* t; };$/;"	u	struct:dynvector
ptr	src/fc/w_bitmap.h	/^    uint1_t*             ptr;$/;"	m	class:w_bitmap_t
ptr	src/fc/w_rc.h	/^    w_error_t const* ptr() const { return get(); }$/;"	f	class:w_rc_t
ptr	src/fc/w_rc.h	/^    w_error_t* ptr() { return get(); }$/;"	f	class:w_rc_t
ptr	src/fc/w_temp_alloc.h	/^    struct ptr {$/;"	s	struct:w_temp_alloc
ptr	src/sm/newsort.cpp	/^skey_t::ptr(smsize_t offset) const$/;"	f	class:skey_t
public	tools/logdef.pl	/^      public:$/;"	l
public_setbuf	src/fc/w_strstream.h	/^        void public_setbuf(char *start, size_t len)$/;"	f	class:w_ostrstream_buf::w_ostrstreambuf
publish	src/sm/bf_core.cpp	/^bf_core_m::publish( bfcb_t* p, latch_mode_t mode, bool error_occurred)$/;"	f	class:bf_core_m
publish_partial	src/sm/bf_core.cpp	/^bf_core_m::publish_partial(bfcb_t* p)$/;"	f	class:bf_core_m
pun	src/fc/tests/findprime.cpp	/^union pun$/;"	u	file:
purge	src/sm/btree_bl.cpp	/^btree_m::purge($/;"	f	class:btree_m
push	src/fc/atomic_container.h	/^    void push(void* v) {$/;"	f	class:atomic_container
push	src/fc/w_hash.h	/^w_hash_t<T,LOCK, K>::push(T* t)$/;"	f	class:w_hash_t
push	src/fc/w_list.h	/^    w_list_t<T,LOCK>&   push(T* t)   {$/;"	f	class:w_list_t
push	src/fc/w_rc.cpp	/^w_rc_t::push($/;"	f	class:w_rc_t
push	src/sm/rtree_p.h	/^    void push(const shpid_t pid) {$/;"	f	class:ftstk_t
push	src/sm/rtree_p.h	/^rtstk_t::push(const rtree_base_p& page, int2_t index) $/;"	f	class:rtstk_t
push1	src/fc/tests/container.cpp	/^int push1(int i)$/;"	f
push_back	src/fc/dynarray.h	/^    int push_back(T const &obj) {$/;"	f	struct:dynvector
push_back	src/fc/w_list.h	/^    w_list_t<T,LOCK>&	push_back (T* t) { return append(t); }$/;"	f	class:w_list_t
push_front	src/common/latch.cpp	/^    void push_front(latch_holder_t* h) {$/;"	f	class:holder_list
push_front	src/fc/w_list.h	/^    w_list_t<T,LOCK>&	push_front(T* t) { return push(t); }$/;"	f	class:w_list_t
pushed	src/fc/tests/container.cpp	/^int* pushed, *popped;$/;"	v
put	src/common/vec_t.cpp	/^cvec_t& cvec_t::put(const cvec_t& v)$/;"	f	class:cvec_t
put	src/common/vec_t.cpp	/^cvec_t& cvec_t::put(const cvec_t& v, size_t start, size_t num_bytes)$/;"	f	class:cvec_t
put	src/common/vec_t.cpp	/^cvec_t& cvec_t::put(const void* p, size_t l)  $/;"	f	class:cvec_t
put	src/common/vec_t.h	/^    zvec_t &put(size_t l) { reset().put(zero_location,l); return *this; }$/;"	f	class:zvec_t
put	src/fc/nbox.cpp	/^void nbox_t::put(const char* s)$/;"	f	class:nbox_t
put	src/sm/btree_bl.cpp	/^btsink_t::put(const cvec_t& key, const cvec_t& el)$/;"	f	class:btsink_t
put	src/sm/extent.h	/^extlink_p::put(slotid_t idx, const extlink_t& e)$/;"	f	class:extlink_p
put	src/sm/extent.h	/^stnode_p::put(slotid_t idx, const stnode_t& e)$/;"	f	class:stnode_p
put	src/sm/lock_cache.h	/^    bool put(const lockid_t& id, lock_base_t::lmode_t m, $/;"	f	class:lock_cache_t
put	src/sm/sort.cpp	/^sort_stream_i::put(const cvec_t& key, const cvec_t& elem)$/;"	f	class:sort_stream_i
put	src/sm/vol.cpp	/^extlink_i::put(extnum_t idx, const extlink_t& e)$/;"	f	class:extlink_i
put	src/sm/vol.cpp	/^stnode_i::put(snum_t idx, const stnode_t& stnode)$/;"	f	class:stnode_i
put_cache	src/sm/lock_x.h	/^    bool            put_cache(const lockid_t &name, $/;"	f	class:xct_lock_info_t
put_in_cache	src/sm/lock_core.cpp	/^void lock_core_m::put_in_cache(xct_lock_info_t* the_xlinfo,$/;"	f	class:lock_core_m
put_in_order	src/fc/w_list.h	/^    virtual void        put_in_order(T* t)  {$/;"	f	class:w_list_t
put_in_order	src/fc/w_list.h	/^w_ascend_list_t<T,LOCK, K>::put_in_order(T* t)$/;"	f	class:w_ascend_list_t
put_in_order	src/fc/w_list.h	/^w_descend_list_t<T,LOCK, K>::put_in_order(T* t)$/;"	f	class:w_descend_list_t
put_rec	src/sm/newsort.cpp	/^run_mgr::put_rec(file_p &fp, slotid_t slot)$/;"	f	class:run_mgr
pvn	src/fc/atomic_container.h	/^    union pvn { ptr* p; void* v; long n; };$/;"	u	class:atomic_container
pwrite	src/sthread/io.cpp	/^w_rc_t    sthread_t::pwrite(int fd, const void *buf, int n, fileoff_t pos)$/;"	f	class:sthread_t
pwrite	src/sthread/sdisk.cpp	/^w_rc_t    sdisk_t::pwrite(const void *buf, int size, fileoff_t pos,$/;"	f	class:sdisk_t
pwrite	src/sthread/sdisk_unix.cpp	/^w_rc_t    sdisk_unix_t::pwrite(const void *buf, int count, fileoff_t pos,$/;"	f	class:sdisk_unix_t
pxinfo_t	src/sm/zkeyed.cpp	/^struct pxinfo_t {$/;"	s	file:
pxstats	src/sm/smsh/lib/smsh.tcl	/^proc pxstats { reset } {$/;"	p
pxxl	src/sm/zkeyed.cpp	/^    int  pxxl;         \/\/ length of the prefix for *this*$/;"	m	struct:pxinfo_t	file:
q	src/sm/log_core.cpp	/^	mcs_lock::qnode q;$/;"	m	union:__anon89	file:
qbox	src/sm/rtree_p.h	/^    nbox_t    qbox;$/;"	m	class:rt_cursor_t
qnode	src/sthread/mcs_lock.h	/^	struct qnode {$/;"	s	struct:mcs_lock
qsort_cmp	src/sm/sort.cpp	/^qsort_cmp(const void* k1, const void* k2)$/;"	f	file:
quad_table	src/fc/nbox.cpp	/^static const int quad_table[4][2][2] = { {{0,1}, {3,2}}, {{1,2}, {0,3}},$/;"	v	file:
quant	src/fc/vtable.h	/^    int            quant() const { return _rows_filled; }$/;"	f	class:vtable_t
quant	src/fc/vtable.h	/^    int   quant() const { return _in_use; }$/;"	f	class:vtable_row_t
quark_marker	src/sm/lock_x.h	/^    lock_request_t*  quark_marker() const { return _quark_marker; }$/;"	f	class:xct_lock_info_t
query	src/sm/lock.cpp	/^rc_t lock_m::query($/;"	f	class:lock_m
query	src/sm/rtree.cpp	/^rtree_p::query(const nbox_t& key, nbox_t::sob_cmp_t ctype, u_char smap[],$/;"	f	class:rtree_p
query_lock	src/sm/sm.cpp	/^ss_m::query_lock(const lockid_t& n, lock_mode_t& m, bool implicit)$/;"	f	class:ss_m
query_prepared	src/sm/xct.cpp	/^xct_t::query_prepared(int &numtids)$/;"	f	class:xct_t
query_prepared	src/sm/xct.cpp	/^xct_t::query_prepared(int list_len, gtid_t list[])$/;"	f	class:xct_t
query_prepared_xct	src/sm/sm.cpp	/^ss_m::query_prepared_xct(int &numtids)$/;"	f	class:ss_m
query_prepared_xct	src/sm/sm.cpp	/^ss_m::query_prepared_xct(int numtids, gtid_t list[])$/;"	f	class:ss_m
queue_append	src/sm/lock_x.h	/^    void             queue_append(lock_request_t * r) { $/;"	f	class:lock_head_t
queue_based_block_lock_t	src/sthread/sthread.h	/^typedef w_pthread_lock_t queue_based_block_lock_t; \/\/ blocking impl always ok$/;"	t
queue_based_lock_t	src/sthread/sthread.h	/^typedef mcs_lock queue_based_lock_t;$/;"	t
queue_based_lock_t	src/sthread/sthread.h	/^typedef w_pthread_lock_t queue_based_lock_t; \/\/ might want to use spin impl$/;"	t
queue_based_spin_lock_t	src/sthread/sthread.h	/^typedef mcs_lock queue_based_spin_lock_t; \/\/ spin preferred$/;"	t
queue_based_spin_lock_t	src/sthread/sthread.h	/^typedef w_pthread_lock_t queue_based_spin_lock_t; \/\/ spin impl preferred$/;"	t
queue_length	src/sm/lock_x.h	/^    int              queue_length() const { $/;"	f	class:lock_head_t
queue_prev	src/sm/lock_x.h	/^    lock_request_t*  queue_prev(lock_request_t *req) { $/;"	f	class:lock_head_t
quick_sort	src/sm/rtree.cpp	/^quick_sort(wrk_branch_t key[], int2_t num, int axis)$/;"	f	file:
quiesced	src/common/tests/latch1.cpp	/^    pthread_cond_t        quiesced;$/;"	m	class:latch_thread_t	file:
quiesced	src/sm/smsh/tcl_thread.h	/^    pthread_cond_t               quiesced; \/\/ paired with lock$/;"	m	class:tcl_thread_t
quota	src/sm/device.cpp	/^rc_t device_m::quota(const char* dev_name, smksize_t& quota_KB)$/;"	f	class:device_m
quota_KB	src/sm/device.h	/^    sm_diskaddr_t    quota_KB;$/;"	m	struct:device_hdr_s
quota_pages	src/sm/device.h	/^    shpid_t    quota_pages;$/;"	m	struct:device_s
r	src/fc/tests/ntime.cpp	/^    stime_test_t     r;$/;"	m	struct:stime_pair	file:
r	src/sm/sort.h	/^    int               r;           \/\/ run index$/;"	m	class:sort_stream_i
ra	src/sm/sm.cpp	/^ranges_m* smlevel_2::ra = 0;$/;"	m	class:smlevel_2	file:
ra	src/sm/sm_int_2.h	/^    static ranges_m* ra;$/;"	m	class:smlevel_2
rand	src/fc/rand48.h	/^    signed48_t     rand()          { $/;"	f	class:rand48
rand	src/fc/tests/cuckoo.cpp	/^w_base_t::uint8_t sthread_t::rand() { return tls_rng.rand(); }$/;"	f	class:sthread_t
rand	src/fc/w_rand.cpp	/^uint32_t w_rand::rand() {$/;"	f	class:w_rand
rand	src/sm/bf_htab.h	/^    static int rand(int n) { return me()->randn(n); }$/;"	f	class:bf_core_m::htab
rand	src/sthread/sthread.h	/^    static unsigned int  rand() { return tls_rng()->rand(); }$/;"	f	class:sthread_t
rand48	src/fc/rand48.h	/^class rand48 {$/;"	c
rand_DEPENDENCIES	src/fc/tests/Makefile	/^rand_DEPENDENCIES = ..\/libfc.a $(LOCALLDADD)$/;"	m
rand_LDADD	src/fc/tests/Makefile	/^rand_LDADD = $(LDADD)$/;"	m
rand_OBJECTS	src/fc/tests/Makefile	/^rand_OBJECTS = $(am_rand_OBJECTS)$/;"	m
rand_SOURCES	src/fc/tests/Makefile	/^rand_SOURCES = rand.cpp$/;"	m
randalt	src/fc/tests/rand.cpp	/^        randalt() { }$/;"	f	struct:randalt
randalt	src/fc/tests/rand.cpp	/^        randalt(const rand48 &other) : randorig(other) { }$/;"	f	struct:randalt
randalt	src/fc/tests/rand.cpp	/^struct  randalt : randorig {$/;"	s	file:
randn	src/fc/rand48.h	/^    signed48_t     randn(signed48_t max)  { return signed48_t(max*drand()); }$/;"	f	class:rand48
randn	src/fc/w_rand.cpp	/^uint32_t w_rand::randn(uint32_t a, uint32_t b) {$/;"	f	class:w_rand
randn	src/fc/w_rand.cpp	/^uint32_t w_rand::randn(uint32_t end) {$/;"	f	class:w_rand
randn	src/sthread/sthread.h	/^    static unsigned int  randn(unsigned int lo, unsigned int hi) {$/;"	f	class:sthread_t
randn	src/sthread/sthread.h	/^    static unsigned int  randn(unsigned int max) {$/;"	f	class:sthread_t
random_DEPENDENCIES	src/fc/tests/Makefile	/^random_DEPENDENCIES = ..\/libfc.a $(LOCALLDADD)$/;"	m
random_LDADD	src/fc/tests/Makefile	/^random_LDADD = $(LDADD)$/;"	m
random_OBJECTS	src/fc/tests/Makefile	/^random_OBJECTS = $(am_random_OBJECTS)$/;"	m
random_SOURCES	src/fc/tests/Makefile	/^random_SOURCES = random.cpp$/;"	m
random_kick_DEPENDENCIES	src/sm/smsh/Makefile	/^random_kick_DEPENDENCIES = $(top_builddir)\/src\/sm\/libsm.a \\$/;"	m
random_kick_LDADD	src/sm/smsh/Makefile	/^random_kick_LDADD = $(LDADD)$/;"	m
random_kick_OBJECTS	src/sm/smsh/Makefile	/^random_kick_OBJECTS = $(am_random_kick_OBJECTS)$/;"	m
random_kick_SOURCES	src/sm/smsh/Makefile	/^random_kick_SOURCES = random_kick.cpp$/;"	m
random_restart	src/sm/smsh/scripts/trans.tcl	/^proc random_restart { a } {$/;"	p
randorig	src/fc/tests/rand.cpp	/^   randorig()  { seed(RAND48_INITIAL_SEED); }$/;"	f	struct:randorig
randorig	src/fc/tests/rand.cpp	/^   randorig(const rand48 &other) { _state = other._state; }$/;"	f	struct:randorig
randorig	src/fc/tests/rand.cpp	/^struct  randorig : rand48 {$/;"	s	file:
randx	src/sm/newsort.cpp	/^__thread long randx = 1; \/* TODO : use other random methods we have *\/$/;"	v
ranges_hist	src/sm/data_access_histogram.h	/^    typedef map< lpid_t, map< foo, vector<uint>, cmp_greater > >                 ranges_hist;$/;"	t	class:data_access_histogram
ranges_hist_citer	src/sm/data_access_histogram.h	/^    typedef map< lpid_t, map< foo, vector<uint>, cmp_greater > >::const_iterator ranges_hist_citer;$/;"	t	class:data_access_histogram
ranges_hist_iter	src/sm/data_access_histogram.h	/^    typedef map< lpid_t, map< foo, vector<uint>, cmp_greater > >::iterator       ranges_hist_iter;$/;"	t	class:data_access_histogram
ranges_m	src/sm/ranges_p.h	/^    NORET                        ranges_m()   {};$/;"	f	class:ranges_m
ranges_m	src/sm/ranges_p.h	/^class ranges_m : public smlevel_2 {$/;"	c
ranges_p	src/sm/ranges_p.h	/^class ranges_p : public page_p {$/;"	c
raw_io	src/sthread/tests/ioperf.cpp	/^bool        raw_io = false;$/;"	v
raw_io	src/sthread/tests/thread2.cpp	/^bool	raw_io = false;$/;"	v
rba	src/common/lsn.h	/^    sm_diskaddr_t     rba()  const { return to_rba(_data); }$/;"	f	class:lsn_t
rc	src/sm/prologue.h	/^    rc_t   rc() {return _rc;}$/;"	f	class:prologue_rc_t
rc_DEPENDENCIES	src/fc/tests/Makefile	/^rc_DEPENDENCIES = ..\/libfc.a $(LOCALLDADD)$/;"	m
rc_LDADD	src/fc/tests/Makefile	/^rc_LDADD = $(LDADD)$/;"	m
rc_OBJECTS	src/fc/tests/Makefile	/^rc_OBJECTS = $(am_rc_OBJECTS)$/;"	m
rc_SOURCES	src/fc/tests/Makefile	/^rc_SOURCES = rc.cpp$/;"	m
rc_ok	src/fc/w_rc.h	/^    static const w_rc_t    rc_ok;$/;"	m	class:w_rc_t
rc_t	src/sm/sm_base.h	/^typedef   w_rc_t        rc_t;$/;"	t
rc_t	src/sm/tests/create_rec.cpp	/^typedef w_rc_t rc_t;$/;"	t	file:
rc_t	src/sm/tests/file_scan.cpp	/^typedef w_rc_t rc_t;$/;"	t	file:
rc_t	src/sm/tests/file_scan_many.cpp	/^typedef w_rc_t rc_t;$/;"	t	file:
rc_t	src/sm/tests/htab.cpp	/^typedef w_rc_t rc_t;$/;"	t	file:
rc_t	src/sm/tests/log_exceed.cpp	/^typedef w_rc_t rc_t;$/;"	t	file:
rc_t	src/sm/tests/mrbtrees_test.cpp	/^typedef w_rc_t rc_t;$/;"	t	file:
rc_t	src/sm/tests/rtree_example.cpp	/^typedef w_rc_t rc_t;$/;"	t	file:
rc_t	src/sm/tests/sort_stream.cpp	/^typedef w_rc_t rc_t;$/;"	t	file:
rc_t	src/sm/tests/vtable_example.cpp	/^typedef w_rc_t rc_t;$/;"	t	file:
rcfile	src/sm/smsh/tcl_thread.h	/^    const char *                rcfile;$/;"	m	class:tcl_thread_t
rdbuf	src/fc/w_compat_strstream.cpp	/^strstreambuf* istrstream::rdbuf() const {$/;"	f	class:shore_compat::istrstream
rdbuf	src/fc/w_compat_strstream.cpp	/^strstreambuf* ostrstream::rdbuf() const $/;"	f	class:shore_compat::ostrstream
re_assert	src/common/regex_utils.h	66;"	d
re_assert	src/common/regex_utils.h	75;"	d
re_comp	src/common/regex_posix.h	25;"	d
re_comp_debug	src/fc/w_debug.cpp	/^w_debug::re_comp_debug(const char* pattern)$/;"	f	class:w_debug
re_comp_posix	src/common/regex_posix.cpp	/^re_comp_posix(const char* pattern)$/;"	f
re_endp	src/common/regex.h	/^    const char *re_endp;    \/* end pointer for REG_PEND *\/$/;"	m	struct:__anon5
re_error_str	src/common/regex_posix.cpp	/^static char    re_error_str[200] = { '\\0' };$/;"	v	file:
re_error_str	src/fc/w_debug.cpp	/^char*       _w_debug::re_error_str = "Bad regular expression";$/;"	m	class:_w_debug	file:
re_error_str	src/fc/w_debug.h	/^        static char*        re_error_str;$/;"	m	class:w_debug
re_exec	src/common/regex_posix.h	26;"	d
re_exec_debug	src/fc/w_debug.cpp	/^w_debug::re_exec_debug(const char* string)$/;"	f	class:w_debug
re_exec_posix	src/common/regex_posix.cpp	/^re_exec_posix(const char* string)$/;"	f
re_g	src/common/regex.h	/^    struct re_guts *re_g;    \/* none of your business :-) *\/$/;"	m	struct:__anon5	typeref:struct:__anon5::re_guts
re_guts	src/common/regex2.h	/^struct re_guts {$/;"	s
re_magic	src/common/regex.h	/^    int re_magic;$/;"	m	struct:__anon5
re_nsub	src/common/regex.h	/^    size_t re_nsub;        \/* number of parenthesized subexpressions *\/$/;"	m	struct:__anon5
re_posix_re	src/common/regex_posix.cpp	/^static regex_t     re_posix_re;$/;"	v	file:
re_posix_re	src/fc/w_debug.cpp	/^regex_t     _w_debug::re_posix_re;$/;"	m	class:_w_debug	file:
re_posix_re	src/fc/w_debug.h	/^        static regex_t        re_posix_re;$/;"	m	class:w_debug
re_ready	src/common/regex_posix.cpp	/^static bool     re_ready = false;$/;"	v	file:
re_ready	src/fc/w_debug.cpp	/^bool        _w_debug::re_ready = false;$/;"	m	class:_w_debug	file:
re_ready	src/fc/w_debug.h	/^        static bool        re_ready;$/;"	m	class:w_debug
read	src/sm/partition.cpp	/^partition_t::read(logrec_t *&rp, lsn_t &ll, int fd)$/;"	f	class:partition_t
read	src/sm/smsh/tcl_thread.cpp	/^w_rc_t    __shared::read()$/;"	f	class:__shared
read	src/sthread/io.cpp	/^w_rc_t    sthread_t::read(int fd, void* buf, int n)$/;"	f	class:sthread_t
read	src/sthread/sdisk_unix.cpp	/^w_rc_t    sdisk_unix_t::read(void *buf, int count, int &done)$/;"	f	class:sdisk_unix_t
read	src/sthread/sthread_stats_struct_gen.h	/^ w_base_t::base_stat_t read;$/;"	v
read_hdr	src/sm/file.cpp	/^file_m::read_hdr(const rid_t& s_rid, int& len,$/;"	f	class:file_m
read_lock	src/sthread/sthread.h	/^    occ_rlock *read_lock() { return &_read_lock; }$/;"	f	struct:occ_rwlock
read_only	src/sm/prologue.h	/^        read_only,      \/\/ this method\/function is read-only and so can have$/;"	e	enum:prologue_rc_t::xct_constraint_t
read_page	src/sm/sm_io.cpp	/^io_m::read_page(const lpid_t& pid, page_s& buf)$/;"	f	class:io_m
read_page	src/sm/vol.cpp	/^vol_t::read_page(shpid_t pnum, page_s& page)$/;"	f	class:vol_t
read_ptr	src/sm/smsh/shell.cpp	/^static int read_ptr(Tcl_Interp *, const char *s, void *&ptr)$/;"	f	file:
read_rec	src/sm/file.cpp	/^file_m::read_rec(const rid_t& s_rid,$/;"	f	class:file_m
read_rec	src/sm/file.h	/^    static rc_t read_rec(const rid_t& rid, uint4_t& len, void* buf, const bool bIgnoreLatches = false)  {$/;"	f	class:file_m
read_vhdr	src/sm/vol.cpp	/^vol_t::read_vhdr(const char* devname, volhdr_t& vhdr)$/;"	f	class:vol_t
read_vhdr	src/sm/vol.cpp	/^vol_t::read_vhdr(int fd, volhdr_t& vhdr)$/;"	f	class:vol_t
read_write	src/sm/prologue.h	/^        read_write      \/\/ this method\/function may perform updates $/;"	e	enum:prologue_rc_t::xct_constraint_t
readbuf	src/sm/log_core.h	/^    char *          readbuf() { return _readbuf; }$/;"	f	class:log_core
readv	src/sthread/io.cpp	/^w_rc_t    sthread_t::readv(int fd, const iovec_t *iov, size_t iovcnt)$/;"	f	class:sthread_t
readv	src/sthread/sdisk.cpp	/^w_rc_t    sdisk_t::readv(const iovec_t *iov, int iovcnt, int &transfered)$/;"	f	class:sdisk_t
readv	src/sthread/sdisk_unix.cpp	/^w_rc_t    sdisk_unix_t::readv(const iovec_t *iov, int iovcnt, int &done)$/;"	f	class:sdisk_unix_t
readv	src/sthread/sthread_stats_struct_gen.h	/^ w_base_t::base_stat_t readv;$/;"	v
real_shrid	src/sm/newsort.cpp	/^    shrid_t  real_shrid(snum_t store) const { $/;"	f	class:tape_t
realloc	src/fc/vtable.cpp	/^vtable_t::realloc() \/\/ doubles the size$/;"	f	class:vtable_t
realloc	src/fc/vtable.h	/^    int            realloc() {$/;"	f	class:vtable_func
rebind	src/fc/w_temp_alloc.h	/^        template <class U> struct rebind { typedef allocator<U> other; };$/;"	s	struct:w_temp_alloc::allocator
rec	src/sm/keyed.h	/^keyed_p::rec(slotid_t idx) const$/;"	f	class:keyed_p
rec	src/sm/newsort.cpp	/^    record_t*        rec,$/;"	v
rec	src/sm/pin.h	/^    const record_t* rec() const { _check_lsn(); return _rec;}$/;"	f	class:pin_i
rec	src/sm/rtree_p.h	/^rtree_base_p::rec(int idx) const$/;"	f	class:rtree_base_p
rec	src/sm/sort.cpp	/^    char* rec;          \/\/ pointer to data$/;"	m	struct:sort_key_t	file:
rec	src/sm/sort.cpp	/^    const char* rec;    \/\/ pointer to data$/;"	m	struct:file_sort_key_t	file:
rec	src/sm/zkeyed.cpp	/^zkeyed_p::rec($/;"	f	class:zkeyed_p
rec_addr	src/sm/app_support.h	/^    record_t* rec_addr(int idx) const {$/;"	f	class:shore_file_page_t
rec_body_align_bs	src/sm/sm_du_stats.h	/^    base_stat_t        rec_body_align_bs;    \/* wasted on alignment of $/;"	m	struct:file_pg_stats_t
rec_body_bs	src/sm/sm_du_stats.h	/^    base_stat_t        rec_body_bs;         \/* bytes in small-obj recs *\/$/;"	m	struct:file_pg_stats_t
rec_count	src/sm/file.cpp	/^int file_p::rec_count()$/;"	f	class:file_p
rec_count	src/sm/sort.cpp	/^    uint rec_count;     \/\/ number of records for this run$/;"	m	struct:sort_desc_t	file:
rec_curr	src/sm/newsort.cpp	/^    meta_header_t* rec_curr;        \/\/ used only in qsort part$/;"	m	class:ssm_sort::run_mgr	file:
rec_expanded_size	src/sm/zkeyed.cpp	/^zkeyed_p::rec_expanded_size(slotid_t idx) const$/;"	f	class:zkeyed_p
rec_first	src/sm/newsort.cpp	/^    meta_header_t* rec_first;        \/\/ used in qsort & merge$/;"	m	class:ssm_sort::run_mgr	file:
rec_first_tofree	src/sm/newsort.cpp	/^    meta_header_t* rec_first_tofree;\/\/ where to start looking for$/;"	m	class:ssm_sort::run_mgr	file:
rec_hdr_align_bs	src/sm/sm_du_stats.h	/^    base_stat_t        rec_hdr_align_bs;       \/* alignment of header *\/$/;"	m	struct:file_pg_stats_t
rec_hdr_bs	src/sm/sm_du_stats.h	/^    base_stat_t        rec_hdr_bs;             \/* user-defined hdr *\/$/;"	m	struct:file_pg_stats_t
rec_last	src/sm/newsort.cpp	/^    meta_header_t* rec_last;        \/\/ used only in qsort part$/;"	m	class:ssm_sort::run_mgr	file:
rec_lg_chunk_bs	src/sm/sm_du_stats.h	/^    base_stat_t        rec_lg_chunk_bs;    \/* for representing chunks of pages *\/$/;"	m	struct:file_pg_stats_t
rec_lg_indirect_bs	src/sm/sm_du_stats.h	/^    base_stat_t        rec_lg_indirect_bs;    \/* pointers to root of$/;"	m	struct:file_pg_stats_t
rec_list	src/sm/newsort.cpp	/^    meta_header_t** rec_list;        \/\/ used only in qsort part$/;"	m	class:ssm_sort::run_mgr	file:
rec_lsn	src/sm/logrec.h	/^    lsn_t    rec_lsn;$/;"	m	struct:chkpt_bf_tab_t::brec_t
rec_lsn	src/sm/restart_s.h	/^    lsn_t       rec_lsn;$/;"	m	struct:dp_entry_t
rec_pin_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t rec_pin_cnt;$/;"	v
rec_repin_cvt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t rec_repin_cvt;$/;"	v
rec_size	src/sm/btree_p.h	/^btree_p::rec_size(slotid_t idx) const$/;"	f	class:btree_p
rec_size	src/sm/keyed.h	/^keyed_p::rec_size(slotid_t idx) const$/;"	f	class:keyed_p
rec_size	src/sm/newsort.cpp	/^static inline smsize_t rec_size(const record_t* rec)$/;"	f	file:
rec_size	src/sm/sort.cpp	/^static inline uint rec_size(const record_t* r)$/;"	f	file:
rec_size	src/sm/tests/create_rec.cpp	/^    int         rec_size;$/;"	m	struct:file_info_t	file:
rec_size	src/sm/tests/file_scan.cpp	/^    int     rec_size;$/;"	m	struct:file_info_t	file:
rec_size	src/sm/tests/file_scan_many.cpp	/^    int         rec_size;$/;"	m	struct:file_info_t	file:
rec_size	src/sm/tests/file_scan_many.cpp	/^    int rec_size;$/;"	m	class:smthread_creator_t	file:
rec_size	src/sm/tests/file_scan_many.cpp	/^    int rec_size;$/;"	m	class:smthread_scanner_t	file:
rec_size	src/sm/tests/log_exceed.cpp	/^    int         rec_size;$/;"	m	struct:file_info_t	file:
rec_size	src/sm/tests/mrbtrees_test.cpp	/^  int         rec_size;$/;"	m	struct:file_info_t	file:
rec_size	src/sm/tests/rtree_example.cpp	/^    int         rec_size;$/;"	m	struct:file_info_t	file:
rec_size	src/sm/tests/sort_stream.cpp	/^    int         rec_size;$/;"	m	struct:file_info_t	file:
rec_size	src/sm/tests/vtable_example.cpp	/^    int         rec_size;$/;"	m	struct:file_info_t	file:
rec_size	src/sm/zkeyed.h	/^inline int zkeyed_p::rec_size(slotid_t idx) const$/;"	f	class:zkeyed_p
rec_tag_bs	src/sm/sm_du_stats.h	/^    base_stat_t        rec_tag_bs;            \/* record "tag" (sm hdr) *\/$/;"	m	struct:file_pg_stats_t
rec_unpin_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t rec_unpin_cnt;$/;"	v
recalc_size	src/common/vec_t.cpp	/^size_t cvec_t::recalc_size() const $/;"	f	class:cvec_t
recflags_t	src/sm/file_s.h	/^enum recflags_t { $/;"	g
reclaim	src/sm/logrec.cpp	/^    page_reclaim_t*   reclaim() { return (page_reclaim_t *)&data; }$/;"	f	class:page_format_t
reclaim	src/sm/page.cpp	/^page_p::reclaim(slotid_t idx, const cvec_t& vec, bool log_it)$/;"	f	class:page_p
record_free	src/sm/newsort.cpp	/^record_free(smsize_t \/* amt *\/ ) $/;"	f
record_free	src/sm/newsort.cpp	/^record_free(smsize_t amt) $/;"	f
record_free	src/sm/sort.cpp	/^record_free(void * W_IFTRACE(p), smsize_t amt) $/;"	f
record_free	src/sm/sort.cpp	/^record_free(void *, smsize_t \/* amt *\/ )$/;"	f
record_malloc	src/sm/newsort.cpp	/^record_malloc(smsize_t \/* amt *\/) $/;"	f
record_malloc	src/sm/newsort.cpp	/^record_malloc(smsize_t amt)$/;"	f
record_malloc	src/sm/sort.cpp	/^record_malloc(void * W_IFTRACE(p), smsize_t amt) $/;"	f
record_malloc	src/sm/sort.cpp	/^record_malloc(void *, smsize_t \/* amt *\/)$/;"	f
record_t	src/sm/file_s.h	/^    record_t()    {};$/;"	f	class:record_t
record_t	src/sm/file_s.h	/^class record_t {$/;"	c
recover	src/sm/restart.cpp	/^restart_m::recover(lsn_t master)$/;"	f	class:restart_m
recover2pc	src/sm/xct.cpp	/^xct_t::recover2pc(const gtid_t &g,$/;"	f	class:xct_t
recover_2pc	src/sm/sm.cpp	/^ss_m::recover_2pc(const gtid_t &gtid,$/;"	f	class:ss_m
recover_pages_in_ext	src/sm/sm_io.cpp	/^io_m::recover_pages_in_ext(vid_t vid, $/;"	f	class:io_m
recover_pages_in_ext	src/sm/vol.cpp	/^vol_t::recover_pages_in_ext(snum_t snum, extnum_t ext, const Pmap& pmap, bool is_alloc)$/;"	f	class:vol_t
recoverable_space	src/sm/log_core.h	/^    size_t              recoverable_space(int pcount) const {$/;"	f	class:log_core
rect	src/sm/rtree_p.h	/^    nbox_t rect;$/;"	m	struct:wrk_branch_t
rectag_t	src/sm/file_s.h	/^struct rectag_t {$/;"	s
recurse	src/sthread/tests/thread1.cpp	/^void overflow_thread_t::recurse(unsigned overflow, char *sp0, char *last)$/;"	f	class:overflow_thread_t
recycle	src/fc/mem_block.cpp	/^void block_bits::recycle() {$/;"	f	class:memory_block::block_bits
recycle	src/fc/mem_block.h	/^    void        recycle() { _bits.recycle(); }$/;"	f	struct:memory_block::block
redo	src/sm/logrec.cpp	/^btree_insert_log::redo(page_p* page)$/;"	f	class:btree_insert_log
redo	src/sm/logrec.cpp	/^btree_purge_log::redo(page_p* page)$/;"	f	class:btree_purge_log
redo	src/sm/logrec.cpp	/^btree_remove_log::redo(page_p* page)$/;"	f	class:btree_remove_log
redo	src/sm/logrec.cpp	/^page_format_log::redo(page_p* page)$/;"	f	class:page_format_log
redo	src/sm/logrec.cpp	/^page_image_log::redo(page_p* page)$/;"	f	class:page_image_log
redo	src/sm/logrec.cpp	/^page_insert_log::redo(page_p* page)$/;"	f	class:page_insert_log
redo	src/sm/logrec.cpp	/^page_insert_t::redo(page_p* page)$/;"	f	class:page_insert_t
redo	src/sm/logrec.cpp	/^page_link_log::redo(page_p* p)$/;"	f	class:page_link_log
redo	src/sm/logrec.cpp	/^page_mark_log::redo(page_p* page)$/;"	f	class:page_mark_log
redo	src/sm/logrec.cpp	/^page_mark_t::redo(page_p* page)$/;"	f	class:page_mark_t
redo	src/sm/logrec.cpp	/^page_reclaim_log::redo(page_p* page)$/;"	f	class:page_reclaim_log
redo	src/sm/logrec.cpp	/^page_set_byte_log::redo(page_p* page)$/;"	f	class:page_set_byte_log
redo	src/sm/logrec.cpp	/^page_shift_log::redo(page_p* page)$/;"	f	class:page_shift_log
redo	src/sm/logrec.cpp	/^page_splice_log::redo(page_p* page)$/;"	f	class:page_splice_log
redo	src/sm/logrec.cpp	/^page_splicez_log::redo(page_p* page)$/;"	f	class:page_splicez_log
redo	src/sm/logrec.cpp	/^rtree_insert_log::redo(page_p* page)$/;"	f	class:rtree_insert_log
redo	src/sm/logrec.cpp	/^rtree_remove_log::redo(page_p* page)$/;"	f	class:rtree_remove_log
redo	src/sm/logrec.cpp	/^void alloc_pages_in_ext_log::redo(page_p* \/*page*\/)$/;"	f	class:alloc_pages_in_ext_log
redo	src/sm/logrec.cpp	/^void create_ext_list_log::redo(page_p* \/*page*\/)$/;"	f	class:create_ext_list_log
redo	src/sm/logrec.cpp	/^void free_ext_list_log::redo(page_p* \/*page*\/)$/;"	f	class:free_ext_list_log
redo	src/sm/logrec.cpp	/^void free_pages_in_ext_log::redo(page_p* \/*page*\/)$/;"	f	class:free_pages_in_ext_log
redo	src/sm/logrec.cpp	/^void logrec_t::redo(page_p* page)$/;"	f	class:logrec_t
redo	src/sm/logrec.cpp	/^void page_remove_log::redo(page_p* page)$/;"	f	class:page_remove_log
redo	src/sm/logrec.cpp	/^void set_ext_next_log::redo(page_p* \/*page*\/)$/;"	f	class:set_ext_next_log
redo	src/sm/logrec.cpp	/^void store_operation_log::redo(page_p* \/*page*\/)$/;"	f	class:store_operation_log
redo	src/sm/logrec.cpp	/^xct_prepare_alk_log::redo(page_p *) $/;"	f	class:xct_prepare_alk_log
redo	src/sm/logrec.cpp	/^xct_prepare_fi_log::redo(page_p *) $/;"	f	class:xct_prepare_fi_log
redo	src/sm/logrec.cpp	/^xct_prepare_lk_log::redo(page_p *) $/;"	f	class:xct_prepare_lk_log
redo	src/sm/logrec.cpp	/^xct_prepare_st_log::redo(page_p *) $/;"	f	class:xct_prepare_st_log
redo	src/sm/logrec.cpp	/^xct_prepare_stores_log::redo(page_p *)$/;"	f	class:xct_prepare_stores_log
redo_init	src/sm/logrec.cpp	/^page_init_t::redo_init(page_p* page, const lpid_t& pid)$/;"	f	class:page_init_t
redo_pass	src/sm/restart.cpp	/^restart_m::redo_pass($/;"	f	class:restart_m
redo_tid	src/sm/restart.h	/^    tid_t                        *redo_tid() { return &_redo_tid; }$/;"	f	class:restart_m
redo_tid	src/sm/sm.cpp	/^tid_t *smlevel_0::redo_tid = 0;$/;"	m	class:smlevel_0	file:
redo_tid	src/sm/sm_base.h	/^    static tid_t* redo_tid;$/;"	m	class:smlevel_0
refbit	src/sm/bf_s.h	/^    int4_t      refbit() const { return _refbit; }$/;"	f	class:bfcb_t
refcount	src/sm/histo.h	/^    int                      refcount;$/;"	m	class:histoid_t
reference	src/fc/w_base.h	/^template<> struct CompileTimeAssertion<true> { void reference() {} };$/;"	f	struct:CompileTimeAssertion
reference	src/fc/w_temp_alloc.h	/^        typedef T &reference;$/;"	t	struct:w_temp_alloc::allocator
refix	src/sm/bf.cpp	/^bf_m::refix(const page_s* buf, latch_mode_t mode)$/;"	f	class:bf_m
regatoi	src/common/regerror.cpp	/^regatoi(const regex_t *preg, char *localbuf)$/;"	f	file:
regcomp	src/common/regcomp.cpp	/^regcomp(regex_t *preg, const char *pattern, int cflags)$/;"	f
regcomp	src/common/regex.h	55;"	d
regerror	src/common/regerror.cpp	/^regerror(int errcode, const regex_t *preg, char *errbuf, size_t errbuf_size)$/;"	f
regerror	src/common/regex.h	56;"	d
regex_t	src/common/regex.h	/^} regex_t;$/;"	t	typeref:struct:__anon5
regexec	src/common/regex.h	54;"	d
regexec	src/common/regexec.cpp	/^regexec(const regex_t *preg, const char *string, size_t nmatch, regmatch_t pmatch[], int eflags)$/;"	f
regfree	src/common/regex.h	57;"	d
regfree	src/common/regfree.cpp	/^regfree(regex_t *preg)$/;"	f
register_me	src/sm/xct.cpp	/^xct_dependent_t::register_me() {$/;"	f	class:xct_dependent_t
register_tls	src/fc/tls.cpp	/^void tls_manager::register_tls(void (*init)(), void (*fini)()) {$/;"	f	class:tls_manager
regmatch_t	src/common/regex.h	/^} regmatch_t;$/;"	t	typeref:struct:__anon6
regoff_t	src/common/regex.h	/^typedef off_t regoff_t;$/;"	t
reinit_for_attributes	src/fc/vtable.h	/^    void reinit_for_attributes(int n) $/;"	f	class:vtable_row_t
reject	src/sm/file.cpp	/^void  alloc_file_page_filter_t::reject() $/;"	f	class:alloc_file_page_filter_t
reject	src/sm/page.h	/^    void  reject() {}$/;"	f	class:alloc_page_filter_yes_t
release	src/fc/block_alloc.h	/^    void release(T* obj) {$/;"	f	struct:object_cache
release	src/fc/block_alloc.h	/^    void release(void* ptr) {$/;"	f	struct:block_pool
release	src/fc/mem_block.cpp	/^void block::release(void* ptr, size_t chip_size, size_t chip_count, size_t block_size)$/;"	f	class:memory_block::block
release	src/fc/mem_block.cpp	/^void block_bits::release(size_t index, size_t chip_count) {$/;"	f	class:memory_block::block_bits
release	src/sm/bf_core.cpp	/^void bfcb_unused_list::release(bfcb_t* frame) $/;"	f	class:bfcb_unused_list
release	src/sm/histo.cpp	/^histoid_t::release()$/;"	f	class:histoid_t
release	src/sm/lock_x.h	/^        rc_t release() {$/;"	f	struct:lock_head_t::my_lock
release	src/sm/log.cpp	/^log_m:: release()  $/;"	f	class:log_m
release	src/sm/log_core.cpp	/^log_core::release() $/;"	f	class:log_core
release	src/sm/page.cpp	/^void page_s::space_t::release(int amt, xct_t* xd)$/;"	f	class:page_s::space_t
release	src/sthread/mcs_lock.h	/^	void release(ext_qnode &me) { release(&me); }$/;"	f	struct:mcs_lock
release	src/sthread/mcs_lock.h	/^	void release(ext_qnode *me) { $/;"	f	struct:mcs_lock
release	src/sthread/mcs_lock.h	/^	void release(qnode &me) { release(&me); }$/;"	f	struct:mcs_lock
release	src/sthread/mcs_lock.h	/^	void release(qnode* me) {$/;"	f	struct:mcs_lock
release	src/sthread/sthread.h	/^        void release() { _lock->release_read(); }$/;"	f	struct:occ_rwlock::occ_rlock
release	src/sthread/sthread.h	/^        void release() { _lock->release_write(); }$/;"	f	struct:occ_rwlock::occ_wlock
release	src/sthread/sthread.h	/^    void release() {$/;"	f	struct:tatas_lock
release	src/sthread/sthread.h	/^    void release(ext_qnode &me) { release(&me); }$/;"	f	struct:w_pthread_lock_t
release	src/sthread/sthread.h	/^    void release(ext_qnode_ptr me) { $/;"	f	struct:w_pthread_lock_t
release_1thread_log_mutex	src/sm/xct.cpp	/^xct_t::release_1thread_log_mutex()$/;"	f	class:xct_t
release_1thread_xct_mutex	src/sm/xct.cpp	/^xct_t::release_1thread_xct_mutex() const$/;"	f	class:xct_t
release_anchor	src/sm/xct.cpp	/^xct_t::release_anchor( bool and_compensate ADD_LOG_COMMENT_SIG )$/;"	f	class:xct_t
release_block	src/fc/mem_block.h	/^block* block_pool::release_block(block* b) {$/;"	f	class:memory_block::block_pool
release_duration	src/sm/lock_core.cpp	/^lock_core_m::release_duration($/;"	f	class:lock_core_m
release_lock	src/fc/atomic_container.h	/^    void release_lock() {$/;"	f	class:atomic_container
release_lock	src/sm/lock_core.cpp	/^lock_core_m::release_lock($/;"	f	class:lock_core_m
release_page	src/sm/newsort.cpp	/^    void             release_page(file_p&f) { f.unfix(); }$/;"	f	class:tape_t
release_read	src/sthread/srwlock.cpp	/^void mcs_rwlock::release_read() $/;"	f	class:mcs_rwlock
release_read	src/sthread/sthread.cpp	/^void occ_rwlock::release_read()$/;"	f	class:occ_rwlock
release_space	src/sm/log.cpp	/^void log_m::release_space(fileoff_t amt) $/;"	f	class:log_m
release_space	src/sm/log_core.cpp	/^void log_core::release_space(fileoff_t amt) $/;"	f	class:log_core
release_write	src/sthread/srwlock.cpp	/^void mcs_rwlock::release_write() {$/;"	f	class:mcs_rwlock
release_write	src/sthread/sthread.cpp	/^void occ_rwlock::release_write()$/;"	f	class:occ_rwlock
relocate_recs_l	src/sm/btree.cpp	/^btree_m::relocate_recs_l($/;"	f	class:btree_m
relocate_recs_p	src/sm/btree.cpp	/^btree_m::relocate_recs_p($/;"	f	class:btree_m
remove	src/fc/w_hash.h	/^w_hash_t<T,LOCK, K>::remove(T* t)$/;"	f	class:w_hash_t
remove	src/fc/w_hash.h	/^w_hash_t<T,LOCK, K>::remove(const K& k)$/;"	f	class:w_hash_t
remove	src/sm/bf_core.h	/^    w_rc_t                       remove(bfcb_t*& p) { $/;"	f	class:bf_core_m
remove	src/sm/bf_htab.cpp	/^bool bf_core_m::htab::remove(bfcb_t* p) $/;"	f	class:bf_core_m::htab
remove	src/sm/btree.cpp	/^btree_m::remove($/;"	f	class:btree_m
remove	src/sm/dir.cpp	/^dir_m::remove(const stid_t& stid)$/;"	f	class:dir_m
remove	src/sm/dir.cpp	/^sdesc_cache_t::remove(const stid_t& stid)$/;"	f	class:sdesc_cache_t
remove	src/sm/dir.h	/^dir_vol_m::remove(const stid_t& stid)$/;"	f	class:dir_vol_m
remove	src/sm/histo.cpp	/^histoid_update_t::remove() $/;"	f	class:histoid_update_t
remove	src/sm/keyed.cpp	/^keyed_p::remove(int slot)$/;"	f	class:keyed_p
remove	src/sm/restart.cpp	/^dirty_pages_tab_t::remove(const lpid_t& pid)$/;"	f	class:dirty_pages_tab_t
remove	src/sm/rtree.cpp	/^rtree_base_p::remove(slotid_t slot)$/;"	f	class:rtree_base_p
remove	src/sm/rtree.cpp	/^rtree_m::remove($/;"	f	class:rtree_m
remove	src/sm/rtree_p.h	/^    rc_t             remove(int slot) { return remove(slotid_t(slot)); }$/;"	f	class:rtree_base_p
remove	src/sm/xct.cpp	/^void xct_list::remove(xct_link* xd) {$/;"	f	class:xct_list
remove	src/sm/zkeyed.cpp	/^zkeyed_p::remove(slotid_t idx, bool compress)$/;"	f	class:zkeyed_p
remove_all	src/sm/dir.cpp	/^sdesc_cache_t::remove_all()$/;"	f	class:sdesc_cache_t
remove_all_barriers	src/sm/smsh/tcl_thread.cpp	/^void remove_all_barriers() {$/;"	f
remove_compress	src/sm/page.cpp	/^page_p::remove_compress(slotid_t idx, int cnt)$/;"	f	class:page_p
remove_dependent	src/sm/xct.cpp	/^xct_t::remove_dependent(xct_dependent_t* dependent)$/;"	f	class:xct_t
remove_duplicates	src/sm/sort.cpp	/^sort_stream_i::remove_duplicates()$/;"	f	class:sort_stream_i
remove_key	src/sm/btree.cpp	/^btree_m::remove_key($/;"	f	class:btree_m
remove_n_swap	src/sm/dir.cpp	/^dir_m::remove_n_swap(const stid_t& old_stid, const stid_t& new_stid)$/;"	f	class:dir_m
rename	src/sthread/sthread.cpp	/^sthread_name_t::rename($/;"	f	class:sthread_name_t
rename	src/sthread/sthread.cpp	/^sthread_named_base_t::rename($/;"	f	class:sthread_named_base_t
repair_rec_lsn	src/sm/page.cpp	/^page_p::repair_rec_lsn(bool was_dirty, lsn_t const &new_rlsn) {$/;"	f	class:page_p
repeat	src/common/regcomp.cpp	/^repeat(struct parse *p, sopno start, int from, int to)$/;"	f	file:
repin	src/sm/pin.cpp	/^rc_t pin_i::repin(lock_mode_t lmode)$/;"	f	class:pin_i
replace	src/sm/newsort.cpp	/^    void    replace(const skey_t& k) { _replace(k); }$/;"	f	class:sm_skey_t
replace	src/sm/newsort.cpp	/^    void  replace(const object_t& o) { _replace(o); }$/;"	f	class:sm_object_t
replace_page	src/sm/histo.cpp	/^histoid_update_t::replace_page(file_p *p, bool reinstall) $/;"	f	class:histoid_update_t
replace_relative_to_obj	src/sm/newsort.cpp	/^    void    replace_relative_to_obj(const object_t &o, const skey_t& k) { $/;"	f	class:sm_skey_t
replace_sort_container	src/sm/smsh/shell.cpp	/^sort_stream_i *replace_sort_container( $/;"	f
replacement	src/sm/bf_core.cpp	/^bf_core_m::replacement()$/;"	f	class:bf_core_m
report_finished	src/sm/chkpt.cpp	/^     void report_finished(xct_t*) {$/;"	f	struct:old_xct_tracker
req	src/sm/lock_cache.h	/^    lock_request_t*         req;$/;"	m	struct:lock_cache_elem_t
request	src/sm/bf_prefetch.cpp	/^bf_prefetch_thread_t::request($/;"	f	class:bf_prefetch_thread_t
request_list_i	src/sm/lock_x.h	130;"	d
request_list_t	src/sm/lock_x.h	128;"	d
rerr	src/common/regerror.cpp	/^static struct rerr {$/;"	s	file:
rerrs	src/common/regerror.cpp	/^} rerrs[] = {$/;"	v	typeref:struct:rerr	file:
reservations_active	src/sm/log_core.h	/^	bool            reservations_active() const { return _reservations_active; }$/;"	f	class:log_core
reserve	src/fc/dynarray.h	/^    int reserve(size_t new_capacity) {$/;"	f	struct:dynvector
reserve_space	src/sm/log.cpp	/^fileoff_t log_m::reserve_space(fileoff_t amt) {$/;"	f	class:log_m
reset	src/common/vec_t.h	/^    cvec_t& reset()  {$/;"	f	class:cvec_t
reset	src/fc/block_alloc.h	/^    reset(T* t) { \/* do nothing *\/ }$/;"	f	struct:object_cache_default_factory
reset	src/fc/block_alloc.h	/^    reset(T* t) { t->reset(); }$/;"	f	struct:object_cache_initializing_factory
reset	src/fc/w_list.h	/^    void            reset(const w_list_t<T, LOCK>& l, bool backwards = false)  {$/;"	f	class:w_list_i
reset	src/fc/w_list.h	/^    void            reset(const w_list_t<T,LOCK>& l) {$/;"	f	class:w_list_const_i
reset	src/fc/w_rc.h	/^w_rc_t::reset()$/;"	f	class:w_rc_t
reset	src/sm/lock_cache.h	/^    void reset() {$/;"	f	class:lock_cache_t
reset	src/sm/lock_core.cpp	/^lock_request_t::reset() {$/;"	f	class:lock_request_t
reset	src/sm/lock_core.cpp	/^xct_lock_info_t::reset() $/;"	f	class:xct_lock_info_t
reset	src/sm/newsort.cpp	/^    void reset() {$/;"	f	class:limited_space
reset	src/sm/sort.h	/^    void  reset() { _free_all(); head = 0; };$/;"	f	class:chunk_mgr_t
reset	src/sm/tests/stopwatch.h	/^    void reset() {$/;"	f	class:stopwatch_t
reset	src/sm/xct.cpp	/^void xct_t::xct_core::reset() {$/;"	f	class:xct_t::xct_core
reset	src/sm/xct.cpp	/^xct_t::reset() {$/;"	f	class:xct_t
resetPtr	src/fc/w_bitmap.h	/^w_bitmap_t::resetPtr(uint1_t* p, uint4_t size)$/;"	f	class:w_bitmap_t
reset_stats	src/sthread/sthread.cpp	/^void sthread_t::reset_stats()$/;"	f	class:sthread_t
resize	src/fc/dynarray.cpp	/^int dynarray::resize(size_t new_size) {$/;"	f	class:dynarray
resize	src/fc/dynarray.h	/^    int resize(size_t new_size) {$/;"	f	struct:dynvector
resize	src/fc/w_temp_alloc.h	/^        void resize(size_t newsz) {$/;"	f	struct:w_temp_alloc::ptr
restart	src/sm/smsh/lib/smsh.tcl	/^proc restart { } {$/;"	p
restart_m	src/sm/restart.h	/^    NORET                        restart_m()        {};$/;"	f	class:restart_m
restart_m	src/sm/restart.h	/^class restart_m : public smlevel_1 {$/;"	c
restart_repair_rec_lsn	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t restart_repair_rec_lsn;$/;"	v
restore_log_state	src/sm/xct.cpp	/^xct_t::restore_log_state(switch_t s) $/;"	f	class:xct_t
restore_log_state	src/sm/xct.cpp	/^xct_t::restore_log_state(switch_t s, bool n ) $/;"	f	class:xct_t
retire	src/sm/bf.cpp	/^    bool* retire;         \/\/ pointer to master's retire flag$/;"	m	struct:bf_page_writer_control_t	file:
retire	src/sm/bf.cpp	/^bf_cleaner_thread_t::retire()$/;"	f	class:bf_cleaner_thread_t
retire	src/sm/bf_prefetch.cpp	/^bf_prefetch_thread_t::retire() $/;"	f	class:bf_prefetch_thread_t
retire	src/sm/chkpt.cpp	/^chkpt_thread_t::retire()$/;"	f	class:chkpt_thread_t
retire_chkpt_thread	src/sm/chkpt.cpp	/^chkpt_m::retire_chkpt_thread()$/;"	f	class:chkpt_m
returned	src/sm/tests/htab.cpp	/^        lpid_t returned; \/\/ return value from insert$/;"	m	struct:htab_tester::pidinfo	file:
retval	src/sm/tests/create_rec.cpp	/^        int         retval;$/;"	m	class:smthread_user_t	file:
retval	src/sm/tests/file_scan.cpp	/^    int    retval;$/;"	m	class:smthread_user_t	file:
retval	src/sm/tests/file_scan_many.cpp	/^    int        retval;$/;"	m	class:smthread_main_t	file:
retval	src/sm/tests/log_exceed.cpp	/^        int         retval;$/;"	m	class:smthread_user_t	file:
retval	src/sm/tests/mrbtrees_test.cpp	/^  int         retval;$/;"	m	class:smthread_main_t	file:
retval	src/sm/tests/rtree_example.cpp	/^        int         retval;$/;"	m	class:smthread_user_t	file:
retval	src/sm/tests/sort_stream.cpp	/^        int         retval;$/;"	m	class:smthread_user_t	file:
retval	src/sm/tests/startstop.cpp	/^	int        retval;$/;"	m	class:smthread_user_t	file:
retval	src/sm/tests/vtable_example.cpp	/^        int         retval;$/;"	m	class:smthread_user_t	file:
rewind	src/sthread/tests/ioperf.cpp	/^io_thread_t::rewind( int )$/;"	f	class:io_thread_t
rewrite	src/sm/zkeyed.cpp	/^zkeyed_p::rewrite($/;"	f	class:zkeyed_p
rflag	src/sm/page_s.h	/^        bool rflag() const    { return _rflag!=0; }$/;"	f	class:page_s::space_t
rid	src/sm/newsort.cpp	/^    rid_t&        rid,$/;"	v
rid	src/sm/pin.h	/^    const rid_t&     rid() const {_check_lsn(); return _rid;}$/;"	f	class:pin_i
rid	src/sm/tests/mrbtrees_test.cpp	/^    rid_t rid;$/;"	m	struct:el_filler_utest	file:
rid_t	src/sm/newsort.cpp	/^    rid_t&        \/*oldrid*\/,        \/\/ not used$/;"	v
rid_t	src/sm/sm_s.h	/^    rid_t(const lpid_t& p, slotid_t s) : pid(p), slot(s) {};$/;"	f	class:rid_t
rid_t	src/sm/sm_s.h	/^class rid_t {$/;"	c
rid_t	src/sm/sm_s.h	/^inline rid_t::rid_t() : slot(0)$/;"	f	class:rid_t
rid_t	src/sm/sm_s.h	/^inline rid_t::rid_t(vid_t vid, const shrid_t& shrid) :$/;"	f	class:rid_t
rlen	src/sm/keyed.h	/^    smsize_t rlen() const    { return _body() + slen() - (char*) this; }$/;"	f	class:keyrec_t
rlen	src/sm/sort.cpp	/^    uint2_t rlen;         \/\/ record data length (if large, in place indx size)$/;"	m	struct:file_sort_key_t	file:
rlen	src/sm/sort.cpp	/^    uint2_t rlen;         \/\/ record data length (if large, in place indx size)$/;"	m	struct:sort_key_t	file:
rlim_cur	src/fc/w_rusage.h	/^    rlim_t    rlim_cur;        \/* current limit *\/$/;"	m	struct:rlimit
rlim_max	src/fc/w_rusage.h	/^    rlim_t    rlim_max;        \/* maximum value for rlim_cur *\/$/;"	m	struct:rlimit
rlim_t	src/fc/w_rusage.h	/^typedef unsigned long rlim_t;$/;"	t
rlimit	src/fc/w_rusage.h	/^struct rlimit {$/;"	s
rlink	src/sm/lock_x.h	/^    w_link_t          rlink;        \/\/ link of requests in lock _queue$/;"	m	class:lock_request_t
rm_eo	src/common/regex.h	/^    regoff_t rm_eo;        \/* end of match *\/$/;"	m	struct:__anon6
rm_so	src/common/regex.h	/^    regoff_t rm_so;        \/* start of match *\/$/;"	m	struct:__anon6
rng	src/sthread/sthread.h	/^    w_rand               *rng() { return &_rng; }$/;"	f	class:sthread_t
rollback	src/sm/xct.cpp	/^xct_t::rollback(const lsn_t &save_pt)$/;"	f	class:xct_t
rollback_savept_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t rollback_savept_cnt;$/;"	v
rollback_work	src/sm/sm.cpp	/^ss_m::rollback_work(const sm_save_point_t& sp)$/;"	f	class:ss_m
root	src/sm/btcursor.h	/^    lpid_t            root()     const { return _root; }$/;"	f	class:bt_cursor_t
root	src/sm/btree_p.h	/^        shpid_t    root;         \/\/ root page$/;"	m	struct:btree_p::btctrl_t
root	src/sm/btree_p.h	/^inline lpid_t btree_p::root() const$/;"	f	class:btree_p
root	src/sm/histo.cpp	/^enum {     root = 0, \/\/ root of heap$/;"	e	enum:__anon50	file:
root	src/sm/logrec.cpp	/^    lpid_t        root;$/;"	m	struct:btree_insert_t	file:
root	src/sm/logrec.cpp	/^    lpid_t        root;$/;"	m	struct:btree_purge_t	file:
root	src/sm/logrec.cpp	/^    lpid_t        root;$/;"	m	struct:rtree_insert_t	file:
root	src/sm/rtree_p.h	/^    lpid_t    root;$/;"	m	struct:rtctrl_t
root	src/sm/rtree_p.h	/^inline shpid_t rtree_base_p::root() const$/;"	f	class:rtree_base_p
root	src/sm/rtree_p.h	/^inline void rtree_base_p::root(lpid_t& r) const$/;"	f	class:rtree_base_p
root	src/sm/sdesc.h	/^    const lpid_t        root() const {$/;"	f	class:sdesc_t
root	src/sm/sdesc.h	/^    const lpid_t        root(const cvec_t& key) {$/;"	f	class:sdesc_t
root	src/sm/sdesc.h	/^    shpid_t        root;                \/\/ root page (of main index)$/;"	m	struct:sinfo_s
root	src/sm/sm.h	/^    shpid_t    root;        $/;"	m	class:sm_store_info_t
root_index	src/sm/sm_du_stats.h	/^    btree_stats_t  root_index;        \/* index mapping strings to IDs *\/$/;"	m	struct:volume_map_stats_t
root_locks	src/sm/data_access_histogram.h	/^    typedef map< lpid_t, occ_rwlock >                 root_locks;$/;"	t	class:data_access_histogram
root_locks_citer	src/sm/data_access_histogram.h	/^    typedef map< lpid_t, occ_rwlock >::const_iterator root_locks_citer;$/;"	t	class:data_access_histogram
root_locks_iter	src/sm/data_access_histogram.h	/^    typedef map< lpid_t, occ_rwlock >::iterator       root_locks_iter;$/;"	t	class:data_access_histogram
root_shpid	src/sm/btree_p.h	/^inline shpid_t btree_p::root_shpid() const$/;"	f	class:btree_p
rotation_table	src/fc/nbox.cpp	/^static const int rotation_table[4] = { 3, 0, 0, 1};$/;"	v	file:
rp	src/sm/rtree.cpp	/^    rtree_p                 rp;$/;"	m	class:rtld_stk_t	file:
rp	src/sm/rtree.cpp	/^    rtree_p* rp()                { return &_pg; }  \/\/ convert to rtree page$/;"	f	class:rtwork_p
rseed	src/sm/smsh/random_kick.cpp	/^unsigned int rseed=1;$/;"	v
rstate	src/sm/smsh/random_kick.cpp	/^unsigned char rstate[32]= {$/;"	v
rsvd_mode	src/sm/page.h	/^page_p::rsvd_mode()  const$/;"	f	class:page_p
rsvd_mode	src/sm/page.h	/^page_p::rsvd_mode(tag_t t) $/;"	f	class:page_p
rt	src/sm/sm.cpp	/^rtree_m* smlevel_2::rt = 0;$/;"	m	class:smlevel_2	file:
rt	src/sm/sm_int_2.h	/^    static rtree_m* rt;$/;"	m	class:smlevel_2
rt_cursor_t	src/sm/rtree_p.h	/^    rt_cursor_t(bool include_nulls=false) : _include_nulls(include_nulls) { $/;"	f	class:rt_cursor_t
rt_cursor_t	src/sm/rtree_p.h	/^class rt_cursor_t {$/;"	c
rtctrl_t	src/sm/rtree_p.h	/^struct rtctrl_t {$/;"	s
rtld_cache_t	src/sm/rtree.cpp	/^    rtld_cache_t() { _idx = -1; last_box=NULL; }$/;"	f	class:rtld_cache_t
rtld_cache_t	src/sm/rtree.cpp	/^class rtld_cache_t {$/;"	c	file:
rtld_desc_t	src/sm/rtree.h	/^    rtld_desc_t() {$/;"	f	struct:rtld_desc_t
rtld_desc_t	src/sm/rtree.h	/^    rtld_desc_t(nbox_t* u, int2_t hff, int2_t hef) {$/;"	f	struct:rtld_desc_t
rtld_desc_t	src/sm/rtree.h	/^struct rtld_desc_t {$/;"	s
rtld_stk_t	src/sm/rtree.cpp	/^    rtld_stk_t(const rtree_p& rtp, const rtld_desc_t& desc) :$/;"	f	class:rtld_stk_t
rtld_stk_t	src/sm/rtree.cpp	/^class rtld_stk_t {$/;"	c	file:
rtrans	src/sm/smsh/scripts/trans.tcl	/^proc rtrans { clean action finish } {$/;"	p
rtrec_t	src/sm/rtree_p.h	/^    rtrec_t()    {};        \/\/ disabled$/;"	f	class:rtrec_t
rtrec_t	src/sm/rtree_p.h	/^class rtrec_t : public keyrec_t  {$/;"	c
rtree	src/sm/sm_du_stats.h	/^    rtree_stats_t     rtree;$/;"	m	struct:sm_du_stats_t
rtree_base_p	src/sm/rtree_p.h	/^class rtree_base_p : public keyed_p {$/;"	c
rtree_cnt	src/sm/sm_du_stats.h	/^    base_stat_t        rtree_cnt;$/;"	m	struct:sm_du_stats_t
rtree_example_DEPENDENCIES	src/sm/tests/Makefile	/^rtree_example_DEPENDENCIES = $(top_builddir)\/src\/sm\/libsm.a \\$/;"	m
rtree_example_LDADD	src/sm/tests/Makefile	/^rtree_example_LDADD = $(LDADD)$/;"	m
rtree_example_OBJECTS	src/sm/tests/Makefile	/^rtree_example_OBJECTS = $(am_rtree_example_OBJECTS)$/;"	m
rtree_example_SOURCES	src/sm/tests/Makefile	/^rtree_example_SOURCES = rtree_example.cpp init_config_options.cpp $/;"	m
rtree_insert_log	src/sm/logdef_gen.cpp	/^	rtree_insert_log (logrec_t*)   {};$/;"	f	class:rtree_insert_log
rtree_insert_log	src/sm/logdef_gen.cpp	/^    class rtree_insert_log : public logrec_t {$/;"	c	file:
rtree_insert_log	src/sm/logrec.cpp	/^rtree_insert_log::rtree_insert_log(const page_p& page, int idx, $/;"	f	class:rtree_insert_log
rtree_insert_t	src/sm/logrec.cpp	/^rtree_insert_t::rtree_insert_t(const rtree_p& _page, int _idx,$/;"	f	class:rtree_insert_t
rtree_insert_t	src/sm/logrec.cpp	/^struct rtree_insert_t {$/;"	s	file:
rtree_m	src/sm/rtree.h	/^    rtree_m()    {};$/;"	f	class:rtree_m
rtree_m	src/sm/rtree.h	/^class rtree_m : public smlevel_2 {$/;"	c
rtree_p	src/sm/rtree_p.h	/^class rtree_p : public rtree_base_p {$/;"	c
rtree_p	src/sm/rtree_p.h	/^rtree_p::rtree_p(const rtree_base_p& rbp)$/;"	f	class:rtree_p
rtree_remove_log	src/sm/logdef_gen.cpp	/^	rtree_remove_log (logrec_t*)   {};$/;"	f	class:rtree_remove_log
rtree_remove_log	src/sm/logdef_gen.cpp	/^    class rtree_remove_log : public logrec_t {$/;"	c	file:
rtree_remove_log	src/sm/logrec.cpp	/^rtree_remove_log::rtree_remove_log(const page_p& page, int idx,$/;"	f	class:rtree_remove_log
rtree_remove_t	src/sm/logrec.cpp	/^typedef rtree_insert_t rtree_remove_t;$/;"	t	file:
rtree_stats	src/sm/smindex.cpp	/^ss_m::rtree_stats(const stid_t& stid, rtree_stats_t& stat, $/;"	f	class:ss_m
rtree_stats_t	src/sm/sm_du_stats.h	/^    NORET              rtree_stats_t() {clear();}$/;"	f	struct:rtree_stats_t
rtree_stats_t	src/sm/sm_du_stats.h	/^struct rtree_stats_t {$/;"	s
rtstk_entry	src/sm/rtree_p.h	/^struct rtstk_entry {$/;"	s
rtstk_t	src/sm/rtree_p.h	/^class rtstk_t {$/;"	c
rtstk_t	src/sm/rtree_p.h	/^rtstk_t::rtstk_t()$/;"	f	class:rtstk_t
rtwork_p	src/sm/rtree.cpp	/^    rtwork_p()$/;"	f	class:rtwork_p
rtwork_p	src/sm/rtree.cpp	/^    rtwork_p(const lpid_t& pid, int2_t l, int2_t d = 2)$/;"	f	class:rtwork_p
rtwork_p	src/sm/rtree.cpp	/^class rtwork_p : public smlevel_0 {$/;"	c	file:
ru_idrss	src/fc/w_rusage.h	/^    long    ru_idrss;        \/* XXX: sum of rm_asrss *\/$/;"	m	struct:rusage
ru_inblock	src/fc/w_rusage.h	/^    long    ru_inblock;        \/* block input operations *\/$/;"	m	struct:rusage
ru_isrss	src/fc/w_rusage.h	/^    long    ru_isrss;        \/* XXX: 0 *\/$/;"	m	struct:rusage
ru_ixrss	src/fc/w_rusage.h	/^    long    ru_ixrss;        \/* XXX: 0 *\/$/;"	m	struct:rusage
ru_majflt	src/fc/w_rusage.h	/^    long    ru_majflt;        \/* any page faults requiring I\/O *\/$/;"	m	struct:rusage
ru_maxrss	src/fc/w_rusage.h	/^    long    ru_maxrss;        \/* XXX: 0 *\/$/;"	m	struct:rusage
ru_minflt	src/fc/w_rusage.h	/^    long    ru_minflt;        \/* any page faults not requiring I\/O *\/$/;"	m	struct:rusage
ru_msgrcv	src/fc/w_rusage.h	/^    long    ru_msgrcv;        \/* messages received *\/$/;"	m	struct:rusage
ru_msgsnd	src/fc/w_rusage.h	/^    long    ru_msgsnd;        \/* messages sent *\/$/;"	m	struct:rusage
ru_nivcsw	src/fc/w_rusage.h	/^    long    ru_nivcsw;        \/* involuntary " *\/$/;"	m	struct:rusage
ru_nsignals	src/fc/w_rusage.h	/^    long    ru_nsignals;        \/* signals received *\/$/;"	m	struct:rusage
ru_nswap	src/fc/w_rusage.h	/^    long    ru_nswap;        \/* swaps *\/$/;"	m	struct:rusage
ru_nvcsw	src/fc/w_rusage.h	/^    long    ru_nvcsw;        \/* voluntary context switches *\/$/;"	m	struct:rusage
ru_oublock	src/fc/w_rusage.h	/^    long    ru_oublock;        \/* block output operations *\/$/;"	m	struct:rusage
ru_stime	src/fc/w_rusage.h	/^    struct timeval ru_stime;    \/* system time used *\/$/;"	m	struct:rusage	typeref:struct:rusage::timeval
ru_utime	src/fc/w_rusage.h	/^    struct timeval ru_utime;    \/* user time used *\/$/;"	m	struct:rusage	typeref:struct:rusage::timeval
run	src/common/tests/latch1.cpp	/^void latch_thread_t::run()$/;"	f	class:latch_thread_t
run	src/sm/bf.cpp	/^bf_cleaner_thread_t::run()$/;"	f	class:bf_cleaner_thread_t
run	src/sm/bf.cpp	/^void page_writer_thread_t::run() $/;"	f	class:page_writer_thread_t
run	src/sm/bf_core.cpp	/^    virtual void run() {$/;"	f	struct:bf_core_m::init_thread_t
run	src/sm/bf_prefetch.cpp	/^bf_prefetch_thread_t::run() $/;"	f	class:bf_prefetch_thread_t
run	src/sm/chkpt.cpp	/^chkpt_thread_t::run()$/;"	f	class:chkpt_thread_t
run	src/sm/log_core.cpp	/^	virtual void run() { _log->flush_daemon(); }$/;"	f	class:flush_daemon_thread_t
run	src/sm/restart.cpp	/^sm_undo_thread_t::run()$/;"	f	class:sm_undo_thread_t
run	src/sm/smsh/tcl_thread.cpp	/^void tcl_thread_t::run()$/;"	f	class:tcl_thread_t
run	src/sm/tests/create_rec.cpp	/^void smthread_user_t::run()$/;"	f	class:smthread_user_t
run	src/sm/tests/file_scan.cpp	/^void smthread_user_t::run()$/;"	f	class:smthread_user_t
run	src/sm/tests/file_scan_many.cpp	/^void smthread_creator_t::run()$/;"	f	class:smthread_creator_t
run	src/sm/tests/file_scan_many.cpp	/^void smthread_main_t::run()$/;"	f	class:smthread_main_t
run	src/sm/tests/file_scan_many.cpp	/^void smthread_scanner_t::run()$/;"	f	class:smthread_scanner_t
run	src/sm/tests/htab.cpp	/^void htab_tester::run()$/;"	f	class:htab_tester
run	src/sm/tests/log_exceed.cpp	/^void smthread_user_t::run()$/;"	f	class:smthread_user_t
run	src/sm/tests/mrbtrees_test.cpp	/^void smthread_creator_t::run()$/;"	f	class:smthread_creator_t
run	src/sm/tests/mrbtrees_test.cpp	/^void smthread_main_t::run()$/;"	f	class:smthread_main_t
run	src/sm/tests/mrbtrees_test.cpp	/^void smthread_scanner_t::run()$/;"	f	class:smthread_scanner_t
run	src/sm/tests/rtree_example.cpp	/^void smthread_user_t::run()$/;"	f	class:smthread_user_t
run	src/sm/tests/sort_stream.cpp	/^void smthread_user_t::run()$/;"	f	class:smthread_user_t
run	src/sm/tests/startstop.cpp	/^	void run() {$/;"	f	class:smthread_user_t
run	src/sm/tests/vtable_example.cpp	/^void smthread_user_t::run()$/;"	f	class:smthread_user_t
run	src/sthread/sthread.cpp	/^void sthread_main_t::run()$/;"	f	class:sthread_main_t
run	src/sthread/tests/except.cpp	/^void except_thread_t::run()$/;"	f	class:except_thread_t
run	src/sthread/tests/ioperf.cpp	/^io_thread_t::run()$/;"	f	class:io_thread_t
run	src/sthread/tests/pthread_test.cpp	/^void simple_thread_t::run() $/;"	f	class:simple_thread_t
run	src/sthread/tests/thread1.cpp	/^void error_thread_t::run()$/;"	f	class:error_thread_t
run	src/sthread/tests/thread1.cpp	/^void overflow_thread_t::run()$/;"	f	class:overflow_thread_t
run	src/sthread/tests/thread1.cpp	/^void pong_thread_t::run()$/;"	f	class:pong_thread_t
run	src/sthread/tests/thread1.cpp	/^void timer_thread_t::run()$/;"	f	class:timer_thread_t
run	src/sthread/tests/thread1.cpp	/^void worker_thread_t::run()$/;"	f	class:worker_thread_t
run	src/sthread/tests/thread2.cpp	/^void io_thread_t::run()$/;"	f	class:io_thread_t
run	src/sthread/tests/thread3.cpp	/^void float_thread_t::run()$/;"	f	class:float_thread_t
run	src/sthread/tests/thread3.cpp	/^void int_thread_t::run()$/;"	f	class:int_thread_t
run	src/sthread/tests/thread4.cpp	/^void timer_thread_t::run()$/;"	f	class:timer_thread_t
run_beg	src/sm/newsort.cpp	/^    rid_t              run_beg() const {$/;"	f	class:tape_t
run_count	src/sm/sort.cpp	/^    uint2_t run_count;    \/\/ current size$/;"	m	struct:sort_desc_t	file:
run_end	src/sm/newsort.cpp	/^    rid_t              run_end() const {$/;"	f	class:tape_t
run_inserts	src/sm/tests/htab.cpp	/^void htab_tester::run_inserts()$/;"	f	class:htab_tester
run_kvl	src/common/tests/testall	/^function run_kvl {$/;"	f
run_list	src/sm/sort.cpp	/^    rid_t* run_list;    \/\/ store first rid for all the runs$/;"	m	struct:sort_desc_t	file:
run_lookups	src/sm/tests/htab.cpp	/^void htab_tester::run_lookups()$/;"	f	class:htab_tester
run_mgr	src/sm/newsort.cpp	/^class ssm_sort::run_mgr : public smlevel_top, xct_dependent_t $/;"	c	class:ssm_sort	file:
run_mgr	src/sm/newsort.cpp	/^run_mgr::run_mgr($/;"	f	class:run_mgr
run_mgr	src/sm/newsort.cpp	/^typedef ssm_sort::run_mgr run_mgr;$/;"	t	file:
run_removes	src/sm/tests/htab.cpp	/^void htab_tester::run_removes()$/;"	f	class:htab_tester
run_scan_t	src/sm/sort.cpp	/^run_scan_t::run_scan_t()$/;"	f	class:run_scan_t
run_scan_t	src/sm/sort.h	/^class run_scan_t {$/;"	c
run_size	src/sm/sort_s.h	/^    uint2_t run_size;        $/;"	m	struct:ssm_sort::sort_parm_t
run_t	src/sm/newsort.cpp	/^class run_t $/;"	c	file:
run_thread3	src/sthread/tests/testall	/^function run_thread3 {$/;"	f
run_wrapper	src/fc/cpu_info.cpp	/^    static pthread_run_fn run_wrapper;$/;"	m	struct:cpu_info::impl_helper	file:
run_wrapper	src/fc/cpu_info.cpp	/^cpu_info::impl_helper::run_wrapper(void* arg)$/;"	f	class:cpu_info::impl_helper
runargs	src/fc/cpu_info.cpp	/^    struct runargs {$/;"	s	struct:cpu_info::impl_helper	file:
runme	src/fc/cpu_info.cpp	/^	pthread_run_fn* runme;$/;"	m	struct:cpu_info::impl_helper::runargs	file:
runscripts	src/sm/smsh/lib/smsh.tcl	/^proc runscripts { scr } {$/;"	p
rusage	src/fc/w_rusage.h	/^struct    rusage {$/;"	s
rwmode_t	src/sthread/srwlock.h	/^    enum rwmode_t { NONE=0, WRITER=0x1, READER=0x2 };$/;"	g	class:mcs_rwlock
s	src/fc/tests/rand.cpp	/^    signed48_t s;$/;"	m	union:__anon132	file:
s	src/sm/histo.cpp	/^static __thread struct { extnum_t e; snum_t s; } last_extent = {0,0};$/;"	m	struct:__anon51	file:
s	src/sm/lock_s.h	/^        w_base_t::uint2_t s[8]; $/;"	m	union:lockid_t::__anon61
s_chunk	src/sm/sort.h	/^    NORET s_chunk() { data = 0; next = 0; };$/;"	f	struct:s_chunk
s_chunk	src/sm/sort.h	/^    NORET s_chunk(w_base_t::uint4_t size, s_chunk* tail) { $/;"	f	struct:s_chunk
s_chunk	src/sm/sort.h	/^struct s_chunk  {$/;"	s
s_prepared	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t s_prepared;$/;"	v
safe_io_fini	src/sthread/tests/thread4.cpp	/^void safe_io_fini() $/;"	f
safe_io_init	src/sthread/tests/pthread_test.cpp	/^void safe_io_init() $/;"	f
safe_io_init	src/sthread/tests/thread3.cpp	/^void safe_io_init() $/;"	f
safe_io_init	src/sthread/tests/thread4.cpp	/^void safe_io_init() $/;"	f
safe_queue_iterator_t	src/sm/lock_x.h	/^        NORET safe_queue_iterator_t(lock_head_t &l) $/;"	f	struct:lock_head_t::safe_queue_iterator_t
safe_queue_iterator_t	src/sm/lock_x.h	/^    struct safe_queue_iterator_t : public request_list_i$/;"	s	class:lock_head_t
safe_rec_lsn	src/sm/bf_s.h	/^    lsn_t safe_rec_lsn() const {$/;"	f	class:bfcb_t
safe_strtok	src/sm/smsh/tcl_thread.cpp	/^static char *safe_strtok(char *s, const char *delim, char *&scanpoint)$/;"	f	file:
samesets	src/common/regcomp.cpp	/^samesets(struct re_guts *g, int c1, int c2)$/;"	f	file:
sane_chip_count	src/fc/mem_block.h	/^    fail_unless<((OVERHEAD + MIN_CHIPS*ChipSize) > (int)BYTES\/2)> sane_chip_count;$/;"	m	struct:memory_block::bounds_check
sanity_check	src/sm/partition.cpp	/^partition_t::sanity_check() const$/;"	f	class:partition_t
save_point	src/sm/xct.cpp	/^xct_t::save_point(lsn_t& lsn)$/;"	f	class:xct_t
save_rec_lsn	src/sm/bf_s.h	/^    void  save_rec_lsn() { _old_rec_lsn = _rec_lsn; }$/;"	f	class:bfcb_t
save_work	src/sm/sm.cpp	/^ss_m::save_work(sm_save_point_t& sp)$/;"	f	class:ss_m
sbindir	Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	config/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/atomic_ops/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/atomic_ops/asm_linkage/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/atomic_ops/asm_linkage/usr/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/atomic_ops/asm_linkage/usr/src/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/atomic_ops/atomic_ops/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/atomic_ops/atomic_ops/amd64/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/atomic_ops/atomic_ops/i386/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/atomic_ops/atomic_ops/sparc/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/atomic_ops/ia32/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/atomic_ops/ia32/sys/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/atomic_ops/intel/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/atomic_ops/intel/ia32/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/atomic_ops/intel/ia32/sys/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/atomic_ops/intel/sys/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/atomic_ops/sparc/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/atomic_ops/sparc/sys/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/common/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/common/tests/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/fc/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/fc/tests/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/sm/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/sm/smsh/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/sm/smsh/lib/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/sm/smsh/scripts/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/sm/tests/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/sthread/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/sthread/tests/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	tools/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sc	src/sm/sort.h	/^    run_scan_t*       sc;           \/\/ scan descriptor array    $/;"	m	class:sort_stream_i
scan	src/common/option.cpp	/^w_rc_t option_file_scan_t::scan($/;"	f	class:option_file_scan_t
scan	src/common/option.cpp	/^w_rc_t option_stream_scan_t::scan($/;"	f	class:option_stream_scan_t
scan_file_i	src/sm/scan.cpp	/^scan_file_i::scan_file_i($/;"	f	class:scan_file_i
scan_file_i	src/sm/scan.cpp	/^scan_file_i::scan_file_i(const stid_t& stid_, concurrency_t cc, $/;"	f	class:scan_file_i
scan_file_i	src/sm/scan.h	/^class scan_file_i : public smlevel_top, public xct_dependent_t {$/;"	c
scan_i_scan	src/sm/tests/file_scan.cpp	/^void scan_i_scan(const stid_t& fid, int num_rec,$/;"	f
scan_i_scan	src/sm/tests/file_scan_many.cpp	/^void smthread_scanner_t::scan_i_scan(const stid_t& fid, int num_recs,$/;"	f	class:smthread_scanner_t
scan_index_i	src/sm/scan.cpp	/^scan_index_i::scan_index_i($/;"	f	class:scan_index_i
scan_index_i	src/sm/scan.h	/^class scan_index_i : public smlevel_top, public xct_dependent_t {$/;"	c
scan_rt_i	src/sm/scan.cpp	/^scan_rt_i::scan_rt_i(const stid_t& stid_, $/;"	f	class:scan_rt_i
scan_rt_i	src/sm/scan.h	/^class scan_rt_i : public smlevel_top, public xct_dependent_t {$/;"	c
scan_the_file	src/sm/tests/create_rec.cpp	/^smthread_user_t::scan_the_file() $/;"	f	class:smthread_user_t
scan_the_file	src/sm/tests/log_exceed.cpp	/^smthread_user_t::scan_the_file() $/;"	f	class:smthread_user_t
scan_the_file	src/sm/tests/mrbtrees_test.cpp	/^rc_t smthread_scanner_t::scan_the_file() $/;"	f	class:smthread_scanner_t
scan_the_file	src/sm/tests/vtable_example.cpp	/^smthread_user_t::scan_the_file() $/;"	f	class:smthread_user_t
scan_the_index	src/sm/tests/mrbtrees_test.cpp	/^rc_t smthread_scanner_t::scan_the_index() $/;"	f	class:smthread_scanner_t
scan_the_root_index	src/sm/tests/create_rec.cpp	/^smthread_user_t::scan_the_root_index() $/;"	f	class:smthread_user_t
scan_the_root_index	src/sm/tests/log_exceed.cpp	/^smthread_user_t::scan_the_root_index() $/;"	f	class:smthread_user_t
scan_the_root_index	src/sm/tests/sort_stream.cpp	/^smthread_user_t::scan_the_root_index() $/;"	f	class:smthread_user_t
scan_the_root_index	src/sm/tests/vtable_example.cpp	/^smthread_user_t::scan_the_root_index() $/;"	f	class:smthread_user_t
scan_the_rtree	src/sm/tests/rtree_example.cpp	/^smthread_user_t::scan_the_rtree(stid_t &iid, nbox_t &universe) $/;"	f	class:smthread_user_t
scanit	src/sm/smsh/scripts/trans.tcl	/^proc scanit { f } {$/;"	p
scanp	src/sm/smsh/sort_funcs.h	/^    scan_index_i*	scanp;$/;"	m	class:deleter
scanr	src/sm/smsh/sort_funcs.h	/^    scan_rt_i*	scanr;$/;"	m	class:deleter
scavenge	src/sm/log.cpp	/^log_m::scavenge(lsn_t min_rec_lsn, lsn_t min_xct_lsn) $/;"	f	class:log_m
scavenge	src/sm/log_core.cpp	/^log_core::scavenge(lsn_t min_rec_lsn, lsn_t min_xct_lsn)$/;"	f	class:log_core
sd	src/sm/newsort.cpp	/^    sdesc_t*        sd,         \/\/ cached$/;"	v
sd	src/sm/newsort.cpp	/^    sdesc_t*      sd,         \/\/ cached$/;"	v
sd	src/sm/sort.h	/^    sort_desc_t*      sd;        \/\/ sort descriptor$/;"	m	class:sort_stream_i
sdesc	src/sm/newsort.cpp	/^    sdesc_t*           sdesc() const { return _sd; }$/;"	f	class:tape_t
sdesc	src/sm/sort.cpp	/^    sdesc_t* sdesc;         \/\/ information about the file$/;"	m	struct:sort_desc_t	file:
sdesc_cache	src/sm/smthread.h	/^    sdesc_cache_t *  sdesc_cache() { return tcb()._sdesc_cache; }$/;"	f	class:smthread_t
sdesc_cache	src/sm/xct.cpp	/^xct_t::sdesc_cache() const$/;"	f	class:xct_t
sdesc_cache_t	src/sm/dir.cpp	/^sdesc_cache_t::sdesc_cache_t()$/;"	f	class:sdesc_cache_t
sdesc_cache_t	src/sm/sdesc.h	/^class sdesc_cache_t {$/;"	c
sdesc_t	src/sm/sdesc.h	/^    NORET sdesc_t() : _partitions_filled(false), _histoid(0), _last_pid(0), _inherited(false) {};$/;"	f	class:sdesc_t
sdesc_t	src/sm/sdesc.h	/^    NORET sdesc_t(const sdesc_t&) {}; \/\/ disabled$/;"	f	class:sdesc_t
sdesc_t	src/sm/sdesc.h	/^class sdesc_t {$/;"	c
sdisk_base_t	src/sthread/sdisk.h	/^class sdisk_base_t {$/;"	c
sdisk_t	src/sthread/sdisk.h	/^    sdisk_t() { }$/;"	f	class:sdisk_t
sdisk_t	src/sthread/sdisk.h	/^class sdisk_t : public sdisk_base_t {$/;"	c
sdisk_unix_t	src/sthread/sdisk_unix.h	/^    sdisk_unix_t(const char *path) : _fd(FD_NONE) $/;"	f	class:sdisk_unix_t
sdisk_unix_t	src/sthread/sdisk_unix.h	/^class sdisk_unix_t : public sdisk_t {$/;"	c
search	src/fc/w_list.h	/^w_ascend_list_t<T,LOCK, K>::search(const K& k)$/;"	f	class:w_ascend_list_t
search	src/fc/w_list.h	/^w_descend_list_t<T,LOCK, K>::search(const K& k)$/;"	f	class:w_descend_list_t
search	src/fc/w_list.h	/^w_keyed_list_t<T,LOCK, K>::search(const K& k)$/;"	f	class:w_keyed_list_t
search	src/sm/btree_p.cpp	/^btree_p::search($/;"	f	class:btree_p
search	src/sm/lock_cache.h	/^    lock_cache_elem_t* search(const lockid_t& id) {$/;"	f	class:lock_cache_t
search	src/sm/rtree.cpp	/^rtree_p::search($/;"	f	class:rtree_p
search_cache	src/sm/lock_core.cpp	/^lock_cache_elem_t* lock_core_m::search_cache($/;"	f	class:lock_core_m
search_cache	src/sm/lock_x.h	/^    lock_cache_elem_t* search_cache(const lockid_t& name) { $/;"	f	class:xct_lock_info_t
sec	src/fc/stime.cpp	/^stime_t stime_t::sec(int sec)$/;"	f	class:stime_t
second	src/sm/rtree_p.h	/^rtstk_t::second()$/;"	f	class:rtstk_t
secs	src/fc/stime.cpp	/^long    stime_t::secs() const$/;"	f	class:stime_t
sector_size	src/sm/vol.cpp	/^static const int sector_size = 512; $/;"	v	file:
seed	src/fc/rand48.h	/^    void     seed(unsigned48_t seed) { _state = _mask(seed); }$/;"	f	class:rand48
seed	src/fc/tests/rand.cpp	/^unsigned long long seed = RAND48_INITIALIZER;$/;"	v
seed	src/fc/w_rand.cpp	/^void w_rand::seed(uint32_t const *w, size_t n) {$/;"	f	class:w_rand
seed	src/fc/w_rand.h	/^    void seed(uint32_t const (&w)[N]) { seed(w, N); }$/;"	f	struct:w_rand
seek	src/sthread/sdisk_unix.cpp	/^w_rc_t    sdisk_unix_t::seek(fileoff_t pos, int origin, fileoff_t &newpos)$/;"	f	class:sdisk_unix_t
seekoff	src/fc/w_compat_strstream.cpp	/^strstreambuf::seekoff(off_type off,$/;"	f	class:shore_compat::strstreambuf
seekpos	src/fc/w_compat_strstream.cpp	/^strstreambuf::seekpos(pos_type pos, ios_base::openmode mode)$/;"	f	class:shore_compat::strstreambuf
segment_size	src/sm/log.cpp	/^fileoff_t  log_m::segment_size() $/;"	f	class:log_m
segment_size	src/sm/log_core.h	/^    int             segment_size() const { return SEGMENT_SIZE; }$/;"	f	class:log_core
segsize	src/sm/log_core.h	/^    long                 segsize() const { return _segsize; }$/;"	f	class:log_core
select_stat	src/sm/smsh/lib/smsh.tcl	/^proc select_stat {n whichstat} {$/;"	p
select_stat_value	src/sm/smsh/lib/smsh.tcl	/^proc select_stat_value {n whichstat} {$/;"	p
sem_destroy	src/sthread/sthread_core_pthread.cpp	/^static    void    sem_destroy(sthread_core_t::sem_t *sem)$/;"	f	file:
sem_init	src/sthread/sthread_core_pthread.cpp	/^static    int    sem_init(sthread_core_t::sem_t *sem, int, int count)$/;"	f	file:
sem_post	src/sthread/sthread_core_pthread.cpp	/^static    inline    void    sem_post(sthread_core_t::sem_t *sem)$/;"	f	file:
sem_wait	src/sthread/sthread_core_pthread.cpp	/^static    inline    void    sem_wait(sthread_core_t::sem_t *sem)$/;"	f	file:
sense_table	src/fc/nbox.cpp	/^static const int sense_table[4] = {-1, 1, 1, -1};$/;"	v	file:
sentinel_pool	src/fc/w_temp_alloc.cpp	/^struct sentinel_pool : w_temp_alloc::pool {$/;"	s	file:
sep	src/sm/keyed.h	/^inline const char* keyrec_t::sep() const    { return _body(); }$/;"	f	class:keyrec_t
server_handle_t	src/common/tid_t.h	/^typedef opaque_quantity<max_server_handle_len> server_handle_t;$/;"	t
set	src/common/kvl_t.h	/^kvl_t::set(stid_t s, const cvec_t& v)$/;"	f	class:kvl_t
set	src/common/kvl_t.h	/^kvl_t::set(stid_t s, const cvec_t& v1, const cvec_t& v2)$/;"	f	class:kvl_t
set	src/common/vec_t.h	/^    cvec_t& set(const cvec_t& v) {$/;"	f	class:cvec_t
set	src/common/vec_t.h	/^    cvec_t& set(const cvec_t& v, size_t offset, size_t limit)  {$/;"	f	class:cvec_t
set	src/common/vec_t.h	/^    cvec_t& set(const cvec_t& v1, const cvec_t& v2)  {$/;"	f	class:cvec_t
set	src/common/vec_t.h	/^    cvec_t& set(const void* p, size_t l)  {$/;"	f	class:cvec_t
set	src/fc/w_autodel.h	/^    w_auto_delete_array_t&    set(T* t)  {$/;"	f	class:w_auto_delete_array_t
set	src/fc/w_autodel.h	/^    w_auto_delete_t&        set(T* t)  {$/;"	f	class:w_auto_delete_t
set	src/fc/w_bitmap.cpp	/^w_bitmap_t::set(uint4_t offset)$/;"	f	class:w_bitmap_t
set	src/sm/btree_bl.cpp	/^rc_t btsink_t::set(const lpid_t& root)$/;"	f	class:btsink_t
set	src/sm/btree_p.cpp	/^btrec_t::set(const btree_p& page, slotid_t slot)$/;"	f	class:btrec_t
set	src/sm/extent.h	/^extlink_t::set(int i)$/;"	f	class:extlink_t
set	src/sm/newsort.cpp	/^    void set(file_p &_fp, slotid_t slot) {$/;"	f	class:meta_header_t
set	src/sm/page_h.h	/^    void set(const shpid_t& pg, smsize_t v) {$/;"	f	class:pginfo_t
set	src/sm/pmap.h	/^    inline    void    set(int bit) { bm_set(bits, bit); }$/;"	f	struct:Pmap
set	src/sm/smsh/sort_funcs.h	/^    void set(scan_index_i* s) { scanp = s; }$/;"	f	class:deleter
set	src/sm/smsh/sort_funcs.h	/^    void set(scan_rt_i* s) { scanr = s; }$/;"	f	class:deleter
set	src/sm/smsh/sort_funcs.h	/^    void set(stid_t&s) { fid = s; }$/;"	f	class:deleter
setClassLevel	src/common/option.cpp	/^w_rc_t option_group_t::setClassLevel(const char* name, int level)$/;"	f	class:option_group_t
setLabel	src/common/option.cpp	/^void option_stream_scan_t::setLabel(const char *newLabel)$/;"	f	class:option_stream_scan_t
setMaxKey	src/sm/key_ranges_map.cpp	/^void key_ranges_map::setMaxKey(const Key& \/*maxKey*\/)$/;"	f	class:key_ranges_map
setMinKey	src/sm/key_ranges_map.cpp	/^void key_ranges_map::setMinKey(const Key& \/*minKey*\/)$/;"	f	class:key_ranges_map
setNumPartitions	src/sm/key_ranges_map.cpp	/^void key_ranges_map::setNumPartitions(uint numPartitions)$/;"	f	class:key_ranges_map
set_all	src/sm/pmap.h	/^    inline    void    set_all() { bm_fill(bits, _count); }$/;"	f	struct:Pmap
set_alloced	src/sm/xct.h	/^    void                        set_alloced() { }$/;"	f	class:xct_t
set_args	src/sm/smsh/tcl_thread.cpp	/^tcl_thread_t::set_args($/;"	f	class:tcl_thread_t
set_ascending	src/sm/sort_s.h	/^    int     set_ascending( bool value = true) {  _ascending = value; return 0; }$/;"	f	class:ssm_sort::sort_keys_t
set_base	src/fc/vtable.cpp	/^vtable_row_t::set_base(int a,  w_base_t::base_stat_t v) {$/;"	f	class:vtable_row_t
set_base	src/fc/vtable.cpp	/^vtable_row_t::set_base(int a, w_base_t::base_float_t v) {$/;"	f	class:vtable_row_t
set_base_from	config/depcomp	/^set_base_from ()$/;"	f
set_bit	src/fc/w_bitvector.h	/^    void set_bit(Word idx) {$/;"	f	class:w_bitvector_t
set_bodysize	src/sm/newsort.cpp	/^    void         set_bodysize(smsize_t s) { __persistent_part._bodysize = s; }$/;"	f	class:meta_header_t
set_bucket	src/sm/page_h.h	/^pginfo_t::set_bucket(const shpid_t& pg, space_bucket_t b) $/;"	f	class:pginfo_t
set_bufsize	src/sthread/io.cpp	/^sthread_t::set_bufsize(size_t size)$/;"	f	class:sthread_t
set_bufsize	src/sthread/io.cpp	/^sthread_t::set_bufsize(size_t size, char *&buf_start \/* in\/out*\/,$/;"	f	class:sthread_t
set_bufsize_huge	src/sthread/io.cpp	/^sthread_t::set_bufsize_huge($/;"	f	class:sthread_t
set_bufsize_memalign	src/sthread/io.cpp	/^sthread_t::set_bufsize_memalign(size_t size, char *&buf_start \/* in\/out*\/,$/;"	f	class:sthread_t
set_bufsize_normal	src/sthread/io.cpp	/^w_rc_t sthread_t::set_bufsize_normal($/;"	f	class:sthread_t
set_byte	src/sm/page.cpp	/^page_p::set_byte(slotid_t idx, u_char bits, logical_operation op)$/;"	f	class:page_p
set_byte	src/sm/vol.cpp	/^extlink_p::set_byte(slotid_t idx, $/;"	f	class:extlink_p
set_bytes	src/sm/vol.cpp	/^extlink_p::set_bytes(slotid_t idx, $/;"	f	class:extlink_p
set_carry_obj	src/sm/sort_s.h	/^    int     set_carry_obj(bool value = true) {  $/;"	f	class:ssm_sort::sort_keys_t
set_clr	src/sm/logrec.h	/^logrec_t::set_clr(const lsn_t& c)$/;"	f	class:logrec_t
set_config_info	src/sm/smsh/lib/smsh.tcl	/^proc set_config_info {} {$/;"	p
set_convert_mode	src/sm/lock_x.h	/^    void              set_convert_mode(lmode_t m) { _convert_mode=m; } $/;"	f	class:lock_request_t
set_coordinator	src/sm/sm.cpp	/^ss_m::set_coordinator(const server_handle_t &h)$/;"	f	class:ss_m
set_coordinator	src/sm/xct.cpp	/^xct_t::set_coordinator(const server_handle_t &h) $/;"	f	class:xct_t
set_current	src/sm/log_core.cpp	/^log_core::set_current($/;"	f	class:log_core
set_deep_copy	src/sm/sort_s.h	/^    int     set_deep_copy(bool value = true ) {  $/;"	f	class:ssm_sort::sort_keys_t
set_delete	src/sm/btree_p.cpp	/^btree_p::set_delete() $/;"	f	class:btree_p
set_device_quota_KB	src/sm/vol.h	/^    void            set_device_quota_KB(sm_diskaddr_t q) { $/;"	f	class:volhdr_t
set_dim	src/sm/rtree.cpp	/^rtree_base_p::set_dim(int2_t d)$/;"	f	class:rtree_base_p
set_dir_from	config/depcomp	/^set_dir_from ()$/;"	f
set_dirty	src/sm/bf.cpp	/^bf_m::set_dirty(const page_s* buf)$/;"	f	class:bf_m
set_dirty	src/sm/page.h	/^page_p::set_dirty() const$/;"	f	class:page_p
set_dirty_bit	src/sm/bf_s.h	/^    void  set_dirty_bit() { _dirty = true;  }$/;"	f	class:bfcb_t
set_disk_delay	src/sm/sm.cpp	/^ss_m::set_disk_delay(u_int milli_sec)$/;"	f	class:ss_m
set_disk_delay	src/sm/sm_io.h	/^    static rc_t                 set_disk_delay($/;"	f	class:io_m
set_duration	src/sm/lock_x.h	/^    void              set_duration(duration_t d) { _duration=d; } $/;"	f	class:lock_request_t
set_elr_enabled	src/sm/sm.cpp	/^void ss_m::set_elr_enabled(bool enable) $/;"	f	class:ss_m
set_elr_enabled	src/sm/xct.cpp	/^xct_t::set_elr_enabled(bool enable) {$/;"	f	class:xct_t
set_epid	src/sm/vol.h	/^    void             set_epid(const shpid_t& p) { $/;"	f	class:volhdr_t
set_escalation_thresholds	src/sm/sm.cpp	/^ss_m::set_escalation_thresholds(int4_t toPage, int4_t toStore, int4_t toVolume)$/;"	f	class:ss_m
set_ext_has_page_alloc	src/sm/lock_s_inline.h	/^lockid_t::set_ext_has_page_alloc(bool value) $/;"	f	class:lockid_t
set_ext_next	src/sm/sm_io.cpp	/^io_m::set_ext_next(vid_t vid, extnum_t ext, extnum_t new_next)$/;"	f	class:io_m
set_ext_next	src/sm/vol.cpp	/^vol_t::set_ext_next(extnum_t ext, extnum_t new_next)$/;"	f	class:vol_t
set_ext_next_log	src/sm/logdef_gen.cpp	/^	set_ext_next_log (logrec_t*)   {};$/;"	f	class:set_ext_next_log
set_ext_next_log	src/sm/logdef_gen.cpp	/^    class set_ext_next_log : public logrec_t {$/;"	c	file:
set_ext_next_log	src/sm/logrec.cpp	/^set_ext_next_log::set_ext_next_log(const page_p& page, $/;"	f	class:set_ext_next_log
set_ext_next_t	src/sm/logrec.cpp	/^    set_ext_next_t(extnum_t theExt, extnum_t theNew_next)$/;"	f	struct:set_ext_next_t
set_ext_next_t	src/sm/logrec.cpp	/^struct set_ext_next_t  {$/;"	s	file:
set_ext_size	src/sm/vol.h	/^    void             set_ext_size(extnum_t e) { _ext_size=e; } $/;"	f	class:volhdr_t
set_extent	src/sm/lock_s_inline.h	/^lockid_t::set_extent(const extnum_t & e) $/;"	f	class:lockid_t
set_fake_disk_latency	src/sm/sm.cpp	/^ss_m::set_fake_disk_latency(vid_t vid, const int adelay)$/;"	f	class:ss_m
set_fake_disk_latency	src/sm/sm_io.cpp	/^io_m::set_fake_disk_latency(vid_t vid, const int adelay)$/;"	f	class:io_m
set_fake_disk_latency	src/sm/vol.cpp	/^vol_t::set_fake_disk_latency(const int adelay)$/;"	f	class:vol_t
set_file_sort	src/sm/sort.h	/^    void    set_file_sort() { _file_sort = true; _once = false; }$/;"	f	class:sort_stream_i
set_file_sort_once	src/sm/sort.h	/^    void    set_file_sort_once(sm_store_property_t prop) $/;"	f	class:sort_stream_i
set_first	src/sm/newsort.cpp	/^    void set_first(const rid_t& x) {$/;"	f	class:run_t
set_first	src/sm/newsort.cpp	/^    void set_first(const shpid_t& p, const slotid_t& s) {$/;"	f	class:run_t
set_first_lsn	src/sm/xct.h	/^xct_t::set_first_lsn(const lsn_t &l) $/;"	f	class:xct_t
set_for_file	src/sm/sort_s.h	/^    int     set_for_file(bool deepcopy, bool keeporig, bool carry_obj) {$/;"	f	class:ssm_sort::sort_keys_t
set_for_index	src/sm/sort_s.h	/^    int   set_for_index(CSKF lfunc, key_cookie_t ck) {$/;"	f	class:ssm_sort::sort_keys_t
set_for_index	src/sm/sort_s.h	/^    int  set_for_index() {$/;"	f	class:ssm_sort::sort_keys_t
set_format_version	src/sm/vol.h	/^    void            set_format_version(uint v) { $/;"	f	class:volhdr_t
set_generate_log_warnings	src/sm/smthread.h	/^    void            set_generate_log_warnings(bool b){_gen_log_warnings=b;}$/;"	f	class:smthread_t
set_hash	src/sm/bf_s.h	/^    void         set_hash(int4_t h) { _hash=h;}$/;"	f	class:bfcb_t
set_hash_func	src/sm/bf_s.h	/^    void         set_hash_func(int4_t h) { _hash_func=h; }$/;"	f	class:bfcb_t
set_hdr	src/sm/btree_p.cpp	/^btree_p::set_hdr(shpid_t root, int l, shpid_t pid0, uint2_t flags)$/;"	f	class:btree_p
set_hdr	src/sm/file.cpp	/^file_p::set_hdr(const file_p_hdr_t& new_hdr)$/;"	f	class:file_p
set_hdr	src/sm/keyed.cpp	/^keyed_p::set_hdr(const cvec_t& data)$/;"	f	class:keyed_p
set_hdr	src/sm/rtree.cpp	/^rtree_base_p::set_hdr(const rtctrl_t& new_hdr)$/;"	f	class:rtree_base_p
set_hdr	src/sm/zkeyed.cpp	/^zkeyed_p::set_hdr(const cvec_t& data)$/;"	f	class:zkeyed_p
set_hdr_exts	src/sm/vol.h	/^    void             set_hdr_exts(extnum_t n) {  _hdr_exts = n; }$/;"	f	class:volhdr_t
set_hdr_pages	src/sm/vol.h	/^    void             set_hdr_pages(shpid_t n) {  _hdr_pages = n; }$/;"	f	class:volhdr_t
set_hdrsize	src/sm/newsort.cpp	/^    void         set_hdrsize(smsize_t s) { __persistent_part._hdrsize = s; }$/;"	f	class:meta_header_t
set_hotbit	src/sm/bf_s.h	/^    uint4_t     set_hotbit(int4_t b) { return (_hotbit = b); }$/;"	f	class:bfcb_t
set_hugetlbfs_path	src/sthread/io.cpp	/^sthread_t::set_hugetlbfs_path(const char *what) $/;"	f	class:sthread_t
set_ikeysize	src/sm/newsort.cpp	/^    void         set_ikeysize(smsize_t s) { __persistent_part._ikeysize = s; }$/;"	f	class:meta_header_t
set_inherited	src/sm/sdesc.h	/^    void		set_inherited(bool flag) { _inherited = flag; }$/;"	f	class:sdesc_t
set_int	src/fc/vtable.cpp	/^vtable_row_t::set_int(int a, int v) {$/;"	f	class:vtable_row_t
set_keep_orig	src/sm/sort_s.h	/^    int     set_keep_orig(bool value = true ) {  $/;"	f	class:ssm_sort::sort_keys_t
set_large_store	src/sm/sdesc.h	/^    void set_large_store(const snum_t& _store) {large_store = _store;}$/;"	f	struct:sinfo_s
set_last	src/sm/newsort.cpp	/^    void set_last(const rid_t& x) {$/;"	f	class:run_t
set_last	src/sm/newsort.cpp	/^    void set_last(const shpid_t& p, const slotid_t& s) {$/;"	f	class:run_t
set_last_lsn	src/sm/xct.h	/^xct_t::set_last_lsn( const lsn_t&l)$/;"	f	class:xct_t
set_last_pid	src/sm/dir.cpp	/^sdesc_t::set_last_pid(shpid_t p) $/;"	f	class:sdesc_t
set_length	src/common/w_opaque.h	/^    uint4_t          set_length(uint4_t l) {$/;"	f	class:opaque_quantity
set_level	src/sm/rtree.cpp	/^rtree_base_p::set_level(int2_t l)$/;"	f	class:rtree_base_p
set_lgmetasize	src/sm/newsort.cpp	/^    void         set_lgmetasize(smsize_t s) { __persistent_part._lgmeta = s; }$/;"	f	class:meta_header_t
set_lock_cache_enable	src/sm/sm.cpp	/^ss_m::set_lock_cache_enable(bool enable)$/;"	f	class:ss_m
set_lock_cache_enable	src/sm/xct.cpp	/^xct_t::set_lock_cache_enable(bool enable)$/;"	f	class:xct_t
set_lock_level	src/sm/lock_x.h	/^    void              set_lock_level(lockid_t::name_space_t l) { $/;"	f	class:xct_lock_info_t
set_log_features	src/sm/log_core.cpp	/^log_m::set_log_features(char const* features) {$/;"	f	class:log_m
set_log_features	src/sm/sm.cpp	/^rc_t ss_m::set_log_features(char const* features) $/;"	f	class:ss_m
set_log_state	src/sm/xct.cpp	/^xct_t::set_log_state(switch_t s) $/;"	f	class:xct_t
set_log_state	src/sm/xct.cpp	/^xct_t::set_log_state(switch_t s, bool &) $/;"	f	class:xct_t
set_lsn_ck	src/sm/logrec.h	/^    void                 set_lsn_ck(const lsn_t &lsn_ck) {$/;"	f	class:logrec_t
set_lsns	src/sm/page.h	/^page_p::set_lsns(const lsn_t& lsn)$/;"	f	class:page_p
set_lspace	src/sm/lock_s_inline.h	/^lockid_t::set_lspace(lockid_t::name_space_t value) $/;"	f	class:lockid_t
set_lvid	src/sm/vol.h	/^    void            set_lvid(const lvid_t &l) { $/;"	f	class:volhdr_t
set_master	src/sm/log.cpp	/^void log_m::set_master(lsn_t mlsn, lsn_t min_rec_lsn, lsn_t min_xct_lsn) $/;"	f	class:log_m
set_mode	src/sm/lock_x.h	/^    void              set_mode(lmode_t m) { _mode=m; } $/;"	f	class:lock_request_t
set_next	src/sm/vol.cpp	/^extlink_i::set_next(extnum_t ext, extnum_t new_next, bool log_it)$/;"	f	class:extlink_i
set_nkey	src/sm/newsort.cpp	/^    void set_nkey(int nk) { __persistent_part._nkeys = nk; }$/;"	f	class:meta_header_t
set_nonblocking	src/sm/lock_core.cpp	/^void xct_lock_info_t::set_nonblocking()$/;"	f	class:xct_lock_info_t
set_null_unique	src/sm/sort_s.h	/^    int     set_null_unique( bool value = true) {  _remove_dup_nulls = value; $/;"	f	class:ssm_sort::sort_keys_t
set_num_children	src/sm/lock_x.h	/^    void              set_num_children(int4_t n) { _num_children=n;}    $/;"	f	class:lock_request_t
set_num_exts	src/sm/vol.h	/^    void             set_num_exts(extnum_t n) {  _num_exts = n; }$/;"	f	class:volhdr_t
set_object_marshal	src/sm/sort_s.h	/^    int     set_object_marshal( MOF marshal, UMOF unmarshal, key_cookie_t c) {$/;"	f	class:ssm_sort::sort_keys_t
set_offset	src/fc/w_list.h	/^    void             set_offset(uint4_t link_offset) {$/;"	f	class:w_list_t
set_offset	src/fc/w_list.h	/^w_keyed_list_t<T,LOCK, K>::set_offset($/;"	f	class:w_keyed_list_t
set_offset	src/fc/w_list.h	/^w_list_base_t::set_offset(uint4_t offset)$/;"	f	class:w_list_base_t
set_old_deleting_value	src/sm/sm_io.h	/^        void set_old_deleting_value(store_deleting_t old_value)$/;"	f	class:store_operation_param
set_old_pid	src/sm/bf_s.h	/^    void  set_old_pid() { _old_pid = pid();  _old_pid_valid=true; }$/;"	f	class:bfcb_t
set_old_store_flags	src/sm/sm_io.h	/^        void set_old_store_flags(store_flag_t flag)$/;"	f	class:store_operation_param
set_ordinal	src/sm/newsort.cpp	/^meta_header_t::set_ordinal() { __persistent_part._ordinal = ++me()->get__ordinal(); }$/;"	f	class:meta_header_t
set_owner	src/sm/file.h	/^inline rc_t file_mrbt_p::set_owner(const lpid_t& owner)$/;"	f	class:file_mrbt_p
set_page	src/sm/lock_s_inline.h	/^lockid_t::set_page(const shpid_t & p) $/;"	f	class:lockid_t
set_page_bits	src/sm/lock_s_inline.h	/^lockid_t::set_page_bits(lockid_t::page_bits_t bits) $/;"	f	class:lockid_t
set_page_storeflags	src/sm/page_s.h	/^    w_base_t::uint4_t    set_page_storeflags(uint4_t f) { $/;"	f	class:page_s
set_page_sz	src/sm/vol.h	/^    void            set_page_sz(w_base_t::uint4_t n) {  _page_sz = n; }$/;"	f	class:volhdr_t
set_page_with_space	src/sm/sdesc.h	/^    inline void set_page_with_space(const lpid_t& btree_page,$/;"	f	class:sdesc_t
set_pid	src/sm/bf_s.h	/^    void  set_pid(const bfpid_t &p) { _pid = p;   }$/;"	f	class:bfcb_t
set_pid	src/sm/btcursor.h	/^    void            set_pid(const lpid_t& pid) { _pid = pid; }$/;"	f	class:bt_cursor_t
set_pid	src/sm/logrec.h	/^logrec_t::set_pid(const lpid_t& p)$/;"	f	class:logrec_t
set_pid0	src/sm/btree_p.cpp	/^btree_p::set_pid0(shpid_t pid0)$/;"	f	class:btree_p
set_plp	src/sthread/srwlock.h	/^    void set_plp(bool is_reader) { _is_plp = true; _is_reader = is_reader; }$/;"	f	class:mcs_rwlock
set_plp_tracing	src/sm/sm.cpp	/^void ss_m::set_plp_tracing(const uint tracing_level)$/;"	f	class:ss_m
set_pmap_bits	src/sm/vol.cpp	/^extlink_i::set_pmap_bits(snum_t snum, extnum_t idx, const Pmap& pmap)$/;"	f	class:extlink_i
set_priority	src/sthread/sthread.cpp	/^w_rc_t sthread_t::set_priority(priority_t priority)$/;"	f	class:sthread_t
set_quark_marker	src/sm/lock_x.h	/^    void             set_quark_marker(lock_request_t*  m) { _quark_marker=m; }$/;"	f	class:xct_lock_info_t
set_rba	src/common/lsn.h	/^    void set_rba(sm_diskaddr_t &other) { $/;"	f	class:lsn_t
set_rec_flags	src/sm/file.cpp	/^file_p::set_rec_flags(slotid_t idx, uint2_t new_flags)$/;"	f	class:file_p
set_rec_len	src/sm/file.cpp	/^file_p::set_rec_len(slotid_t idx, uint4_t new_len)$/;"	f	class:file_p
set_rec_lsn	src/sm/bf.cpp	/^void  bfcb_t::set_rec_lsn(const lsn_t &what) { $/;"	f	class:bfcb_t
set_ref_bit	src/sm/page.h	/^    void                        set_ref_bit(int value) {_refbit = value;}$/;"	f	class:page_p
set_ref_bit	src/sm/pin.cpp	/^void pin_i::set_ref_bit(int value)$/;"	f	class:pin_i
set_refbit	src/sm/bf_s.h	/^    void        set_refbit(uint4_t b) { _refbit=b; }$/;"	f	class:bfcb_t
set_reset_point	src/sm/newsort.cpp	/^    void set_reset_point() {$/;"	f	class:limited_space
set_return_check	src/fc/w_rc.cpp	/^w_rc_t::set_return_check(bool on_off, bool is_fatal)$/;"	f	class:w_rc_t
set_root	src/sm/btree_p.cpp	/^btree_p::set_root(shpid_t root)$/;"	f	class:btree_p
set_roots	src/sm/btcursor.cpp	/^bt_cursor_t::set_roots(vector<lpid_t>& roots) {$/;"	f	class:bt_cursor_t
set_shutdown_flag	src/sm/sm.cpp	/^void ss_m::set_shutdown_flag(bool clean)$/;"	f	class:ss_m
set_size	src/sm/partition.h	/^    void               set_size(fileoff_t v) { _size =  v; }$/;"	f	class:partition_t
set_sli_enabled	src/sm/lock_core.cpp	/^void lock_m::set_sli_enabled(bool enable) { global_sli_enabled = enable; }$/;"	f	class:lock_m
set_sli_enabled	src/sm/sm.cpp	/^void ss_m::set_sli_enabled(bool enable) $/;"	f	class:ss_m
set_slot	src/sm/btcursor.h	/^    void            set_slot(int slot) { _slot = slot; }$/;"	f	class:bt_cursor_t
set_slot	src/sm/lock_s_inline.h	/^lockid_t::set_slot(const slotid_t & e) $/;"	f	class:lockid_t
set_smo	src/sm/btree_p.h	/^    rc_t             set_smo(bool compensate=false) {$/;"	f	class:btree_p
set_snum	src/sm/lock_s_inline.h	/^lockid_t::set_snum(const snum_t & _s) $/;"	f	class:lockid_t
set_sortkey_derived	src/sm/sort_s.h	/^ssm_sort::sort_keys_t::set_sortkey_derived($/;"	f	class:ssm_sort::sort_keys_t
set_sortkey_fixed	src/sm/sort_s.h	/^ssm_sort::sort_keys_t::set_sortkey_fixed($/;"	f	class:ssm_sort::sort_keys_t
set_spid	src/sm/vol.h	/^    void             set_spid(const shpid_t& p) { $/;"	f	class:volhdr_t
set_stable	src/sm/sort_s.h	/^    void    set_stable(bool val) { _stable = val; }$/;"	f	class:ssm_sort::sort_keys_t
set_status	src/sm/lock_x.h	/^    void              set_status(status_t s) { _state = s; }$/;"	f	class:lock_request_t
set_store	src/sm/lock_s_inline.h	/^lockid_t::set_store(const stid_t & _s) $/;"	f	class:lockid_t
set_store	src/sm/newsort.cpp	/^    void             set_store(stid_t f) {$/;"	f	class:tape_t
set_store_first_ext	src/sm/vol.cpp	/^vol_t::set_store_first_ext(snum_t snum, extnum_t head)$/;"	f	class:vol_t
set_store_flags	src/sm/page.cpp	/^page_p::set_store_flags(w_base_t::uint4_t f)$/;"	f	class:page_p
set_store_flags	src/sm/sm_io.h	/^io_m::set_store_flags(const stid_t& stid, store_flag_t flags, bool sync_volume)$/;"	f	class:io_m
set_store_flags	src/sm/vol.cpp	/^vol_t::set_store_flags(snum_t snum, store_flag_t flags, bool sync_volume)$/;"	f	class:vol_t
set_store_property	src/sm/smfile.cpp	/^ss_m::set_store_property(stid_t stid, store_property_t property)$/;"	f	class:ss_m
set_storeflags	src/sm/bf.cpp	/^void  bfcb_t::set_storeflags(w_base_t::uint4_t f) { $/;"	f	class:bfcb_t
set_string	src/fc/vtable.cpp	/^vtable_row_t::set_string(int a, const char *v) {$/;"	f	class:vtable_row_t
set_thread	src/sm/lock_x.h	/^    void              set_thread(smthread_t *t) { _thread=t;} $/;"	f	class:lock_request_t
set_tid	src/sm/lock_x.h	/^    void             set_tid(const tid_t &t) { _tid=t; }$/;"	f	class:xct_lock_info_t
set_timeout	src/sm/xct.cpp	/^xct_t::set_timeout(timeout_in_ms t) $/;"	f	class:xct_t
set_u1	src/sm/lock_s_inline.h	/^lockid_t::set_u1(uint2_t u)$/;"	f	class:lockid_t
set_u2	src/sm/lock_s_inline.h	/^lockid_t::set_u2(uint4_t u)$/;"	f	class:lockid_t
set_u3	src/sm/lock_s_inline.h	/^lockid_t::set_u3(uint4_t u)$/;"	f	class:lockid_t
set_u4	src/sm/lock_s_inline.h	/^lockid_t::set_u4(uint4_t u)$/;"	f	class:lockid_t
set_uint	src/fc/vtable.cpp	/^vtable_row_t::set_uint(int a, unsigned int v) {$/;"	f	class:vtable_row_t
set_unchecked	src/fc/w_rc.h	/^    void set_unchecked() {$/;"	f	class:w_rc_t
set_undo_nxt	src/sm/xct.h	/^xct_t::set_undo_nxt(const lsn_t &l) $/;"	f	class:xct_t
set_unique	src/sm/sort_s.h	/^    int     set_unique( bool value = true) {  _remove_dups = value; return 0; }$/;"	f	class:ssm_sort::sort_keys_t
set_up	src/sm/btcursor.cpp	/^bt_cursor_t::set_up( const lpid_t& root, int nkc, const key_type_s* kc,$/;"	f	class:bt_cursor_t
set_up_part_2	src/sm/btcursor.cpp	/^bt_cursor_t::set_up_part_2(cmp_t cond1, const cvec_t& bound1)$/;"	f	class:bt_cursor_t
set_value	src/common/option.cpp	/^option_group_t::set_value($/;"	f	class:option_group_t
set_value	src/common/option.cpp	/^w_rc_t option_t::set_value(const char* value, bool overRide, ostream* err_stream)$/;"	f	class:option_t
set_value_bool	src/common/option.cpp	/^w_rc_t option_t::set_value_bool(option_t* opt, const char* value, ostream* err_stream)$/;"	f	class:option_t
set_value_charstr	src/common/option.cpp	/^w_rc_t option_t::set_value_charstr($/;"	f	class:option_t
set_value_int4	src/common/option.cpp	/^option_t::set_value_int4($/;"	f	class:option_t
set_value_int8	src/common/option.cpp	/^option_t::set_value_int8($/;"	f	class:option_t
set_value_long	src/common/option.cpp	/^option_t::set_value_long($/;"	f	class:option_t
set_value_long_long	src/common/option.cpp	/^option_t::set_value_long_long($/;"	f	class:option_t
set_vid	src/sm/lock_s_inline.h	/^lockid_t::set_vid(const vid_t & v) $/;"	f	class:lockid_t
set_vid	src/sm/page.h	/^page_p::set_vid(vid_t vid)$/;"	f	class:page_p
set_waiting_request	src/sm/lock_x.h	/^    void             set_waiting_request(lock_request_t*r) { _wait_request=r; }$/;"	f	class:xct_lock_info_t
set_waiting_request_is_blocking	src/sm/lock_x.h	/^    void             set_waiting_request_is_blocking(bool b) { _blocking=b; }$/;"	f	class:xct_lock_info_t
set_xct_lock_level	src/sm/sm.cpp	/^void ss_m::set_xct_lock_level(concurrency_t l)$/;"	f	class:ss_m
set_xct_log_off	src/sm/xct.h	/^    void         set_xct_log_off() { _xct_log_off = true; }$/;"	f	class:xct_log_t
set_xct_log_on	src/sm/xct.h	/^    void         set_xct_log_on() { _xct_log_off = false; }$/;"	f	class:xct_log_t
setall	src/sm/extent.h	/^extlink_t::setall()$/;"	f	class:extlink_t
setbits	src/common/regex2.h	/^    uch *setbits;        \/* -> uch[csetsize][ncsets\/CHAR_BIT] *\/$/;"	m	struct:re_guts
setbuf	src/fc/w_compat_strstream.cpp	/^strstreambuf::setbuf(char*, streamsize)$/;"	f	class:shore_compat::strstreambuf
setdebuginfo	src/sm/crash.cpp	/^setdebuginfo($/;"	f
seterr	src/common/regcomp.cpp	/^seterr(struct parse *p, int e)$/;"	f	file:
setflags	src/fc/w_debug.cpp	/^w_debug::setflags(const char *newflags)$/;"	f	class:w_debug
setloglevel	src/fc/errlog.h	/^    LogPriority setloglevel( LogPriority prio) {$/;"	f	class:ErrLog
setmap	src/sm/extent.h	/^extlink_t::setmap(const Pmap &m)$/;"	f	class:extlink_t
setname	src/common/latch.h	/^latch_t::setname(const char* const desc)$/;"	f	class:latch_t
sets	src/common/regex2.h	/^    cset *sets;        \/* -> cset [ncsets] *\/$/;"	m	struct:re_guts
setup_device_and_volume	src/sm/tests/file_scan.cpp	/^setup_device_and_volume(const char* device_name, bool init_device,$/;"	f
setup_device_and_volume	src/sm/tests/file_scan_many.cpp	/^smthread_main_t:: setup_device_and_volume(const char* device_name, $/;"	f	class:smthread_main_t
setup_options	src/sm/sm.cpp	/^rc_t ss_m::setup_options(option_group_t* options)$/;"	f	class:ss_m
seven	src/fc/w_input.cpp	/^        five=5, six=6, seven=7, eight=8, $/;"	e	enum:charclass	file:
sgned	src/fc/w_input.cpp	/^enum states {   start, sgned, leadz,  $/;"	e	enum:states	file:
sharedstatedir	Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	config/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/atomic_ops/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/atomic_ops/asm_linkage/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/atomic_ops/asm_linkage/usr/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/atomic_ops/asm_linkage/usr/src/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/atomic_ops/atomic_ops/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/atomic_ops/atomic_ops/amd64/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/atomic_ops/atomic_ops/i386/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/atomic_ops/atomic_ops/sparc/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/atomic_ops/ia32/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/atomic_ops/ia32/sys/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/atomic_ops/intel/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/atomic_ops/intel/ia32/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/atomic_ops/intel/ia32/sys/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/atomic_ops/intel/sys/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/atomic_ops/sparc/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/atomic_ops/sparc/sys/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/common/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/common/tests/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/fc/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/fc/tests/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/sm/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/sm/smsh/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/sm/smsh/lib/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/sm/smsh/scripts/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/sm/tests/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/sthread/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/sthread/tests/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	tools/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
shift	src/sm/btree_p.h	/^btree_p::shift($/;"	f	class:btree_p
shift	src/sm/file.cpp	/^file_mrbt_p::shift(slotid_t idx, file_mrbt_p* rsib)$/;"	f	class:file_mrbt_p
shift	src/sm/keyed.cpp	/^keyed_p::shift(int idx, keyed_p* rsib)$/;"	f	class:keyed_p
shift	src/sm/page.cpp	/^page_p::shift($/;"	f	class:page_p
shift	src/sm/rtree_p.h	/^rtree_base_p::shift(int snum, rtree_base_p* rsib)$/;"	f	class:rtree_base_p
shift	src/sm/zkeyed.cpp	/^zkeyed_p::shift(slotid_t idx, slotid_t idx_dest, zkeyed_p* rsib, bool compressed)$/;"	f	class:zkeyed_p
shift	src/sm/zkeyed.cpp	/^zkeyed_p::shift(slotid_t idx, zkeyed_p* rsib, bool compressed)$/;"	f	class:zkeyed_p
shore_compat	src/fc/w_compat_strstream.cpp	/^namespace shore_compat {$/;"	n	file:
shore_compat	src/fc/w_compat_strstream.h	/^namespace shore_compat {$/;"	n
shore_errlog	src/fc/errlog.h	/^namespace shore_errlog {$/;"	n
shore_file_page_t	src/sm/app_support.h	/^class shore_file_page_t : public page_s {$/;"	c
short_t	src/atomic_ops/atomic_ops.h	/^typedef short short_t;$/;"	t
shortest_nonempty_chain	src/sm/lock_core.cpp	/^static int shortest_nonempty_chain=999999;$/;"	v	file:
shpid	src/sm/logrec.h	/^logrec_t::shpid() const$/;"	f	class:logrec_t
shpid	src/sm/newsort.cpp	/^    const shpid_t&         shpid() const {  return __persistent_part._page; }$/;"	f	class:meta_header_t
shpid_t	src/common/basics.h	/^typedef w_base_t::uint4_t    shpid_t; $/;"	t
shrid	src/sm/newsort.cpp	/^    shrid_t                shrid(snum_t store) const { $/;"	f	class:meta_header_t
shrid_t	src/sm/sm_s.h	/^    shrid_t(shpid_t p, snum_t st, slotid_t sl) : page(p), store(st), slot(sl) {}$/;"	f	class:shrid_t
shrid_t	src/sm/sm_s.h	/^class shrid_t {$/;"	c
shrid_t	src/sm/sm_s.h	/^inline shrid_t::shrid_t() : page(0), store(0), slot(0)$/;"	f	class:shrid_t
shrid_t	src/sm/sm_s.h	/^inline shrid_t::shrid_t(const rid_t& r) :$/;"	f	class:shrid_t
shutdown	src/common/store_latch_manager.cpp	/^void store_latch_manager::shutdown()$/;"	f	class:store_latch_manager
shutdown	src/sm/bf_core.h	/^    void shutdown() {  \/*grot: clear *\/ this->~bfcb_unused_list(); }$/;"	f	class:bfcb_unused_list
shutdown	src/sm/btree_latch_manager.cpp	/^void btree_latch_manager::shutdown()$/;"	f	class:btree_latch_manager
shutdown	src/sm/log.cpp	/^void  log_m::shutdown() $/;"	f	class:log_m
shutdown	src/sm/log_core.cpp	/^log_core::shutdown() $/;"	f	class:log_core
shutdown	src/sm/vol.h	/^        void shutdown() {  _cache.clear(); _counts.clear(); }$/;"	f	class:vol_t::ext_cache_t
shutdown	src/sm/vol.h	/^    void                     shutdown() {   _free_ext_cache.shutdown(); $/;"	f	class:vol_t
shutdown	src/sm/vol.h	/^    void                     shutdown(snum_t s) {   $/;"	f	class:vol_t
shutdown	src/sthread/sthread.cpp	/^w_rc_t sthread_t::shutdown()$/;"	f	class:sthread_t
shutdown_clean	src/sm/sm.cpp	/^bool        smlevel_0::shutdown_clean = true;$/;"	m	class:smlevel_0	file:
shutdown_clean	src/sm/sm_base.h	/^    static bool        shutdown_clean;$/;"	m	class:smlevel_0
shutting_down	src/sm/sm.cpp	/^bool        smlevel_0::shutting_down = false;$/;"	m	class:smlevel_0	file:
shutting_down	src/sm/sm_base.h	/^    static bool        shutting_down;$/;"	m	class:smlevel_0
side	src/fc/nbox.h	/^    int side(int n) const      { return array[n+dim]-array[n]; }$/;"	f	class:nbox_t
sign	src/fc/stime.cpp	/^static inline int sign(const int i)$/;"	f	file:
sign	src/fc/tests/rand.cpp	/^    unsigned int sign:1;$/;"	m	struct:__anon129	file:
sign	src/fc/tests/rand.cpp	/^    unsigned int sign:1;$/;"	m	struct:__anon130	file:
sign	src/fc/tests/rand.cpp	/^    unsigned int sign:1;$/;"	m	struct:__anon131	file:
sign	src/fc/w_input.cpp	/^        exx, JJJJ, eofile, white, sign, no_charclass$/;"	e	enum:charclass	file:
signed48_t	src/fc/rand48.h	/^typedef w_base_t::int8_t signed48_t;$/;"	t
signs	src/fc/stime.cpp	/^void stime_t::signs()$/;"	f	class:stime_t
signs	src/fc/tests/ntime.cpp	/^    void    signs() { stime_t::signs(); }$/;"	f	class:stime_test_t
simple_string	src/fc/errlog_s.h	/^    simple_string(const char *s) { _s = s; }$/;"	f	class:simple_string
simple_string	src/fc/errlog_s.h	/^class simple_string {$/;"	c
simple_thread_t	src/sthread/tests/pthread_test.cpp	/^	simple_thread_t() {};$/;"	f	class:simple_thread_t
simple_thread_t	src/sthread/tests/pthread_test.cpp	/^class simple_thread_t : public sthread_t {$/;"	c	file:
sinfo	src/sm/sdesc.h	/^    const sinfo_s&      sinfo() const {return _sinfo;}$/;"	f	class:sdesc_t
sinfo_s	src/sm/sdesc.h	/^    sinfo_s()        {};$/;"	f	struct:sinfo_s
sinfo_s	src/sm/sdesc.h	/^    sinfo_s(snum_t store_, store_t stype_, $/;"	f	struct:sinfo_s
sinfo_s	src/sm/sdesc.h	/^struct sinfo_s {$/;"	s
single	src/sm/sort.h	/^    bool   single;    \/\/ only one page$/;"	m	class:run_scan_t
sinterval_t	src/fc/stime.h	/^    sinterval_t() : stime_t() { }$/;"	f	class:sinterval_t
sinterval_t	src/fc/stime.h	/^    sinterval_t(const stime_t &time) : stime_t(time) { }$/;"	f	class:sinterval_t
sinterval_t	src/fc/stime.h	/^    sinterval_t(const struct timespec &ts) : stime_t(ts) { }$/;"	f	class:sinterval_t
sinterval_t	src/fc/stime.h	/^    sinterval_t(const struct timeval &tv) : stime_t(tv) { }$/;"	f	class:sinterval_t
sinterval_t	src/fc/stime.h	/^    sinterval_t(double time) : stime_t(time) { }$/;"	f	class:sinterval_t
sinterval_t	src/fc/stime.h	/^    sinterval_t(int time) : stime_t(time) { }$/;"	f	class:sinterval_t
sinterval_t	src/fc/stime.h	/^    sinterval_t(long time) : stime_t(time) { }$/;"	f	class:sinterval_t
sinterval_t	src/fc/stime.h	/^class sinterval_t : public stime_t {$/;"	c
six	src/fc/w_input.cpp	/^        five=5, six=6, seven=7, eight=8, $/;"	e	enum:charclass	file:
size	src/common/vec_t.h	/^    size_t size() const        {$/;"	f	class:cvec_t
size	src/fc/dynarray.h	/^    size_t size() const { return _size; }$/;"	f	struct:dynarray
size	src/fc/dynarray.h	/^    size_t size() const {$/;"	f	struct:dynvector
size	src/fc/vtable.h	/^    int            size() const { return _rows; }$/;"	f	class:vtable_t
size	src/fc/w_bitmap.h	/^w_bitmap_t::size() const$/;"	f	class:w_bitmap_t
size	src/fc/w_temp_alloc.h	/^        size_t size() const { return _bufsz; }$/;"	f	struct:w_temp_alloc::ptr
size	src/sm/logrec.cpp	/^    int                        size()  { $/;"	f	struct:page_splice_t
size	src/sm/logrec.cpp	/^    int                        size()  { $/;"	f	struct:page_splicez_t
size	src/sm/logrec.cpp	/^    int                        size()  { return sizeof(*this); }$/;"	f	class:page_shift_t
size	src/sm/logrec.cpp	/^    int                size()   { return sizeof(*this); }$/;"	f	struct:page_set_byte_t
size	src/sm/logrec.cpp	/^    int size()        { return data + klen + elen - (char*) this; }$/;"	f	struct:btree_insert_t
size	src/sm/logrec.cpp	/^    int size()        { return data + klen + elen - (char*) this; }$/;"	f	struct:rtree_insert_t
size	src/sm/logrec.cpp	/^    int size()        { return sizeof(*this); }$/;"	f	struct:btree_purge_t
size	src/sm/logrec.cpp	/^    int size()        { return sizeof(*this); }$/;"	f	struct:page_image_t
size	src/sm/logrec.cpp	/^    int size()        { return sizeof(*this); }$/;"	f	struct:page_link_t
size	src/sm/logrec.cpp	/^    int size()  { return _init.size() + $/;"	f	class:page_format_t
size	src/sm/logrec.cpp	/^    int size()  { return sizeof(*this); }$/;"	f	class:page_init_t
size	src/sm/logrec.cpp	/^    int size() const  { return sizeof(*this); }$/;"	f	struct:pages_in_ext_t
size	src/sm/logrec.cpp	/^    int size() {$/;"	f	class:page_mark_t
size	src/sm/logrec.cpp	/^    int size()$/;"	f	struct:create_ext_list_t
size	src/sm/logrec.cpp	/^    int size()$/;"	f	struct:free_ext_list_t
size	src/sm/logrec.cpp	/^    int size()$/;"	f	struct:set_ext_next_t
size	src/sm/logrec.cpp	/^page_insert_t::size()$/;"	f	class:page_insert_t
size	src/sm/logrec.h	/^    int size()  { return sizeof(uint4_t) + num * sizeof(stid_t); };$/;"	f	struct:prepare_stores_to_free_t
size	src/sm/logrec.h	/^    int size() const     \/\/ in bytes$/;"	f	struct:prepare_all_lock_t
size	src/sm/logrec.h	/^    int size() const     \/\/ in bytes$/;"	f	struct:prepare_lock_t
size	src/sm/logrec.h	/^    int size() const     \/\/ in bytes$/;"	f	struct:prepare_lock_totals_t
size	src/sm/logrec.h	/^    int size() const { $/;"	f	struct:prepare_info_t
size	src/sm/logrec.h	/^chkpt_bf_tab_t::size()$/;"	f	class:chkpt_bf_tab_t
size	src/sm/logrec.h	/^chkpt_dev_tab_t::size()$/;"	f	class:chkpt_dev_tab_t
size	src/sm/logrec.h	/^chkpt_xct_tab_t::size()$/;"	f	class:chkpt_xct_tab_t
size	src/sm/newsort.cpp	/^    size_t size() const {$/;"	f	class:fib_t
size	src/sm/newsort.cpp	/^    size_t size() {$/;"	f	class:phase_mgr
size	src/sm/partition.h	/^    fileoff_t          size() const   { return _size; }$/;"	f	class:partition_t
size	src/sm/pmap.h	/^    inline    int    size() const { return _size; }$/;"	f	struct:Pmap
size	src/sm/restart.cpp	/^    int                          size() const { return tab.num_members(); }$/;"	f	class:dirty_pages_tab_t
size	src/sm/rtree_p.h	/^    int2_t             size() { return _top; }$/;"	f	class:rtstk_t
size	src/sm/sm_io.h	/^        int size()  const$/;"	f	class:store_operation_param
size	src/sm/smsh/sm_sizeof.cpp	/^    size_t        size;$/;"	m	struct:smsh_type_info_t	file:
size	src/sm/sort_s.h	/^    smsize_t  size() const     { return _length; }$/;"	f	class:ssm_sort::skey_t
size_in_bytes	src/fc/vtable.h	/^    int  size_in_bytes() const { return _list_end - (char *)this; }$/;"	f	class:vtable_row_t
size_in_bytes	src/sm/newsort.cpp	/^    size_t           size_in_bytes() const {$/;"	f	class:tape_t
size_in_bytes	src/sm/newsort.cpp	/^    size_t size_in_bytes() const {$/;"	f	class:run_t
size_type	src/fc/w_temp_alloc.h	/^        typedef size_t size_type;$/;"	t	struct:w_temp_alloc::allocator
skey_t	src/sm/newsort.cpp	/^typedef ssm_sort::skey_t skey_t;$/;"	t	file:
skey_t	src/sm/sort_s.h	/^    NORET     skey_t() : $/;"	f	class:ssm_sort::skey_t
skey_t	src/sm/sort_s.h	/^    NORET skey_t($/;"	f	class:ssm_sort::skey_t
skey_t	src/sm/sort_s.h	/^class skey_t $/;"	c	namespace:ssm_sort
skip_log	src/sm/logdef_gen.cpp	/^	skip_log (logrec_t*)   {};$/;"	f	class:skip_log
skip_log	src/sm/logdef_gen.cpp	/^    class skip_log : public logrec_t {$/;"	c	file:
skip_log	src/sm/logrec.cpp	/^skip_log::skip_log()$/;"	f	class:skip_log
sleep	src/sthread/sthread.cpp	/^void sthread_t::sleep(timeout_in_ms timeout, const char *reason)$/;"	f	class:sthread_t
slen	src/common/regcomp.cpp	/^    sopno slen;        \/* malloced strip length (used) *\/$/;"	m	struct:parse	file:
slen	src/sm/keyed.h	/^    smsize_t slen() const    { return _hdr.klen + _hdr.elen; }$/;"	f	class:keyrec_t
sli_abandon_request	src/sm/lock_core.cpp	/^void lock_core_m::sli_abandon_request(lock_request_t* &req, lock_head_t::my_lock* lock_mutex) {$/;"	f	class:lock_core_m
sli_abandoned	src/sm/lock_x.h	/^    sli_abandoned,$/;"	e	enum:sli_status_t
sli_acquired	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sli_acquired;$/;"	v
sli_active	src/sm/lock_x.h	/^    sli_active,$/;"	e	enum:sli_status_t
sli_eligible	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sli_eligible;$/;"	v
sli_evicted	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sli_evicted;$/;"	v
sli_found_late	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sli_found_late;$/;"	v
sli_inactive	src/sm/lock_x.h	/^    sli_inactive,$/;"	e	enum:sli_status_t
sli_inherited	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sli_inherited;$/;"	v
sli_invalid	src/sm/lock_x.h	/^    sli_invalid,$/;"	e	enum:sli_status_t
sli_invalidate_request	src/sm/lock_core.cpp	/^bool lock_core_m::sli_invalidate_request(lock_request_t* &req) {$/;"	f	class:lock_core_m
sli_invalidated	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sli_invalidated;$/;"	v
sli_invalidating	src/sm/lock_x.h	/^    sli_invalidating,$/;"	e	enum:sli_status_t
sli_kept	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sli_kept;$/;"	v
sli_list	src/sm/lock_x.h	/^    request_list_t  sli_list;$/;"	m	class:xct_lock_info_t
sli_lock_stats_t	src/sm/lock_core.cpp	/^struct sli_lock_stats_t : std::map<lockid_t, int> {$/;"	s	file:
sli_no_parent	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sli_no_parent;$/;"	v
sli_not_inherited	src/sm/lock_x.h	/^    sli_not_inherited,$/;"	e	enum:sli_status_t
sli_parent_cmd	src/sm/lock_core.h	/^    enum sli_parent_cmd { RECLAIM_NO_PARENT, RECLAIM_CHECK_PARENT, RECLAIM_RECLAIM_PARENT };$/;"	g	class:lock_core_m
sli_purge_inactive_locks	src/sm/lock_core.cpp	/^void lock_core_m::sli_purge_inactive_locks(xct_lock_info_t* theLockInfo, bool force) {$/;"	f	class:lock_core_m
sli_purged	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sli_purged;$/;"	v
sli_query	src/sm/lock.cpp	/^bool lock_m::sli_query(lockid_t const &n)$/;"	f	class:lock_m
sli_reclaim_request	src/sm/lock_core.cpp	/^lock_request_t* lock_core_m::sli_reclaim_request(lock_request_t* &req, sli_parent_cmd pcmd, lock_head_t::my_lock* lock_mutex) {$/;"	f	class:lock_core_m
sli_requested	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sli_requested;$/;"	v
sli_status_t	src/sm/lock_x.h	/^enum sli_status_t {$/;"	g
sli_too_weak	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sli_too_weak;$/;"	v
sli_upgrades	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sli_upgrades;$/;"	v
sli_used	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sli_used;$/;"	v
sli_waited_on	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sli_waited_on;$/;"	v
slot	src/fc/w_form.cpp	/^static unsigned    slot = 0;$/;"	v	file:
slot	src/sm/btcursor.h	/^    int                slot()   const { return _slot; }$/;"	f	class:bt_cursor_t
slot	src/sm/lock_s_inline.h	/^lockid_t::slot() const $/;"	f	class:lockid_t
slot	src/sm/newsort.cpp	/^    slotid_t         slot() const  { return __persistent_part._slot; }$/;"	f	class:meta_header_t
slot	src/sm/page_s.h	/^	slot_t   slot[max_slot];$/;"	m	union:page_s::slot_array
slot	src/sm/page_s.h	/^    slot_t &slot(slotid_t idx) { return _slots.slot[max_slot-idx-1]; }$/;"	f	class:page_s
slot	src/sm/page_s.h	/^    slot_t const &slot(slotid_t idx) const { return _slots.slot[max_slot-idx-1]; }$/;"	f	class:page_s
slot	src/sm/sm_s.h	/^    slotid_t        slot;$/;"	m	class:rid_t
slot	src/sm/sm_s.h	/^    slotid_t        slot;$/;"	m	class:shrid_t
slot	src/sm/sort.h	/^    int2_t   slot;        \/\/ slot for current record$/;"	m	class:run_scan_t
slotSindex	src/sm/lock_s.h	/^    enum { pageSindex=4, slotSindex=6, user4Sindex=6 };$/;"	e	enum:lockid_t::__anon60
slotWindex	src/sm/lock_s.h	/^    enum { pageWindex=2, slotWindex=3, user4Windex=3 };$/;"	e	enum:lockid_t::__anon59
slot_array	src/sm/page_s.h	/^    union slot_array {$/;"	u	class:page_s
slot_bits	src/sm/lock_s_inline.h	/^lockid_t::slot_bits() const $/;"	f	class:lockid_t
slot_count	src/sm/app_support.h	/^    int slot_count() const { return nslots; }$/;"	f	class:shore_file_page_t
slot_index_t	src/sm/page_s.h	/^    typedef slot_offset_t  slot_index_t; \/\/ to avoid explicit sized-types below$/;"	t	class:page_s
slot_kvl_bits	src/sm/lock_s_inline.h	/^lockid_t::slot_kvl_bits() const $/;"	f	class:lockid_t
slot_length_t	src/sm/file.h	/^    typedef page_s::slot_length_t slot_length_t;$/;"	t	class:file_m
slot_length_t	src/sm/logrec.cpp	/^    typedef page_s::slot_length_t slot_length_t;$/;"	t	class:page_shift_t	file:
slot_length_t	src/sm/page.h	/^    typedef page_s::slot_length_t slot_length_t;$/;"	t	class:page_p
slot_length_t	src/sm/page_s.h	/^    typedef uint2_t slot_length_t;$/;"	t	class:page_s
slot_offset_t	src/sm/page.h	/^    typedef page_s::slot_offset_t slot_offset_t;$/;"	t	class:page_p
slot_offset_t	src/sm/page_s.h	/^    typedef int2_t  slot_offset_t; \/\/ -1 if vacant$/;"	t	class:page_s
slot_stats	src/sm/file.cpp	/^file_p::slot_stats($/;"	f	class:file_p
slot_t	src/sm/page.h	/^    typedef page_s::slot_t slot_t;$/;"	t	class:page_p
slot_t	src/sm/page_s.h	/^    struct slot_t {$/;"	s	class:page_s
slotid	src/sm/newsort.cpp	/^    const slotid_t&        slotid() const {  return __persistent_part._slot; }$/;"	f	class:meta_header_t
slotid_t	src/common/basics.h	/^typedef w_base_t::int2_t slotid_t;  $/;"	t
slots_unused_bs	src/sm/sm_du_stats.h	/^    base_stat_t        slots_unused_bs;    \/* invalid slots *\/$/;"	m	struct:file_pg_stats_t
slots_used_bs	src/sm/sm_du_stats.h	/^    base_stat_t        slots_used_bs;         \/* "valid" slots *\/$/;"	m	struct:file_pg_stats_t
slow	src/common/regex_engine.cpp	/^slow(struct match *m, char *start, char *stop, sopno startst, sopno stopst)$/;"	f	file:
slow	src/common/regex_engine.cpp	1022;"	d	file:
slow	src/common/regex_engine.cpp	62;"	d	file:
slow	src/common/regex_engine.cpp	73;"	d	file:
slow_pop	src/fc/atomic_container.h	/^    void* slow_pop() {$/;"	f	class:atomic_container
sm	src/sm/smsh/tcl_thread.cpp	/^ss_m* sm = 0;$/;"	v
sm	src/sm/smstats.h	/^    sm_stats_t       sm;$/;"	m	class:sm_stats_info_t
smLastThreadType	src/sm/smthread.h	/^    enum SmThreadTypes     {smThreadType = 1, smLastThreadType};$/;"	e	enum:smthread_t::SmThreadTypes
smThreadType	src/sm/smthread.h	/^    enum SmThreadTypes     {smThreadType = 1, smLastThreadType};$/;"	e	enum:smthread_t::SmThreadTypes
sm_config_info_t	src/sm/smstats.h	/^struct sm_config_info_t {$/;"	s
sm_diskaddr_max	src/common/lsn.h	/^    static const int sm_diskaddr_max;$/;"	m	class:lsn_t
sm_diskaddr_t	src/common/lsn.h	/^typedef w_base_t::int8_t sm_diskaddr_t;$/;"	t
sm_dispatch	src/sm/smsh/shell.cpp	/^sm_dispatch(ClientData, Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f
sm_du_stats_t	src/sm/sm_du_stats.h	/^    NORET             sm_du_stats_t() {clear();}$/;"	f	struct:sm_du_stats_t
sm_du_stats_t	src/sm/sm_du_stats.h	/^struct sm_du_stats_t {$/;"	s
sm_dumpbuffers	src/sm/sm.cpp	/^void        sm_dumpbuffers()$/;"	f
sm_dumpexts	src/sm/sm.cpp	/^void         sm_dumpexts(int vol, extnum_t start, extnum_t end)$/;"	f
sm_dumphisto	src/sm/sm.cpp	/^void        sm_dumphisto(bool locked)$/;"	f
sm_dumplocks	src/sm/sm.cpp	/^void        sm_dumplocks()$/;"	f
sm_dumpstores	src/sm/sm.cpp	/^void         sm_dumpstores(int vol, int start, int end)$/;"	f
sm_dumpxcts	src/sm/sm.cpp	/^void        sm_dumpxcts()$/;"	f
sm_escalation_t	src/sm/sm_escalation.h	/^class sm_escalation_t {$/;"	c
sm_escalation_t	src/sm/xct.cpp	/^sm_escalation_t::sm_escalation_t( int4_t p, int4_t s, int4_t v) $/;"	f	class:sm_escalation_t
sm_last	src/sm/sm_vtable_enum.h	/^    sm_last $/;"	e	enum:__anon13
sm_max_dir_cache	src/sm/smsh/smsh.h	/^    w_base_t::uint4_t  sm_max_dir_cache;$/;"	m	struct:linked_vars
sm_max_exts	src/sm/smsh/smsh.h	/^    w_base_t::uint4_t  sm_max_exts;$/;"	m	struct:linked_vars
sm_max_keycomp	src/sm/smsh/smsh.h	/^    w_base_t::uint4_t  sm_max_keycomp;$/;"	m	struct:linked_vars
sm_max_rec_len	src/sm/smsh/smsh.h	/^    w_base_t::uint4_t  sm_max_rec_len;$/;"	m	struct:linked_vars
sm_max_servers	src/sm/smsh/smsh.h	/^    w_base_t::uint4_t  sm_max_servers;$/;"	m	struct:linked_vars
sm_max_vols	src/sm/smsh/smsh.h	/^    w_base_t::uint4_t  sm_max_vols;$/;"	m	struct:linked_vars
sm_object_t	src/sm/newsort.cpp	/^    NORET sm_object_t() : object_t() { invalidate(); }$/;"	f	class:sm_object_t
sm_object_t	src/sm/newsort.cpp	/^    NORET sm_object_t(file_p&fp, slotid_t s):object_t() $/;"	f	class:sm_object_t
sm_object_t	src/sm/newsort.cpp	/^class sm_object_t : public object_t $/;"	c	file:
sm_page_sz	src/sm/smsh/smsh.h	/^    w_base_t::uint4_t  sm_page_sz;$/;"	m	struct:linked_vars
sm_quark_t	src/sm/sm.h	/^    NORET            sm_quark_t() {}$/;"	f	class:sm_quark_t
sm_quark_t	src/sm/sm.h	/^class sm_quark_t {$/;"	c
sm_save_point_t	src/sm/sm.h	/^    NORET            sm_save_point_t(): _tid(0,0) {};$/;"	f	class:sm_save_point_t
sm_save_point_t	src/sm/sm.h	/^class sm_save_point_t : public lsn_t {$/;"	c
sm_skey_t	src/sm/newsort.cpp	/^    NORET sm_skey_t() : skey_t() {}$/;"	f	class:sm_skey_t
sm_skey_t	src/sm/newsort.cpp	/^    NORET sm_skey_t(sm_object_t&o, smsize_t off, smsize_t l, bool h) $/;"	f	class:sm_skey_t
sm_skey_t	src/sm/newsort.cpp	/^class sm_skey_t : public skey_t $/;"	c	file:
sm_srvid_map_sz	src/sm/smsh/smsh.h	/^    w_base_t::uint4_t  sm_srvid_map_sz;$/;"	m	struct:linked_vars
sm_stats_info_t	src/sm/smstats.h	/^    sm_stats_info_t() {$/;"	f	class:sm_stats_info_t
sm_stats_info_t	src/sm/smstats.h	/^class sm_stats_info_t {$/;"	c
sm_stats_t	src/sm/smstats.h	/^class sm_stats_t {$/;"	c
sm_store_info_t	src/sm/sm.h	/^    NORET sm_store_info_t(int len) :$/;"	f	class:sm_store_info_t
sm_store_info_t	src/sm/sm.h	/^class sm_store_info_t {$/;"	c
sm_store_property_t	src/sm/sm_int_3.h	/^    enum sm_store_property_t {$/;"	g	class:smlevel_3
sm_thread_map_t	src/sm/smthread.h	/^typedef w_bitvector_t<256>    sm_thread_map_t;$/;"	t
sm_undo_thread_t	src/sm/restart.cpp	/^class sm_undo_thread_t : public smthread_t {$/;"	c	file:
sm_undo_thread_t	src/sm/restart.cpp	/^sm_undo_thread_t::sm_undo_thread_t(xct_t *xd)$/;"	f	class:sm_undo_thread_t
sm_vol_rlock_t	src/sm/sm.cpp	/^typedef occ_rwlock::occ_rlock sm_vol_rlock_t;$/;"	t	file:
sm_vol_rlock_t	src/sm/sm.cpp	/^typedef queue_based_lock_t sm_vol_rlock_t;$/;"	t	file:
sm_vol_rlock_t	src/sm/smindex.cpp	/^typedef occ_rwlock::occ_rlock sm_vol_rlock_t;$/;"	t	file:
sm_vol_rlock_t	src/sm/smindex.cpp	/^typedef queue_based_lock_t sm_vol_rlock_t;$/;"	t	file:
sm_vol_rwlock_t	src/sm/sm.cpp	/^typedef occ_rwlock sm_vol_rwlock_t;$/;"	t	file:
sm_vol_rwlock_t	src/sm/sm.cpp	/^typedef queue_based_lock_t sm_vol_rwlock_t;$/;"	t	file:
sm_vol_rwlock_t	src/sm/smindex.cpp	/^typedef occ_rwlock sm_vol_rwlock_t;$/;"	t	file:
sm_vol_rwlock_t	src/sm/smindex.cpp	/^typedef queue_based_lock_t sm_vol_rwlock_t;$/;"	t	file:
sm_vol_wlock_t	src/sm/sm.cpp	/^typedef occ_rwlock::occ_wlock sm_vol_wlock_t;$/;"	t	file:
sm_vol_wlock_t	src/sm/sm.cpp	/^typedef queue_based_lock_t sm_vol_wlock_t;$/;"	t	file:
sm_vol_wlock_t	src/sm/smindex.cpp	/^typedef occ_rwlock::occ_wlock sm_vol_wlock_t;$/;"	t	file:
sm_vol_wlock_t	src/sm/smindex.cpp	/^typedef queue_based_lock_t sm_vol_wlock_t;$/;"	t	file:
small	src/sm/sm_du_stats.h	/^    SmStoreMetaStats    small;$/;"	m	class:SmFileMetaStats
smallSnum	src/sm/sm_du_stats.h	/^    snum_t            smallSnum;$/;"	m	class:SmFileMetaStats
small_rec_cnt	src/sm/sm_du_stats.h	/^    base_stat_t        small_rec_cnt;         \/* # small-obj records *\/$/;"	m	struct:file_pg_stats_t
smap	src/sm/rtree_p.h	/^    u_char    smap[rtree_p::smap_sz];$/;"	m	class:rt_cursor_t
smap_sz	src/sm/rtree_p.h	/^    smap_sz = max_scnt \/ sizeof(u_char) + 1$/;"	e	enum:rtree_base_p::__anon64
smksize_t	src/sm/sm_base.h	/^    typedef sthread_t::fileoff_t smksize_t;$/;"	t	class:smlevel_0
smksize_t	src/sm/tests/create_rec.cpp	/^typedef        smlevel_0::smksize_t        smksize_t;$/;"	t	file:
smksize_t	src/sm/tests/file_scan.cpp	/^typedef    smlevel_0::smksize_t    smksize_t;$/;"	t	file:
smksize_t	src/sm/tests/file_scan_many.cpp	/^typedef        smlevel_0::smksize_t        smksize_t;$/;"	t	file:
smksize_t	src/sm/tests/log_exceed.cpp	/^typedef        smlevel_0::smksize_t        smksize_t;$/;"	t	file:
smksize_t	src/sm/tests/mrbtrees_test.cpp	/^typedef        smlevel_0::smksize_t        smksize_t;$/;"	t	file:
smksize_t	src/sm/tests/rtree_example.cpp	/^typedef        smlevel_0::smksize_t        smksize_t;$/;"	t	file:
smksize_t	src/sm/tests/sort_stream.cpp	/^typedef        smlevel_0::smksize_t        smksize_t;$/;"	t	file:
smksize_t	src/sm/tests/vtable_example.cpp	/^typedef        smlevel_0::smksize_t        smksize_t;$/;"	t	file:
smlevel_0	src/sm/sm_base.h	/^class smlevel_0 : public w_base_t {$/;"	c
smlevel_1	src/sm/sm_int_1.h	/^class smlevel_1 : public smlevel_0 {$/;"	c
smlevel_2	src/sm/sm_int_2.h	/^class smlevel_2 : public smlevel_1 {$/;"	c
smlevel_3	src/sm/sm_int_3.h	/^class smlevel_3 : public smlevel_2 {$/;"	c
smlevel_4	src/sm/sm_int_4.h	/^class smlevel_4 : public smlevel_3 {$/;"	c
smlevel_top	src/sm/sm_int_4.h	/^typedef smlevel_4 smlevel_top;$/;"	t
smproc_t	src/sm/smsh/shell.h	/^typedef int smproc_t(Tcl_Interp* ip, int ac, TCL_AV char* av[]);$/;"	t
smsh_DEPENDENCIES	src/sm/smsh/Makefile	/^smsh_DEPENDENCIES = $(top_builddir)\/src\/sm\/libsm.a \\$/;"	m
smsh_LDADD	src/sm/smsh/Makefile	/^smsh_LDADD = $(LDADD)$/;"	m
smsh_OBJECTS	src/sm/smsh/Makefile	/^smsh_OBJECTS = $(am_smsh_OBJECTS)$/;"	m
smsh_SOURCES	src/sm/smsh/Makefile	/^smsh_SOURCES = \\$/;"	m
smsh_err_code	src/sm/smsh/smsh_error.cpp	/^smsh_err_code(const char *x)$/;"	f
smsh_err_msg	src/sm/smsh/smsh_error.cpp	/^smsh_err_msg(const char *str)$/;"	f
smsh_err_name	src/sm/smsh/smsh_error.cpp	/^smsh_err_name(unsigned int x)$/;"	f
smsh_error_list	src/sm/smsh/smsh.cpp	/^static const w_error_info_t smsh_error_list[]=$/;"	v	file:
smsh_type_info	src/sm/smsh/sm_sizeof.cpp	/^static const smsh_type_info_t    smsh_type_info[] = {$/;"	v	file:
smsh_type_info_t	src/sm/smsh/sm_sizeof.cpp	/^struct smsh_type_info_t {$/;"	s	file:
smshdir	src/sm/smsh/Makefile	/^smshdir = $(top_srcdir)\/src\/sm\/smsh$/;"	m
smsize_t	src/common/basics.h	/^typedef uint4_t               smsize_t;$/;"	t
smthread_block	src/sm/smthread.cpp	/^w_rc_t::errcode_t   smthread_t::smthread_block(timeout_in_ms timeout,$/;"	f	class:smthread_t
smthread_creator_t	src/sm/tests/file_scan_many.cpp	/^    smthread_creator_t(const vid_t &v, int _id, int n, int sz) : $/;"	f	class:smthread_creator_t
smthread_creator_t	src/sm/tests/file_scan_many.cpp	/^class smthread_creator_t : public smthread_main_t $/;"	c	file:
smthread_creator_t	src/sm/tests/mrbtrees_test.cpp	/^  smthread_creator_t(int num_rec, int rec_size, bool bIgnoreLocks, bool bIgnoreLatches,$/;"	f	class:smthread_creator_t
smthread_creator_t	src/sm/tests/mrbtrees_test.cpp	/^class smthread_creator_t : public smthread_main_t $/;"	c	file:
smthread_init	src/sm/smthread.cpp	/^static smthread_init_t smthread_init;$/;"	v	file:
smthread_init_t	src/sm/smthread.cpp	/^smthread_init_t::smthread_init_t()$/;"	f	class:smthread_init_t
smthread_init_t	src/sm/smthread.h	/^class smthread_init_t {$/;"	c
smthread_is_in_sm_attr	src/sm/sm_vtable_enum.h	/^    smthread_is_in_sm_attr,$/;"	e	enum:__anon14
smthread_last	src/sm/sm_vtable_enum.h	/^    smthread_last$/;"	e	enum:__anon14
smthread_main_t	src/sm/tests/file_scan_many.cpp	/^    smthread_main_t(int ac, char **av, const char *name="smthread_main_t" ) $/;"	f	class:smthread_main_t
smthread_main_t	src/sm/tests/file_scan_many.cpp	/^class smthread_main_t : public smthread_t $/;"	c	file:
smthread_main_t	src/sm/tests/mrbtrees_test.cpp	/^  smthread_main_t(int ac, char **av, const char* name="smthread_main_t") $/;"	f	class:smthread_main_t
smthread_main_t	src/sm/tests/mrbtrees_test.cpp	/^class smthread_main_t : public smthread_t {$/;"	c	file:
smthread_name_attr	src/sm/sm_vtable_enum.h	/^    smthread_name_attr = sthread_last,$/;"	e	enum:__anon14
smthread_pin_count_attr	src/sm/sm_vtable_enum.h	/^    smthread_pin_count_attr,$/;"	e	enum:__anon14
smthread_scanner_t	src/sm/tests/file_scan_many.cpp	/^    smthread_scanner_t($/;"	f	class:smthread_scanner_t
smthread_scanner_t	src/sm/tests/file_scan_many.cpp	/^class smthread_scanner_t : public smthread_main_t $/;"	c	file:
smthread_scanner_t	src/sm/tests/mrbtrees_test.cpp	/^  smthread_scanner_t(stid_t stid, int scan_file,$/;"	f	class:smthread_scanner_t
smthread_scanner_t	src/sm/tests/mrbtrees_test.cpp	/^class smthread_scanner_t : public smthread_main_t $/;"	c	file:
smthread_t	src/sm/smthread.cpp	/^smthread_t::smthread_t($/;"	f	class:smthread_t
smthread_t	src/sm/smthread.h	/^class smthread_t : public sthread_t {$/;"	c
smthread_thread_type_attr	src/sm/sm_vtable_enum.h	/^    smthread_thread_type_attr,$/;"	e	enum:__anon14
smthread_tid_attr	src/sm/sm_vtable_enum.h	/^    smthread_tid_attr,$/;"	e	enum:__anon14
smthread_unblock	src/sm/smthread.cpp	/^w_rc_t   smthread_t::smthread_unblock(w_rc_t::errcode_t e)$/;"	f	class:smthread_t
smthread_user_t	src/sm/tests/create_rec.cpp	/^        smthread_user_t(int ac, char **av) $/;"	f	class:smthread_user_t
smthread_user_t	src/sm/tests/create_rec.cpp	/^class smthread_user_t : public smthread_t {$/;"	c	file:
smthread_user_t	src/sm/tests/file_scan.cpp	/^    smthread_user_t(int ac, char **av) $/;"	f	class:smthread_user_t
smthread_user_t	src/sm/tests/file_scan.cpp	/^class smthread_user_t : public smthread_t {$/;"	c	file:
smthread_user_t	src/sm/tests/log_exceed.cpp	/^        smthread_user_t(int ac, char **av) $/;"	f	class:smthread_user_t
smthread_user_t	src/sm/tests/log_exceed.cpp	/^class smthread_user_t : public smthread_t {$/;"	c	file:
smthread_user_t	src/sm/tests/rtree_example.cpp	/^        smthread_user_t(int ac, char **av) $/;"	f	class:smthread_user_t
smthread_user_t	src/sm/tests/rtree_example.cpp	/^class smthread_user_t : public smthread_t {$/;"	c	file:
smthread_user_t	src/sm/tests/sort_stream.cpp	/^        smthread_user_t(int ac, char **av) $/;"	f	class:smthread_user_t
smthread_user_t	src/sm/tests/sort_stream.cpp	/^class smthread_user_t : public smthread_t {$/;"	c	file:
smthread_user_t	src/sm/tests/startstop.cpp	/^	smthread_user_t(int ac, char **av) $/;"	f	class:smthread_user_t
smthread_user_t	src/sm/tests/startstop.cpp	/^class smthread_user_t : public smthread_t {$/;"	c	file:
smthread_user_t	src/sm/tests/vtable_example.cpp	/^        smthread_user_t(int ac, char **av) $/;"	f	class:smthread_user_t
smthread_user_t	src/sm/tests/vtable_example.cpp	/^class smthread_user_t : public smthread_t {$/;"	c	file:
smthread_vtable_attr_names	src/sm/vtable_smthread.cpp	/^const char *smthread_vtable_attr_names[] = {$/;"	v
smultis	src/common/regex2.h	/^    size_t smultis;$/;"	m	struct:__anon9
snapshot	src/sm/bf.cpp	/^bf_m::snapshot($/;"	f	class:bf_m
snapshot	src/sm/bf_core.cpp	/^bf_core_m::snapshot( u_int& npinned, u_int& nfree)$/;"	f	class:bf_core_m
snapshot_buffers	src/sm/sm.cpp	/^ss_m::snapshot_buffers(u_int& ndirty, $/;"	f	class:ss_m
snapshot_me	src/sm/bf.cpp	/^bf_m::snapshot_me($/;"	f	class:bf_m
snapshot_me	src/sm/bf_core.cpp	/^bf_core_m::snapshot_me( u_int& nsh, u_int& nex, u_int& ndiff)$/;"	f	class:bf_core_m
snum	src/sm/logrec.cpp	/^    snum_t                snum;$/;"	m	struct:pages_in_ext_t	file:
snum	src/sm/sm_io.h	/^        snum_t snum()  const$/;"	f	class:store_operation_param
snum	src/sm/vol.h	/^            snum_t snum; \/\/ store$/;"	m	struct:vol_t::ext_cache_t::ext_info
snum_t	src/common/stid_t.h	/^typedef uint4_t    snum_t;$/;"	t
sob_cmp	src/sm/rtree.cpp	/^sob_cmp(const nbox_t& key, const nbox_t& box, nbox_t::sob_cmp_t type)$/;"	f	file:
sob_cmp_nulls	src/sm/rtree.cpp	/^sob_cmp_nulls(const nbox_t& key, const nbox_t& box, nbox_t::sob_cmp_t type)$/;"	f	file:
sob_cmp_t	src/fc/nbox.h	/^    enum sob_cmp_t { t_exact = 1, t_overlap, t_cover, t_inside, t_bad };$/;"	g	class:nbox_t
socket_count	src/fc/cpu_info.h	/^	long socket_count;$/;"	m	struct:cpu_info::helper
socket_count	src/fc/cpu_info.h	/^    static long socket_count() { return get_helper()->socket_count; }$/;"	f	struct:cpu_info
socket_of	src/fc/cpu_info.cpp	/^long cpu_info::socket_of(long cid) {$/;"	f	class:cpu_info
socket_of	src/fc/cpu_info.cpp	/^long cpu_info::socket_of(long cpuid) {$/;"	f	class:cpu_info
socket_self	src/fc/cpu_info.cpp	/^long cpu_info::socket_self() { return socket_of(cpuid()); }$/;"	f	class:cpu_info
socket_self	src/fc/cpu_info.cpp	/^long cpu_info::socket_self() {$/;"	f	class:cpu_info
socket_size	src/fc/cpu_info.cpp	/^    static unsigned socket_size(unsigned a1_b=cpuid_a1_b()) {$/;"	f	struct:cpu_info::impl_helper
sop	src/common/regex2.h	/^typedef unsigned long sop;    \/* strip operator *\/$/;"	t
sopno	src/common/regex2.h	/^typedef long sopno;$/;"	t
sort_context	src/sm/rtree.cpp	/^static struct sort_context sort_context;$/;"	v	typeref:struct:sort_context	file:
sort_context	src/sm/rtree.cpp	/^struct sort_context {$/;"	s	file:
sort_desc_t	src/sm/sort.cpp	/^sort_desc_t::sort_desc_t() $/;"	f	class:sort_desc_t
sort_desc_t	src/sm/sort.cpp	/^struct sort_desc_t {$/;"	s	file:
sort_duplicates	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sort_duplicates;$/;"	v
sort_file	src/sm/newsort.cpp	/^ss_m::sort_file($/;"	f	class:ss_m
sort_file	src/sm/sort.cpp	/^ss_m::sort_file(const stid_t& fid, \/\/ I - input file id$/;"	f	class:ss_m
sort_files_created	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sort_files_created;$/;"	v
sort_getinfo_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sort_getinfo_cnt;$/;"	v
sort_is_instrumented	src/sm/sort.cpp	/^bool sort_is_instrumented()$/;"	f
sort_key	src/sm/newsort.cpp	/^    const sm_skey_t&         sort_key(int i) const { return _sort_key[i]; }$/;"	f	class:meta_header_t
sort_key_non_const	src/sm/newsort.cpp	/^    sm_skey_t&               sort_key_non_const(int i) { return _sort_key[i]; }$/;"	f	class:meta_header_t
sort_key_t	src/sm/sort.cpp	/^    NORET sort_key_t() {$/;"	f	struct:sort_key_t
sort_key_t	src/sm/sort.cpp	/^struct sort_key_t {$/;"	s	file:
sort_keycmp_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sort_keycmp_cnt;$/;"	v
sort_keycpy_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sort_keycpy_cnt;$/;"	v
sort_keys_t	src/sm/newsort.cpp	/^typedef ssm_sort::sort_keys_t sort_keys_t;$/;"	t	file:
sort_keys_t	src/sm/sm.h	/^    typedef ssm_sort::sort_keys_t sort_keys_t;$/;"	t	class:ss_m
sort_keys_t	src/sm/sort.cpp	/^typedef ssm_sort::sort_keys_t sort_keys_t;$/;"	t	file:
sort_keys_t	src/sm/sort.h	/^  typedef ssm_sort::sort_keys_t sort_keys_t;$/;"	t	class:sort_stream_i
sort_keys_t	src/sm/sort_s.h	/^class sort_keys_t $/;"	c	namespace:ssm_sort
sort_keys_t	src/sm/sort_s.h	/^ssm_sort::sort_keys_t::sort_keys_t(const sort_keys_t &old) : $/;"	f	class:ssm_sort::sort_keys_t
sort_keys_t	src/sm/sort_s.h	/^ssm_sort::sort_keys_t::sort_keys_t(int nkeys):$/;"	f	class:ssm_sort::sort_keys_t
sort_lexindx_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sort_lexindx_cnt;$/;"	v
sort_lg_page_fixes	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sort_lg_page_fixes;$/;"	v
sort_malloc_bytes	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sort_malloc_bytes;$/;"	v
sort_malloc_curr	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sort_malloc_curr;$/;"	v
sort_malloc_hiwat	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sort_malloc_hiwat;$/;"	v
sort_malloc_max	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sort_malloc_max;$/;"	v
sort_mallocs	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sort_mallocs;$/;"	v
sort_memcpy_bytes	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sort_memcpy_bytes;$/;"	v
sort_memcpy_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sort_memcpy_cnt;$/;"	v
sort_mof_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sort_mof_cnt;$/;"	v
sort_ntapes	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sort_ntapes;$/;"	v
sort_page_fixes	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sort_page_fixes;$/;"	v
sort_page_fixes_2	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sort_page_fixes_2;$/;"	v
sort_parm_t	src/sm/sort.cpp	/^typedef ssm_sort::sort_parm_t sort_parm_t;$/;"	t	file:
sort_parm_t	src/sm/sort.h	/^    typedef ssm_sort::sort_parm_t sort_parm_t;$/;"	t	class:run_scan_t
sort_parm_t	src/sm/sort.h	/^  typedef ssm_sort::sort_parm_t sort_parm_t;$/;"	t	class:sort_stream_i
sort_parm_t	src/sm/sort_s.h	/^    sort_parm_t() : run_size(10), unique(false), ascending(true),$/;"	f	struct:ssm_sort::sort_parm_t
sort_parm_t	src/sm/sort_s.h	/^struct sort_parm_t {$/;"	s	namespace:ssm_sort
sort_phase_done	src/sm/newsort.cpp	/^    void sort_phase_done() {$/;"	f	class:phase_mgr
sort_phases	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sort_phases;$/;"	v
sort_rec_bytes	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sort_rec_bytes;$/;"	v
sort_rec_pins	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sort_rec_pins;$/;"	v
sort_recs_created	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sort_recs_created;$/;"	v
sort_run_size	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sort_run_size;$/;"	v
sort_runs	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sort_runs;$/;"	v
sort_stream_DEPENDENCIES	src/sm/tests/Makefile	/^sort_stream_DEPENDENCIES = $(top_builddir)\/src\/sm\/libsm.a \\$/;"	m
sort_stream_LDADD	src/sm/tests/Makefile	/^sort_stream_LDADD = $(LDADD)$/;"	m
sort_stream_OBJECTS	src/sm/tests/Makefile	/^sort_stream_OBJECTS = $(am_sort_stream_OBJECTS)$/;"	m
sort_stream_SOURCES	src/sm/tests/Makefile	/^sort_stream_SOURCES = sort_stream.cpp init_config_options.cpp $/;"	m
sort_stream_i	src/sm/sort.cpp	/^sort_stream_i::sort_stream_i() : xct_dependent_t(xct()) $/;"	f	class:sort_stream_i
sort_stream_i	src/sm/sort.cpp	/^sort_stream_i::sort_stream_i(const key_info_t& k, const sort_parm_t& s,$/;"	f	class:sort_stream_i
sort_stream_i	src/sm/sort.h	/^class sort_stream_i : public smlevel_top, public xct_dependent_t $/;"	c
sort_tmpfile_bytes	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sort_tmpfile_bytes;$/;"	v
sort_tmpfile_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sort_tmpfile_cnt;$/;"	v
sort_umof_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t sort_umof_cnt;$/;"	v
sorted	src/sm/sort.h	/^    bool              sorted;        \/\/ sorted flag$/;"	m	class:sort_stream_i
sortorder	src/sm/lexify.cpp	/^sortorder::sortorder()$/;"	f	class:sortorder
sortorder	src/sm/lexify.h	/^class sortorder : private smlevel_0 {$/;"	c
sortstophere	src/sm/newsort.cpp	/^extern "C" void sortstophere()$/;"	f
sp	src/sm/sort.h	/^    sort_parm_t       sp;        \/\/ sort parameters$/;"	m	class:sort_stream_i
space	src/sm/page_h.h	/^    smsize_t  space() const { return _space_left; }$/;"	f	class:pginfo_t
space	src/sm/page_s.h	/^    space_t     space;         \/\/ space management$/;"	m	class:page_s
space_bucket_mask	src/sm/page_h.h	/^      space_bucket_mask     =    (1<<space_bucket_size_in_bits) - 1$/;"	e	enum:__anon52
space_bucket_mask_high_bits	src/sm/page_h.h	/^    space_bucket_mask_high_bits =  $/;"	e	enum:__anon54
space_bucket_size_in_bits	src/sm/page_h.h	/^      space_bucket_size_in_bits     = HBUCKETBITS, $/;"	e	enum:__anon52
space_bucket_t	src/sm/page.h	/^typedef uint1_t        space_bucket_t;$/;"	t
space_left	src/sm/log.h	/^    fileoff_t           space_left() const { return *&_space_available; }$/;"	f	class:log_m
space_num_buckets	src/sm/page_h.h	/^        space_num_buckets        = 16, \/\/ 2**HBUCKETBITS,$/;"	e	enum:__anon52
space_t	src/sm/page_s.h	/^        space_t()     {};$/;"	f	class:page_s::space_t
space_t	src/sm/page_s.h	/^    class space_t {$/;"	c	class:page_s
spatial_srch	src/sm/rtree.cpp	/^rtree_p::spatial_srch(const nbox_t& key, nbox_t::sob_cmp_t ctype, $/;"	f	class:rtree_p
spawn_chkpt_thread	src/sm/chkpt.cpp	/^chkpt_m::spawn_chkpt_thread()$/;"	f	class:chkpt_m
special	src/sm/smsh/shell2.cpp	/^void special() { }$/;"	f
special_timeout_in_ms_t	src/sm/smthread.h	/^enum special_timeout_in_ms_t {$/;"	g
spid	src/sm/vol.h	/^    const shpid_t&   spid() const { return _spid; }$/;"	f	class:volhdr_t
spin	src/sthread/no-inline.cpp	/^void tatas_lock::spin() { while(*&(_holder.handle)) ; }$/;"	f	class:tatas_lock
spin_on_next	src/sthread/no-inline.cpp	/^mcs_lock::qnode* mcs_lock::spin_on_next(qnode* me) {$/;"	f	class:mcs_lock
spin_on_waiting	src/sthread/no-inline.cpp	/^void mcs_lock::spin_on_waiting(qnode* me) {$/;"	f	class:mcs_lock
splice	src/sm/page.cpp	/^page_p::splice(slotid_t idx, int cnt, splice_info_t info[])$/;"	f	class:page_p
splice	src/sm/page.cpp	/^page_p::splice(slotid_t idx, slot_length_t start, slot_length_t len, const cvec_t& vec)$/;"	f	class:page_p
splice_data	src/sm/file.cpp	/^file_p::splice_data(slotid_t idx, slot_length_t start, slot_length_t len, const vec_t& data)$/;"	f	class:file_p
splice_hdr	src/sm/file.cpp	/^file_m::splice_hdr(rid_t rid, slot_length_t start, slot_length_t len, $/;"	f	class:file_m
splice_hdr	src/sm/file.h	/^file_p::splice_hdr(slotid_t idx, slot_length_t start, slot_length_t len, const vec_t& data)$/;"	f	class:file_p
splice_info_t	src/sm/page.h	/^        splice_info_t(int s, int l, const vec_t& d) : $/;"	f	struct:page_p::splice_info_t
splice_info_t	src/sm/page.h	/^    struct splice_info_t {$/;"	s	class:page_p
split	src/common/vec_t.cpp	/^void cvec_t::split(size_t l1, cvec_t& v1, cvec_t& v2) const$/;"	f	class:cvec_t
split_slot	src/sm/page.cpp	/^page_p::split_slot(slotid_t idx, slot_offset_t off, const cvec_t& v1,$/;"	f	class:page_p
split_tree	src/sm/btree.cpp	/^btree_m::split_tree($/;"	f	class:btree_m
squared	src/fc/nbox.cpp	/^void nbox_t::squared()$/;"	f	class:nbox_t
squeezed_by	src/sm/log.cpp	/^log_m::squeezed_by(const lsn_t &self)  const $/;"	f	class:log_m
srcdir	Makefile	/^srcdir = .$/;"	m
srcdir	config/Makefile	/^srcdir = .$/;"	m
srcdir	src/Makefile	/^srcdir = .$/;"	m
srcdir	src/atomic_ops/Makefile	/^srcdir = .$/;"	m
srcdir	src/atomic_ops/asm_linkage/Makefile	/^srcdir = .$/;"	m
srcdir	src/atomic_ops/asm_linkage/usr/Makefile	/^srcdir = .$/;"	m
srcdir	src/atomic_ops/asm_linkage/usr/src/Makefile	/^srcdir = .$/;"	m
srcdir	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^srcdir = .$/;"	m
srcdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^srcdir = .$/;"	m
srcdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^srcdir = .$/;"	m
srcdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^srcdir = .$/;"	m
srcdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^srcdir = .$/;"	m
srcdir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^srcdir = .$/;"	m
srcdir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^srcdir = .$/;"	m
srcdir	src/atomic_ops/atomic_ops/Makefile	/^srcdir = .$/;"	m
srcdir	src/atomic_ops/atomic_ops/amd64/Makefile	/^srcdir = .$/;"	m
srcdir	src/atomic_ops/atomic_ops/i386/Makefile	/^srcdir = .$/;"	m
srcdir	src/atomic_ops/atomic_ops/sparc/Makefile	/^srcdir = .$/;"	m
srcdir	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^srcdir = .$/;"	m
srcdir	src/atomic_ops/ia32/Makefile	/^srcdir = .$/;"	m
srcdir	src/atomic_ops/ia32/sys/Makefile	/^srcdir = .$/;"	m
srcdir	src/atomic_ops/intel/Makefile	/^srcdir = .$/;"	m
srcdir	src/atomic_ops/intel/ia32/Makefile	/^srcdir = .$/;"	m
srcdir	src/atomic_ops/intel/ia32/sys/Makefile	/^srcdir = .$/;"	m
srcdir	src/atomic_ops/intel/sys/Makefile	/^srcdir = .$/;"	m
srcdir	src/atomic_ops/sparc/Makefile	/^srcdir = .$/;"	m
srcdir	src/atomic_ops/sparc/sys/Makefile	/^srcdir = .$/;"	m
srcdir	src/common/Makefile	/^srcdir = .$/;"	m
srcdir	src/common/tests/Makefile	/^srcdir = .$/;"	m
srcdir	src/fc/Makefile	/^srcdir = .$/;"	m
srcdir	src/fc/tests/Makefile	/^srcdir = .$/;"	m
srcdir	src/sm/Makefile	/^srcdir = .$/;"	m
srcdir	src/sm/smsh/Makefile	/^srcdir = .$/;"	m
srcdir	src/sm/smsh/lib/Makefile	/^srcdir = .$/;"	m
srcdir	src/sm/smsh/scripts/Makefile	/^srcdir = .$/;"	m
srcdir	src/sm/tests/Makefile	/^srcdir = .$/;"	m
srcdir	src/sthread/Makefile	/^srcdir = .$/;"	m
srcdir	src/sthread/tests/Makefile	/^srcdir = .$/;"	m
srcdir	tools/Makefile	/^srcdir = .$/;"	m
srvid_map_sz	src/sm/sm_base.h	/^        srvid_map_sz = (max_servers - 1) \/ 8 + 1,$/;"	e	enum:smlevel_0::__anon28
srwlock_t	src/sthread/srwlock.h	/^typedef mcs_rwlock srwlock_t;$/;"	t
ss_DEPENDENCIES	src/fc/tests/Makefile	/^ss_DEPENDENCIES = ..\/libfc.a $(LOCALLDADD)$/;"	m
ss_LDADD	src/fc/tests/Makefile	/^ss_LDADD = $(LDADD)$/;"	m
ss_OBJECTS	src/fc/tests/Makefile	/^ss_OBJECTS = $(am_ss_OBJECTS)$/;"	m
ss_SOURCES	src/fc/tests/Makefile	/^ss_SOURCES = ss.cpp$/;"	m
ss_m	src/sm/sm.cpp	/^ss_m::ss_m($/;"	f	class:ss_m
ss_m	src/sm/sm.h	/^class ss_m : public smlevel_top $/;"	c
ssize	src/common/regcomp.cpp	/^    sopno ssize;        \/* malloced strip size (allocated) *\/$/;"	m	struct:parse	file:
ssm	src/sm/tests/create_rec.cpp	/^ss_m* ssm = 0;$/;"	v
ssm	src/sm/tests/file_scan.cpp	/^ss_m* ssm = 0;$/;"	v
ssm	src/sm/tests/file_scan_many.cpp	/^ss_m* ssm = 0;$/;"	v
ssm	src/sm/tests/log_exceed.cpp	/^ss_m* ssm = 0;$/;"	v
ssm	src/sm/tests/mrbtrees_test.cpp	/^ss_m* ssm = 0;$/;"	v
ssm	src/sm/tests/rtree_example.cpp	/^ss_m* ssm = 0;$/;"	v
ssm	src/sm/tests/sort_stream.cpp	/^ss_m* ssm = 0;$/;"	v
ssm	src/sm/tests/vtable_example.cpp	/^ss_m* ssm = 0;$/;"	v
ssm_constants	src/sm/app_support.h	/^class ssm_constants {$/;"	c
ssm_once_mutex	src/sm/sm.cpp	/^static queue_based_block_lock_t ssm_once_mutex;$/;"	v	file:
ssm_sort	src/sm/lexify.h	/^namespace ssm_sort {$/;"	n
ssm_sort	src/sm/sort_s.h	/^namespace ssm_sort {$/;"	n
ssmtest	src/sm/crash.cpp	/^ssmtest($/;"	f
st	src/common/regex_engine.cpp	/^    states st;        \/* current states *\/$/;"	m	struct:match	file:
stBADADDR	src/sthread/st_error_enum_gen.h	/^    stBADADDR                 = 0x40003,$/;"	e	enum:__anon150
stBADFD	src/sthread/sdisk_unix.cpp	/^const int stBADFD = sthread_base_t::stBADFD;$/;"	v
stBADFD	src/sthread/st_error_enum_gen.h	/^    stBADFD                   = 0x40002,$/;"	e	enum:__anon150
stBADPATH	src/sthread/st_error_enum_gen.h	/^    stBADPATH                 = 0x40001,$/;"	e	enum:__anon150
stERRMAX	src/sthread/st_error_enum_gen.h	/^    stERRMAX                  = 0x40007$/;"	e	enum:__anon150
stERRMIN	src/sthread/st_error_enum_gen.h	/^    stERRMIN                  = 0x40000,$/;"	e	enum:__anon150
stINTERNAL	src/sthread/sthread.h	/^    stINTERNAL = fcINTERNAL,$/;"	e	enum:sthread_base_t::__anon135
stINUSE	src/sthread/st_error_enum_gen.h	/^    stINUSE                   = 0x40005,$/;"	e	enum:__anon150
stINVAL	src/sthread/sdisk_unix.cpp	/^const int stINVAL = sthread_base_t::stINVAL;$/;"	v
stINVAL	src/sthread/st_error_enum_gen.h	/^    stINVAL                   = 0x40004,$/;"	e	enum:__anon150
stNOTIMPLEMENTED	src/sthread/sthread.h	/^    stNOTIMPLEMENTED = fcNOTIMPLEMENTED $/;"	e	enum:sthread_base_t::__anon135
stOK	src/sthread/st_error_enum_gen.h	/^    stOK                      = 0x0,$/;"	e	enum:__anon150
stOS	src/sthread/sthread.h	/^    stOS = fcOS,$/;"	e	enum:sthread_base_t::__anon135
stSHORTIO	src/sthread/st_error_enum_gen.h	/^    stSHORTIO                 = 0x40006,$/;"	e	enum:__anon150
stSHORTSEEK	src/sthread/sdisk.cpp	/^const    int    stSHORTSEEK = sthread_base_t::stSHORTSEEK;$/;"	v
stSHORTSEEK	src/sthread/st_error_enum_gen.h	/^    stSHORTSEEK               = 0x40007,$/;"	e	enum:__anon150
stTIMEOUT	src/sthread/st_error_enum_gen.h	/^    stTIMEOUT                 = 0x40000,$/;"	e	enum:__anon150
st_bad	src/sm/sm_base.h	/^        st_bad            = 0x0,$/;"	e	enum:smlevel_0::store_flag_t
st_block_size	src/sthread/sdisk.h	/^        unsigned    st_block_size;$/;"	m	struct:sdisk_base_t::filestat_t
st_device_id	src/sthread/sdisk.h	/^        unsigned    st_device_id;$/;"	m	struct:sdisk_base_t::filestat_t
st_dispatch	src/sm/smsh/shell.cpp	/^extern "C" int st_dispatch(ClientData, Tcl_Interp *tcl, int argc, TCL_AV char **argv)$/;"	f
st_empty	src/sm/sm_base.h	/^        st_empty           = 0x100 \/\/ store might be empty - used ONLY$/;"	e	enum:smlevel_0::store_flag_t
st_errmsg	src/sthread/st_errmsg_gen.h	/^static char* st_errmsg[] = {$/;"	v
st_error_info_bakw	src/sthread/st_einfo_bakw_gen.h	/^w_error_info_t st_error_info_bakw[] = {$/;"	v
st_file_id	src/sthread/sdisk.h	/^        fileoff_t    st_file_id;$/;"	m	struct:sdisk_base_t::filestat_t
st_hires	src/fc/stime.cpp	60;"	d	file:
st_hires	src/fc/stime.cpp	65;"	d	file:
st_hires	src/fc/tests/ntime.cpp	58;"	d	file:
st_hires	src/fc/tests/ntime.cpp	62;"	d	file:
st_insert_file	src/sm/sm_base.h	/^        st_insert_file     = 0x08,        \/\/ stored in stnode, but not on page.$/;"	e	enum:smlevel_0::store_flag_t
st_load_file	src/sm/sm_base.h	/^        st_load_file      = 0x04, \/\/ not stored in the stnode_t, $/;"	e	enum:smlevel_0::store_flag_t
st_msg_size	src/sthread/st_errmsg_gen.h	/^const st_msg_size = 7;$/;"	v
st_proc_t	src/sm/smthread.h	/^typedef void st_proc_t(void*);$/;"	t
st_regular	src/sm/sm_base.h	/^        st_regular        = 0x01, \/\/ fully logged$/;"	e	enum:smlevel_0::store_flag_t
st_size	src/sthread/sdisk.h	/^        fileoff_t    st_size;$/;"	m	struct:sdisk_base_t::filestat_t
st_tmp	src/sm/sm_base.h	/^        st_tmp            = 0x02, \/\/ space logging only, $/;"	e	enum:smlevel_0::store_flag_t
st_tod	src/fc/stime.cpp	59;"	d	file:
st_tod	src/fc/stime.cpp	64;"	d	file:
st_tod	src/fc/tests/ntime.cpp	57;"	d	file:
st_tod	src/fc/tests/ntime.cpp	61;"	d	file:
stack_size	src/sthread/stcore_pthread.h	/^    int         stack_size;        \/* stack size *\/$/;"	m	struct:sthread_core_t
stackoverflowed	src/sthread/sthread.cpp	/^extern "C" void stackoverflowed() {}$/;"	f
start	src/fc/w_input.cpp	/^enum states {   start, sgned, leadz,  $/;"	e	enum:states	file:
start	src/sm/log_core.h	/^        long start; \/\/ offset from _buf[0] of this epoch$/;"	m	struct:log_core::epoch
start	src/sm/logrec.cpp	/^    uint2_t                 start;  \/\/ offset in the slot where the splice began$/;"	m	struct:page_splice_t	file:
start	src/sm/logrec.cpp	/^    uint2_t                 start;  \/\/ offset in the slot where the splice began$/;"	m	struct:page_splicez_t	file:
start	src/sm/page.h	/^        slot_length_t start; \/\/ offset INTO slot$/;"	m	struct:page_p::splice_info_t
start	src/sm/partition.h	/^    fileoff_t          start() const { w_assert1(_start==0); return _start; }$/;"	f	class:partition_t
start_arg	src/sthread/stcore_pthread.h	/^    void        *start_arg;        \/* argument for start_proc *\/$/;"	m	struct:sthread_core_t
start_byte	src/sm/log_core.h	/^    long        start_byte() const { return _start; } $/;"	f	class:log_core
start_byte	src/sm/pin.h	/^    smsize_t   start_byte() const { _check_lsn(); return _start;}$/;"	f	class:pin_i
start_crit	src/sm/xct.h	/^    void                        start_crit() { (void) anchor(false); }$/;"	f	class:xct_t
start_flush_daemon	src/sm/log_core.cpp	/^void log_core::start_flush_daemon() $/;"	f	class:log_core
start_log_corruption	src/sm/log.h	/^    void                start_log_corruption() { _log_corruption = true; }$/;"	f	class:log_m
start_log_corruption	src/sm/sm.cpp	/^ss_m::start_log_corruption()$/;"	f	class:ss_m
start_pos	src/sm/log_core.cpp	/^	long start_pos;	\/\/ start point for thread groups$/;"	m	struct:log_core::insert_info	file:
start_proc	src/sthread/stcore_pthread.h	/^    void        (*start_proc)(void *);  \/* thread start function *\/$/;"	m	struct:sthread_core_t
startstop_DEPENDENCIES	src/sm/tests/Makefile	/^startstop_DEPENDENCIES = $(top_builddir)\/src\/sm\/libsm.a \\$/;"	m
startstop_LDADD	src/sm/tests/Makefile	/^startstop_LDADD = $(LDADD)$/;"	m
startstop_OBJECTS	src/sm/tests/Makefile	/^startstop_OBJECTS = $(am_startstop_OBJECTS)$/;"	m
startstop_SOURCES	src/sm/tests/Makefile	/^startstop_SOURCES = startstop.cpp $/;"	m
stash	src/sm/xct.cpp	/^xct_t::stash(lockid_t*& \/*l*\/, sdesc_cache_t*& s, xct_log_t*& \/*x*\/)$/;"	f	class:xct_t
stat	src/sthread/sdisk.cpp	/^w_rc_t    sdisk_t::stat(filestat_t &)$/;"	f	class:sdisk_t
stat	src/sthread/sdisk_unix.cpp	/^w_rc_t    sdisk_unix_t::stat(filestat_t &st)$/;"	f	class:sdisk_unix_t
stat_map	src/sm/log_core.cpp	/^typedef std::map<long,long> stat_map;$/;"	t	file:
stat_names	src/fc/tests/test_stat.cpp	/^const char *test_stat ::stat_names[] = {$/;"	m	class:test_stat	file:
stat_names	src/fc/tests/test_stat_struct_gen.h	/^static const char    *stat_names[];$/;"	v
stat_names	src/sm/bf_htab_stats_t_struct_gen.h	/^static const char    *stat_names[];$/;"	v
stat_names	src/sm/sm_stats_t_struct_gen.h	/^static const char    *stat_names[];$/;"	v
stat_names	src/sm/smstats.cpp	/^const char *sm_stats_t ::stat_names[] = {$/;"	m	class:sm_stats_t	file:
stat_names	src/sthread/sthread_stats.cpp	/^const char *sthread_stats::stat_names[] = {$/;"	m	class:sthread_stats	file:
stat_names	src/sthread/sthread_stats_struct_gen.h	/^static const char    *stat_names[];$/;"	v
stat_types	src/fc/tests/test_stat_struct_gen.h	/^static const char    *stat_types;$/;"	v
stat_types	src/sm/bf_htab_stats_t_struct_gen.h	/^static const char    *stat_types;$/;"	v
stat_types	src/sm/sm_stats_t_struct_gen.h	/^static const char    *stat_types;$/;"	v
stat_types	src/sthread/sthread_stats_struct_gen.h	/^static const char    *stat_types;$/;"	v
state	src/sm/logrec.h	/^    smlevel_1::xct_state_t        state;$/;"	m	struct:chkpt_xct_tab_t::xrec_t
state	src/sm/xct.h	/^xct_t::state() const$/;"	f	class:xct_t
state_t	src/sm/xct.h	/^    typedef xct_state_t           state_t;$/;"	t	class:xct_t
state_xct	src/sm/sm.cpp	/^ss_m::xct_state_t ss_m::state_xct(const xct_t* x)$/;"	f	class:ss_m
states	src/common/regexec.cpp	102;"	d	file:
states	src/common/regexec.cpp	123;"	d	file:
states	src/common/regexec.cpp	75;"	d	file:
states	src/fc/w_input.cpp	/^enum states {   start, sgned, leadz,  $/;"	g	file:
states1	src/common/regexec.cpp	76;"	d	file:
static_align	src/fc/w_defines.h	/^struct static_align {$/;"	s
static_stream	src/fc/errlog.cpp	/^w_ostrstream  logstream::static_stream(&__c,1);$/;"	m	class:logstream	file:
static_stream	src/fc/errlog.h	/^    static w_ostrstream static_stream;$/;"	m	class:logstream
stats	src/sm/bf_htab.cpp	/^bf_core_m::htab::stats(bf_htab_stats_t &out) const$/;"	f	class:bf_core_m::htab
stats	src/sm/rtree.cpp	/^rtree_m::stats($/;"	f	class:rtree_m
stats2_DEPENDENCIES	src/fc/tests/Makefile	/^stats2_DEPENDENCIES = ..\/libfc.a $(LOCALLDADD)$/;"	m
stats2_LDADD	src/fc/tests/Makefile	/^stats2_LDADD = $(LDADD)$/;"	m
stats2_OBJECTS	src/fc/tests/Makefile	/^stats2_OBJECTS = $(am_stats2_OBJECTS)$/;"	m
stats2_SOURCES	src/fc/tests/Makefile	/^stats2_SOURCES = test_stat.cpp stats2.cpp$/;"	m
stats_DEPENDENCIES	src/fc/tests/Makefile	/^stats_DEPENDENCIES = ..\/libfc.a $(LOCALLDADD)$/;"	m
stats_LDADD	src/fc/tests/Makefile	/^stats_LDADD = $(LDADD)$/;"	m
stats_OBJECTS	src/fc/tests/Makefile	/^stats_OBJECTS = $(am_stats_OBJECTS)$/;"	m
stats_SOURCES	src/fc/tests/Makefile	/^stats_SOURCES = stats.cpp$/;"	m
stats_audit_failed	src/sm/sm_du_stats.cpp	/^stats_audit_failed(int $/;"	f	file:
stats_ref	src/sm/xct.h	/^    sm_stats_info_t&            stats_ref() { return *__stats; }$/;"	f	class:xct_t
statstest	src/fc/tests/stats2.cpp	/^statstest()$/;"	f
status	src/sm/lock_x.h	/^    status_t          status() const       { return (status_t) _state; }$/;"	f	class:lock_request_t
status	src/sm/tests/htab.cpp	/^        Status status;$/;"	m	struct:htab_tester::pidinfo	file:
status	src/sthread/sthread.h	/^sthread_t::status() const$/;"	f	class:sthread_t
status_strings	src/sthread/sthread.cpp	/^const char *sthread_t::status_strings[] = {$/;"	m	class:sthread_t	file:
status_strings	src/sthread/sthread.h	/^    static const char *status_strings[];$/;"	m	class:sthread_t
status_t	src/sm/lock.h	/^    typedef lock_base_t::status_t status_t;$/;"	t	class:lock_m
status_t	src/sm/lock_s.h	/^    enum status_t {$/;"	g	class:lock_base_t
status_t	src/sm/lock_x.h	/^    typedef lock_base_t::status_t status_t; \/\/ lock_s.h$/;"	t	class:lock_request_t
status_t	src/sthread/sthread.h	/^    enum status_t {$/;"	g	class:sthread_t
stdin_hdl	src/sm/smsh/tcl_thread.cpp	/^    int                 stdin_hdl;$/;"	m	class:__shared	file:
steal	src/sm/xct.cpp	/^xct_t::steal(lockid_t*&l, sdesc_cache_t*&s, xct_log_t*&x)$/;"	f	class:xct_t
steal_stats	src/sm/xct.h	/^    sm_stats_info_t*            steal_stats() {$/;"	f	class:xct_t
step	src/common/regex_engine.cpp	/^step(struct re_guts *g, sopno start, sopno stop, states bef, int ch, states aft)$/;"	f	file:
step	src/common/regex_engine.cpp	1025;"	d	file:
step	src/common/regex_engine.cpp	65;"	d	file:
step	src/common/regex_engine.cpp	76;"	d	file:
sthread	src/sthread/stcore_pthread.h	/^    void        *sthread;        \/* sthread which uses this core *\/$/;"	m	struct:sthread_core_t
sthread_base_t	src/sthread/sthread.h	/^class sthread_base_t : public w_base_t {$/;"	c
sthread_cmd	src/sm/smsh/shell.cpp	/^static cmd_t        sthread_cmd[] = {$/;"	v	file:
sthread_core_exit	src/sthread/sthread_core_pthread.cpp	/^void sthread_core_exit(sthread_core_t* core, bool &joined)$/;"	f
sthread_core_init	src/sthread/sthread_core_pthread.cpp	/^int sthread_core_init(sthread_core_t *core,$/;"	f
sthread_core_t	src/sthread/stcore_pthread.h	/^typedef struct sthread_core_t {$/;"	s
sthread_core_t	src/sthread/stcore_pthread.h	/^} sthread_core_t;$/;"	t	typeref:struct:sthread_core_t
sthread_id_attr	src/sthread/sthread_vtable_enum.h	/^    sthread_id_attr,$/;"	e	enum:sthread_vtable_attr_index
sthread_init	src/sthread/sthread.cpp	/^static sthread_init_t sthread_init; $/;"	v	file:
sthread_init_t	src/sthread/sthread.cpp	/^class sthread_init_t : public sthread_base_t {$/;"	c	file:
sthread_init_t	src/sthread/sthread.cpp	/^sthread_init_t::sthread_init_t() { }$/;"	f	class:sthread_init_t
sthread_last	src/sthread/sthread_vtable_enum.h	/^    sthread_last $/;"	e	enum:sthread_vtable_attr_index
sthread_list_i	src/sthread/sthread.h	/^typedef w_list_i<sthread_t, pthread_mutex_t> sthread_list_i;$/;"	t
sthread_list_i	src/sthread/sthread.h	/^typedef w_list_i<sthread_t, queue_based_lock_t> sthread_list_i;$/;"	t
sthread_list_t	src/sthread/sthread.h	/^typedef w_list_t<sthread_t, pthread_mutex_t> sthread_list_t;$/;"	t
sthread_list_t	src/sthread/sthread.h	/^typedef w_list_t<sthread_t, queue_based_lock_t> sthread_list_t;$/;"	t
sthread_main_t	src/sthread/sthread.cpp	/^sthread_main_t::sthread_main_t()$/;"	f	class:sthread_main_t
sthread_main_t	src/sthread/sthread.h	/^class sthread_main_t : public sthread_t  {$/;"	c
sthread_name_attr	src/sthread/sthread_vtable_enum.h	/^    sthread_name_attr,$/;"	e	enum:sthread_vtable_attr_index
sthread_name_t	src/sthread/sthread.cpp	/^sthread_name_t::sthread_name_t()$/;"	f	class:sthread_name_t
sthread_name_t	src/sthread/sthread.h	/^class sthread_name_t {$/;"	c
sthread_named_base_t	src/sthread/sthread.h	/^class sthread_named_base_t: public sthread_base_t$/;"	c
sthread_named_base_t	src/sthread/sthread.h	/^sthread_named_base_t::sthread_named_base_t($/;"	f	class:sthread_named_base_t
sthread_priority_list_t	src/sthread/sthread.cpp	/^sthread_priority_list_t::sthread_priority_list_t()$/;"	f	class:sthread_priority_list_t
sthread_priority_list_t	src/sthread/sthread.h	/^class sthread_priority_list_t $/;"	c
sthread_stats	src/sthread/sthread_stats.h	/^    sthread_stats() {$/;"	f	class:sthread_stats
sthread_stats	src/sthread/sthread_stats.h	/^class sthread_stats {$/;"	c
sthread_status_attr	src/sthread/sthread_vtable_enum.h	/^    sthread_status_attr,$/;"	e	enum:sthread_vtable_attr_index
sthread_t	src/fc/tests/cuckoo.cpp	/^struct sthread_t$/;"	s	file:
sthread_t	src/sthread/sthread.cpp	/^sthread_t::sthread_t(priority_t        pr,$/;"	f	class:sthread_t
sthread_t	src/sthread/sthread.h	/^class sthread_t : public sthread_named_base_t  $/;"	c
sthread_vtable_attr_index	src/sthread/sthread_vtable_enum.h	/^enum sthread_vtable_attr_index {$/;"	g
sthread_vtable_attr_names	src/sthread/vtable_sthread.cpp	/^const char *sthread_vtable_attr_names[] =$/;"	v
stid	src/common/kvl_t.h	/^    stid_t            stid;$/;"	m	struct:kvl_t
stid	src/sm/lgrec.h	/^    stid_t    stid() const {return stid_t(_page.pid().vol(), _cref.store);}$/;"	f	class:lg_tag_chunks_h
stid	src/sm/lgrec.h	/^    stid_t    stid() const {return stid_t(_page.pid().vol(), _iref.store);}$/;"	f	class:lg_tag_indirect_h
stid	src/sm/logrec.cpp	/^    stid_t            stid;$/;"	m	struct:create_ext_list_t	file:
stid	src/sm/logrec.cpp	/^    stid_t        stid;$/;"	m	struct:free_ext_list_t	file:
stid	src/sm/scan.h	/^    stid_t                stid;$/;"	m	class:scan_file_i
stid	src/sm/scan.h	/^    stid_t            stid;$/;"	m	class:scan_rt_i
stid	src/sm/sdesc.h	/^    const stid_t&       stid() const {return _stid;}$/;"	f	class:sdesc_t
stid	src/sm/sdesc.h	/^    inline stid_t stid() { return _stid; }$/;"	f	class:sdesc_t
stid	src/sm/sm_s.h	/^    const stid_t& stid() const {return _stid;}$/;"	f	class:lpid_t
stid	src/sm/sm_s.h	/^inline stid_t rid_t::stid() const$/;"	f	class:rid_t
stid	src/sm/xct.h	/^    stid_t        stid;$/;"	m	class:stid_list_elem_t
stid_cmp	src/common/store_latch_manager.h	/^    struct stid_cmp {$/;"	s	class:store_latch_manager
stid_list_elem_t	src/sm/xct.h	/^    stid_list_elem_t(const stid_t& theStid)$/;"	f	class:stid_list_elem_t
stid_list_elem_t	src/sm/xct.h	/^class stid_list_elem_t  {$/;"	c
stid_t	src/common/stid_t.h	/^inline stid_t::stid_t() : vol(0), store(0)$/;"	f	class:stid_t
stid_t	src/common/stid_t.h	/^inline stid_t::stid_t(const stid_t& s) : vol(s.vol), store(s.store)$/;"	f	class:stid_t
stid_t	src/common/stid_t.h	/^inline stid_t::stid_t(vid_t v, snum_t s) : vol(v), store(s)$/;"	f	class:stid_t
stid_t	src/common/stid_t.h	/^struct stid_t {$/;"	s
stids	src/sm/logrec.h	/^    stid_t            stids[max];$/;"	m	struct:prepare_stores_to_free_t
stime_pair	src/fc/tests/ntime.cpp	/^struct stime_pair {$/;"	s	file:
stime_t	src/fc/stime.cpp	/^stime_t::stime_t(const struct timespec &tv)$/;"	f	class:stime_t
stime_t	src/fc/stime.cpp	/^stime_t::stime_t(const struct timeval &tv)$/;"	f	class:stime_t
stime_t	src/fc/stime.cpp	/^stime_t::stime_t(double secs)$/;"	f	class:stime_t
stime_t	src/fc/stime.cpp	/^stime_t::stime_t(int secs)$/;"	f	class:stime_t
stime_t	src/fc/stime.cpp	/^stime_t::stime_t(long secs)$/;"	f	class:stime_t
stime_t	src/fc/stime.cpp	/^stime_t::stime_t(time_t tod, long hires)$/;"	f	class:stime_t
stime_t	src/fc/stime.h	/^    stime_t() {$/;"	f	class:stime_t
stime_t	src/fc/stime.h	/^class stime_t {$/;"	c
stime_test_t	src/fc/tests/ntime.cpp	/^    stime_test_t() : stime_t() { } $/;"	f	class:stime_test_t
stime_test_t	src/fc/tests/ntime.cpp	/^    stime_test_t(const stime_t &time) : stime_t(time) { }$/;"	f	class:stime_test_t
stime_test_t	src/fc/tests/ntime.cpp	/^    stime_test_t(time_t tod, long hr) : stime_t() {$/;"	f	class:stime_test_t
stime_test_t	src/fc/tests/ntime.cpp	/^class stime_test_t : public stime_t {$/;"	c	file:
stnode_i	src/sm/extent.h	/^    NORET               stnode_i(const lpid_t& root) : _root(root) {$/;"	f	class:stnode_i
stnode_i	src/sm/extent.h	/^class stnode_i: private smlevel_0 {$/;"	c
stnode_p	src/sm/extent.h	/^class stnode_p : public page_p {$/;"	c
stnode_t	src/sm/extent.h	/^struct stnode_t {$/;"	s
stop	src/sm/smsh/sort_funcs2.cpp	/^void stop() {$/;"	f
stop_crit	src/sm/xct.h	/^    void                        stop_crit() {(void) release_anchor(false$/;"	f	class:xct_t
stop_on_vg_err	src/fc/valgrind_help.cpp	/^void stop_on_vg_err() { $/;"	f
stophere	src/sm/smthread.cpp	/^void stophere()$/;"	f
stopwatch_t	src/sm/tests/stopwatch.h	/^    stopwatch_t() {$/;"	f	class:stopwatch_t
stopwatch_t	src/sm/tests/stopwatch.h	/^class stopwatch_t {$/;"	c
store	src/common/stid_t.h	/^    snum_t    store;$/;"	m	struct:stid_t
store	src/fc/tests/cuckoo.cpp	/^    uint store() const { return _store; }$/;"	f	struct:bfpid_t
store	src/sm/lgrec.h	/^    snum_t      store;             \/\/ store for pages$/;"	m	struct:lg_tag_chunks_s
store	src/sm/lgrec.h	/^    snum_t      store;        \/\/ store for pages$/;"	m	struct:lg_tag_indirect_s
store	src/sm/lock_s_inline.h	/^lockid_t::store() const $/;"	f	class:lockid_t
store	src/sm/sdesc.h	/^    snum_t        store;                \/\/ store id$/;"	m	struct:sinfo_s
store	src/sm/sm.h	/^    snum_t    store;        $/;"	m	class:sm_store_info_t
store	src/sm/sm_s.h	/^    snum_t        store() const {return _stid.store;}$/;"	f	class:lpid_t
store	src/sm/sm_s.h	/^    snum_t        store;$/;"	m	class:shrid_t
store_bits	src/sm/lock_s_inline.h	/^lockid_t::store_bits() const $/;"	f	class:lockid_t
store_deleting_t	src/sm/sm_base.h	/^    enum store_deleting_t  {$/;"	g	class:smlevel_0
store_deleting_t	src/sm/sm_io.h	/^        typedef smlevel_0::store_deleting_t        store_deleting_t;$/;"	t	class:store_operation_param
store_directory	src/sm/sm_du_stats.h	/^    btree_stats_t  store_directory;     \/* info about every store *\/$/;"	m	struct:volume_map_stats_t
store_flag	src/sm/logrec.cpp	/^    smlevel_0::store_flag_t  store_flag() const {$/;"	f	class:page_init_t
store_flag_t	src/sm/sm_base.h	/^    enum store_flag_t {$/;"	g	class:smlevel_0
store_flag_t	src/sm/sm_io.h	/^        typedef smlevel_0::store_flag_t                store_flag_t;$/;"	t	class:store_operation_param
store_histo_t	src/sm/page_h.h	/^class store_histo_t {$/;"	c
store_histo_t	src/sm/page_h.h	/^store_histo_t::store_histo_t() $/;"	f	class:store_histo_t
store_id_directory	src/sm/sm_base.h	/^        store_id_directory = 1,$/;"	e	enum:smlevel_0::__anon30
store_id_extentmap	src/sm/sm_base.h	/^        store_id_extentmap = 0,$/;"	e	enum:smlevel_0::__anon30
store_id_root_index	src/sm/sm_base.h	/^        store_id_root_index = 2 $/;"	e	enum:smlevel_0::__anon30
store_latch_manager	src/common/store_latch_manager.h	/^class store_latch_manager $/;"	c
store_latches	src/sm/sm_io.cpp	/^store_latch_manager store_latches;$/;"	v
store_operation	src/sm/sm_io.cpp	/^io_m::store_operation(vid_t volid, const store_operation_param& param)$/;"	f	class:io_m
store_operation	src/sm/vol.cpp	/^stnode_i::store_operation(const store_operation_param& param)$/;"	f	class:stnode_i
store_operation	src/sm/vol.cpp	/^vol_t::store_operation(const store_operation_param& param)$/;"	f	class:vol_t
store_operation_log	src/sm/logdef_gen.cpp	/^	store_operation_log (logrec_t*)   {};$/;"	f	class:store_operation_log
store_operation_log	src/sm/logdef_gen.cpp	/^    class store_operation_log : public logrec_t {$/;"	c	file:
store_operation_log	src/sm/logrec.cpp	/^store_operation_log::store_operation_log(const page_p& page, const store_operation_param& param)$/;"	f	class:store_operation_log
store_operation_param	src/sm/sm_io.h	/^        store_operation_param(snum_t snum, store_operation_t theOp)$/;"	f	class:store_operation_param
store_operation_param	src/sm/sm_io.h	/^        store_operation_param(snum_t snum, store_operation_t theOp, $/;"	f	class:store_operation_param
store_operation_param	src/sm/sm_io.h	/^class store_operation_param  {$/;"	c
store_operation_t	src/sm/sm_base.h	/^    enum store_operation_t {$/;"	g	class:smlevel_0
store_operation_t	src/sm/sm_io.h	/^        typedef smlevel_0::store_operation_t        store_operation_t;$/;"	t	class:store_operation_param
store_partitions	src/sm/dir.cpp	/^rc_t sdesc_t::store_partitions()$/;"	f	class:sdesc_t
store_property_t	src/sm/sm.h	/^    typedef sm_store_property_t store_property_t;$/;"	t	class:ss_m
store_t	src/sm/sdesc.h	/^    typedef smlevel_0::store_t store_t;$/;"	t	class:sdesc_t
store_t	src/sm/sdesc.h	/^    typedef smlevel_0::store_t store_t;$/;"	t	struct:sinfo_s
store_t	src/sm/sm_base.h	/^    enum store_t { $/;"	g	class:smlevel_0
store_utilization	src/sm/sdesc.h	/^    const histoid_t*    store_utilization() const {$/;"	f	class:sdesc_t
str	src/fc/w_compat_strstream.cpp	/^char* istrstream::str() { return _M_buf.str(); }$/;"	f	class:shore_compat::istrstream
str	src/fc/w_compat_strstream.cpp	/^char* ostrstream::str()$/;"	f	class:shore_compat::ostrstream
str	src/fc/w_compat_strstream.cpp	/^char* strstreambuf::str()$/;"	f	class:shore_compat::strstreambuf
str	src/sm/log_core.cpp	/^	char const* str;$/;"	m	struct:feature_set	file:
str_to_bool	src/common/option.cpp	/^bool option_t::str_to_bool(const char* str, bool& badStr)$/;"	f	class:option_t
streq	src/sm/smsh/shell.h	/^streq(const char* s1, const char* s2)$/;"	f
stringCSKF	src/sm/newsort.cpp	/^stringCSKF($/;"	f
string_cmp	src/sm/newsort.cpp	/^sort_keys_t::string_cmp($/;"	f	class:sort_keys_t
strip	src/common/regcomp.cpp	/^    sop *strip;        \/* malloced strip *\/$/;"	m	struct:parse	file:
strip	src/common/regex2.h	/^    sop *strip;        \/* malloced area for strip *\/$/;"	m	struct:re_guts
stripsnug	src/common/regcomp.cpp	/^stripsnug(struct parse *p, struct re_guts *g)$/;"	f	file:
strl	src/sm/zkeyed.cpp	/^    int  strl;         \/\/ length of this string for this$/;"	m	struct:pxinfo_t	file:
strstreambuf	src/fc/w_compat_strstream.cpp	/^strstreambuf::strstreambuf(char* get, streamsize n, char* put)$/;"	f	class:shore_compat::strstreambuf
strstreambuf	src/fc/w_compat_strstream.cpp	/^strstreambuf::strstreambuf(const char* get, streamsize n)$/;"	f	class:shore_compat::strstreambuf
strstreambuf	src/fc/w_compat_strstream.cpp	/^strstreambuf::strstreambuf(const signed char* get, streamsize n)$/;"	f	class:shore_compat::strstreambuf
strstreambuf	src/fc/w_compat_strstream.cpp	/^strstreambuf::strstreambuf(const unsigned char* get, streamsize n)$/;"	f	class:shore_compat::strstreambuf
strstreambuf	src/fc/w_compat_strstream.cpp	/^strstreambuf::strstreambuf(signed char* get, streamsize n, signed char* put)$/;"	f	class:shore_compat::strstreambuf
strstreambuf	src/fc/w_compat_strstream.cpp	/^strstreambuf::strstreambuf(streamsize initial_capacity)$/;"	f	class:shore_compat::strstreambuf
strstreambuf	src/fc/w_compat_strstream.cpp	/^strstreambuf::strstreambuf(unsigned char* get, streamsize n,$/;"	f	class:shore_compat::strstreambuf
strstreambuf	src/fc/w_compat_strstream.cpp	/^strstreambuf::strstreambuf(void* (*alloc_f)(size_t), void (*free_f)(void*))$/;"	f	class:shore_compat::strstreambuf
strstreambuf	src/fc/w_compat_strstream.h	/^class strstreambuf : public basic_streambuf<char, char_traits<char> >$/;"	c	namespace:shore_compat
strstreambuf	src/fc/w_strstream.h	101;"	d
strstreambuf	src/fc/w_strstream.h	257;"	d
strtoi8	src/fc/w_base.cpp	/^w_base_t::strtoi8($/;"	f	class:w_base_t
strtou8	src/fc/w_base.cpp	/^w_base_t::strtou8($/;"	f	class:w_base_t
stype	src/sm/sdesc.h	/^    u_char        stype;                \/\/ store_t$/;"	m	struct:sinfo_s
stype	src/sm/sm.h	/^    u_char    stype;        $/;"	m	class:sm_store_info_t
sub_key_values_citer	src/sm/data_access_histogram.h	/^    typedef vector<foo*>::const_iterator                sub_key_values_citer;$/;"	t	class:data_access_histogram
sub_key_values_iter	src/sm/data_access_histogram.h	/^    typedef vector<foo*>::iterator                      sub_key_values_iter;$/;"	t	class:data_access_histogram
sub_ranges_hist_buckets_citer	src/sm/data_access_histogram.h	/^    typedef vector<uint>::const_iterator                                         sub_ranges_hist_buckets_citer;  $/;"	t	class:data_access_histogram
sub_ranges_hist_buckets_iter	src/sm/data_access_histogram.h	/^    typedef vector<uint>::iterator                                               sub_ranges_hist_buckets_iter;$/;"	t	class:data_access_histogram
sub_ranges_hist_citer	src/sm/data_access_histogram.h	/^    typedef map< foo, vector<uint>, cmp_greater >::const_iterator                sub_ranges_hist_citer;$/;"	t	class:data_access_histogram
sub_ranges_hist_iter	src/sm/data_access_histogram.h	/^    typedef map< foo, vector<uint>, cmp_greater >::iterator                      sub_ranges_hist_iter;$/;"	t	class:data_access_histogram
subdir	Makefile	/^subdir = .$/;"	m
subdir	config/Makefile	/^subdir = config$/;"	m
subdir	src/Makefile	/^subdir = src$/;"	m
subdir	src/atomic_ops/Makefile	/^subdir = src\/atomic_ops$/;"	m
subdir	src/atomic_ops/asm_linkage/Makefile	/^subdir = src\/atomic_ops\/asm_linkage$/;"	m
subdir	src/atomic_ops/asm_linkage/usr/Makefile	/^subdir = src\/atomic_ops\/asm_linkage\/usr$/;"	m
subdir	src/atomic_ops/asm_linkage/usr/src/Makefile	/^subdir = src\/atomic_ops\/asm_linkage\/usr\/src$/;"	m
subdir	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^subdir = src\/atomic_ops\/asm_linkage\/usr\/src\/uts$/;"	m
subdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^subdir = src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/intel$/;"	m
subdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^subdir = src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/intel\/ia32$/;"	m
subdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^subdir = src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/intel\/ia32\/sys$/;"	m
subdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^subdir = src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/intel\/sys$/;"	m
subdir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^subdir = src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/sparc$/;"	m
subdir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^subdir = src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/sparc\/sys$/;"	m
subdir	src/atomic_ops/atomic_ops/Makefile	/^subdir = src\/atomic_ops\/atomic_ops$/;"	m
subdir	src/atomic_ops/atomic_ops/amd64/Makefile	/^subdir = src\/atomic_ops\/atomic_ops\/amd64$/;"	m
subdir	src/atomic_ops/atomic_ops/i386/Makefile	/^subdir = src\/atomic_ops\/atomic_ops\/i386$/;"	m
subdir	src/atomic_ops/atomic_ops/sparc/Makefile	/^subdir = src\/atomic_ops\/atomic_ops\/sparc$/;"	m
subdir	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^subdir = src\/atomic_ops\/atomic_ops\/sparcv9$/;"	m
subdir	src/atomic_ops/ia32/Makefile	/^subdir = src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/intel\/ia32$/;"	m
subdir	src/atomic_ops/ia32/sys/Makefile	/^subdir = src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/intel\/ia32\/sys$/;"	m
subdir	src/atomic_ops/intel/Makefile	/^subdir = src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/intel$/;"	m
subdir	src/atomic_ops/intel/ia32/Makefile	/^subdir = src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/intel\/ia32$/;"	m
subdir	src/atomic_ops/intel/ia32/sys/Makefile	/^subdir = src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/intel\/ia32\/sys$/;"	m
subdir	src/atomic_ops/intel/sys/Makefile	/^subdir = src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/intel\/sys$/;"	m
subdir	src/atomic_ops/sparc/Makefile	/^subdir = src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/sparc$/;"	m
subdir	src/atomic_ops/sparc/sys/Makefile	/^subdir = src\/atomic_ops\/asm_linkage\/usr\/src\/uts\/sparc\/sys$/;"	m
subdir	src/common/Makefile	/^subdir = src\/common$/;"	m
subdir	src/common/tests/Makefile	/^subdir = src\/common\/tests$/;"	m
subdir	src/fc/Makefile	/^subdir = src\/fc$/;"	m
subdir	src/fc/tests/Makefile	/^subdir = src\/fc\/tests$/;"	m
subdir	src/sm/Makefile	/^subdir = src\/sm$/;"	m
subdir	src/sm/smsh/Makefile	/^subdir = src\/sm\/smsh$/;"	m
subdir	src/sm/smsh/lib/Makefile	/^subdir = src\/sm\/smsh\/lib$/;"	m
subdir	src/sm/smsh/scripts/Makefile	/^subdir = src\/sm\/smsh\/scripts$/;"	m
subdir	src/sm/tests/Makefile	/^subdir = src\/sm\/tests$/;"	m
subdir	src/sthread/Makefile	/^subdir = src\/sthread$/;"	m
subdir	src/sthread/tests/Makefile	/^subdir = src\/sthread\/tests$/;"	m
subdir	tools/Makefile	/^subdir = tools$/;"	m
sum	src/fc/tests/test_stat_struct_gen.h	/^ w_base_t::base_float_t sum;$/;"	v
supr	src/sm/lock_core.cpp	/^const lock_base_t::lmode_t lock_base_t::supr[NUM_MODES][NUM_MODES] = {$/;"	m	class:lock_base_t	file:
supr	src/sm/lock_s.h	/^    static const lmode_t             supr[NUM_MODES][NUM_MODES];$/;"	m	class:lock_base_t
swap	src/fc/w_temp_alloc.h	/^void swap(w_temp_alloc::buf &a, w_temp_alloc::buf &b) {$/;"	f
swap	src/sm/rtree.cpp	/^    void swap(rtwork_p& page) {$/;"	f	class:rtwork_p
swap	src/sm/xct.cpp	/^    void swap(xct_lock_info_t* &ptr) {$/;"	f	struct:lock_info_ptr
swap_tail	src/sm/xct.cpp	/^    xct_link* swap_tail(xct_link* xd) {$/;"	f	struct:xct_list
sweep_n_split	src/sm/rtree.cpp	/^sweep_n_split(int axis, wrk_branch_t work[], u_char smap[], int& margin,$/;"	f	file:
switch_t	src/sm/sm_base.h	/^    enum switch_t {$/;"	g	class:smlevel_0
sync	src/common/tests/latch1.cpp	/^    void sync() {$/;"	f	class:latch_thread_t	file:
sync	src/sm/smsh/tcl_thread.cpp	/^void tcl_thread_t::sync()$/;"	f	class:tcl_thread_t
sync	src/sm/vol.cpp	/^vol_t::sync()$/;"	f	class:vol_t
sync	src/sthread/sdisk.cpp	/^w_rc_t    sdisk_t::sync()$/;"	f	class:sdisk_t
sync	src/sthread/sdisk_unix.cpp	/^w_rc_t    sdisk_unix_t::sync()$/;"	f	class:sdisk_unix_t
sync	src/sthread/sthread_stats_struct_gen.h	/^ w_base_t::base_stat_t sync;$/;"	v
sync_all	src/common/tests/latch1.cpp	/^void sync_all (latch_thread_t **t)$/;"	f
sync_all_disks	src/sm/sm_io.cpp	/^io_m::sync_all_disks()$/;"	f	class:io_m
sync_io	src/sthread/tests/ioperf.cpp	/^bool        sync_io = false;$/;"	v
sync_io	src/sthread/tests/thread2.cpp	/^bool	sync_io = true;$/;"	v
sync_log	src/sm/sm.cpp	/^ss_m::sync_log(bool block)$/;"	f	class:ss_m
sync_other	src/common/tests/latch1.cpp	/^void latch_thread_t::sync_other(latch_thread_t *r) $/;"	f	class:latch_thread_t
sync_other	src/sm/smsh/tcl_thread.cpp	/^void tcl_thread_t::sync_other(unsigned long id)$/;"	f	class:tcl_thread_t
sync_others	src/sm/smsh/tcl_thread.cpp	/^void tcl_thread_t::sync_others(int n, unsigned long id[])$/;"	f	class:tcl_thread_t
sync_threads	src/sm/smsh/tcl_thread.cpp	/^void tcl_thread_t::sync_threads(int n, tcl_thread_t *t[])$/;"	f	class:tcl_thread_t
sys_err_num	src/fc/w_error.h	/^    const int4_t                 sys_err_num;$/;"	m	class:w_error_t
sys_err_num	src/fc/w_rc.h	/^w_rc_t::sys_err_num() const$/;"	f	class:w_rc_t
sysconfdir	Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	config/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/atomic_ops/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/atomic_ops/asm_linkage/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/atomic_ops/asm_linkage/usr/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/atomic_ops/asm_linkage/usr/src/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/atomic_ops/atomic_ops/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/atomic_ops/atomic_ops/amd64/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/atomic_ops/atomic_ops/i386/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/atomic_ops/atomic_ops/sparc/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/atomic_ops/ia32/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/atomic_ops/ia32/sys/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/atomic_ops/intel/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/atomic_ops/intel/ia32/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/atomic_ops/intel/ia32/sys/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/atomic_ops/intel/sys/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/atomic_ops/sparc/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/atomic_ops/sparc/sys/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/common/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/common/tests/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/fc/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/fc/tests/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/sm/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/sm/smsh/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/sm/smsh/lib/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/sm/smsh/scripts/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/sm/tests/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/sthread/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/sthread/tests/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	tools/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sz	src/fc/w_bitmap.h	/^    uint4_t            sz; \/\/ # bits$/;"	m	class:w_bitmap_t
sz	src/sm/smsh/sort_funcs3.cpp	/^   smsize_t  sz() const { return sizeof(nbox_t); }$/;"	f	class:boxfactory
t	src/fc/dynarray.h	/^    union ptr { char const* cc; T const* tc; char* c; T* t; };$/;"	m	union:dynvector::ptr
t	src/sm/smsh/sort_funcs.h	/^    typed_btree_test t;$/;"	m	struct:metadata
t_abort_xct	src/sm/smsh/shell.cpp	/^t_abort_xct(Tcl_Interp* ip, int ac, TCL_AV char* [])$/;"	f
t_adaptive	src/sm/lock_x.h	/^       t_adaptive = 2,    \/\/ set if adaptive EX locks are held on the page$/;"	e	enum:lock_head_t::__anon25
t_aligned	src/sm/sort_s.h	/^        t_aligned =0x2, $/;"	e	enum:ssm_sort::sort_keys_t::mask
t_alloc_file_page	src/sm/logtype_gen.h	/^	t_alloc_file_page = 18,$/;"	e	enum:kind_t
t_alloc_pages_in_ext	src/sm/logtype_gen.h	/^	t_alloc_pages_in_ext = 19,$/;"	e	enum:kind_t
t_any_p	src/sm/page.h	/^        t_any_p            = 13        \/\/ indifferent$/;"	e	enum:page_p::tag_t
t_append	src/sm/file_s.h	/^    t_append        = 0x01, \/\/ retain sort order (cache 0 pages)$/;"	e	enum:pg_policy_t
t_append_rec	src/sm/smsh/shell.cpp	/^t_append_rec(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_assert	src/sm/smsh/tcl_thread.cpp	/^t_assert(ClientData, Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f
t_attach_xct	src/sm/smsh/shell.cpp	/^t_attach_xct(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_bad	src/fc/nbox.h	/^    enum sob_cmp_t { t_exact = 1, t_overlap, t_cover, t_inside, t_bad };$/;"	e	enum:nbox_t::sob_cmp_t
t_bad	src/sm/lock_s.h	/^        t_bad                = 10,$/;"	e	enum:lockid_t::name_space_t
t_bad_cat	src/sm/logrec.h	/^    t_bad_cat = 0,$/;"	e	enum:logrec_t::category_t
t_bad_ndx_t	src/sm/sm_base.h	/^        t_bad_ndx_t,             \/\/ illegal value$/;"	e	enum:smlevel_0::ndx_t
t_bad_p	src/sm/page.h	/^        t_bad_p            = 0,        \/\/ not used$/;"	e	enum:page_p::tag_t
t_bad_store_t	src/sm/sm_base.h	/^        t_bad_store_t, $/;"	e	enum:smlevel_0::store_t
t_bad_storeproperty	src/sm/sm_int_3.h	/^    t_bad_storeproperty = 0x80\/\/ no bits in common with good properties$/;"	e	enum:smlevel_3::sm_store_property_t
t_badflag	src/sm/file_s.h	/^    t_badflag        = 0x00,$/;"	e	enum:recflags_t
t_begin_sort_stream	src/sm/smsh/shell.cpp	/^t_begin_sort_stream(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_begin_xct	src/sm/smsh/shell.cpp	/^t_begin_xct(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_blkld_md_ndx	src/sm/smsh/shell.cpp	/^t_blkld_md_ndx(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_blkld_ndx	src/sm/smsh/shell.cpp	/^t_blkld_ndx(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_blocked	src/sthread/sthread.h	/^        t_blocked,      \/\/ thread is blocked on something$/;"	e	enum:sthread_t::status_t
t_body	src/sm/sort_s.h	/^    enum where_t { t_hdr = 0, t_body };$/;"	e	enum:ssm_sort::key_info_t::where_t
t_boot	src/sthread/sthread.h	/^        t_boot        \/\/ system boot$/;"	e	enum:sthread_t::status_t
t_btree	src/sm/sm_base.h	/^        t_btree,                 \/\/ B+tree with duplicates$/;"	e	enum:smlevel_0::ndx_t
t_btree_insert	src/sm/logtype_gen.h	/^	t_btree_insert = 37,$/;"	e	enum:kind_t
t_btree_p	src/sm/page.h	/^        t_btree_p          = 5,        \/\/ btree page $/;"	e	enum:page_p::tag_t
t_btree_purge	src/sm/logtype_gen.h	/^	t_btree_purge = 36,$/;"	e	enum:kind_t
t_btree_remove	src/sm/logtype_gen.h	/^	t_btree_remove = 38,$/;"	e	enum:kind_t
t_cache	src/sm/file_s.h	/^    t_cache        = 0x02, \/\/ look in n cached pgs $/;"	e	enum:pg_policy_t
t_cc_append	src/sm/sm_base.h	/^        t_cc_append                 \/\/ append-only with scan_file_i$/;"	e	enum:smlevel_0::concurrency_t
t_cc_bad	src/sm/sm_base.h	/^        t_cc_bad,                \/\/ this is an illegal value$/;"	e	enum:smlevel_0::concurrency_t
t_cc_file	src/sm/sm_base.h	/^        t_cc_file,                \/\/ file-level$/;"	e	enum:smlevel_0::concurrency_t
t_cc_im	src/sm/sm_base.h	/^        t_cc_im,                 \/\/ ARIES IM, not supported yet$/;"	e	enum:smlevel_0::concurrency_t
t_cc_kvl	src/sm/sm_base.h	/^        t_cc_kvl,                \/\/ key-value$/;"	e	enum:smlevel_0::concurrency_t
t_cc_modkvl	src/sm/sm_base.h	/^        t_cc_modkvl,                 \/\/ modified ARIES KVL, for paradise use$/;"	e	enum:smlevel_0::concurrency_t
t_cc_none	src/sm/sm_base.h	/^        t_cc_none,                \/\/ no locking$/;"	e	enum:smlevel_0::concurrency_t
t_cc_page	src/sm/sm_base.h	/^        t_cc_page,                \/\/ page-level$/;"	e	enum:smlevel_0::concurrency_t
t_cc_record	src/sm/sm_base.h	/^        t_cc_record,                \/\/ record-level$/;"	e	enum:smlevel_0::concurrency_t
t_cc_vol	src/sm/sm_base.h	/^        t_cc_vol,$/;"	e	enum:smlevel_0::concurrency_t
t_chain	src/sm/xct.h	/^    enum commit_t { t_normal = 0, t_lazy = 1, t_chain = 2 };$/;"	e	enum:xct_t::commit_t
t_chain_xct	src/sm/smsh/shell.cpp	/^t_chain_xct(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_char	src/sm/sort_s.h	/^    enum dummy_t {  t_char=sortorder::kt_u1,$/;"	e	enum:ssm_sort::key_info_t::dummy_t
t_check_volume	src/sm/smsh/shell.cpp	/^t_check_volume(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_check_volume_page_types	src/sm/smsh/shell.cpp	/^t_check_volume_page_types(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_checkpoint	src/sm/smsh/shell.cpp	/^t_checkpoint(Tcl_Interp* ip, int ac, TCL_AV char* \/*av*\/[])$/;"	f	file:
t_chkpt_begin	src/sm/logtype_gen.h	/^	t_chkpt_begin = 3,$/;"	e	enum:kind_t
t_chkpt_bf_tab	src/sm/logtype_gen.h	/^	t_chkpt_bf_tab = 4,$/;"	e	enum:kind_t
t_chkpt_dev_tab	src/sm/logtype_gen.h	/^	t_chkpt_dev_tab = 6,$/;"	e	enum:kind_t
t_chkpt_end	src/sm/logtype_gen.h	/^	t_chkpt_end = 7,$/;"	e	enum:kind_t
t_chkpt_xct_tab	src/sm/logtype_gen.h	/^	t_chkpt_xct_tab = 5,$/;"	e	enum:kind_t
t_close_quark	src/sm/smsh/shell.cpp	/^t_close_quark(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_comment	src/sm/logtype_gen.h	/^	t_comment = 0,$/;"	e	enum:kind_t
t_commit_xct	src/sm/smsh/shell.cpp	/^t_commit_xct(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_compact	src/sm/file_s.h	/^    t_compact        = 0x04 \/\/ scan file for space in pages $/;"	e	enum:pg_policy_t
t_compare_typed	src/sm/smsh/shell2.cpp	/^t_compare_typed(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f
t_compensate	src/sm/logtype_gen.h	/^	t_compensate = 1,$/;"	e	enum:kind_t
t_compressed	src/sm/btree_p.h	/^        t_compressed    = 0x10$/;"	e	enum:btree_p::flag_t
t_config_info	src/sm/smsh/shell.cpp	/^t_config_info(Tcl_Interp* ip, int ac, TCL_AV char*[])$/;"	f	file:
t_convert_to_local_id	src/sm/smsh/shell.cpp	/^t_convert_to_local_id(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_converting	src/sm/lock_s.h	/^        t_converting = 2,$/;"	e	enum:lock_base_t::status_t
t_cover	src/fc/nbox.h	/^    enum sob_cmp_t { t_exact = 1, t_overlap, t_cover, t_inside, t_bad };$/;"	e	enum:nbox_t::sob_cmp_t
t_cpsn	src/sm/logrec.h	/^    t_cpsn = 020,$/;"	e	enum:logrec_t::category_t
t_crash	src/sm/smsh/shell.cpp	/^t_crash(Tcl_Interp* ip, int ac, TCL_AV char ** W_IFTRACE(av))$/;"	f	file:
t_create_assoc	src/sm/smsh/shell.cpp	/^t_create_assoc(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_create_ext_list	src/sm/logtype_gen.h	/^	t_create_ext_list = 21,$/;"	e	enum:kind_t
t_create_file	src/sm/smsh/shell.cpp	/^t_create_file(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_create_index	src/sm/smsh/shell.cpp	/^t_create_index(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_create_many_rec	src/sm/smsh/shell.cpp	/^t_create_many_rec(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_create_md_assoc	src/sm/smsh/shell.cpp	/^t_create_md_assoc(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_create_md_index	src/sm/smsh/shell.cpp	/^t_create_md_index(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_create_multi_recs	src/sm/smsh/shell.cpp	/^t_create_multi_recs(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_create_rec	src/sm/smsh/shell.cpp	/^t_create_rec(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_create_scan	src/sm/smsh/shell.cpp	/^t_create_scan(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_create_store	src/sm/sm_base.h	/^            t_create_store, $/;"	e	enum:smlevel_0::store_operation_t
t_create_typed_hdr_body_rec	src/sm/smsh/shell2.cpp	/^t_create_typed_hdr_body_rec(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f
t_create_typed_hdr_rec	src/sm/smsh/shell2.cpp	/^t_create_typed_hdr_rec(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f
t_create_vol	src/sm/smsh/shell.cpp	/^t_create_vol(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_debugflags	src/sm/smsh/tcl_thread.cpp	/^t_debugflags(ClientData, Tcl_Interp* ip, int ac, TCL_AV char** W_IFTRACE(av))$/;"	f
t_debuginfo	src/sm/smsh/tcl_thread.cpp	/^t_debuginfo(ClientData, Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f
t_define_named_sync	src/sm/smsh/tcl_thread.cpp	/^t_define_named_sync(ClientData, Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f
t_defunct	src/sthread/sthread.h	/^        t_defunct,    \/\/ thread has terminated$/;"	e	enum:sthread_t::status_t
t_delete	src/sm/btree_p.h	/^        t_delete    = 0x02,$/;"	e	enum:btree_p::flag_t
t_delete_store	src/sm/sm_base.h	/^            t_delete_store, $/;"	e	enum:smlevel_0::store_operation_t
t_deleting_store	src/sm/sm_base.h	/^            t_deleting_store, $/;"	e	enum:smlevel_0::store_deleting_t
t_destroy_all_assoc	src/sm/smsh/shell.cpp	/^t_destroy_all_assoc(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_destroy_assoc	src/sm/smsh/shell.cpp	/^t_destroy_assoc(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_destroy_file	src/sm/smsh/shell.cpp	/^t_destroy_file(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_destroy_index	src/sm/smsh/shell.cpp	/^t_destroy_index(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_destroy_md_assoc	src/sm/smsh/shell.cpp	/^t_destroy_md_assoc(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_destroy_md_index	src/sm/smsh/shell.cpp	/^t_destroy_md_index(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_destroy_rec	src/sm/smsh/shell.cpp	/^t_destroy_rec(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_destroy_scan	src/sm/smsh/shell.cpp	/^t_destroy_scan(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_destroy_vol	src/sm/smsh/shell.cpp	/^t_destroy_vol(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_detach_xct	src/sm/smsh/shell.cpp	/^t_detach_xct(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_dismount_all	src/sm/smsh/shell.cpp	/^t_dismount_all(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_dismount_dev	src/sm/smsh/shell.cpp	/^t_dismount_dev(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_dismount_vol	src/sm/logtype_gen.h	/^	t_dismount_vol = 9,$/;"	e	enum:kind_t
t_dont_escalate	src/sm/smsh/shell.cpp	/^t_dont_escalate(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_draw_rtree	src/sm/smsh/shell.cpp	/^t_draw_rtree(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_dump_buffers	src/sm/smsh/shell.cpp	/^t_dump_buffers(Tcl_Interp* ip, int ac, TCL_AV char*[])$/;"	f	file:
t_dump_histo	src/sm/smsh/shell.cpp	/^t_dump_histo(Tcl_Interp *ip, int ac, TCL_AV char *[])$/;"	f	file:
t_dump_latches	src/sm/smsh/shell.cpp	/^t_dump_latches(Tcl_Interp* ip, int ac, TCL_AV char*[])$/;"	f	file:
t_dump_locks	src/sm/smsh/shell.cpp	/^t_dump_locks(Tcl_Interp* ip, int ac, TCL_AV char*[])$/;"	f	file:
t_dump_threads	src/sm/smsh/shell.cpp	/^t_dump_threads(Tcl_Interp* ip, int ac, TCL_AV char*[])$/;"	f	file:
t_dump_xcts	src/sm/smsh/shell.cpp	/^t_dump_xcts(Tcl_Interp* ip, int ac, TCL_AV char*[])$/;"	f	file:
t_echo	src/sm/smsh/tcl_thread.cpp	/^t_echo(ClientData, Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f
t_enter2pc	src/sm/smsh/shell.cpp	/^t_enter2pc(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_exact	src/fc/nbox.h	/^    enum sob_cmp_t { t_exact = 1, t_overlap, t_cover, t_inside, t_bad };$/;"	e	enum:nbox_t::sob_cmp_t
t_exit	src/sm/smsh/tcl_thread.cpp	/^t_exit(ClientData, Tcl_Interp *ip, int ac, TCL_AV char* av[])$/;"	f
t_extent	src/sm/lock_s.h	/^        t_extent             = 5,$/;"	e	enum:lockid_t::name_space_t
t_extlink_p	src/sm/page.h	/^        t_extlink_p        = 1,        \/\/ extent link page $/;"	e	enum:page_p::tag_t
t_file	src/sm/sm_base.h	/^        t_file, $/;"	e	enum:smlevel_0::store_t
t_file_mrbt_p	src/sm/page.h	/^	t_file_mrbt_p      = 12,       \/\/ file page that has an owner$/;"	e	enum:page_p::tag_t
t_file_p	src/sm/page.h	/^        t_file_p           = 6,        \/\/ file page$/;"	e	enum:page_p::tag_t
t_find_assoc	src/sm/smsh/shell.cpp	/^t_find_assoc(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_find_assoc_typed	src/sm/smsh/shell2.cpp	/^t_find_assoc_typed(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f
t_find_md_assoc	src/sm/smsh/shell.cpp	/^t_find_md_assoc(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_fixed	src/sm/sort_s.h	/^        t_fixed = 0x1, $/;"	e	enum:ssm_sort::sort_keys_t::mask
t_float	src/sm/sort_s.h	/^                    t_float=sortorder::kt_f4,$/;"	e	enum:ssm_sort::key_info_t::dummy_t
t_force_buffers	src/sm/smsh/shell.cpp	/^t_force_buffers(Tcl_Interp* ip, int ac, TCL_AV char*[])$/;"	f	file:
t_force_vol_hdr_buffers	src/sm/smsh/shell.cpp	/^t_force_vol_hdr_buffers(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_fork_thread	src/sm/smsh/tcl_thread.cpp	/^t_fork_thread(ClientData, Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f
t_format_dev	src/sm/smsh/shell.cpp	/^t_format_dev(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_forward_processing	src/sm/sm_base.h	/^        t_forward_processing = 0x8$/;"	e	enum:smlevel_0::operating_mode_t
t_forwarddata	src/sm/file_s.h	/^    t_forwarddata    = 0x02,     \/\/ not used yet$/;"	e	enum:recflags_t
t_forwardroot	src/sm/file_s.h	/^    t_forwardroot    = 0x01,     \/\/ not used yet$/;"	e	enum:recflags_t
t_free_ext_list	src/sm/logtype_gen.h	/^	t_free_ext_list = 22,$/;"	e	enum:kind_t
t_free_pages_in_ext	src/sm/logtype_gen.h	/^	t_free_pages_in_ext = 20,$/;"	e	enum:kind_t
t_gather_stats	src/sm/smsh/shell.cpp	/^t_gather_stats(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_gather_xct_stats	src/sm/smsh/shell.cpp	/^t_gather_xct_stats(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_get_device_quota	src/sm/smsh/shell.cpp	/^t_get_device_quota(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_get_du_statistics	src/sm/smsh/shell.cpp	/^t_get_du_statistics(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_get_escalation_thresholds	src/sm/smsh/shell.cpp	/^t_get_escalation_thresholds(Tcl_Interp* ip, int ac, TCL_AV char* [])$/;"	f	file:
t_get_file_meta_stats	src/sm/smsh/shell.cpp	/^t_get_file_meta_stats(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_get_lock_level	src/sm/smsh/shell.cpp	/^t_get_lock_level(Tcl_Interp* ip, int ac, TCL_AV char* [])$/;"	f	file:
t_get_store_info	src/sm/smsh/shell2.cpp	/^t_get_store_info(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f
t_get_store_property	src/sm/smsh/shell.cpp	/^t_get_store_property(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_get_volume_meta_stats	src/sm/smsh/shell.cpp	/^t_get_volume_meta_stats(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_get_volume_quota	src/sm/smsh/shell.cpp	/^t_get_volume_quota(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_granted	src/sm/lock_s.h	/^        t_granted = 1,$/;"	e	enum:lock_base_t::status_t
t_has_logical_id_index	src/sm/smsh/shell.cpp	/^t_has_logical_id_index(Tcl_Interp* ip, int ac, TCL_AV char* $/;"	f	file:
t_hdr	src/sm/sort_s.h	/^        t_hdr = 0x40  \/\/ key found in hdr$/;"	e	enum:ssm_sort::sort_keys_t::mask
t_hdr	src/sm/sort_s.h	/^    enum where_t { t_hdr = 0, t_body };$/;"	e	enum:ssm_sort::key_info_t::where_t
t_in_analysis	src/sm/sm_base.h	/^        t_in_analysis = 0x1,$/;"	e	enum:smlevel_0::operating_mode_t
t_in_redo	src/sm/sm_base.h	/^        t_in_redo = 0x2,$/;"	e	enum:smlevel_0::operating_mode_t
t_in_undo	src/sm/sm_base.h	/^        t_in_undo = 0x4,$/;"	e	enum:smlevel_0::operating_mode_t
t_index	src/sm/sm_base.h	/^        t_index, $/;"	e	enum:smlevel_0::store_t
t_insert	src/sm/rtree.h	/^enum oper_t { t_read = 0, t_insert, t_remove };$/;"	e	enum:oper_t
t_insert_file	src/sm/sm_int_3.h	/^    t_insert_file = 0x08,    $/;"	e	enum:smlevel_3::sm_store_property_t
t_inside	src/fc/nbox.h	/^    enum sob_cmp_t { t_exact = 1, t_overlap, t_cover, t_inside, t_bad };$/;"	e	enum:nbox_t::sob_cmp_t
t_instant	src/fc/w_base.h	/^        t_instant     = 0,    \/* released as soon as the lock is acquired *\/$/;"	e	enum:w_base_t::lock_duration_t
t_int	src/sm/sort_s.h	/^                    t_int=sortorder::kt_i4,$/;"	e	enum:ssm_sort::key_info_t::dummy_t
t_join_thread	src/sm/smsh/tcl_thread.cpp	/^t_join_thread(ClientData, Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f
t_keyed_p	src/sm/page.h	/^        t_keyed_p          = 3,        \/\/ keyed page$/;"	e	enum:page_p::tag_t
t_kvl	src/sm/lock_s.h	/^        t_kvl                = 3,  \/\/ parent is 3\/2 = 1 t_store$/;"	e	enum:lockid_t::name_space_t
t_large_0	src/sm/file_s.h	/^    t_large_0         = 0x08,    \/\/ large with short list of chunks$/;"	e	enum:recflags_t
t_large_1	src/sm/file_s.h	/^    t_large_1         = 0x10,       \/\/ large with 1-level indirection$/;"	e	enum:recflags_t
t_large_2	src/sm/file_s.h	/^    t_large_2         = 0x20    \/\/ large with 2-level indirection$/;"	e	enum:recflags_t
t_lazy	src/sm/xct.h	/^    enum commit_t { t_normal = 0, t_lazy = 1, t_chain = 2 };$/;"	e	enum:xct_t::commit_t
t_lexico	src/sm/sort_s.h	/^        t_lexico=0x4,$/;"	e	enum:ssm_sort::sort_keys_t::mask
t_lfid_of_lrid	src/sm/smsh/shell.cpp	/^t_lfid_of_lrid(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_lgdata_p	src/sm/page.h	/^        t_lgdata_p         = 9,        \/\/ large record data page$/;"	e	enum:page_p::tag_t
t_lgindex_p	src/sm/page.h	/^        t_lgindex_p        = 10,       \/\/ large record index page$/;"	e	enum:page_p::tag_t
t_lgrec	src/sm/sm_base.h	/^        t_lgrec $/;"	e	enum:smlevel_0::store_t
t_link_to_inter_thread_comm_buffer	src/sm/smsh/tcl_thread.cpp	/^t_link_to_inter_thread_comm_buffer(ClientData, Tcl_Interp* ip,$/;"	f
t_link_to_remote_id	src/sm/smsh/shell.cpp	/^t_link_to_remote_id(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_list_devices	src/sm/smsh/shell.cpp	/^t_list_devices(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_list_volumes	src/sm/smsh/shell.cpp	/^t_list_volumes(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_load_file	src/sm/sm_int_3.h	/^    t_load_file    = 0x4,    $/;"	e	enum:smlevel_3::sm_store_property_t
t_lock	src/sm/smsh/shell.cpp	/^t_lock(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_lock_cache_enabled	src/sm/smsh/shell.cpp	/^t_lock_cache_enabled(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_lock_many	src/sm/smsh/shell.cpp	/^t_lock_many(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_lock_record_blind	src/sm/smsh/shell.cpp	/^t_lock_record_blind(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_lock_timeout	src/sm/smsh/shell.cpp	/^t_lock_timeout(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_logical	src/sm/logrec.h	/^    t_logical = 010,$/;"	e	enum:logrec_t::category_t
t_long	src/fc/w_base.h	/^        t_long     = 3,    \/* held until xct commits                   *\/$/;"	e	enum:w_base_t::lock_duration_t
t_max_logrec	src/sm/logtype_gen.h	/^	t_max_logrec = 41$/;"	e	enum:kind_t
t_medium	src/fc/w_base.h	/^        t_medium     = 2,    \/* held until explicitly released           *\/$/;"	e	enum:w_base_t::lock_duration_t
t_mem_stats	src/sm/smsh/shell.cpp	/^t_mem_stats(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_mount_dev	src/sm/smsh/shell.cpp	/^t_mount_dev(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_mount_vol	src/sm/logtype_gen.h	/^	t_mount_vol = 8,$/;"	e	enum:kind_t
t_mrbtree	src/sm/sm_base.h	/^	t_mrbtree,       \/\/ Multi-rooted B+tree with regular heap files   $/;"	e	enum:smlevel_0::ndx_t
t_mrbtree_l	src/sm/sm_base.h	/^	t_mrbtree_l,          \/\/ Multi-rooted B+tree where a heap file is pointed by only one leaf page $/;"	e	enum:smlevel_0::ndx_t
t_mrbtree_p	src/sm/sm_base.h	/^	t_mrbtree_p,     \/\/ Multi-rooted B+tree where a heap file belongs to only one partition$/;"	e	enum:smlevel_0::ndx_t
t_multi_file_append	src/sm/smsh/shell.cpp	/^t_multi_file_append(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_multi_file_update	src/sm/smsh/shell.cpp	/^t_multi_file_update(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_multikey_sort_file	src/sm/smsh/sort_funcs4.cpp	/^t_multikey_sort_file(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f
t_named_sync	src/sm/smsh/tcl_thread.cpp	/^t_named_sync(ClientData, Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f
t_next_box	src/sm/smsh/shell.cpp	/^t_next_box(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_no_status	src/sm/lock_s.h	/^        t_no_status = 0,$/;"	e	enum:lock_base_t::status_t
t_none	src/sm/btree_p.h	/^        t_none         = 0x0,$/;"	e	enum:btree_p::flag_t
t_none	src/sm/sort_s.h	/^    enum mask { t_none = 0x0, $/;"	e	enum:ssm_sort::sort_keys_t::mask
t_normal	src/sm/xct.h	/^    enum commit_t { t_normal = 0, t_lazy = 1, t_chain = 2 };$/;"	e	enum:xct_t::commit_t
t_not_deleting_store	src/sm/sm_base.h	/^            t_not_deleting_store, $/;"	e	enum:smlevel_0::store_deleting_t
t_not_started	src/sm/sm_base.h	/^        t_not_started = 0, $/;"	e	enum:smlevel_0::operating_mode_t
t_num_active	src/sm/smsh/shell.cpp	/^t_num_active(Tcl_Interp* ip, int ac, TCL_AV char* [])$/;"	f	file:
t_num_durations	src/fc/w_base.h	/^        t_num_durations = 5 \/* not a duration -- used for typed comparisons *\/$/;"	e	enum:w_base_t::lock_duration_t
t_num_prepared	src/sm/smsh/shell.cpp	/^t_num_prepared(Tcl_Interp* ip, int ac, TCL_AV char*[])$/;"	f	file:
t_open_quark	src/sm/smsh/shell.cpp	/^t_open_quark(Tcl_Interp* ip, int ac, TCL_AV char* [])$/;"	f	file:
t_overlap	src/fc/nbox.h	/^    enum sob_cmp_t { t_exact = 1, t_overlap, t_cover, t_inside, t_bad };$/;"	e	enum:nbox_t::sob_cmp_t
t_page	src/sm/lock_s.h	/^        t_page               = 2,  \/\/ parent is 2\/2 = 1 t_store$/;"	e	enum:lockid_t::name_space_t
t_page_containing	src/sm/smsh/shell.cpp	/^t_page_containing(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_page_format	src/sm/logtype_gen.h	/^	t_page_format = 28,$/;"	e	enum:kind_t
t_page_image	src/sm/logtype_gen.h	/^	t_page_image = 35,$/;"	e	enum:kind_t
t_page_insert	src/sm/logtype_gen.h	/^	t_page_insert = 26,$/;"	e	enum:kind_t
t_page_link	src/sm/logtype_gen.h	/^	t_page_link = 25,$/;"	e	enum:kind_t
t_page_mark	src/sm/logtype_gen.h	/^	t_page_mark = 29,$/;"	e	enum:kind_t
t_page_reclaim	src/sm/logtype_gen.h	/^	t_page_reclaim = 30,$/;"	e	enum:kind_t
t_page_remove	src/sm/logtype_gen.h	/^	t_page_remove = 27,$/;"	e	enum:kind_t
t_page_set_byte	src/sm/logtype_gen.h	/^	t_page_set_byte = 34,$/;"	e	enum:kind_t
t_page_shift	src/sm/logtype_gen.h	/^	t_page_shift = 31,$/;"	e	enum:kind_t
t_page_splice	src/sm/logtype_gen.h	/^	t_page_splice = 32,$/;"	e	enum:kind_t
t_page_splicez	src/sm/logtype_gen.h	/^	t_page_splicez = 33,$/;"	e	enum:kind_t
t_pecho	src/sm/smsh/tcl_thread.cpp	/^t_pecho(ClientData, Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f
t_pending	src/sm/lock_x.h	/^       t_pending = 8,    \/\/ set when a record level callback gets blocked$/;"	e	enum:lock_head_t::__anon25
t_pin_append_rec	src/sm/smsh/shell.cpp	/^t_pin_append_rec(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_pin_body	src/sm/smsh/shell.cpp	/^t_pin_body(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_pin_create	src/sm/smsh/shell.cpp	/^t_pin_create(Tcl_Interp* ip, int ac, TCL_AV char*[])$/;"	f	file:
t_pin_destroy	src/sm/smsh/shell.cpp	/^t_pin_destroy(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_pin_hdr	src/sm/smsh/shell.cpp	/^t_pin_hdr(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_pin_is_small	src/sm/smsh/shell.cpp	/^t_pin_is_small(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_pin_large_impl	src/sm/smsh/shell.cpp	/^t_pin_large_impl(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_pin_next_bytes	src/sm/smsh/shell.cpp	/^t_pin_next_bytes(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_pin_pin	src/sm/smsh/shell.cpp	/^t_pin_pin(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_pin_pinned	src/sm/smsh/shell.cpp	/^t_pin_pinned(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_pin_repin	src/sm/smsh/shell.cpp	/^t_pin_repin(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_pin_rid	src/sm/smsh/shell.cpp	/^t_pin_rid(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_pin_truncate_rec	src/sm/smsh/shell.cpp	/^t_pin_truncate_rec(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_pin_unpin	src/sm/smsh/shell.cpp	/^t_pin_unpin(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_pin_update_rec	src/sm/smsh/shell.cpp	/^t_pin_update_rec(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_pin_update_rec_hdr	src/sm/smsh/shell.cpp	/^t_pin_update_rec_hdr(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_prepare_xct	src/sm/smsh/shell.cpp	/^t_prepare_xct(Tcl_Interp* ip, int ac, TCL_AV char* [])$/;"	f	file:
t_print_index	src/sm/smsh/shell.cpp	/^t_print_index(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_print_md_index	src/sm/smsh/shell.cpp	/^t_print_md_index(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_print_rec	src/sm/smsh/shell.cpp	/^t_print_rec(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_purged	src/sm/lock_x.h	/^    enum { t_purged = 1,    \/\/ set if a page is purged while still in use.$/;"	e	enum:lock_head_t::__anon25
t_purify_print_string	src/sm/smsh/shell.cpp	/^t_purify_print_string(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_query_lock	src/sm/smsh/shell.cpp	/^t_query_lock(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_random	src/sm/smsh/tcl_thread.cpp	/^t_random(ClientData, Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f
t_ranges_p	src/sm/page.h	/^	t_ranges_p         = 11,       \/\/ key-ranges info page$/;"	e	enum:page_p::tag_t
t_read	src/sm/rtree.h	/^enum oper_t { t_read = 0, t_insert, t_remove };$/;"	e	enum:oper_t
t_read_hdr	src/sm/smsh/shell.cpp	/^t_read_hdr(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_read_random	src/sm/smsh/tcl_thread.cpp	/^t_read_random(ClientData, Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f
t_read_rec	src/sm/smsh/shell.cpp	/^t_read_rec(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_read_rec_1	src/sm/smsh/shell.cpp	/^t_read_rec_1(Tcl_Interp* ip, int ac, TCL_AV char* av[], bool dump_body_too)$/;"	f	file:
t_read_rec_body	src/sm/smsh/shell.cpp	/^t_read_rec_body(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_ready	src/sthread/sthread.h	/^        t_ready,    \/\/ thread is ready to run$/;"	e	enum:sthread_t::status_t
t_record	src/sm/lock_s.h	/^        t_record             = 4,  \/\/ parent is 4\/2 = 2 t_page$/;"	e	enum:lockid_t::name_space_t
t_recover2pc	src/sm/smsh/shell.cpp	/^t_recover2pc(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_redo	src/sm/logrec.h	/^    t_redo = 04,$/;"	e	enum:logrec_t::category_t
t_regular	src/sm/sm_int_3.h	/^    t_regular     = 0x1,$/;"	e	enum:smlevel_3::sm_store_property_t
t_regular	src/sthread/sthread.h	/^        t_regular    = 0,$/;"	e	enum:sthread_t::priority_t
t_reinit_fingerprints	src/sm/smsh/shell.cpp	/^t_reinit_fingerprints(Tcl_Interp* ip, int ac, TCL_AV char*[])$/;"	f	file:
t_remove	src/sm/rtree.h	/^enum oper_t { t_read = 0, t_insert, t_remove };$/;"	e	enum:oper_t
t_repeat_cb	src/sm/lock_x.h	/^       t_repeat_cb = 16    \/\/ set when a callback operation needs to be$/;"	e	enum:lock_head_t::__anon25
t_restart	src/sm/smsh/shell.cpp	/^t_restart(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_rollback	src/sm/logrec.h	/^    t_rollback = 040 \/\/ Not a category, but issued in abort\/undo --$/;"	e	enum:logrec_t::category_t
t_rollback_work	src/sm/smsh/shell.cpp	/^t_rollback_work(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_rtree	src/sm/sm_base.h	/^        t_rtree,                 \/\/ R*tree$/;"	e	enum:smlevel_0::ndx_t
t_rtree_base_p	src/sm/page.h	/^        t_rtree_base_p     = 7,        \/\/ rtree base class page$/;"	e	enum:page_p::tag_t
t_rtree_insert	src/sm/logtype_gen.h	/^	t_rtree_insert = 39,$/;"	e	enum:kind_t
t_rtree_p	src/sm/page.h	/^        t_rtree_p          = 8,        \/\/ rtree page$/;"	e	enum:page_p::tag_t
t_rtree_remove	src/sm/logtype_gen.h	/^	t_rtree_remove = 40,$/;"	e	enum:kind_t
t_rtree_scan	src/sm/smsh/shell.cpp	/^t_rtree_scan(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_rtree_stats	src/sm/smsh/shell.cpp	/^t_rtree_stats(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_running	src/sthread/sthread.h	/^        t_running,    \/\/ when me() is this thread $/;"	e	enum:sthread_t::status_t
t_save_work	src/sm/smsh/shell.cpp	/^t_save_work(Tcl_Interp* ip, int ac, TCL_AV char* [])$/;"	f	file:
t_scan_file_append	src/sm/smsh/shell.cpp	/^t_scan_file_append(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_scan_file_create	src/sm/smsh/shell.cpp	/^t_scan_file_create(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_scan_file_cursor	src/sm/smsh/shell.cpp	/^t_scan_file_cursor(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_scan_file_destroy	src/sm/smsh/shell.cpp	/^t_scan_file_destroy(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_scan_file_finish	src/sm/smsh/shell.cpp	/^t_scan_file_finish(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_scan_file_next	src/sm/smsh/shell.cpp	/^t_scan_file_next(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_scan_file_next_page	src/sm/smsh/shell.cpp	/^t_scan_file_next_page(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_scan_next	src/sm/smsh/shell.cpp	/^t_scan_next(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_scan_recs	src/sm/smsh/shell.cpp	/^t_scan_recs(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_scan_rids	src/sm/smsh/shell.cpp	/^t_scan_rids(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_scan_sorted_recs	src/sm/smsh/shell2.cpp	/^t_scan_sorted_recs(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f
t_set_coordinator	src/sm/smsh/shell.cpp	/^t_set_coordinator(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_set_debug	src/sm/smsh/shell.cpp	/^t_set_debug(Tcl_Interp* ip, int ac, TCL_AV char** W_IFTRACE(av))$/;"	f	file:
t_set_deleting	src/sm/sm_base.h	/^            t_set_deleting, $/;"	e	enum:smlevel_0::store_operation_t
t_set_disk_delay	src/sm/smsh/shell.cpp	/^t_set_disk_delay(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_set_escalation_thresholds	src/sm/smsh/shell.cpp	/^t_set_escalation_thresholds(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_set_ext_next	src/sm/logtype_gen.h	/^	t_set_ext_next = 23,$/;"	e	enum:kind_t
t_set_first_ext	src/sm/sm_base.h	/^            t_set_first_ext};$/;"	e	enum:smlevel_0::store_operation_t
t_set_lock_cache_enable	src/sm/smsh/shell.cpp	/^t_set_lock_cache_enable(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_set_lock_level	src/sm/smsh/shell.cpp	/^t_set_lock_level(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_set_store_flags	src/sm/sm_base.h	/^            t_set_store_flags, $/;"	e	enum:smlevel_0::store_operation_t
t_set_store_property	src/sm/smsh/shell.cpp	/^t_set_store_property(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_short	src/fc/w_base.h	/^        t_short     = 1,    \/* held until end of some operation         *\/$/;"	e	enum:w_base_t::lock_duration_t
t_skip	src/sm/logtype_gen.h	/^	t_skip = 2,$/;"	e	enum:kind_t
t_sleep	src/sm/smsh/shell.cpp	/^t_sleep(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_sm_sizeof	src/sm/smsh/sm_sizeof.cpp	/^int    t_sm_sizeof(Tcl_Interp *, int argc, TCL_AV char **argv)$/;"	f
t_small	src/sm/file_s.h	/^    t_small        = 0x04,    \/\/ simple record$/;"	e	enum:recflags_t
t_smo	src/sm/btree_p.h	/^        t_smo         = 0x01,$/;"	e	enum:btree_p::flag_t
t_snapshot_buffers	src/sm/smsh/shell.cpp	/^t_snapshot_buffers(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_sort_file	src/sm/smsh/shell2.cpp	/^t_sort_file(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f
t_sort_stream_end	src/sm/smsh/shell.cpp	/^t_sort_stream_end(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_sort_stream_get	src/sm/smsh/shell.cpp	/^t_sort_stream_get(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_sort_stream_put	src/sm/smsh/shell.cpp	/^t_sort_stream_put(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_spatial	src/sm/sort_s.h	/^                    t_spatial=sortorder::kt_spatial};$/;"	e	enum:ssm_sort::key_info_t::dummy_t
t_st_check_stack	src/sm/smsh/shell.cpp	/^t_st_check_stack(Tcl_Interp *, int argc, TCL_AV char **)$/;"	f	file:
t_st_rc	src/sm/smsh/shell.cpp	/^t_st_rc(Tcl_Interp *, int argc, TCL_AV char **argv)$/;"	f	file:
t_st_stats	src/sm/smsh/shell.cpp	/^t_st_stats(Tcl_Interp *, int argc, TCL_AV char **)$/;"	f	file:
t_start_log_corruption	src/sm/smsh/shell.cpp	/^t_start_log_corruption(Tcl_Interp* ip, int ac, TCL_AV char* [])$/;"	f	file:
t_state_xct	src/sm/smsh/shell.cpp	/^t_state_xct(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_status	src/sm/logrec.h	/^    t_status = 01,$/;"	e	enum:logrec_t::category_t
t_stnode_p	src/sm/page.h	/^        t_stnode_p         = 2,        \/\/ store node page$/;"	e	enum:page_p::tag_t
t_store	src/sm/lock_s.h	/^        t_store              = 1,  \/\/ parent is 1\/2 = 0 t_vol$/;"	e	enum:lockid_t::name_space_t
t_store_freeing_exts	src/sm/sm_base.h	/^            t_store_freeing_exts, $/;"	e	enum:smlevel_0::store_deleting_t
t_store_operation	src/sm/logtype_gen.h	/^	t_store_operation = 24,$/;"	e	enum:kind_t
t_string	src/sm/sort_s.h	/^                    t_string=sortorder::kt_b, $/;"	e	enum:ssm_sort::key_info_t::dummy_t
t_sync	src/sm/smsh/tcl_thread.cpp	/^t_sync(ClientData, Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f
t_sync_log	src/sm/smsh/shell.cpp	/^t_sync_log(Tcl_Interp* ip, int ac, TCL_AV char* [])$/;"	f	file:
t_sync_thread	src/sm/smsh/tcl_thread.cpp	/^t_sync_thread(ClientData, Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f
t_temporary	src/sm/sm_int_3.h	/^    t_temporary    = 0x2,$/;"	e	enum:smlevel_3::sm_store_property_t
t_test_bulkload_int_btree	src/sm/smsh/sort_funcs.cpp	/^t_test_bulkload_int_btree(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f
t_test_bulkload_rtree	src/sm/smsh/sort_funcs2.cpp	/^t_test_bulkload_rtree(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f
t_test_int_btree	src/sm/smsh/shell2.cpp	/^t_test_int_btree(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f
t_test_typed_btree	src/sm/smsh/shell2.cpp	/^t_test_typed_btree(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f
t_testing	src/sm/smsh/shell.cpp	/^t_testing(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_tid_to_xct	src/sm/smsh/shell.cpp	/^t_tid_to_xct(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_time	src/sm/smsh/tcl_thread.cpp	/^t_time(ClientData, Tcl_Interp *interp,int argc, TCL_AV char **argv)$/;"	f
t_time_critical	src/sthread/sthread.h	/^        t_time_critical = 1,$/;"	e	enum:sthread_t::priority_t
t_timeofday	src/sm/smsh/tcl_thread.cpp	/^t_timeofday(ClientData, Tcl_Interp* ip, int ac, TCL_AV char* \/*av*\/[])$/;"	f
t_truncate_rec	src/sm/smsh/shell.cpp	/^t_truncate_rec(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_undef_named_sync	src/sm/smsh/tcl_thread.cpp	/^t_undef_named_sync(ClientData, Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f
t_undo	src/sm/logrec.h	/^    t_undo = 02,$/;"	e	enum:logrec_t::category_t
t_uni_btree	src/sm/sm_base.h	/^        t_uni_btree,             \/\/ Unique-key btree$/;"	e	enum:smlevel_0::ndx_t
t_uni_mrbtree	src/sm/sm_base.h	/^	t_uni_mrbtree,          $/;"	e	enum:smlevel_0::ndx_t
t_uni_mrbtree_l	src/sm/sm_base.h	/^	t_uni_mrbtree_l,               $/;"	e	enum:smlevel_0::ndx_t
t_uni_mrbtree_p	src/sm/sm_base.h	/^	t_uni_mrbtree_p$/;"	e	enum:smlevel_0::ndx_t
t_unknown_deleting	src/sm/sm_base.h	/^            t_unknown_deleting};$/;"	e	enum:smlevel_0::store_deleting_t
t_unlock	src/sm/smsh/shell.cpp	/^t_unlock(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_update_rec	src/sm/smsh/shell.cpp	/^t_update_rec(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_update_rec_hdr	src/sm/smsh/shell.cpp	/^t_update_rec_hdr(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_update_rec_many	src/sm/smsh/shell.cpp	/^t_update_rec_many(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_user1	src/sm/lock_s.h	/^        t_user1              = 6,$/;"	e	enum:lockid_t::name_space_t
t_user2	src/sm/lock_s.h	/^        t_user2              = 7,  \/\/ parent is t_user1$/;"	e	enum:lockid_t::name_space_t
t_user3	src/sm/lock_s.h	/^        t_user3              = 8,  \/\/ parent is t_user2$/;"	e	enum:lockid_t::name_space_t
t_user4	src/sm/lock_s.h	/^        t_user4              = 9   \/\/ parent is t_user3$/;"	e	enum:lockid_t::name_space_t
t_very_long	src/fc/w_base.h	/^        t_very_long = 4,    \/* held across xct boundaries               *\/$/;"	e	enum:w_base_t::lock_duration_t
t_virgin	src/sm/page.h	/^        t_virgin        = 0x02,        \/\/ newly allocated page$/;"	e	enum:page_p::page_flag_t
t_virgin	src/sthread/sthread.h	/^        t_virgin,    \/\/ thread hasn't started yet    $/;"	e	enum:sthread_t::status_t
t_vol	src/sm/lock_s.h	/^        t_vol                = 0,$/;"	e	enum:lockid_t::name_space_t
t_vol_root_index	src/sm/smsh/shell.cpp	/^t_vol_root_index(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_vt_bpool	src/sm/smsh/shell.cpp	/^t_vt_bpool(Tcl_Interp* ip, int , TCL_AV char* [])$/;"	f	file:
t_vt_lock	src/sm/smsh/shell.cpp	/^t_vt_lock(Tcl_Interp* ip, int , TCL_AV char* [])$/;"	f	file:
t_vt_stats	src/sm/smsh/shell.cpp	/^t_vt_stats(Tcl_Interp* ip, int , TCL_AV char* [])$/;"	f	file:
t_vt_thread	src/sm/smsh/shell.cpp	/^t_vt_thread(Tcl_Interp* ip, int , TCL_AV char* [])$/;"	f	file:
t_vt_xct	src/sm/smsh/shell.cpp	/^t_vt_xct(Tcl_Interp* ip, int , TCL_AV char* [])$/;"	f	file:
t_waiting	src/sm/lock_s.h	/^        t_waiting = 4$/;"	e	enum:lock_base_t::status_t
t_write_random	src/sm/smsh/tcl_thread.cpp	/^t_write_random(ClientData, Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f
t_written	src/sm/page.h	/^        t_written        = 0x08        \/\/ read in from disk$/;"	e	enum:page_p::page_flag_t
t_xct	src/sm/smsh/shell.cpp	/^t_xct(Tcl_Interp* ip, int ac, TCL_AV char* [])$/;"	f	file:
t_xct_abort	src/sm/logtype_gen.h	/^	t_xct_abort = 10,$/;"	e	enum:kind_t
t_xct_end	src/sm/logtype_gen.h	/^	t_xct_end = 12,$/;"	e	enum:kind_t
t_xct_freeing_space	src/sm/logtype_gen.h	/^	t_xct_freeing_space = 11,$/;"	e	enum:kind_t
t_xct_prepare_alk	src/sm/logtype_gen.h	/^	t_xct_prepare_alk = 15,$/;"	e	enum:kind_t
t_xct_prepare_fi	src/sm/logtype_gen.h	/^	t_xct_prepare_fi = 17,$/;"	e	enum:kind_t
t_xct_prepare_lk	src/sm/logtype_gen.h	/^	t_xct_prepare_lk = 14,$/;"	e	enum:kind_t
t_xct_prepare_st	src/sm/logtype_gen.h	/^	t_xct_prepare_st = 13,$/;"	e	enum:kind_t
t_xct_prepare_stores	src/sm/logtype_gen.h	/^	t_xct_prepare_stores = 16,$/;"	e	enum:kind_t
t_xct_to_tid	src/sm/smsh/shell.cpp	/^t_xct_to_tid(Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f	file:
t_yield	src/sm/smsh/tcl_thread.cpp	/^t_yield(ClientData, Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f
t_zkeyed_p	src/sm/page.h	/^        t_zkeyed_p         = 4,        \/\/ zkeyed page$/;"	e	enum:page_p::tag_t
tab	src/sm/restart.cpp	/^    w_hash_t<dp_entry_t, unsafe_list_dummy_lock_t, bfpid_t> tab; \/\/ hash table for dictionary$/;"	m	class:dirty_pages_tab_t	file:
table_base10	src/fc/w_input.cpp	/^static enum states table_base10[no_charclass][no_state] =$/;"	v	typeref:enum:states	file:
table_base16	src/fc/w_input.cpp	/^static enum states table_base16[no_charclass][no_state] =$/;"	v	typeref:enum:states	file:
table_base8	src/fc/w_input.cpp	/^static enum states table_base8[no_charclass][no_state] =$/;"	v	typeref:enum:states	file:
table_cleared	src/fc/errlog.cpp	/^    bool table_cleared;$/;"	m	class:errlog_dummy	file:
table_unknown	src/fc/w_input.cpp	/^static enum states table_unknown[no_charclass][no_state] =$/;"	v	typeref:enum:states	file:
tag	src/sm/file_s.h	/^    rectag_t     tag;$/;"	m	class:record_t
tag	src/sm/logrec.h	/^logrec_t::tag() const$/;"	f	class:logrec_t
tag	src/sm/page.h	/^page_p::tag() const$/;"	f	class:page_p
tag	src/sm/page_s.h	/^    uint2_t    tag;            \/\/ page_p::tag_t$/;"	m	class:page_s
tag_name	src/sm/page.cpp	/^page_p::tag_name(tag_t t)$/;"	f	class:page_p
tag_t	src/sm/page.h	/^    enum tag_t {$/;"	g	class:page_p
take	src/sm/bf_core.cpp	/^bfcb_t* bfcb_unused_list::take() {$/;"	f	class:bfcb_unused_list
take	src/sm/chkpt.cpp	/^void chkpt_m::take()$/;"	f	class:chkpt_m
take_space	src/sm/log.cpp	/^fileoff_t log_m::take_space(fileoff_t volatile* ptr, int amt) $/;"	f	class:log_m
tape_t	src/sm/newsort.cpp	/^    NORET tape_t () : $/;"	f	class:tape_t
tape_t	src/sm/newsort.cpp	/^class tape_t : public smlevel_top $/;"	c	file:
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz$/;"	m
target	src/sm/newsort.cpp	/^    int target() const { return _target; }$/;"	f	class:phase_mgr
target_alias	Makefile	/^target_alias = $/;"	m
target_alias	config/Makefile	/^target_alias = $/;"	m
target_alias	src/Makefile	/^target_alias = $/;"	m
target_alias	src/atomic_ops/Makefile	/^target_alias = $/;"	m
target_alias	src/atomic_ops/asm_linkage/Makefile	/^target_alias = $/;"	m
target_alias	src/atomic_ops/asm_linkage/usr/Makefile	/^target_alias = $/;"	m
target_alias	src/atomic_ops/asm_linkage/usr/src/Makefile	/^target_alias = $/;"	m
target_alias	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^target_alias = $/;"	m
target_alias	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^target_alias = $/;"	m
target_alias	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^target_alias = $/;"	m
target_alias	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^target_alias = $/;"	m
target_alias	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^target_alias = $/;"	m
target_alias	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^target_alias = $/;"	m
target_alias	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^target_alias = $/;"	m
target_alias	src/atomic_ops/atomic_ops/Makefile	/^target_alias = $/;"	m
target_alias	src/atomic_ops/atomic_ops/amd64/Makefile	/^target_alias = $/;"	m
target_alias	src/atomic_ops/atomic_ops/i386/Makefile	/^target_alias = $/;"	m
target_alias	src/atomic_ops/atomic_ops/sparc/Makefile	/^target_alias = $/;"	m
target_alias	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^target_alias = $/;"	m
target_alias	src/atomic_ops/ia32/Makefile	/^target_alias = $/;"	m
target_alias	src/atomic_ops/ia32/sys/Makefile	/^target_alias = $/;"	m
target_alias	src/atomic_ops/intel/Makefile	/^target_alias = $/;"	m
target_alias	src/atomic_ops/intel/ia32/Makefile	/^target_alias = $/;"	m
target_alias	src/atomic_ops/intel/ia32/sys/Makefile	/^target_alias = $/;"	m
target_alias	src/atomic_ops/intel/sys/Makefile	/^target_alias = $/;"	m
target_alias	src/atomic_ops/sparc/Makefile	/^target_alias = $/;"	m
target_alias	src/atomic_ops/sparc/sys/Makefile	/^target_alias = $/;"	m
target_alias	src/common/Makefile	/^target_alias = $/;"	m
target_alias	src/common/tests/Makefile	/^target_alias = $/;"	m
target_alias	src/fc/Makefile	/^target_alias = $/;"	m
target_alias	src/fc/tests/Makefile	/^target_alias = $/;"	m
target_alias	src/sm/Makefile	/^target_alias = $/;"	m
target_alias	src/sm/smsh/Makefile	/^target_alias = $/;"	m
target_alias	src/sm/smsh/lib/Makefile	/^target_alias = $/;"	m
target_alias	src/sm/smsh/scripts/Makefile	/^target_alias = $/;"	m
target_alias	src/sm/tests/Makefile	/^target_alias = $/;"	m
target_alias	src/sthread/Makefile	/^target_alias = $/;"	m
target_alias	src/sthread/tests/Makefile	/^target_alias = $/;"	m
target_alias	tools/Makefile	/^target_alias = $/;"	m
tatas_lock	src/sthread/sthread.h	/^    tatas_lock() { _holder.bits=NOBODY; }$/;"	f	struct:tatas_lock
tatas_lock	src/sthread/sthread.h	/^struct tatas_lock {$/;"	s
tc	src/fc/dynarray.h	/^    union ptr { char const* cc; T const* tc; char* c; T* t; };$/;"	m	union:dynvector::ptr
tcb	src/sm/smthread.h	/^    const tcb_t     &tcb() const { return _tcb; }$/;"	f	class:smthread_t
tcb	src/sm/smthread.h	/^    tcb_t           &tcb() { return _tcb; }$/;"	f	class:smthread_t
tcb_t	src/sm/smthread.h	/^        tcb_t() : $/;"	f	struct:smthread_t::tcb_t
tcb_t	src/sm/smthread.h	/^    struct tcb_t {$/;"	s	class:smthread_t
tcl_assert_failed	src/sm/smsh/tcl_thread.cpp	/^void tcl_assert_failed() {}$/;"	f
tcl_form_bool	src/sm/smsh/shell.h	/^inline const char *tcl_form_bool(bool flag)$/;"	f
tcl_form_flag	src/sm/smsh/shell.h	/^inline const char *tcl_form_flag(int flag)$/;"	f
tcl_init_cmd	src/sm/smsh/smsh.cpp	/^const char* tcl_init_cmd = 0; \/\/ DEAD?$/;"	v
tcl_scan_bool	src/sm/smsh/shell.cpp	/^int        tcl_scan_bool(const char *rep, bool &result)$/;"	f
tcl_scan_flag	src/sm/smsh/shell.cpp	/^int        tcl_scan_flag(const char *s, bool &result)$/;"	f
tcl_thread_t	src/sm/smsh/tcl_thread.cpp	/^tcl_thread_t::tcl_thread_t($/;"	f	class:tcl_thread_t
tcl_thread_t	src/sm/smsh/tcl_thread.h	/^class tcl_thread_t : public smthread_t  {$/;"	c
tcl_thread_t_list_i	src/sm/smsh/tcl_thread.h	/^typedef w_list_i<tcl_thread_t, queue_based_block_lock_t>             tcl_thread_t_list_i;$/;"	t
tclout	src/sm/smsh/shell.h	110;"	d
ten	src/fc/w_input.cpp	/^        nine=9, ten=10, eleven=11,$/;"	e	enum:charclass	file:
terr	src/fc/tests/errlogtest.cpp	/^ErrLog *tfile, *topen, *tsyslog, *terr, *tether;$/;"	v
test	src/fc/tests/io.cpp	/^void test(const char *s, int base, int times, bool \/* error_ok *\/ ) $/;"	f
test	src/sthread/tests/mmap.cpp	/^int test(size_t input_size)$/;"	f
test1	src/common/tests/latch1.cpp	/^void latch_thread_t::test1(int i, testKind t)$/;"	f	class:latch_thread_t
test1	src/fc/tests/container.cpp	/^int test1(int tries)$/;"	f
test1	src/fc/tests/errlogtest.cpp	/^void test1(ErrLog &e) { $/;"	f
test2	src/common/tests/latch1.cpp	/^void latch_thread_t::test2(int i, latch_mode_t mode1,$/;"	f	class:latch_thread_t
test2	src/fc/tests/container.cpp	/^int test2(int tries)$/;"	f
test2	src/fc/tests/errlogtest.cpp	/^void test2(ErrLog &e) { $/;"	f
test3	src/common/tests/latch1.cpp	/^void latch_thread_t::test3(int i, testKind t)$/;"	f	class:latch_thread_t
test3	src/fc/tests/container.cpp	/^int  test3(int \/*tries*\/)$/;"	f
test3	src/fc/tests/errlogtest.cpp	/^void test3(ErrLog &e) { $/;"	f
test4	src/common/tests/latch1.cpp	/^void latch_thread_t::test4()$/;"	f	class:latch_thread_t
testCSKF	src/sm/smsh/sort_funcs3.cpp	/^testCSKF($/;"	f
testKind	src/common/tests/latch1.cpp	/^    typedef enum { all_sh, one_ex, all_ex } testKind;$/;"	t	class:latch_thread_t	typeref:enum:latch_thread_t::__anon10	file:
test_b1	src/sm/smsh/shell.h	/^    test_b1, test_b23, test_bv, test_blarge,$/;"	e	enum:typed_btree_test
test_b23	src/sm/smsh/shell.h	/^    test_b1, test_b23, test_bv, test_blarge,$/;"	e	enum:typed_btree_test
test_blarge	src/sm/smsh/shell.h	/^    test_b1, test_b23, test_bv, test_blarge,$/;"	e	enum:typed_btree_test
test_block	src/fc/tests/memblock.cpp	/^void test_block() {$/;"	f
test_block_list	src/fc/tests/memblock.cpp	/^void test_block_list() {$/;"	f
test_block_pool	src/fc/tests/memblock.cpp	/^    NORET        test_block_pool(size_t chip_size, size_t chip_count,$/;"	f	struct:test_block_pool
test_block_pool	src/fc/tests/memblock.cpp	/^struct test_block_pool : block_pool {$/;"	s	file:
test_bv	src/sm/smsh/shell.h	/^    test_b1, test_b23, test_bv, test_blarge,$/;"	e	enum:typed_btree_test
test_f4	src/sm/smsh/shell.h	/^    test_f4, test_f8, $/;"	e	enum:typed_btree_test
test_f8	src/sm/smsh/shell.h	/^    test_f4, test_f8, $/;"	e	enum:typed_btree_test
test_helper_templates	src/fc/tests/memblock.cpp	/^void test_helper_templates() {$/;"	f
test_i1	src/sm/smsh/shell.h	/^    test_i1, test_i2, test_i4, test_i8,$/;"	e	enum:typed_btree_test
test_i2	src/sm/smsh/shell.h	/^    test_i1, test_i2, test_i4, test_i8,$/;"	e	enum:typed_btree_test
test_i4	src/sm/smsh/shell.h	/^    test_i1, test_i2, test_i4, test_i8,$/;"	e	enum:typed_btree_test
test_i8	src/sm/smsh/shell.h	/^    test_i1, test_i2, test_i4, test_i8,$/;"	e	enum:typed_btree_test
test_nosuch	src/sm/smsh/shell.h	/^    test_nosuch, $/;"	e	enum:typed_btree_test
test_scan	src/sm/smsh/scripts/bt.tcl	/^proc test_scan {ndx nrec} {$/;"	p
test_scanrt	src/sm/smsh/sort_funcs2.cpp	/^test_scanrt($/;"	f
test_spatial	src/sm/smsh/shell.h	/^    test_spatial$/;"	e	enum:typed_btree_test
test_stat	src/fc/tests/test_stat.h	/^    test_stat() : $/;"	f	class:test_stat
test_stat	src/fc/tests/test_stat.h	/^class test_stat {$/;"	c
test_u1	src/sm/smsh/shell.h	/^    test_u1, test_u2, test_u4, test_u8,$/;"	e	enum:typed_btree_test
test_u2	src/sm/smsh/shell.h	/^    test_u1, test_u2, test_u4, test_u8,$/;"	e	enum:typed_btree_test
test_u4	src/sm/smsh/shell.h	/^    test_u1, test_u2, test_u4, test_u8,$/;"	e	enum:typed_btree_test
test_u8	src/sm/smsh/shell.h	/^    test_u1, test_u2, test_u4, test_u8,$/;"	e	enum:typed_btree_test
test_write	src/sthread/tests/mmap.cpp	/^void test_write(char *b, size_t s)$/;"	f
testfunc	src/fc/tests/errlogtest.cpp	/^typedef void (*testfunc)(ErrLog &);$/;"	t	file:
testing	src/fc/tests/rc.cpp	/^w_rc_t testing()$/;"	f
testing1	src/fc/tests/rc.cpp	/^w_rc_t testing1()$/;"	f
testing2	src/fc/tests/rc.cpp	/^w_rc_t testing2()$/;"	f
testing_ok	src/fc/tests/rc.cpp	/^w_rc_t testing_ok()$/;"	f
testit	src/fc/tests/ss.cpp	/^void testit(bool terminate, w_ostrstream &s,$/;"	f
testit	src/sm/tests/lock_cache_test.cpp	/^testit(lockid_t &l, int line) $/;"	f
testnum	src/common/tests/latch1.cpp	/^int      testnum = -1;$/;"	v
testnumber	src/fc/tests/io.cpp	/^static int testnumber=0;$/;"	v	file:
tether	src/fc/tests/errlogtest.cpp	/^ErrLog *tfile, *topen, *tsyslog, *terr, *tether;$/;"	v
tfile	src/fc/tests/errlogtest.cpp	/^ErrLog *tfile, *topen, *tsyslog, *terr, *tether;$/;"	v
theBall	src/sthread/tests/thread1.cpp	/^	pthread_mutex_t	theBall;$/;"	m	struct:ping_pong_t	file:
the_latch	src/common/tests/latch1.cpp	/^latch_t  the_latch;$/;"	v
thirteen	src/fc/w_input.cpp	/^        twelve=12, thirteen=13, fourteen=14, fifteen=15,$/;"	e	enum:charclass	file:
thread	src/sm/lock_x.h	/^    smthread_t*       thread() const { return _thread;} $/;"	f	class:lock_request_t
thread1_DEPENDENCIES	src/sthread/tests/Makefile	/^thread1_DEPENDENCIES = ..\/libsthread.a ..\/..\/fc\/libfc.a $(LOCALLDADD)$/;"	m
thread1_LDADD	src/sthread/tests/Makefile	/^thread1_LDADD = $(LDADD)$/;"	m
thread1_OBJECTS	src/sthread/tests/Makefile	/^thread1_OBJECTS = $(am_thread1_OBJECTS)$/;"	m
thread1_SOURCES	src/sthread/tests/Makefile	/^thread1_SOURCES = thread1.cpp$/;"	m
thread2_DEPENDENCIES	src/sthread/tests/Makefile	/^thread2_DEPENDENCIES = ..\/libsthread.a ..\/..\/fc\/libfc.a $(LOCALLDADD)$/;"	m
thread2_LDADD	src/sthread/tests/Makefile	/^thread2_LDADD = $(LDADD)$/;"	m
thread2_OBJECTS	src/sthread/tests/Makefile	/^thread2_OBJECTS = $(am_thread2_OBJECTS)$/;"	m
thread2_SOURCES	src/sthread/tests/Makefile	/^thread2_SOURCES = thread2.cpp$/;"	m
thread3_DEPENDENCIES	src/sthread/tests/Makefile	/^thread3_DEPENDENCIES = ..\/libsthread.a ..\/..\/fc\/libfc.a $(LOCALLDADD)$/;"	m
thread3_LDADD	src/sthread/tests/Makefile	/^thread3_LDADD = $(LDADD)$/;"	m
thread3_OBJECTS	src/sthread/tests/Makefile	/^thread3_OBJECTS = $(am_thread3_OBJECTS)$/;"	m
thread3_SOURCES	src/sthread/tests/Makefile	/^thread3_SOURCES = thread3.cpp$/;"	m
thread4_DEPENDENCIES	src/sthread/tests/Makefile	/^thread4_DEPENDENCIES = ..\/libsthread.a ..\/..\/fc\/libfc.a $(LOCALLDADD)$/;"	m
thread4_LDADD	src/sthread/tests/Makefile	/^thread4_LDADD = $(LDADD)$/;"	m
thread4_OBJECTS	src/sthread/tests/Makefile	/^thread4_OBJECTS = $(am_thread4_OBJECTS)$/;"	m
thread4_SOURCES	src/sthread/tests/Makefile	/^thread4_SOURCES = thread4.cpp$/;"	m
thread_can_delete	src/sm/rtree_p.h	/^    bool thread_can_delete() const {$/;"	f	class:rt_cursor_t
thread_collect	src/sm/vtable_sm.cpp	/^ss_m::thread_collect( vtable_t & res, bool names_too) $/;"	f	class:ss_m
thread_count	src/sm/smsh/tcl_thread.cpp	/^int tcl_thread_t::thread_count = 0;$/;"	m	class:tcl_thread_t	file:
thread_count	src/sm/smsh/tcl_thread.h	/^    static int                  thread_count;$/;"	m	class:tcl_thread_t
thread_fini	src/fc/tls.cpp	/^void tls_manager::thread_fini() {$/;"	f	class:tls_manager
thread_forked	src/sm/smsh/tcl_thread.cpp	/^int tcl_thread_t::thread_forked = 0;$/;"	m	class:tcl_thread_t	file:
thread_forked	src/sm/smsh/tcl_thread.h	/^    static int                  thread_forked;$/;"	m	class:tcl_thread_t
thread_init	src/fc/tls.cpp	/^void tls_manager::thread_init() {$/;"	f	class:tls_manager
thread_joined	src/sm/smsh/tcl_thread.cpp	/^int tcl_thread_t::thread_joined = 0;$/;"	m	class:tcl_thread_t	file:
thread_joined	src/sm/smsh/tcl_thread.h	/^    static int                  thread_joined;$/;"	m	class:tcl_thread_t
thread_local_freelist	src/common/latch.h	/^    static __thread latch_holder_t* thread_local_freelist;$/;"	m	class:latch_holder_t
thread_local_holders	src/common/latch.h	/^    static __thread latch_holder_t* thread_local_holders;$/;"	m	class:latch_holder_t
thread_mutex	src/sm/smsh/tcl_thread.cpp	/^    tcl_thread_t::threadslist(W_LIST_ARG(tcl_thread_t, link), &tcl_thread_t::thread_mutex);$/;"	m	class:tcl_thread_t	file:
thread_mutex	src/sm/smsh/tcl_thread.cpp	/^queue_based_block_lock_t tcl_thread_t::thread_mutex;$/;"	m	class:tcl_thread_t	file:
thread_mutex	src/sm/smsh/tcl_thread.h	/^    static queue_based_block_lock_t      thread_mutex;$/;"	m	class:tcl_thread_t
thread_rc	src/sm/bf.cpp	/^    w_rc_t thread_rc;     \/\/ setting this causes cancelslaves to be set$/;"	m	struct:bf_page_writer_control_t	file:
thread_type	src/sm/smthread.h	/^    virtual int            thread_type() { return smThreadType; }$/;"	f	class:smthread_t
threadptr	src/sm/tests/file_scan_many.cpp	/^typedef smthread_main_t *  threadptr;$/;"	t	file:
threadptr	src/sm/tests/mrbtrees_test.cpp	/^typedef smthread_main_t *  threadptr;$/;"	t	file:
threadslist	src/sm/smsh/tcl_thread.h	/^    static w_list_t<tcl_thread_t, queue_based_block_lock_t> threadslist;$/;"	m	class:tcl_thread_t
threadstats	src/sthread/sthread.cpp	/^void threadstats()$/;"	f
three	src/fc/w_input.cpp	/^enum charclass { zero=0, one=1, two=2, three=3, four=4, $/;"	e	enum:charclass	file:
thresh2_dec_signed	src/fc/w_input.cpp	/^w_base_t::uint8_t    thresh2_dec_signed =  $/;"	v
thresh2_dec_unsigned	src/fc/w_input.cpp	/^w_base_t::uint8_t    thresh2_dec_unsigned =  $/;"	v
thresh_dec_signed	src/fc/w_input.cpp	/^w_base_t::uint8_t    thresh_dec_signed =  $/;"	v
thresh_dec_unsigned	src/fc/w_input.cpp	/^w_base_t::uint8_t    thresh_dec_unsigned =  $/;"	v
thresh_hex_signed	src/fc/w_input.cpp	/^w_base_t::uint8_t    thresh_hex_signed =  $/;"	v
thresh_hex_unsigned	src/fc/w_input.cpp	/^w_base_t::uint8_t    thresh_hex_unsigned =  $/;"	v
thresh_oct_signed	src/fc/w_input.cpp	/^w_base_t::uint8_t    thresh_oct_signed =  $/;"	v
thresh_oct_unsigned	src/fc/w_input.cpp	/^w_base_t::uint8_t    thresh_oct_unsigned =  $/;"	v
tid	src/sm/lock_x.h	/^    tid_t            tid() const { return _tid; }$/;"	f	class:xct_lock_info_t
tid	src/sm/logrec.h	/^    tid_t                 tid;$/;"	m	struct:chkpt_xct_tab_t::xrec_t
tid	src/sm/logrec.h	/^logrec_t::tid() const$/;"	f	class:logrec_t
tid	src/sm/page.h	/^page_p::tid() const$/;"	f	class:page_p
tid	src/sm/page_s.h	/^        const tid_t&    tid() const { return _tid; }$/;"	f	class:page_s::space_t
tid	src/sm/scan.h	/^    tid_t                tid;$/;"	m	class:scan_index_i
tid	src/sm/scan.h	/^    tid_t             tid;$/;"	m	class:scan_rt_i
tid	src/sm/scan.h	/^    tid_t            tid;$/;"	m	class:scan_file_i
tid	src/sm/sm.h	/^    tid_t            tid() const { return _tid; }$/;"	f	class:sm_save_point_t
tid	src/sm/sm.h	/^    tid_t            tid()const { return _tid; }$/;"	f	class:sm_quark_t
tid	src/sm/xct.cpp	/^xct_t::tid() const$/;"	f	class:xct_t
tid_t	src/common/tid_t.h	/^    tid_t() : _data(0) { }$/;"	f	class:tid_t
tid_t	src/common/tid_t.h	/^    tid_t(datum_t x) : _data(x) { }$/;"	f	class:tid_t
tid_t	src/common/tid_t.h	/^    tid_t(uint4_t l, uint4_t h) : _data( (((datum_t) h) << 32) | l ) { }$/;"	f	class:tid_t
tid_t	src/common/tid_t.h	/^class tid_t {$/;"	c
tid_to_xct	src/sm/sm.cpp	/^xct_t* ss_m::tid_to_xct(const tid_t& tid)$/;"	f	class:ss_m
time	src/sm/tests/stopwatch.h	/^    double time() {$/;"	f	class:stopwatch_t
time_ms	src/sm/tests/stopwatch.h	/^    double time_ms() {$/;"	f	class:stopwatch_t
time_reads	src/sm/smsh/scripts/random.perf.tcl	/^proc time_reads { thid first nobjs nreads } {$/;"	p
time_us	src/sm/tests/stopwatch.h	/^    long long time_us() {$/;"	f	class:stopwatch_t
time_writes	src/sm/smsh/scripts/random.perf.tcl	/^proc time_writes { thid first nobjs nwrites } {$/;"	p
timeout_c	src/sm/xct.cpp	/^xct_t::timeout_c() const {$/;"	f	class:xct_t
timeout_in_ms	src/sm/smthread.h	/^typedef sthread_t::timeout_in_ms timeout_in_ms;$/;"	t
timeout_in_ms	src/sthread/sthread.h	/^    typedef int4_t timeout_in_ms;$/;"	t	class:sthread_base_t
timeout_t	src/sthread/sthread.h	/^    enum timeout_t {$/;"	g	class:sthread_base_t
timeout_to_timespec	src/sthread/sthread.cpp	/^void sthread_t::timeout_to_timespec(timeout_in_ms timeout, struct timespec &when)$/;"	f	class:sthread_t
timer_thread_t	src/sthread/tests/thread1.cpp	/^class timer_thread_t : public sthread_t {$/;"	c	file:
timer_thread_t	src/sthread/tests/thread1.cpp	/^timer_thread_t::timer_thread_t()$/;"	f	class:timer_thread_t
timer_thread_t	src/sthread/tests/thread4.cpp	/^class timer_thread_t : public sthread_t {$/;"	c	file:
timer_thread_t	src/sthread/tests/thread4.cpp	/^timer_thread_t::timer_thread_t(unsigned ms)$/;"	f	class:timer_thread_t
tls_blob	src/fc/tls.h	/^struct tls_blob {$/;"	s	namespace:tls_tricks
tls_function_list	src/fc/tls.cpp	/^typedef std::vector<std::pair<void(*)(), void(*)()> > tls_function_list;$/;"	t	file:
tls_manager	src/fc/tls.h	/^class tls_manager {$/;"	c	namespace:tls_tricks
tls_manager_initialized	src/fc/tls.cpp	/^static bool tls_manager_initialized = false;$/;"	v	file:
tls_manager_schwarz	src/fc/tls.h	/^    tls_manager_schwarz() { tls_manager::global_init(); }$/;"	f	struct:tls_tricks::tls_manager_schwarz
tls_manager_schwarz	src/fc/tls.h	/^struct tls_manager_schwarz {$/;"	s	namespace:tls_tricks
tls_rng	src/fc/tests/cuckoo.cpp	/^static __thread rand48 tls_rng = RAND48_INITIALIZER;$/;"	v	file:
tls_rng	src/fc/tests/rand.cpp	/^rand48  tls_rng  = RAND48_INITIALIZER;$/;"	v
tls_rng	src/sthread/sthread.h	/^    static w_rand        *tls_rng() { return &me()->_rng; }$/;"	f	class:sthread_t
tls_tricks	src/fc/tls.h	/^namespace tls_tricks {$/;"	n
tlsm_schwarz_one_and_only	src/fc/tls.h	/^static struct tls_manager_schwarz tlsm_schwarz_one_and_only;$/;"	m	namespace:tls_tricks	typeref:struct:tls_tricks::tls_manager_schwarz
tmp	src/common/regex_engine.cpp	/^    states tmp;        \/* temporary *\/$/;"	m	struct:match	file:
tmp2real	src/sm/rtree.cpp	/^rtld_stk_t::tmp2real($/;"	f	class:rtld_stk_t
tmp_fid	src/sm/newsort.cpp	/^    stid_t             tmp_fid() const { return stid_t(_vol, _store); }$/;"	f	class:tape_t
tmp_fid	src/sm/sort.cpp	/^    stid_t tmp_fid;     \/\/ fid for the temporary file$/;"	m	struct:sort_desc_t	file:
to_file	src/common/lsn.h	/^    static w_base_t::uint4_t to_file(w_base_t::uint8_t f) { $/;"	f	class:lsn_t
to_linear	src/fc/stime.cpp	/^static    inline long to_linear(const _stime_t &_time, const int linear_secs)$/;"	f	file:
to_rba	src/common/lsn.h	/^    static sm_diskaddr_t to_rba(w_base_t::uint8_t r) { $/;"	f	class:lsn_t
to_string	src/sm/xct.h	717;"	d
tod	src/fc/tests/ntime.cpp	/^int    tod;$/;"	v
toggle_base	src/sm/sort.h	/^    int2_t   toggle_base; \/\/ default = 1, unique sort = 2$/;"	m	class:run_scan_t
top	src/fc/w_list.h	/^    T*                  top()   {$/;"	f	class:w_list_t
top	src/sm/rtree.cpp	/^    rtwork_p* top() {$/;"	f	class:rtld_cache_t
top	src/sm/rtree_p.h	/^rtstk_t::top()$/;"	f	class:rtstk_t
top_build_prefix	Makefile	/^top_build_prefix = $/;"	m
top_build_prefix	config/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	src/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	src/atomic_ops/Makefile	/^top_build_prefix = ..\/..\/$/;"	m
top_build_prefix	src/atomic_ops/asm_linkage/Makefile	/^top_build_prefix = ..\/..\/..\/$/;"	m
top_build_prefix	src/atomic_ops/asm_linkage/usr/Makefile	/^top_build_prefix = ..\/..\/..\/..\/$/;"	m
top_build_prefix	src/atomic_ops/asm_linkage/usr/src/Makefile	/^top_build_prefix = ..\/..\/..\/..\/..\/$/;"	m
top_build_prefix	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^top_build_prefix = ..\/..\/..\/..\/..\/..\/$/;"	m
top_build_prefix	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^top_build_prefix = ..\/..\/..\/..\/..\/..\/..\/$/;"	m
top_build_prefix	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^top_build_prefix = ..\/..\/..\/..\/..\/..\/..\/..\/$/;"	m
top_build_prefix	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^top_build_prefix = ..\/..\/..\/..\/..\/..\/..\/..\/..\/$/;"	m
top_build_prefix	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^top_build_prefix = ..\/..\/..\/..\/..\/..\/..\/..\/$/;"	m
top_build_prefix	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^top_build_prefix = ..\/..\/..\/..\/..\/..\/..\/$/;"	m
top_build_prefix	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^top_build_prefix = ..\/..\/..\/..\/..\/..\/..\/..\/$/;"	m
top_build_prefix	src/atomic_ops/atomic_ops/Makefile	/^top_build_prefix = ..\/..\/..\/$/;"	m
top_build_prefix	src/atomic_ops/atomic_ops/amd64/Makefile	/^top_build_prefix = ..\/..\/..\/..\/$/;"	m
top_build_prefix	src/atomic_ops/atomic_ops/i386/Makefile	/^top_build_prefix = ..\/..\/..\/..\/$/;"	m
top_build_prefix	src/atomic_ops/atomic_ops/sparc/Makefile	/^top_build_prefix = ..\/..\/..\/..\/$/;"	m
top_build_prefix	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^top_build_prefix = ..\/..\/..\/..\/$/;"	m
top_build_prefix	src/atomic_ops/ia32/Makefile	/^top_build_prefix = ..\/..\/..\/..\/..\/..\/..\/..\/$/;"	m
top_build_prefix	src/atomic_ops/ia32/sys/Makefile	/^top_build_prefix = ..\/..\/..\/..\/..\/..\/..\/..\/..\/$/;"	m
top_build_prefix	src/atomic_ops/intel/Makefile	/^top_build_prefix = ..\/..\/..\/..\/..\/..\/..\/$/;"	m
top_build_prefix	src/atomic_ops/intel/ia32/Makefile	/^top_build_prefix = ..\/..\/..\/..\/..\/..\/..\/..\/$/;"	m
top_build_prefix	src/atomic_ops/intel/ia32/sys/Makefile	/^top_build_prefix = ..\/..\/..\/..\/..\/..\/..\/..\/..\/$/;"	m
top_build_prefix	src/atomic_ops/intel/sys/Makefile	/^top_build_prefix = ..\/..\/..\/..\/..\/..\/..\/..\/$/;"	m
top_build_prefix	src/atomic_ops/sparc/Makefile	/^top_build_prefix = ..\/..\/..\/..\/..\/..\/..\/$/;"	m
top_build_prefix	src/atomic_ops/sparc/sys/Makefile	/^top_build_prefix = ..\/..\/..\/..\/..\/..\/..\/..\/$/;"	m
top_build_prefix	src/common/Makefile	/^top_build_prefix = ..\/..\/$/;"	m
top_build_prefix	src/common/tests/Makefile	/^top_build_prefix = ..\/..\/..\/$/;"	m
top_build_prefix	src/fc/Makefile	/^top_build_prefix = ..\/..\/$/;"	m
top_build_prefix	src/fc/tests/Makefile	/^top_build_prefix = ..\/..\/..\/$/;"	m
top_build_prefix	src/sm/Makefile	/^top_build_prefix = ..\/..\/$/;"	m
top_build_prefix	src/sm/smsh/Makefile	/^top_build_prefix = ..\/..\/..\/$/;"	m
top_build_prefix	src/sm/smsh/lib/Makefile	/^top_build_prefix = ..\/..\/..\/..\/$/;"	m
top_build_prefix	src/sm/smsh/scripts/Makefile	/^top_build_prefix = ..\/..\/..\/..\/$/;"	m
top_build_prefix	src/sm/tests/Makefile	/^top_build_prefix = ..\/..\/..\/$/;"	m
top_build_prefix	src/sthread/Makefile	/^top_build_prefix = ..\/..\/$/;"	m
top_build_prefix	src/sthread/tests/Makefile	/^top_build_prefix = ..\/..\/..\/$/;"	m
top_build_prefix	tools/Makefile	/^top_build_prefix = ..\/$/;"	m
top_builddir	Makefile	/^top_builddir = .$/;"	m
top_builddir	config/Makefile	/^top_builddir = ..$/;"	m
top_builddir	src/Makefile	/^top_builddir = ..$/;"	m
top_builddir	src/atomic_ops/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	src/atomic_ops/asm_linkage/Makefile	/^top_builddir = ..\/..\/..$/;"	m
top_builddir	src/atomic_ops/asm_linkage/usr/Makefile	/^top_builddir = ..\/..\/..\/..$/;"	m
top_builddir	src/atomic_ops/asm_linkage/usr/src/Makefile	/^top_builddir = ..\/..\/..\/..\/..$/;"	m
top_builddir	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^top_builddir = ..\/..\/..\/..\/..\/..$/;"	m
top_builddir	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^top_builddir = ..\/..\/..\/..\/..\/..\/..$/;"	m
top_builddir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^top_builddir = ..\/..\/..\/..\/..\/..\/..\/..$/;"	m
top_builddir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^top_builddir = ..\/..\/..\/..\/..\/..\/..\/..\/..$/;"	m
top_builddir	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^top_builddir = ..\/..\/..\/..\/..\/..\/..\/..$/;"	m
top_builddir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^top_builddir = ..\/..\/..\/..\/..\/..\/..$/;"	m
top_builddir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^top_builddir = ..\/..\/..\/..\/..\/..\/..\/..$/;"	m
top_builddir	src/atomic_ops/atomic_ops/Makefile	/^top_builddir = ..\/..\/..$/;"	m
top_builddir	src/atomic_ops/atomic_ops/amd64/Makefile	/^top_builddir = ..\/..\/..\/..$/;"	m
top_builddir	src/atomic_ops/atomic_ops/i386/Makefile	/^top_builddir = ..\/..\/..\/..$/;"	m
top_builddir	src/atomic_ops/atomic_ops/sparc/Makefile	/^top_builddir = ..\/..\/..\/..$/;"	m
top_builddir	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^top_builddir = ..\/..\/..\/..$/;"	m
top_builddir	src/atomic_ops/ia32/Makefile	/^top_builddir = ..\/..\/..\/..\/..\/..\/..\/..$/;"	m
top_builddir	src/atomic_ops/ia32/sys/Makefile	/^top_builddir = ..\/..\/..\/..\/..\/..\/..\/..\/..$/;"	m
top_builddir	src/atomic_ops/intel/Makefile	/^top_builddir = ..\/..\/..\/..\/..\/..\/..$/;"	m
top_builddir	src/atomic_ops/intel/ia32/Makefile	/^top_builddir = ..\/..\/..\/..\/..\/..\/..\/..$/;"	m
top_builddir	src/atomic_ops/intel/ia32/sys/Makefile	/^top_builddir = ..\/..\/..\/..\/..\/..\/..\/..\/..$/;"	m
top_builddir	src/atomic_ops/intel/sys/Makefile	/^top_builddir = ..\/..\/..\/..\/..\/..\/..\/..$/;"	m
top_builddir	src/atomic_ops/sparc/Makefile	/^top_builddir = ..\/..\/..\/..\/..\/..\/..$/;"	m
top_builddir	src/atomic_ops/sparc/sys/Makefile	/^top_builddir = ..\/..\/..\/..\/..\/..\/..\/..$/;"	m
top_builddir	src/common/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	src/common/tests/Makefile	/^top_builddir = ..\/..\/..$/;"	m
top_builddir	src/fc/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	src/fc/tests/Makefile	/^top_builddir = ..\/..\/..$/;"	m
top_builddir	src/sm/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	src/sm/smsh/Makefile	/^top_builddir = ..\/..\/..$/;"	m
top_builddir	src/sm/smsh/lib/Makefile	/^top_builddir = ..\/..\/..\/..$/;"	m
top_builddir	src/sm/smsh/scripts/Makefile	/^top_builddir = ..\/..\/..\/..$/;"	m
top_builddir	src/sm/tests/Makefile	/^top_builddir = ..\/..\/..$/;"	m
top_builddir	src/sthread/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	src/sthread/tests/Makefile	/^top_builddir = ..\/..\/..$/;"	m
top_builddir	tools/Makefile	/^top_builddir = ..$/;"	m
top_distdir	Makefile	/^top_distdir = $(distdir)$/;"	m
top_srcdir	Makefile	/^top_srcdir = .$/;"	m
top_srcdir	config/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	src/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	src/atomic_ops/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	src/atomic_ops/asm_linkage/Makefile	/^top_srcdir = ..\/..\/..$/;"	m
top_srcdir	src/atomic_ops/asm_linkage/usr/Makefile	/^top_srcdir = ..\/..\/..\/..$/;"	m
top_srcdir	src/atomic_ops/asm_linkage/usr/src/Makefile	/^top_srcdir = ..\/..\/..\/..\/..$/;"	m
top_srcdir	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^top_srcdir = ..\/..\/..\/..\/..\/..$/;"	m
top_srcdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^top_srcdir = ..\/..\/..\/..\/..\/..\/..$/;"	m
top_srcdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^top_srcdir = ..\/..\/..\/..\/..\/..\/..\/..$/;"	m
top_srcdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^top_srcdir = ..\/..\/..\/..\/..\/..\/..\/..\/..$/;"	m
top_srcdir	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^top_srcdir = ..\/..\/..\/..\/..\/..\/..\/..$/;"	m
top_srcdir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^top_srcdir = ..\/..\/..\/..\/..\/..\/..$/;"	m
top_srcdir	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^top_srcdir = ..\/..\/..\/..\/..\/..\/..\/..$/;"	m
top_srcdir	src/atomic_ops/atomic_ops/Makefile	/^top_srcdir = ..\/..\/..$/;"	m
top_srcdir	src/atomic_ops/atomic_ops/amd64/Makefile	/^top_srcdir = ..\/..\/..\/..$/;"	m
top_srcdir	src/atomic_ops/atomic_ops/i386/Makefile	/^top_srcdir = ..\/..\/..\/..$/;"	m
top_srcdir	src/atomic_ops/atomic_ops/sparc/Makefile	/^top_srcdir = ..\/..\/..\/..$/;"	m
top_srcdir	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^top_srcdir = ..\/..\/..\/..$/;"	m
top_srcdir	src/atomic_ops/ia32/Makefile	/^top_srcdir = ..\/..\/..\/..\/..\/..\/..\/..$/;"	m
top_srcdir	src/atomic_ops/ia32/sys/Makefile	/^top_srcdir = ..\/..\/..\/..\/..\/..\/..\/..\/..$/;"	m
top_srcdir	src/atomic_ops/intel/Makefile	/^top_srcdir = ..\/..\/..\/..\/..\/..\/..$/;"	m
top_srcdir	src/atomic_ops/intel/ia32/Makefile	/^top_srcdir = ..\/..\/..\/..\/..\/..\/..\/..$/;"	m
top_srcdir	src/atomic_ops/intel/ia32/sys/Makefile	/^top_srcdir = ..\/..\/..\/..\/..\/..\/..\/..\/..$/;"	m
top_srcdir	src/atomic_ops/intel/sys/Makefile	/^top_srcdir = ..\/..\/..\/..\/..\/..\/..\/..$/;"	m
top_srcdir	src/atomic_ops/sparc/Makefile	/^top_srcdir = ..\/..\/..\/..\/..\/..\/..$/;"	m
top_srcdir	src/atomic_ops/sparc/sys/Makefile	/^top_srcdir = ..\/..\/..\/..\/..\/..\/..\/..$/;"	m
top_srcdir	src/common/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	src/common/tests/Makefile	/^top_srcdir = ..\/..\/..$/;"	m
top_srcdir	src/fc/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	src/fc/tests/Makefile	/^top_srcdir = ..\/..\/..$/;"	m
top_srcdir	src/sm/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	src/sm/smsh/Makefile	/^top_srcdir = ..\/..\/..$/;"	m
top_srcdir	src/sm/smsh/lib/Makefile	/^top_srcdir = ..\/..\/..\/..$/;"	m
top_srcdir	src/sm/smsh/scripts/Makefile	/^top_srcdir = ..\/..\/..\/..$/;"	m
top_srcdir	src/sm/tests/Makefile	/^top_srcdir = ..\/..\/..$/;"	m
top_srcdir	src/sthread/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	src/sthread/tests/Makefile	/^top_srcdir = ..\/..\/..$/;"	m
top_srcdir	tools/Makefile	/^top_srcdir = ..$/;"	m
topen	src/fc/tests/errlogtest.cpp	/^ErrLog *tfile, *topen, *tsyslog, *terr, *tether;$/;"	v
total	src/sm/newsort.cpp	/^    int        total() const { return _total; }$/;"	f	class:fib_t
total	src/sm/newsort.cpp	/^    int total() const{ return _total; }$/;"	f	class:phase_mgr
total_acquires	src/sm/lock_x.h	/^        int              total_acquires;$/;"	m	struct:lock_head_t::my_lock
total_bytes	src/sm/sm_du_stats.cpp	/^btree_int_stats_t::total_bytes() const$/;"	f	class:btree_int_stats_t
total_bytes	src/sm/sm_du_stats.cpp	/^btree_lf_stats_t::total_bytes() const$/;"	f	class:btree_lf_stats_t
total_bytes	src/sm/sm_du_stats.cpp	/^btree_stats_t::total_bytes() const$/;"	f	class:btree_stats_t
total_bytes	src/sm/sm_du_stats.cpp	/^file_pg_stats_t::total_bytes() const$/;"	f	class:file_pg_stats_t
total_bytes	src/sm/sm_du_stats.cpp	/^file_stats_t::total_bytes() const$/;"	f	class:file_stats_t
total_bytes	src/sm/sm_du_stats.cpp	/^lgdata_pg_stats_t::total_bytes() const$/;"	f	class:lgdata_pg_stats_t
total_bytes	src/sm/sm_du_stats.cpp	/^lgindex_pg_stats_t::total_bytes() const$/;"	f	class:lgindex_pg_stats_t
total_bytes	src/sm/sm_du_stats.cpp	/^rtree_stats_t::total_bytes() const$/;"	f	class:rtree_stats_t
total_bytes	src/sm/sm_du_stats.cpp	/^sm_du_stats_t::total_bytes() const$/;"	f	class:sm_du_stats_t
total_bytes	src/sm/sm_du_stats.cpp	/^volume_hdr_stats_t::total_bytes() const$/;"	f	class:volume_hdr_stats_t
total_bytes	src/sm/sm_du_stats.cpp	/^volume_map_stats_t::total_bytes() const$/;"	f	class:volume_map_stats_t
total_rec	src/sm/sort.cpp	/^    uint total_rec;     \/\/ total number of records$/;"	m	struct:sort_desc_t	file:
tpool	src/fc/w_temp_alloc.cpp	/^static __thread w_temp_alloc::pool *tpool = &_sentinel;$/;"	v	file:
trace_info	src/sm/histo.cpp	/^struct trace_info {$/;"	s	file:
trace_level	src/fc/w_debug.h	/^        int trace_level() { return _trace_level; }$/;"	f	class:w_debug
track	src/sm/chkpt.cpp	/^    void track(xct_t* xd) {$/;"	f	struct:old_xct_tracker
trans	src/sm/smsh/scripts/trans.tcl	/^proc trans { action finish } {$/;"	p
transform	Makefile	/^transform = $(program_transform_name)$/;"	m
transform	config/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/atomic_ops/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/atomic_ops/asm_linkage/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/atomic_ops/asm_linkage/usr/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/atomic_ops/asm_linkage/usr/src/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/atomic_ops/atomic_ops/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/atomic_ops/atomic_ops/amd64/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/atomic_ops/atomic_ops/i386/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/atomic_ops/atomic_ops/sparc/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/atomic_ops/ia32/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/atomic_ops/ia32/sys/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/atomic_ops/intel/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/atomic_ops/intel/ia32/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/atomic_ops/intel/ia32/sys/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/atomic_ops/intel/sys/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/atomic_ops/sparc/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/atomic_ops/sparc/sys/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/common/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/common/tests/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/fc/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/fc/tests/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/sm/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/sm/smsh/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/sm/smsh/lib/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/sm/smsh/scripts/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/sm/tests/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/sthread/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/sthread/tests/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	tools/Makefile	/^transform = $(program_transform_name)$/;"	m
transit_bucket_t	src/sm/bf_transit_bucket.h	/^    NORET transit_bucket_t()$/;"	f	class:transit_bucket_t
transit_bucket_t	src/sm/bf_transit_bucket.h	/^class transit_bucket_t$/;"	c
translate	tools/stats.pl	/^sub translate {$/;"	s
tree_latch	src/sm/btree_impl.cpp	/^tree_latch::tree_latch(const lpid_t pid, const bool bIgnoreLatches) $/;"	f	class:tree_latch
tree_latch	src/sm/btree_impl.h	/^class tree_latch {$/;"	c
tripCount	src/sthread/macpthread_barrier.h	/^    int tripCount;$/;"	m	struct:__anon148
truncate	src/fc/dynarray.cpp	/^int dynarray::truncate(size_t new_size) {$/;"	f	class:dynarray
truncate	src/sm/lgrec.cpp	/^lg_tag_chunks_h::truncate(uint4_t num_pages)$/;"	f	class:lg_tag_chunks_h
truncate	src/sm/lgrec.cpp	/^lg_tag_indirect_h::truncate(uint4_t num_pages)$/;"	f	class:lg_tag_indirect_h
truncate	src/sm/lgrec.cpp	/^lgdata_p::truncate(uint4_t amount)$/;"	f	class:lgdata_p
truncate	src/sm/lgrec.cpp	/^lgindex_p::truncate(uint4_t num_pages)$/;"	f	class:lgindex_p
truncate	src/sm/lock_core.cpp	/^lockid_t::truncate(name_space_t space)$/;"	f	class:lockid_t
truncate	src/sthread/sdisk_unix.cpp	/^w_rc_t    sdisk_unix_t::truncate(fileoff_t size)$/;"	f	class:sdisk_unix_t
truncate	src/sthread/sthread_stats_struct_gen.h	/^ w_base_t::base_stat_t truncate;$/;"	v
truncate_mrbt_rec	src/sm/file.cpp	/^file_m::truncate_mrbt_rec(const rid_t& rid, uint4_t amount, bool& should_forward, const bool bIgnoreLatches)$/;"	f	class:file_m
truncate_mrbt_rec	src/sm/smfile.cpp	/^ss_m::truncate_mrbt_rec(const rid_t& rid, smsize_t amount, bool &should_forward,$/;"	f	class:ss_m
truncate_mrbt_rec	src/sm/smfile.cpp	/^ss_m::truncate_mrbt_rec(const rid_t& rid, smsize_t amount,$/;"	f	class:ss_m
truncate_rec	src/sm/file.cpp	/^file_m::truncate_rec(const rid_t& rid, uint4_t amount, bool& should_forward)$/;"	f	class:file_m
truncate_rec	src/sm/file.cpp	/^file_p::truncate_rec(slotid_t idx, uint4_t amount)$/;"	f	class:file_p
truncate_rec	src/sm/pin.cpp	/^rc_t pin_i::truncate_rec(smsize_t amount)$/;"	f	class:pin_i
truncate_rec	src/sm/smfile.cpp	/^ss_m::truncate_rec(const rid_t& rid, smsize_t amount)$/;"	f	class:ss_m
truncate_rec	src/sm/smfile.cpp	/^ss_m::truncate_rec(const rid_t& rid, smsize_t amount, bool &should_forward)$/;"	f	class:ss_m
trx_acquire	src/sm/chkpt_serial.cpp	/^chkpt_serial_m::trx_acquire()$/;"	f	class:chkpt_serial_m
trx_release	src/sm/chkpt_serial.cpp	/^chkpt_serial_m::trx_release()$/;"	f	class:chkpt_serial_m
try_lock	src/sthread/sthread.h	/^    bool try_lock() $/;"	f	struct:tatas_lock
trymap	src/sthread/tests/mmap.cpp	/^char * trymap($/;"	f
tsyslog	src/fc/tests/errlogtest.cpp	/^ErrLog *tfile, *topen, *tsyslog, *terr, *tether;$/;"	v
tuple_addr	src/sm/page.h	/^page_p::tuple_addr(slotid_t idx) const$/;"	f	class:page_p
tuple_size	src/sm/page.h	/^page_p::tuple_size(slotid_t idx) const$/;"	f	class:page_p
tv	src/sm/tests/stopwatch.h	/^    struct timeval tv;$/;"	m	class:stopwatch_t	typeref:struct:stopwatch_t::timeval
twelve	src/fc/w_input.cpp	/^        twelve=12, thirteen=13, fourteen=14, fifteen=15,$/;"	e	enum:charclass	file:
two	src/fc/w_input.cpp	/^enum charclass { zero=0, one=1, two=2, three=3, four=4, $/;"	e	enum:charclass	file:
two_phase_commit	src/common/basics.h	/^namespace two_phase_commit {$/;"	n
type	src/sm/logrec.h	/^logrec_t::type() const$/;"	f	class:logrec_t
type	src/sm/sm_s.h	/^    char        type;$/;"	m	struct:key_type_s
type	src/sm/smsh/shell.cpp	/^ss_m::ndx_t         type;$/;"	m	struct:nda_t	file:
type	src/sm/smsh/shell2.cpp	/^    typed_btree_test     type;$/;"	m	struct:name2type_t	file:
type	src/sm/smsh/sm_sizeof.cpp	/^    const char    *type;$/;"	m	struct:smsh_type_info_t	file:
type	src/sm/sort_s.h	/^    key_type_t  type;       \/\/ key type$/;"	m	struct:ssm_sort::key_info_t
type_str	src/sm/logrec.cpp	/^logrec_t::type_str() const$/;"	f	class:logrec_t
type_t	src/sm/sm_s.h	/^    enum type_t {$/;"	g	struct:key_type_s
typed_btree_test	src/sm/smsh/shell.h	/^enum typed_btree_test {$/;"	g
typed_value	src/sm/smsh/shell.h	/^struct typed_value {$/;"	s
u	src/fc/tests/findprime.cpp	/^} u;$/;"	v	typeref:union:pun
u	src/fc/tests/test_stat_struct_gen.h	/^ w_base_t::base_stat_t u;$/;"	v
u	src/sm/sm_s.h	/^        u = 'u',                \/\/ unsigned integer (1,2,4)$/;"	e	enum:key_type_s::type_t
u1	src/fc/w_base.h	/^    w_base_t::uint1_t    u1[3];$/;"	m	struct:fill3
u1	src/fc/w_base.h	/^    w_base_t::uint1_t u1;$/;"	m	struct:fill1
u1	src/sm/lock_s.h	/^        uint2_t                u1;$/;"	m	struct:lockid_t::user1_t
u1	src/sm/lock_s_inline.h	/^lockid_t::u1() const$/;"	f	class:lockid_t
u1_cmp	src/sm/smsh/shell2.cpp	/^int u1_cmp(const void *_p, const void *_q) $/;"	f
u1_lex	src/sm/newsort.cpp	/^w_rc_t sort_keys_t::u1_lex(const void *d, smsize_t , void * res){$/;"	f	class:sort_keys_t
u1_num	src/sm/smsh/shell.h	/^    uint1_t u1_num;$/;"	m	union:typed_value::__anon75
u2	src/fc/w_base.h	/^    w_base_t::uint2_t u2;$/;"	m	struct:fill2
u2	src/sm/lock_s.h	/^        uint4_t                u2;$/;"	m	struct:lockid_t::user2_t
u2	src/sm/lock_s_inline.h	/^lockid_t::u2() const$/;"	f	class:lockid_t
u2_cmp	src/sm/smsh/shell2.cpp	/^int u2_cmp(const void *_p, const void *_q) $/;"	f
u2_lex	src/sm/newsort.cpp	/^w_rc_t sort_keys_t::u2_lex(const void *d, smsize_t , void * res){$/;"	f	class:sort_keys_t
u2_num	src/sm/smsh/shell.h	/^    uint2_t u2_num;$/;"	m	union:typed_value::__anon75
u3	src/sm/lock_s.h	/^        uint4_t                u3;$/;"	m	struct:lockid_t::user3_t
u3	src/sm/lock_s_inline.h	/^lockid_t::u3() const$/;"	f	class:lockid_t
u4	src/fc/w_base.h	/^    w_base_t::uint4_t u4;$/;"	m	struct:fill4
u4	src/sm/lock_s.h	/^        uint4_t                u4;$/;"	m	struct:lockid_t::user4_t
u4	src/sm/lock_s_inline.h	/^lockid_t::u4() const$/;"	f	class:lockid_t
u4_cmp	src/sm/smsh/shell2.cpp	/^int u4_cmp(const void *_p, const void *_q) $/;"	f
u4_lex	src/sm/newsort.cpp	/^w_rc_t sort_keys_t::u4_lex(const void *d, smsize_t , void * res){$/;"	f	class:sort_keys_t
u4_num	src/sm/smsh/shell.h	/^    uint4_t u4_num;$/;"	m	union:typed_value::__anon75
u4i	src/common/basics.h	/^inline int u4i(uint4_t x) {w_assert1(x<=(unsigned)max_int4); return int(x); }$/;"	f
u64	src/fc/mem_block.cpp	/^typedef unsigned long long u64;$/;"	t	namespace:memory_block	file:
u64	src/fc/w_hashing.h	/^    typedef w_base_t::uint8_t u64;$/;"	t	class:w_hashing::uhash
u8_cmp	src/sm/smsh/shell2.cpp	/^int u8_cmp(const void *_p, const void *_q) $/;"	f
u8_lex	src/sm/newsort.cpp	/^w_rc_t sort_keys_t::u8_lex(const void *d, smsize_t , void * res){$/;"	f	class:sort_keys_t
u8_num	src/sm/smsh/shell.h	/^    w_base_t::uint8_t u8_num;$/;"	m	union:typed_value::__anon75
u_char	src/fc/w_base.h	/^    typedef unsigned char    u_char;$/;"	t	class:w_base_t
u_long	src/fc/w_base.h	/^    typedef unsigned        u_long;$/;"	t	class:w_base_t
u_long	src/fc/w_base.h	/^    typedef unsigned long    u_long;$/;"	t	class:w_base_t
u_short	src/fc/w_base.h	/^    typedef unsigned short    u_short;$/;"	t	class:w_base_t
u_type	src/fc/tests/container.cpp	/^typedef unsigned long u_type;$/;"	t	file:
uch	src/common/regex_utils.h	/^typedef unsigned char uch;$/;"	t
uchar_t	src/atomic_ops/atomic_ops.h	/^typedef unsigned char uchar_t;$/;"	t
uhash	src/fc/w_hashing.h	/^    uhash() : a(init()), b(init()) { }$/;"	f	class:w_hashing::uhash
uhash	src/fc/w_hashing.h	/^class uhash $/;"	c	namespace:w_hashing
ui	src/fc/tests/findprime.cpp	/^    unsigned long ui;$/;"	m	union:pun	file:
uint1_max	src/fc/w_base.cpp	/^const w_base_t::uint1_t   w_base_t::uint1_max = 0xff;$/;"	m	class:w_base_t	file:
uint1_max	src/fc/w_base.h	/^    static const uint1_t    uint1_max, uint1_min;$/;"	m	class:w_base_t
uint1_min	src/fc/w_base.cpp	/^const w_base_t::uint1_t   w_base_t::uint1_min = 0x0;$/;"	m	class:w_base_t	file:
uint1_min	src/fc/w_base.h	/^    static const uint1_t    uint1_max, uint1_min;$/;"	m	class:w_base_t
uint1_t	src/common/basics.h	/^typedef w_base_t::uint1_t     uint1_t;$/;"	t
uint1_t	src/fc/w_base.h	/^    typedef u_char       uint1_t;$/;"	t	class:w_base_t
uint1_t	src/sm/lexify.h	/^    typedef w_base_t::uint1_t uint1_t;$/;"	t	class:sortorder
uint1_t	src/sm/smsh/shell.h	/^typedef w_base_t::uint1_t  uint1_t;$/;"	t
uint2_max	src/fc/w_base.cpp	/^const w_base_t::uint2_t   w_base_t::uint2_max = 0xffff;$/;"	m	class:w_base_t	file:
uint2_max	src/fc/w_base.h	/^    static const uint2_t    uint2_max, uint2_min;$/;"	m	class:w_base_t
uint2_min	src/fc/w_base.cpp	/^const w_base_t::uint2_t   w_base_t::uint2_min = 0x0;$/;"	m	class:w_base_t	file:
uint2_min	src/fc/w_base.h	/^    static const uint2_t    uint2_max, uint2_min;$/;"	m	class:w_base_t
uint2_t	src/common/basics.h	/^typedef w_base_t::uint2_t     uint2_t;$/;"	t
uint2_t	src/fc/tests/cuckoo.cpp	/^typedef unsigned short uint2_t;$/;"	t	file:
uint2_t	src/fc/w_base.h	/^    typedef u_short      uint2_t;$/;"	t	class:w_base_t
uint2_t	src/sm/lexify.h	/^    typedef w_base_t::uint2_t uint2_t;$/;"	t	class:sortorder
uint2_t	src/sm/sm_io.h	/^        typedef w_base_t::uint2_t uint2_t;$/;"	t	class:store_operation_param
uint2_t	src/sm/smsh/shell.h	/^typedef w_base_t::uint2_t  uint2_t;$/;"	t
uint2_t	src/sm/tests/htab.cpp	/^typedef unsigned short uint2_t;$/;"	t	file:
uint4_max	src/fc/w_base.cpp	/^const w_base_t::uint4_t   w_base_t::uint4_max = 0xffffffff;$/;"	m	class:w_base_t	file:
uint4_max	src/fc/w_base.h	/^    static const uint4_t    uint4_max, uint4_min;$/;"	m	class:w_base_t
uint4_min	src/fc/w_base.cpp	/^const w_base_t::uint4_t   w_base_t::uint4_min = 0x0;$/;"	m	class:w_base_t	file:
uint4_min	src/fc/w_base.h	/^    static const uint4_t    uint4_max, uint4_min;$/;"	m	class:w_base_t
uint4_t	src/common/basics.h	/^typedef w_base_t::uint4_t     uint4_t;$/;"	t
uint4_t	src/fc/w_base.h	/^    typedef u_int        uint4_t;$/;"	t	class:w_base_t
uint4_t	src/sm/lexify.h	/^    typedef w_base_t::uint4_t uint4_t;$/;"	t	class:sortorder
uint4_t	src/sm/smsh/shell.h	/^typedef w_base_t::uint4_t  uint4_t;$/;"	t
uint8_max	src/fc/w_base.cpp	/^const w_base_t::uint8_t   w_base_t::uint8_max =$/;"	m	class:w_base_t	file:
uint8_max	src/fc/w_base.h	/^    static const uint8_t    uint8_max, uint8_min;$/;"	m	class:w_base_t
uint8_min	src/fc/w_base.cpp	/^const w_base_t::uint8_t   w_base_t::uint8_min =$/;"	m	class:w_base_t	file:
uint8_min	src/fc/w_base.h	/^    static const uint8_t    uint8_max, uint8_min;$/;"	m	class:w_base_t
uint8_t	src/fc/w_base.h	/^    typedef unsigned long        uint8_t;$/;"	t	class:w_base_t
uint8_t	src/fc/w_base.h	/^    typedef unsigned long long   uint8_t;$/;"	t	class:w_base_t
uint8_t	src/sm/lexify.h	/^    typedef w_base_t::uint8_t uint8_t;$/;"	t	class:sortorder
uint_t	src/atomic_ops/atomic_ops.h	/^typedef unsigned int   uint_t;$/;"	t
ulong_t	src/atomic_ops/atomic_ops.h	/^typedef unsigned long   ulong_t;$/;"	t
umemcmp	src/common/umemcmp.h	/^inline int umemcmp(const void* p, const void* q, int n)$/;"	f
umemcmp_old	src/common/umemcmp.h	/^inline int umemcmp_old(const void* p, const void* q, int n)$/;"	f
umemcmp_smart	src/common/umemcmp.h	/^inline int umemcmp_smart(const void* p_, const void* q_, int n)$/;"	f
unalloc_ext_cnt	src/sm/sm_du_stats.h	/^    base_stat_t        unalloc_ext_cnt;    \/* # of unallocated extents *\/$/;"	m	struct:volume_hdr_stats_t
unalloc_file_pg_cnt	src/sm/sm_du_stats.h	/^    base_stat_t            unalloc_file_pg_cnt; \/\/ reserved, being in alloc extents$/;"	m	struct:file_stats_t
unalloc_large_pg_cnt	src/sm/sm_du_stats.h	/^    base_stat_t            unalloc_large_pg_cnt; $/;"	m	struct:file_stats_t
unalloc_pg_cnt	src/sm/sm_du_stats.cpp	/^volume_map_stats_t::unalloc_pg_cnt() const$/;"	f	class:volume_map_stats_t
unalloc_pg_cnt	src/sm/sm_du_stats.h	/^    base_stat_t        unalloc_pg_cnt;$/;"	m	struct:rtree_stats_t
unalloc_pg_cnt	src/sm/sm_du_stats.h	/^    base_stat_t     unalloc_pg_cnt; \/\/ pages not-allocated by extent-traversal$/;"	m	struct:btree_stats_t
uname_machine	Makefile	/^uname_machine = x86_64$/;"	m
uname_machine	config/Makefile	/^uname_machine = x86_64$/;"	m
uname_machine	src/Makefile	/^uname_machine = x86_64$/;"	m
uname_machine	src/atomic_ops/Makefile	/^uname_machine = x86_64$/;"	m
uname_machine	src/atomic_ops/asm_linkage/Makefile	/^uname_machine = x86_64$/;"	m
uname_machine	src/atomic_ops/asm_linkage/usr/Makefile	/^uname_machine = x86_64$/;"	m
uname_machine	src/atomic_ops/asm_linkage/usr/src/Makefile	/^uname_machine = x86_64$/;"	m
uname_machine	src/atomic_ops/asm_linkage/usr/src/uts/Makefile	/^uname_machine = x86_64$/;"	m
uname_machine	src/atomic_ops/asm_linkage/usr/src/uts/intel/Makefile	/^uname_machine = x86_64$/;"	m
uname_machine	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/Makefile	/^uname_machine = x86_64$/;"	m
uname_machine	src/atomic_ops/asm_linkage/usr/src/uts/intel/ia32/sys/Makefile	/^uname_machine = x86_64$/;"	m
uname_machine	src/atomic_ops/asm_linkage/usr/src/uts/intel/sys/Makefile	/^uname_machine = x86_64$/;"	m
uname_machine	src/atomic_ops/asm_linkage/usr/src/uts/sparc/Makefile	/^uname_machine = x86_64$/;"	m
uname_machine	src/atomic_ops/asm_linkage/usr/src/uts/sparc/sys/Makefile	/^uname_machine = x86_64$/;"	m
uname_machine	src/atomic_ops/atomic_ops/Makefile	/^uname_machine = x86_64$/;"	m
uname_machine	src/atomic_ops/atomic_ops/amd64/Makefile	/^uname_machine = x86_64$/;"	m
uname_machine	src/atomic_ops/atomic_ops/i386/Makefile	/^uname_machine = x86_64$/;"	m
uname_machine	src/atomic_ops/atomic_ops/sparc/Makefile	/^uname_machine = x86_64$/;"	m
uname_machine	src/atomic_ops/atomic_ops/sparcv9/Makefile	/^uname_machine = x86_64$/;"	m
uname_machine	src/atomic_ops/ia32/Makefile	/^uname_machine = x86_64$/;"	m
uname_machine	src/atomic_ops/ia32/sys/Makefile	/^uname_machine = x86_64$/;"	m
uname_machine	src/atomic_ops/intel/Makefile	/^uname_machine = x86_64$/;"	m
uname_machine	src/atomic_ops/intel/ia32/Makefile	/^uname_machine = x86_64$/;"	m
uname_machine	src/atomic_ops/intel/ia32/sys/Makefile	/^uname_machine = x86_64$/;"	m
uname_machine	src/atomic_ops/intel/sys/Makefile	/^uname_machine = x86_64$/;"	m
uname_machine	src/atomic_ops/sparc/Makefile	/^uname_machine = x86_64$/;"	m
uname_machine	src/atomic_ops/sparc/sys/Makefile	/^uname_machine = x86_64$/;"	m
uname_machine	src/common/Makefile	/^uname_machine = x86_64$/;"	m
uname_machine	src/common/tests/Makefile	/^uname_machine = x86_64$/;"	m
uname_machine	src/fc/Makefile	/^uname_machine = x86_64$/;"	m
uname_machine	src/fc/tests/Makefile	/^uname_machine = x86_64$/;"	m
uname_machine	src/sm/Makefile	/^uname_machine = x86_64$/;"	m
uname_machine	src/sm/smsh/Makefile	/^uname_machine = x86_64$/;"	m
uname_machine	src/sm/smsh/lib/Makefile	/^uname_machine = x86_64$/;"	m
uname_machine	src/sm/smsh/scripts/Makefile	/^uname_machine = x86_64$/;"	m
uname_machine	src/sm/tests/Makefile	/^uname_machine = x86_64$/;"	m
uname_machine	src/sthread/Makefile	/^uname_machine = x86_64$/;"	m
uname_machine	src/sthread/tests/Makefile	/^uname_machine = x86_64$/;"	m
uname_machine	tools/Makefile	/^uname_machine = x86_64$/;"	m
unblock	src/sthread/sthread.cpp	/^sthread_t::unblock(w_rc_t::errcode_t e) $/;"	f	class:sthread_t
unchecked_is_fatal	src/fc/w_rc.cpp	/^bool w_rc_t::unchecked_is_fatal = true; $/;"	m	class:w_rc_t	file:
unchecked_is_fatal	src/fc/w_rc.h	/^    static bool            unchecked_is_fatal;$/;"	m	class:w_rc_t
underflow	src/fc/w_compat_strstream.cpp	/^strstreambuf::int_type strstreambuf::underflow()$/;"	f	class:shore_compat::strstreambuf
undo	src/sm/logrec.cpp	/^btree_purge_log::undo(page_p* page)$/;"	f	class:btree_purge_log
undo	src/sm/logrec.cpp	/^logrec_t::undo(page_p* page)$/;"	f	class:logrec_t
undo	src/sm/logrec.cpp	/^page_format_log::undo(page_p* page)$/;"	f	class:page_format_log
undo	src/sm/logrec.cpp	/^page_insert_log::undo(page_p* page)$/;"	f	class:page_insert_log
undo	src/sm/logrec.cpp	/^page_insert_t::undo(page_p* page)$/;"	f	class:page_insert_t
undo	src/sm/logrec.cpp	/^page_link_log::undo(page_p* p)$/;"	f	class:page_link_log
undo	src/sm/logrec.cpp	/^page_mark_log::undo(page_p* page)$/;"	f	class:page_mark_log
undo	src/sm/logrec.cpp	/^page_mark_t::undo(page_p* page)$/;"	f	class:page_mark_t
undo	src/sm/logrec.cpp	/^page_reclaim_log::undo(page_p* page)$/;"	f	class:page_reclaim_log
undo	src/sm/logrec.cpp	/^page_set_byte_log::undo(page_p* page)$/;"	f	class:page_set_byte_log
undo	src/sm/logrec.cpp	/^page_shift_log::undo(page_p* page)$/;"	f	class:page_shift_log
undo	src/sm/logrec.cpp	/^page_splice_log::undo(page_p* page)$/;"	f	class:page_splice_log
undo	src/sm/logrec.cpp	/^page_splicez_log::undo(page_p* page)$/;"	f	class:page_splicez_log
undo	src/sm/logrec.cpp	/^void alloc_pages_in_ext_log::undo(page_p* \/*page*\/)$/;"	f	class:alloc_pages_in_ext_log
undo	src/sm/logrec.cpp	/^void free_pages_in_ext_log::undo(page_p* \/*page*\/)$/;"	f	class:free_pages_in_ext_log
undo	src/sm/logrec.cpp	/^void page_remove_log::undo(page_p* page)$/;"	f	class:page_remove_log
undo	src/sm/logrec.cpp	/^void store_operation_log::undo(page_p* \/*page*\/)$/;"	f	class:store_operation_log
undo_acquire	src/sm/page.cpp	/^page_s::space_t::undo_acquire(int amt, xct_t* xd)$/;"	f	class:page_s::space_t
undo_nxt	src/sm/logrec.h	/^    lsn_t                undo_nxt;$/;"	m	struct:chkpt_xct_tab_t::xrec_t
undo_nxt	src/sm/logrec.h	/^logrec_t::undo_nxt() const$/;"	f	class:logrec_t
undo_nxt	src/sm/xct.h	/^xct_t::undo_nxt() const$/;"	f	class:xct_t
undo_pass	src/sm/restart.cpp	/^restart_m::undo_pass()$/;"	f	class:restart_m
undo_release	src/sm/page.cpp	/^page_s::space_t::undo_release(int amt, xct_t* xd)$/;"	f	class:page_s::space_t
unfix	src/sm/bf.cpp	/^bf_m::unfix(const page_s* buf, bool dirty, int ref_bit)$/;"	f	class:bf_m
unfix	src/sm/btree_impl.cpp	/^tree_latch::unfix() $/;"	f	class:tree_latch
unfix	src/sm/page.h	/^page_p::unfix()$/;"	f	class:page_p
unfix	src/sm/vol.cpp	/^extlink_i::unfix()$/;"	f	class:extlink_i
unfix_dirty	src/sm/bf.h	/^    static void                  unfix_dirty($/;"	f	class:bf_m
unfix_dirty	src/sm/page.h	/^page_p::unfix_dirty()$/;"	f	class:page_p
unflatten	src/sm/logrec.cpp	/^cvec_t* page_insert_t::unflatten(int W_IFDEBUG9(c), cvec_t vec[])$/;"	f	class:page_insert_t
uninit	src/sm/page.h	/^        enum { uninit = space_bucket_t(-1) };$/;"	e	enum:page_p::page_bucket_info_t::__anon72
uninitialize	src/sm/smsh/tcl_thread.cpp	/^void tcl_thread_t::uninitialize()$/;"	f	class:tcl_thread_t
uniq_count	src/sm/sort.cpp	/^    uint uniq_count;    \/\/ # of unique entries in runs$/;"	m	struct:sort_desc_t	file:
unique	src/sm/btcursor.h	/^    bool            unique() const { return _unique; }$/;"	f	class:bt_cursor_t
unique	src/sm/logrec.cpp	/^    int2_t        unique;$/;"	m	struct:btree_insert_t	file:
unique	src/sm/sort_s.h	/^    bool   unique;        $/;"	m	struct:ssm_sort::sort_parm_t
unique_cnt	src/sm/sm_du_stats.h	/^    base_stat_t        unique_cnt;    \/* number of unique entries *\/$/;"	m	struct:btree_lf_stats_t
unique_cnt	src/sm/sm_du_stats.h	/^    base_stat_t        unique_cnt;    \/* number of unique entries *\/$/;"	m	struct:rtree_stats_t
unique_fingerprints	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t unique_fingerprints;$/;"	v
unique_vols	src/sm/xct.cpp	/^        int unique_vols;$/;"	m	class:VolidCnt	file:
universe	src/sm/newsort.cpp	/^    nbox_t* universe;$/;"	m	struct:hilbert_cooky	file:
universe	src/sm/rtree.h	/^    nbox_t*  universe;  \/\/ universal bounding box of spatial objects indexed$/;"	m	struct:rtld_desc_t
universe	src/sm/sort_s.h	/^    nbox_t      universe;   $/;"	m	struct:ssm_sort::key_info_t
unlexify	src/sm/lexify.cpp	/^sortorder::unlexify($/;"	f	class:sortorder
unlink	src/common/latch.cpp	/^    latch_holder_t* unlink(iterator const &it) {$/;"	f	class:holder_list
unlink_and_propagate	src/sm/btree_p.cpp	/^btree_p::unlink_and_propagate($/;"	f	class:btree_p
unlink_pg_cnt	src/sm/sm_du_stats.cpp	/^volume_map_stats_t::unlink_pg_cnt() const$/;"	f	class:volume_map_stats_t
unlink_pg_cnt	src/sm/sm_du_stats.h	/^    base_stat_t     unlink_pg_cnt; \/\/ pages allocated but not accounted-for$/;"	m	struct:btree_stats_t
unlock	src/sm/lock.cpp	/^lock_m::unlock(const lockid_t& n)$/;"	f	class:lock_m
unlock	src/sm/sm.cpp	/^ss_m::unlock(const lockid_t& n)$/;"	f	class:ss_m
unlock_duration	src/sm/lock.cpp	/^rc_t lock_m::unlock_duration($/;"	f	class:lock_m
unlock_reader	src/sm/smthread.h	/^    void unlock_reader() const{$/;"	f	class:atomic_thread_map_t
unlock_request_cnt	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t unlock_request_cnt;$/;"	v
unlock_writer	src/sm/smthread.h	/^    void unlock_writer() {$/;"	f	class:atomic_thread_map_t
unmark_dup	src/sm/newsort.cpp	/^    void unmark_dup() { __persistent_part._booleans &= ~$/;"	f	class:meta_header_t
unmark_pieces	src/sm/newsort.cpp	/^    void unmark_pieces(int k) { $/;"	f	class:meta_header_t
unmarshal_func	src/sm/sort_s.h	/^    UMOF    unmarshal_func() const { return _cb_unmarshal; }$/;"	f	class:ssm_sort::sort_keys_t
unmarshal_sortkeys	src/sm/newsort.cpp	/^    void unmarshal_sortkeys() {$/;"	f	class:meta_header_t
unname	src/sthread/sthread.cpp	/^sthread_named_base_t::unname()$/;"	f	class:sthread_named_base_t
unpin	src/sm/bf_core.cpp	/^bf_core_m::unpin(bfcb_t*& p, int ref_bit, bool W_IFDEBUG4(in_htab))$/;"	f	class:bf_core_m
unpin	src/sm/pin.cpp	/^void pin_i::unpin()$/;"	f	class:pin_i
unpin_frame	src/sm/bf_core.cpp	/^void bfcb_t::unpin_frame() { $/;"	f	class:bfcb_t
unsafe_list_dummy_lock_t	src/fc/w_list.h	/^class unsafe_list_dummy_lock_t$/;"	c
unsafe_nolock	src/fc/errlog.cpp	/^        _tab(W_KEYED_ARG(ErrLogInfo, _ident, hash_link), unsafe_nolock);$/;"	v	file:
unsafe_nolock	src/fc/w_list.h	/^unsafe_list_dummy_lock_t* const unsafe_nolock=NULL; \/\/ instantiate with this $/;"	v
unsafe_queue_iterator_t	src/sm/lock_x.h	/^        NORET unsafe_queue_iterator_t(lock_head_t &l) $/;"	f	struct:lock_head_t::unsafe_queue_iterator_t
unsafe_queue_iterator_t	src/sm/lock_x.h	/^    struct unsafe_queue_iterator_t : public request_list_i$/;"	s	class:lock_head_t
unsafe_queue_length	src/sm/lock_x.h	/^    int              unsafe_queue_length() const { return _queue.num_members(); }$/;"	f	class:lock_head_t
unset_current	src/sm/log_core.cpp	/^log_core::unset_current()$/;"	f	class:log_core
unset_plp	src/sthread/srwlock.h	/^    void unset_plp() { _is_plp = false; }$/;"	f	class:mcs_rwlock
unsigned48_t	src/fc/rand48.h	/^typedef w_base_t::uint8_t unsigned48_t;$/;"	t
unused_bs	src/sm/sm_du_stats.h	/^    base_stat_t        unused_bs;         \/* leftover on large data pgs *\/$/;"	m	struct:lgdata_pg_stats_t
unused_bs	src/sm/sm_du_stats.h	/^    base_stat_t        unused_bs;$/;"	m	struct:btree_int_stats_t
unused_bs	src/sm/sm_du_stats.h	/^    base_stat_t        unused_bs;$/;"	m	struct:btree_lf_stats_t
unused_bs	src/sm/sm_du_stats.h	/^    base_stat_t        unused_bs;$/;"	m	struct:lgindex_pg_stats_t
up_to_date	src/sm/pin.h	/^    bool       up_to_date() const$/;"	f	class:pin_i
update	src/sm/histo.cpp	/^histoid_update_t::update() $/;"	f	class:histoid_update_t
update	src/sm/lgrec.cpp	/^lg_tag_chunks_h::update(uint4_t start_byte, const vec_t& data) const$/;"	f	class:lg_tag_chunks_h
update	src/sm/lgrec.cpp	/^lg_tag_indirect_h::update(uint4_t start_byte, const vec_t& data) const$/;"	f	class:lg_tag_indirect_h
update	src/sm/lgrec.cpp	/^lgdata_p::update(uint4_t offset, const vec_t& data, uint4_t start,$/;"	f	class:lgdata_p
updateRoot	src/sm/key_ranges_map.cpp	/^w_rc_t key_ranges_map::updateRoot(const Key& key, const lpid_t& root)$/;"	f	class:key_ranges_map
update_access_count	src/sm/data_access_histogram.cpp	/^w_rc_t data_access_histogram::update_access_count(const lpid_t& root, const Key& key, uint amount)$/;"	f	class:data_access_histogram
update_bucket_info	src/sm/page.cpp	/^page_p::update_bucket_info() $/;"	f	class:page_p
update_ext_histo	src/sm/sm_io.h	/^io_m::update_ext_histo(const lpid_t& pid, space_bucket_t b)$/;"	f	class:io_m
update_ext_histo	src/sm/vol.cpp	/^vol_t::update_ext_histo(const lpid_t& pid, space_bucket_t bucket)$/;"	f	class:vol_t
update_granularity	src/sm/data_access_histogram.cpp	/^w_rc_t data_access_histogram::update_granularity(const lpid_t& root, int new_granularity)$/;"	f	class:data_access_histogram
update_histo	src/sm/vol.cpp	/^extlink_i::update_histo(extnum_t ext, int offset, space_bucket_t bucket)$/;"	f	class:extlink_i
update_lsn	src/sm/btcursor.cpp	/^bt_cursor_t::update_lsn(const btree_p& page)$/;"	f	class:bt_cursor_t
update_mr_assoc	src/sm/smindex.cpp	/^rc_t ss_m::update_mr_assoc(stid_t stid, const vec_t& key, $/;"	f	class:ss_m
update_mrbt_rec	src/sm/pin.cpp	/^rc_t pin_i::update_mrbt_rec(smsize_t start, const vec_t& data,$/;"	f	class:pin_i
update_mrbt_rec	src/sm/smfile.cpp	/^ss_m::update_mrbt_rec(const rid_t& rid, smsize_t start, const vec_t& data,$/;"	f	class:ss_m
update_mrbt_rec_hdr	src/sm/smfile.cpp	/^ss_m::update_mrbt_rec_hdr(const rid_t& rid, smsize_t start, const vec_t& hdr,$/;"	f	class:ss_m
update_page	src/sm/histo.cpp	/^histoid_t::update_page(const shpid_t& pid, smsize_t amt)$/;"	f	class:histoid_t
update_pbucketmap	src/sm/vol.cpp	/^extlink_i::update_pbucketmap(extnum_t idx,$/;"	f	class:extlink_i
update_pmap	src/sm/vol.cpp	/^extlink_i::update_pmap(extnum_t idx,$/;"	f	class:extlink_i
update_rec	src/sm/file.cpp	/^file_m::update_rec(const rid_t& rid, uint4_t start, const vec_t& data, const bool bIgnoreLatches)$/;"	f	class:file_m
update_rec	src/sm/pin.cpp	/^rc_t pin_i::update_rec(smsize_t start, const vec_t& data,$/;"	f	class:pin_i
update_rec	src/sm/smfile.cpp	/^ss_m::update_rec(const rid_t& rid, smsize_t start, const vec_t& data)$/;"	f	class:ss_m
update_rec_hdr	src/sm/pin.cpp	/^rc_t pin_i::update_rec_hdr(smsize_t start, const vec_t& hdr,$/;"	f	class:pin_i
update_rec_hdr	src/sm/smfile.cpp	/^ss_m::update_rec_hdr(const rid_t& rid, smsize_t start, const vec_t& hdr)$/;"	f	class:ss_m
update_rec_lsn	src/sm/bf.cpp	/^bfcb_t::update_rec_lsn(latch_mode_t mode)$/;"	f	class:bfcb_t
update_rectag	src/sm/file.cpp	/^file_m::update_rectag(const rid_t& rid, uint4_t len, uint2_t flags)$/;"	f	class:file_m
update_space	src/sm/page_h.h	/^    void       update_space(smsize_t v) {$/;"	f	class:pginfo_t
update_threads	src/sm/xct.cpp	/^xct_t::update_threads() const$/;"	f	class:xct_t
update_top	src/sm/rtree_p.h	/^rtstk_t::update_top(int2_t index)$/;"	f	class:rtstk_t
update_wait_map	src/sm/lock_core.cpp	/^bool xct_lock_info_t::update_wait_map(atomic_thread_map_t const &other) $/;"	f	class:xct_lock_info_t
upgrade_ext_req_to_EX_if_should_free	src/sm/lock_core.cpp	/^lock_core_m::upgrade_ext_req_to_EX_if_should_free(lock_request_t* req)$/;"	f	class:lock_core_m
upgrade_if_not_block	src/common/latch.cpp	/^latch_t::upgrade_if_not_block(bool& would_block)$/;"	f	class:latch_t
upgrade_latch	src/sm/bf.cpp	/^bf_m::upgrade_latch(page_s*& buf, latch_mode_t        m)$/;"	f	class:bf_m
upgrade_latch	src/sm/page.cpp	/^page_p::upgrade_latch(latch_mode_t m)$/;"	f	class:page_p
upgrade_latch_if_not_block	src/sm/bf.cpp	/^bf_m::upgrade_latch_if_not_block(const page_s* buf, bool& would_block)$/;"	f	class:bf_m
upgrade_latch_if_not_block	src/sm/bf_core.cpp	/^bf_core_m::upgrade_latch_if_not_block(bfcb_t* p, bool& would_block)$/;"	f	class:bf_core_m
upgrade_latch_if_not_block	src/sm/page.cpp	/^page_p::upgrade_latch_if_not_block(bool& would_block)$/;"	f	class:page_p
upper_alpha	src/sm/smsh/sort_funcs3.cpp	/^const int upper_alpha = 0x7a;$/;"	v
usable	src/sm/page.cpp	/^page_s::space_t::usable(xct_t* xd) $/;"	f	class:page_s::space_t
usable_chips	src/fc/mem_block.h	/^    bitmap volatile*     usable_chips() { return &_usable_chips; }$/;"	f	struct:memory_block::block_bits
usable_count	src/fc/mem_block.h	/^    size_t        usable_count() const { return _popc(_usable_chips); }$/;"	f	struct:memory_block::block_bits
usable_for_new_slots	src/sm/page_s.h	/^        int             usable_for_new_slots() const {$/;"	f	class:page_s::space_t
usable_space	src/sm/page.h	/^page_p::usable_space()$/;"	f	class:page_p
usable_space_for_slots	src/sm/page.h	/^page_p::usable_space_for_slots() const$/;"	f	class:page_p
usage	src/common/tests/latch1.cpp	/^void usage(ostream &o, int ex)$/;"	f
usage	src/sm/tests/create_rec.cpp	/^usage(option_group_t& options)$/;"	f
usage	src/sm/tests/file_scan.cpp	/^usage(option_group_t& options)$/;"	f
usage	src/sm/tests/file_scan_many.cpp	/^usage(option_group_t& options)$/;"	f
usage	src/sm/tests/htab.cpp	/^void usage(int W_UNUSED(argc), char *const *argv)$/;"	f
usage	src/sm/tests/log_exceed.cpp	/^usage(option_group_t& options)$/;"	f
usage	src/sm/tests/mrbtrees_test.cpp	/^void usage(option_group_t& options)$/;"	f
usage	src/sm/tests/rtree_example.cpp	/^usage(option_group_t& options)$/;"	f
usage	src/sm/tests/sort_stream.cpp	/^usage(option_group_t& options)$/;"	f
usage	src/sm/tests/vtable_example.cpp	/^usage(option_group_t& options)$/;"	f
usage_error	config/test-driver	/^usage_error ()$/;"	f
use	src/sm/zkeyed.cpp	/^    int  use;         \/\/ length of this string to be used$/;"	m	struct:pxinfo_t	file:
use_combination_array	src/sm/log_core.cpp	/^bool use_combination_array = true;$/;"	v
use_decoupled_memcpy	src/sm/log_core.cpp	/^bool use_decoupled_memcpy = true;$/;"	v
use_expose_groups	src/sm/log_core.cpp	/^bool use_expose_groups = true;$/;"	v
use_logical_id	src/sm/smsh/shell.cpp	/^use_logical_id(Tcl_Interp*)$/;"	f
use_random	src/sthread/tests/ioperf.cpp	/^bool        use_random = false;$/;"	v
usec	src/fc/stime.cpp	/^stime_t    stime_t::usec(int us, int sec)$/;"	f	class:stime_t
usecs	src/fc/stime.cpp	/^long    stime_t::usecs() const$/;"	f	class:stime_t
used_bs	src/sm/sm_du_stats.h	/^    base_stat_t        used_bs;$/;"	m	struct:btree_int_stats_t
used_bs	src/sm/sm_du_stats.h	/^    base_stat_t        used_bs;$/;"	m	struct:lgindex_pg_stats_t
used_space	src/sm/page.h	/^page_p::used_space()$/;"	f	class:page_p
user	src/sthread/sthread.h	/^    void*             user;    \/\/ user can use this $/;"	m	class:sthread_t
user1_t	src/sm/lock_s.h	/^        user1_t() : u1(0)  {}$/;"	f	struct:lockid_t::user1_t
user1_t	src/sm/lock_s.h	/^        user1_t(uint2_t v1) : u1(v1)  {}$/;"	f	struct:lockid_t::user1_t
user1_t	src/sm/lock_s.h	/^    struct user1_t  {$/;"	s	class:lockid_t
user1_t	src/sm/tests/lock_cache_test.cpp	/^typedef lockid_t::user1_t user1_t;$/;"	t	file:
user1_t	src/sm/tests/lockid_test.cpp	/^typedef lockid_t::user1_t user1_t;$/;"	t	file:
user2_t	src/sm/lock_s.h	/^        user2_t() : u2(0)  {}$/;"	f	struct:lockid_t::user2_t
user2_t	src/sm/lock_s.h	/^        user2_t(uint2_t v1, uint4_t v2): user1_t(v1), u2(v2)  {}$/;"	f	struct:lockid_t::user2_t
user2_t	src/sm/lock_s.h	/^    struct user2_t : public user1_t  {$/;"	s	class:lockid_t
user2_t	src/sm/tests/lock_cache_test.cpp	/^typedef lockid_t::user2_t user2_t;$/;"	t	file:
user2_t	src/sm/tests/lockid_test.cpp	/^typedef lockid_t::user2_t user2_t;$/;"	t	file:
user3_t	src/sm/lock_s.h	/^        user3_t() : u3(0)  {}$/;"	f	struct:lockid_t::user3_t
user3_t	src/sm/lock_s.h	/^        user3_t(uint2_t v1, uint4_t v2, uint4_t v3)$/;"	f	struct:lockid_t::user3_t
user3_t	src/sm/lock_s.h	/^    struct user3_t : public user2_t  {$/;"	s	class:lockid_t
user3_t	src/sm/tests/lock_cache_test.cpp	/^typedef lockid_t::user3_t user3_t;$/;"	t	file:
user3_t	src/sm/tests/lockid_test.cpp	/^typedef lockid_t::user3_t user3_t;$/;"	t	file:
user4Sindex	src/sm/lock_s.h	/^    enum { pageSindex=4, slotSindex=6, user4Sindex=6 };$/;"	e	enum:lockid_t::__anon60
user4Windex	src/sm/lock_s.h	/^    enum { pageWindex=2, slotWindex=3, user4Windex=3 };$/;"	e	enum:lockid_t::__anon59
user4_t	src/sm/lock_s.h	/^        user4_t() : u4(0)  {}$/;"	f	struct:lockid_t::user4_t
user4_t	src/sm/lock_s.h	/^        user4_t(uint2_t v1, uint4_t v2, uint4_t v3, uint4_t v4)$/;"	f	struct:lockid_t::user4_t
user4_t	src/sm/lock_s.h	/^    struct user4_t : public user3_t  {$/;"	s	class:lockid_t
user4_t	src/sm/tests/lock_cache_test.cpp	/^typedef lockid_t::user4_t user4_t;$/;"	t	file:
user4_t	src/sm/tests/lockid_test.cpp	/^typedef lockid_t::user4_t user4_t;$/;"	t	file:
ushort_t	src/atomic_ops/atomic_ops.h	/^typedef unsigned short ushort_t;$/;"	t
v	src/fc/atomic_container.h	/^    union pvn { ptr* p; void* v; long n; };$/;"	m	union:atomic_container::pvn
v	src/fc/atomic_container.h	/^    union vpn { void* v; ptr* p; long n; };$/;"	m	union:atomic_container::vpn
v	src/fc/tests/test_stat_struct_gen.h	/^ w_base_t::base_stat_t v;$/;"	v
val	src/sm/sort.cpp	/^    char* val;          \/\/ pointer to key$/;"	m	struct:sort_key_t	file:
val	src/sm/sort.cpp	/^    const char* val;    \/\/ pointer to key$/;"	m	struct:file_sort_key_t	file:
valgrind_check	src/fc/valgrind_help.h	/^    valgrind_check(): _current_errors(0),$/;"	f	class:valgrind_check
valgrind_check	src/fc/valgrind_help.h	/^class valgrind_check$/;"	c
valid	src/common/lsn.h	/^    bool valid()             const { $/;"	f	class:lsn_t
valid	src/fc/mem_block.h	/^    static bool valid() { return true; }$/;"	f	struct:memory_block::fail_unless
valid	src/sm/crash.cpp	/^        bool          valid;$/;"	m	struct:debuginfo	file:
valid	src/sm/sm_s.cpp	/^bool lpid_t::valid() const$/;"	f	class:lpid_t
validCachedMinRecLSN	src/sm/restart.cpp	/^    bool                         validCachedMinRecLSN;$/;"	m	class:dirty_pages_tab_t	file:
valid_header	src/sm/logrec.cpp	/^logrec_t::valid_header(const lsn_t & lsn) const$/;"	f	class:logrec_t
validate_pointer	src/fc/block_alloc.cpp	/^bool dynpool::validate_pointer(void* ptr) {$/;"	f	class:dynpool
validate_pointer	src/fc/tests/memblock.cpp	/^    virtual bool    validate_pointer(void* ptr) {$/;"	f	struct:test_block_pool
value	src/common/latch.cpp	/^    latch_holder_t* value() { return (_it == _end)? $/;"	f	class:holder_search
value	src/common/option.h	/^    const char*        value()         { return _value;}$/;"	f	class:option_t
value	src/fc/w_defines.h	/^    enum { value=(N+K-1) & -K };$/;"	e	enum:static_align::__anon134
value	src/sm/crash.cpp	/^        int           value;$/;"	m	struct:debuginfo	file:
value_size	src/fc/vtable.h	/^    int   value_size() const { return M; }$/;"	f	class:vtable_row_t
value_type	src/fc/w_temp_alloc.h	/^        typedef T value_type;$/;"	t	struct:w_temp_alloc::allocator
values	src/sm/sm_io.h	/^            } values;$/;"	m	union:store_operation_param::__anon66	typeref:struct:store_operation_param::__anon66::__anon67
values_b	src/sm/smsh/shell2.cpp	/^char **values_b  = 0;$/;"	v
values_f4	src/sm/smsh/shell2.cpp	/^f4_t *values_f4  = 0;$/;"	v
values_f8	src/sm/smsh/shell2.cpp	/^f8_t *values_f8  = 0;$/;"	v
values_i1	src/sm/smsh/shell2.cpp	/^int1_t *values_i1  = 0;$/;"	v
values_i2	src/sm/smsh/shell2.cpp	/^int2_t *values_i2  = 0;$/;"	v
values_i4	src/sm/smsh/shell2.cpp	/^int4_t *values_i4  = 0;$/;"	v
values_i8	src/sm/smsh/shell2.cpp	/^w_base_t::int8_t *values_i8  = 0;$/;"	v
values_u1	src/sm/smsh/shell2.cpp	/^uint1_t *values_u1;$/;"	v
values_u2	src/sm/smsh/shell2.cpp	/^uint2_t *values_u2;$/;"	v
values_u4	src/sm/smsh/shell2.cpp	/^uint4_t *values_u4;$/;"	v
values_u8	src/sm/smsh/shell2.cpp	/^w_base_t::uint8_t *values_u8;$/;"	v
variable	src/sm/sm_s.h	/^    char        variable; \/\/ Boolean - but its size is unpredictable$/;"	m	struct:key_type_s
vblstringCSKF	src/sm/smsh/sort_funcs3.cpp	/^vblstringCSKF($/;"	f
vec_pair_t	src/common/vec_t.h	/^struct vec_pair_t {$/;"	s
vec_size	src/sthread/tests/thread2.cpp	/^int	vec_size = 0;		\/\/ i\/o vector slots for an i\/o operation$/;"	v
vec_t	src/common/vec_t.h	/^    vec_t() : cvec_t()        {};$/;"	f	class:vec_t
vec_t	src/common/vec_t.h	/^    vec_t(const cvec_t& v1, const cvec_t& v2) : cvec_t(v1, v2)  {};$/;"	f	class:vec_t
vec_t	src/common/vec_t.h	/^    vec_t(const vec_t& v, size_t offset, size_t limit)$/;"	f	class:vec_t
vec_t	src/common/vec_t.h	/^    vec_t(const vec_t&) : cvec_t()  {$/;"	f	class:vec_t
vec_t	src/common/vec_t.h	/^    vec_t(const void* p, size_t l) : cvec_t(p, l)        {};$/;"	f	class:vec_t
vec_t	src/common/vec_t.h	/^class vec_t : public cvec_t {$/;"	c
vecdelparts	src/common/vec_t.h	/^    void vecdelparts()      {   while(_cnt-->0) { $/;"	f	class:cvec_t
vectors_DEPENDENCIES	src/common/tests/Makefile	/^vectors_DEPENDENCIES = ..\/libcommon.a ..\/..\/sthread\/libsthread.a \\$/;"	m
vectors_LDADD	src/common/tests/Makefile	/^vectors_LDADD = $(LDADD)$/;"	m
vectors_OBJECTS	src/common/tests/Makefile	/^vectors_OBJECTS = $(am_vectors_OBJECTS)$/;"	m
vectors_SOURCES	src/common/tests/Makefile	/^vectors_SOURCES = vectors.cpp$/;"	m
verbose	src/sm/smsh/lib/smsh.tcl	/^proc verbose {args} {$/;"	p
verbose	src/sm/smsh/smsh.cpp	/^bool verbose = false;$/;"	v
verbose	src/sthread/tests/except.cpp	/^bool	verbose = false;$/;"	v
verbose	src/sthread/tests/thread1.cpp	/^bool	verbose = true;$/;"	v
verbose	src/sthread/tests/thread2.cpp	/^bool	verbose = false;$/;"	v
verbose	src/sthread/tests/thread3.cpp	/^bool	verbose = false;$/;"	v
verbose	src/sthread/tests/thread4.cpp	/^bool	verbose = false;$/;"	v
verbose2	src/sm/smsh/lib/smsh.tcl	/^proc verbose2 {args} {$/;"	p
verbose2	src/sm/smsh/smsh.cpp	/^bool verbose2 = false;$/;"	v
verbose2_flag	src/sm/smsh/smsh.h	/^    w_base_t::uint4_t  verbose2_flag;$/;"	m	struct:linked_vars
verbose_flag	src/sm/smsh/smsh.h	/^    w_base_t::uint4_t  verbose_flag;$/;"	m	struct:linked_vars
verify	src/fc/w_rc.h	/^w_rc_t::verify()$/;"	f	class:w_rc_t
verify_chkpt_reservation	src/sm/log.cpp	/^bool log_m::verify_chkpt_reservation() $/;"	f	class:log_m
verify_index	src/sm/smsh/sort_funcs.cpp	/^void verify_index(int n, stid_t stid, bool nullsok, char *stringbuffer,$/;"	f
verify_owner	src/fc/w_error.h	/^inline void w_error_t::verify_owner() const { \/* do nothing *\/ }$/;"	f	class:w_error_t
verify_owner	src/fc/w_error.h	/^inline void w_error_t::verify_owner() const {$/;"	f	class:w_error_t
version	src/fc/atomic_container.h	/^    static long version(long value) { return value & VERSION_MASK; }$/;"	f	class:atomic_container
vid	src/sm/lock_s_inline.h	/^lockid_t::vid() const $/;"	f	class:lockid_t
vid	src/sm/logrec.h	/^        vid_t       vid;  \/\/ (won't be needed in future)$/;"	m	struct:chkpt_dev_tab_t::devrec_t
vid	src/sm/logrec.h	/^logrec_t::vid() const$/;"	f	class:logrec_t
vid	src/sm/tests/file_scan_many.cpp	/^    vid_t     vid;$/;"	m	class:smthread_main_t	file:
vid	src/sm/vol.h	/^inline vid_t vol_t::vid() const$/;"	f	class:vol_t
vid_bits	src/sm/lock_s_inline.h	/^lockid_t::vid_bits() const $/;"	f	class:lockid_t
vid_t	src/common/vid_t.h	/^                    vid_t() : vol(0) {}$/;"	f	struct:vid_t
vid_t	src/common/vid_t.h	/^                    vid_t(uint2_t v) : vol(v) {}$/;"	f	struct:vid_t
vid_t	src/common/vid_t.h	/^struct vid_t {$/;"	s
vid_to_lvid	src/sm/smfile.cpp	/^ss_m::vid_to_lvid(vid_t vid, lvid_t& lvid)$/;"	f	class:ss_m
vol	src/common/stid_t.h	/^    vid_t    vol;$/;"	m	struct:stid_t
vol	src/common/vid_t.h	/^    uint2_t        vol;$/;"	m	struct:vid_t
vol	src/fc/tests/cuckoo.cpp	/^    uint2_t vol() const { return _vol; }$/;"	f	struct:bfpid_t
vol	src/sm/bf.cpp	/^    const vid_t&      vol() { return _vol; }$/;"	f	class:bf_cleaner_thread_t
vol	src/sm/sm_io.cpp	/^vol_t*                   io_m::vol[io_m::max_vols] = { 0 };$/;"	m	class:io_m	file:
vol	src/sm/sm_io.h	/^    static vol_t*               vol[max_vols];$/;"	m	class:io_m
vol	src/sm/sm_s.h	/^    vid_t         vol()   const {return _stid.vol;}$/;"	f	class:lpid_t
vol	src/sm/sm_s.h	/^    vid_t        vol; $/;"	m	class:extid_t
vol	src/sm/sort_s.h	/^    vid_t   vol;        $/;"	m	struct:ssm_sort::sort_parm_t
vol_alloc_exts	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t vol_alloc_exts;$/;"	v
vol_blks_written	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t vol_blks_written;$/;"	v
vol_cache_clears	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t vol_cache_clears;$/;"	v
vol_cache_primes	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t vol_cache_primes;$/;"	v
vol_cnt	src/sm/sm_io.cpp	/^int                      io_m::vol_cnt = 0;$/;"	m	class:io_m	file:
vol_cnt	src/sm/sm_io.h	/^    static int                  vol_cnt;$/;"	m	class:io_m
vol_cnts	src/sm/xct.cpp	/^        snum_t vol_cnts[xct_t::max_vols];$/;"	m	class:VolidCnt	file:
vol_free_exts	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t vol_free_exts;$/;"	v
vol_histo_ext_cache_find	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t vol_histo_ext_cache_find;$/;"	v
vol_histo_ext_cache_find_hit	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t vol_histo_ext_cache_find_hit;$/;"	v
vol_histo_ext_cache_update	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t vol_histo_ext_cache_update;$/;"	v
vol_io_shared	src/sm/sm_io.h	/^class vol_io_shared : public w_base_t {$/;"	c
vol_last_extent_search	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t vol_last_extent_search;$/;"	v
vol_last_extent_search_cost	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t vol_last_extent_search_cost;$/;"	v
vol_last_page_cache_find	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t vol_last_page_cache_find;$/;"	v
vol_last_page_cache_find_hit	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t vol_last_page_cache_find_hit;$/;"	v
vol_last_page_cache_update	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t vol_last_page_cache_update;$/;"	v
vol_lock_noalloc	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t vol_lock_noalloc;$/;"	v
vol_map	src/sm/xct.cpp	/^        int vol_map[xct_t::max_vols];$/;"	m	class:VolidCnt	file:
vol_mutex	src/sm/vol.h	/^    VolumeLock&     vol_mutex() const { return _mutex; } \/\/ used by sm_io.cpp$/;"	f	class:vol_t
vol_reads	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t vol_reads;$/;"	v
vol_resv_cache_erase	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t vol_resv_cache_erase;$/;"	v
vol_resv_cache_fail	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t vol_resv_cache_fail;$/;"	v
vol_resv_cache_hit	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t vol_resv_cache_hit;$/;"	v
vol_resv_cache_insert	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t vol_resv_cache_insert;$/;"	v
vol_root_index	src/sm/sm.h	/^    static rc_t            vol_root_index($/;"	f	class:ss_m
vol_t	src/sm/vol.h	/^class vol_t : public smlevel_1 $/;"	c
vol_t	src/sm/vol.h	/^inline vol_t::vol_t(const bool apply_fake_io_latency, const int fake_disk_latency) $/;"	f	class:vol_t
vol_writes	src/sm/sm_stats_t_struct_gen.h	/^ w_base_t::base_stat_t vol_writes;$/;"	v
volhdr_t	src/sm/vol.h	/^class volhdr_t {$/;"	c
volstophere	src/sm/vol.cpp	/^extern "C" void volstophere()$/;"	f
volume_format_version	src/sm/sm.cpp	/^uint4_t        smlevel_0::volume_format_version = VOLUME_FORMAT;$/;"	m	class:smlevel_0	file:
volume_format_version	src/sm/sm_base.h	/^    static w_base_t::uint4_t volume_format_version;$/;"	m	class:smlevel_0
volume_hdr	src/sm/sm_du_stats.h	/^    volume_hdr_stats_t     volume_hdr;    \/* header extent info *\/$/;"	m	struct:sm_du_stats_t
volume_hdr_stats_t	src/sm/sm_du_stats.h	/^    NORET        volume_hdr_stats_t() {clear();}$/;"	f	struct:volume_hdr_stats_t
volume_hdr_stats_t	src/sm/sm_du_stats.h	/^struct volume_hdr_stats_t {$/;"	s
volume_map	src/sm/sm_du_stats.h	/^    volume_map_stats_t     volume_map;    \/* special volume indexes *\/$/;"	m	struct:sm_du_stats_t
volume_map_stats_t	src/sm/sm_du_stats.h	/^    NORET          volume_map_stats_t() {clear();}$/;"	f	struct:volume_map_stats_t
volume_map_stats_t	src/sm/sm_du_stats.h	/^struct volume_map_stats_t {$/;"	s
vote	src/sm/xct.h	/^xct_t::vote() const$/;"	f	class:xct_t
vote_abort	src/fc/w_base.h	/^        vote_abort,     \/* cannot commit                            *\/$/;"	e	enum:w_base_t::vote_t
vote_bad	src/fc/w_base.h	/^        vote_bad,    \/* illegit value                *\/$/;"	e	enum:w_base_t::vote_t
vote_commit	src/fc/w_base.h	/^        vote_commit     \/* can commit if so told                    *\/$/;"	e	enum:w_base_t::vote_t
vote_readonly	src/fc/w_base.h	/^        vote_readonly,  \/* no ex locks acquired for this tx         *\/$/;"	e	enum:w_base_t::vote_t
vote_t	src/common/basics.h	/^	typedef w_base_t::vote_t  vote_t; $/;"	t	namespace:two_phase_commit
vote_t	src/fc/w_base.h	/^    enum vote_t {$/;"	g	class:w_base_t
vpn	src/fc/atomic_container.h	/^    union vpn { void* v; ptr* p; long n; };$/;"	u	class:atomic_container
vsize	src/sthread/sdisk.cpp	/^int    sdisk_base_t::vsize(const iovec_t *iov, int iovcnt)$/;"	f	class:sdisk_base_t
vtable_cmd	src/sm/smsh/shell.cpp	/^static cmd_t vtable_cmd[] = {$/;"	v	file:
vtable_collect	src/sm/bf_core.cpp	/^bfcb_t::vtable_collect(vtable_row_t &t)$/;"	f	class:bfcb_t
vtable_collect	src/sm/lock_core.cpp	/^lock_request_t::vtable_collect(vtable_row_t & t)$/;"	f	class:lock_request_t
vtable_collect	src/sm/vtable_smthread.cpp	/^smthread_t::vtable_collect(vtable_row_t& t) $/;"	f	class:smthread_t
vtable_collect	src/sm/vtable_xct.cpp	/^xct_t::vtable_collect(vtable_row_t &t)$/;"	f	class:xct_t
vtable_collect	src/sthread/vtable_sthread.cpp	/^sthread_t::vtable_collect(vtable_row_t& t)  \/\/ argument MUST be named "t"$/;"	f	class:sthread_t
vtable_collect_names	src/sm/bf_core.cpp	/^bfcb_t::vtable_collect_names(vtable_row_t &t)$/;"	f	class:bfcb_t
vtable_collect_names	src/sm/lock_core.cpp	/^lock_request_t::vtable_collect_names(vtable_row_t &t)$/;"	f	class:lock_request_t
vtable_collect_names	src/sm/vtable_smthread.cpp	/^smthread_t::vtable_collect_names(vtable_row_t& t) $/;"	f	class:smthread_t
vtable_collect_names	src/sm/vtable_xct.cpp	/^xct_t::vtable_collect_names(vtable_row_t &t)$/;"	f	class:xct_t
vtable_collect_names	src/sthread/vtable_sthread.cpp	/^sthread_t::vtable_collect_names(vtable_row_t &t)$/;"	f	class:sthread_t
vtable_dispatch	src/sm/smsh/shell.cpp	/^vtable_dispatch(ClientData, Tcl_Interp* ip, int ac, TCL_AV char* av[])$/;"	f
vtable_example_DEPENDENCIES	src/sm/tests/Makefile	/^vtable_example_DEPENDENCIES = $(top_builddir)\/src\/sm\/libsm.a \\$/;"	m
vtable_example_LDADD	src/sm/tests/Makefile	/^vtable_example_LDADD = $(LDADD)$/;"	m
vtable_example_OBJECTS	src/sm/tests/Makefile	/^vtable_example_OBJECTS = $(am_vtable_example_OBJECTS)$/;"	m
vtable_example_SOURCES	src/sm/tests/Makefile	/^vtable_example_SOURCES = vtable_example.cpp init_config_options.cpp $/;"	m
vtable_func	src/fc/vtable.h	/^    NORET vtable_func(vtable_t &v): _curr(0), _array(v) { }$/;"	f	class:vtable_func
vtable_func	src/fc/vtable.h	/^class vtable_func $/;"	c
vtable_locks	src/sm/tests/vtable_example.cpp	/^smthread_user_t::vtable_locks() $/;"	f	class:smthread_user_t
vtable_names_init_t	src/fc/vtable.h	/^    NORET vtable_names_init_t(int argc, const char *const argv[]) : _size(0),$/;"	f	class:vtable_names_init_t
vtable_names_init_t	src/fc/vtable.h	/^class  vtable_names_init_t {$/;"	c
vtable_row_t	src/fc/vtable.h	/^    NORET vtable_row_t() : N(0), M(0), _in_use(0), _list(NULL),$/;"	f	class:vtable_row_t
vtable_row_t	src/fc/vtable.h	/^class vtable_row_t {$/;"	c
vtable_t	src/fc/vtable.h	/^    NORET vtable_t() : _rows(0), _rows_filled(0),$/;"	f	class:vtable_t
vtable_t	src/fc/vtable.h	/^class vtable_t {$/;"	c
vtable_threads	src/sm/tests/vtable_example.cpp	/^smthread_user_t::vtable_threads() $/;"	f	class:smthread_user_t
vtable_xcts	src/sm/tests/vtable_example.cpp	/^smthread_user_t::vtable_xcts() $/;"	f	class:smthread_user_t
vthis	src/sm/bf.cpp	/^    bf_page_writer_control_t volatile* vthis() { return this; }$/;"	f	struct:bf_page_writer_control_t
vthis	src/sm/lock_x.h	/^    lock_request_t volatile* vthis() { return this; }$/;"	f	class:lock_request_t
vthis	src/sm/log_core.cpp	/^	insert_info volatile* vthis() { return this; }$/;"	f	struct:log_core::insert_info
vthis	src/sm/log_core.h	/^	epoch volatile* vthis() { return this; }	$/;"	f	struct:log_core::epoch
vthis	src/sm/xct.cpp	/^    xct_link volatile* 		vthis() { return this; }$/;"	f	struct:xct_link
vthis	src/sthread/mcs_lock.h	/^		qnode volatile* vthis() { return this; }$/;"	f	struct:mcs_lock::qnode
w	src/sm/lock_s.h	/^        w_base_t::uint4_t w[4]; $/;"	m	union:lockid_t::__anon61
w_ascend_list_t	src/fc/w_list.h	/^    NORET            w_ascend_list_t($/;"	f	class:w_ascend_list_t
w_ascend_list_t	src/fc/w_list.h	/^class w_ascend_list_t : public w_keyed_list_t<T,LOCK, K>  {$/;"	c
w_assert0	src/fc/w_base.h	183;"	d
w_assert1	src/fc/w_base.h	194;"	d
w_assert1	src/fc/w_base.h	196;"	d
w_assert2	src/fc/w_base.h	201;"	d
w_assert2	src/fc/w_base.h	203;"	d
w_assert3	src/fc/w_base.h	208;"	d
w_assert3	src/fc/w_base.h	210;"	d
w_assert4	src/fc/w_base.h	215;"	d
w_assert4	src/fc/w_base.h	217;"	d
w_assert5	src/fc/w_base.h	222;"	d
w_assert5	src/fc/w_base.h	224;"	d
w_assert9	src/fc/w_base.h	236;"	d
w_auto_delete_array_t	src/fc/w_autodel.h	/^    NORET            w_auto_delete_array_t($/;"	f	class:w_auto_delete_array_t
w_auto_delete_array_t	src/fc/w_autodel.h	/^    NORET            w_auto_delete_array_t()$/;"	f	class:w_auto_delete_array_t
w_auto_delete_array_t	src/fc/w_autodel.h	/^    NORET            w_auto_delete_array_t(T* t)$/;"	f	class:w_auto_delete_array_t
w_auto_delete_array_t	src/fc/w_autodel.h	/^class w_auto_delete_array_t {$/;"	c
w_auto_delete_t	src/fc/w_autodel.h	/^    NORET            w_auto_delete_t()$/;"	f	class:w_auto_delete_t
w_auto_delete_t	src/fc/w_autodel.h	/^    NORET            w_auto_delete_t(T* t)$/;"	f	class:w_auto_delete_t
w_auto_delete_t	src/fc/w_autodel.h	/^    NORET            w_auto_delete_t(const w_auto_delete_t&) {};$/;"	f	class:w_auto_delete_t
w_auto_delete_t	src/fc/w_autodel.h	/^class w_auto_delete_t {$/;"	c
w_base_t	src/fc/w_base.h	/^class w_base_t {$/;"	c
w_bitmap_t	src/fc/w_bitmap.cpp	/^w_bitmap_t::w_bitmap_t(uint4_t size)$/;"	f	class:w_bitmap_t
w_bitmap_t	src/fc/w_bitmap.h	/^class w_bitmap_t : public w_base_t {$/;"	c
w_bitmap_t	src/fc/w_bitmap.h	/^w_bitmap_t::w_bitmap_t(uint1_t* p, uint4_t size)$/;"	f	class:w_bitmap_t
w_bitvector_t	src/fc/w_bitvector.h	/^    w_bitvector_t() { clear(); }$/;"	f	class:w_bitvector_t
w_bitvector_t	src/fc/w_bitvector.h	/^class w_bitvector_t $/;"	c
w_dbg_fmtflags	src/fc/w_debug.h	/^typedef    ios::fmtflags    w_dbg_fmtflags;$/;"	t
w_debug	src/fc/w_debug.cpp	/^w_debug::w_debug(const char *n, const char *f) : $/;"	f	class:w_debug
w_debug	src/fc/w_debug.h	/^class w_debug : public ErrLog {$/;"	c
w_descend_list_t	src/fc/w_list.h	/^    NORET            w_descend_list_t($/;"	f	class:w_descend_list_t
w_descend_list_t	src/fc/w_list.h	/^class w_descend_list_t : public w_keyed_list_t<T,LOCK, K> $/;"	c
w_error_alloc	src/fc/w_error.h	/^DECLARE_TLS_SCHWARZ(w_error_alloc);$/;"	v
w_error_info_t	src/fc/w_error.h	/^struct w_error_info_t {$/;"	s
w_error_t	src/fc/w_error.cpp	/^w_error_t::w_error_t($/;"	f	class:w_error_t
w_error_t	src/fc/w_error.cpp	/^w_error_t::w_error_t(const char* const        fi,$/;"	f	class:w_error_t
w_error_t	src/fc/w_error.h	/^class w_error_t : public w_base_t {$/;"	c
w_error_t_no_error_code	src/fc/w_error.cpp	/^static void w_error_t_no_error_code()$/;"	f	file:
w_findprime	src/fc/w_findprime.cpp	/^w_base_t::int8_t w_findprime(w_base_t::int8_t min) $/;"	f
w_force_shore_regcomp	src/common/regcomp.cpp	/^int w_force_shore_regcomp; \/\/ GROT$/;"	v
w_force_shore_regerror	src/common/regerror.cpp	/^int w_force_shore_regerror=0; \/\/ GROT$/;"	v
w_force_shore_regexec	src/common/regexec.cpp	/^int w_force_shore_regexec; \/\/ GROT$/;"	v
w_hash	src/common/lid_t.h	/^inline w_base_t::uint4_t w_hash(const lvid_t& lv)$/;"	f
w_hash	src/common/stid_t.h	/^inline w_base_t::uint4_t w_hash(const stid_t &s) $/;"	f
w_hash	src/fc/w_hash.h	/^inline w_base_t::uint4_t w_hash(long l)$/;"	f
w_hash	src/fc/w_hash.h	/^inline w_base_t::uint4_t w_hash(unsigned long l)$/;"	f
w_hash	src/fc/w_hash.h	/^inline w_base_t::uint4_t w_hash(w_base_t::int2_t i)   {$/;"	f
w_hash	src/fc/w_hash.h	/^inline w_base_t::uint4_t w_hash(w_base_t::int4_t i)   {$/;"	f
w_hash	src/fc/w_hash.h	/^inline w_base_t::uint4_t w_hash(w_base_t::uint2_t i)  {$/;"	f
w_hash	src/fc/w_hash.h	/^inline w_base_t::uint4_t w_hash(w_base_t::uint4_t i)  {$/;"	f
w_hash	src/sm/lock_s.h	/^inline w_base_t::uint4_t w_hash(const lockid_t& id)$/;"	f
w_hash	src/sm/sm_s.h	/^inline w_base_t::uint4_t w_hash(const lpid_t& p)$/;"	f
w_hash	src/sm/sm_s.h	/^inline w_base_t::uint4_t w_hash(const vid_t v)$/;"	f
w_hash_i	src/fc/w_hash.h	/^    NORET           w_hash_i(const w_hash_t<T,LOCK, K>& t) : _bkt(uint4_max), $/;"	f	class:w_hash_i
w_hash_i	src/fc/w_hash.h	/^class w_hash_i : public w_base_t {$/;"	c
w_hash_i_histoid_t_stid_t_iterator	src/sm/histo.cpp	/^typedef class w_hash_i<histoid_t, occ_rwlock, stid_t> w_hash_i_histoid_t_stid_t_iterator;$/;"	t	typeref:class:w_hash_i	file:
w_hash_t	src/fc/w_hash.h	/^class w_hash_t : public w_base_t {$/;"	c
w_hash_t	src/fc/w_hash.h	/^w_hash_t<T,LOCK, K>::w_hash_t($/;"	f	class:w_hash_t
w_hash_t_element_t_dummy	src/fc/tests/hash1.cpp	/^typedef w_hash_t<element_t, unsafe_list_dummy_lock_t, int> w_hash_t_element_t_dummy;$/;"	t	file:
w_hash_t_element_t_dummy	src/fc/tests/hash2.cpp	/^typedef w_hash_t<elem_t, unsafe_list_dummy_lock_t, int> w_hash_t_element_t_dummy;$/;"	t	file:
w_hashing	src/fc/w_hashing.h	/^namespace w_hashing {$/;"	n
w_htonl	src/fc/w_base.cpp	/^w_base_t::uint4_t w_base_t::w_htonl(w_base_t::uint4_t host)$/;"	f	class:w_base_t
w_htons	src/fc/w_base.cpp	/^w_base_t::uint2_t w_base_t::w_htons(w_base_t::uint2_t host)$/;"	f	class:w_base_t
w_ieee_double	src/fc/tests/rand.cpp	/^} w_ieee_double;  $/;"	t	typeref:struct:__anon129	file:
w_ieee_double_big	src/fc/tests/rand.cpp	/^} w_ieee_double_big;  $/;"	t	typeref:struct:__anon130	file:
w_ieee_double_little	src/fc/tests/rand.cpp	/^} w_ieee_double_little;  $/;"	t	typeref:struct:__anon131	file:
w_istrstream	src/fc/w_strstream.h	/^    w_istrstream(const char *s)$/;"	f	class:w_istrstream
w_istrstream	src/fc/w_strstream.h	/^    w_istrstream(const char *s, size_t l)$/;"	f	class:w_istrstream
w_istrstream	src/fc/w_strstream.h	/^class w_istrstream : public istrstream {$/;"	c
w_keyed_list_t	src/fc/w_list.h	/^class w_keyed_list_t : public w_list_t<T,LOCK> {$/;"	c
w_keyed_list_t	src/fc/w_list.h	/^w_keyed_list_t<T,LOCK, K>::w_keyed_list_t($/;"	f	class:w_keyed_list_t
w_keyed_list_t	src/fc/w_list.h	/^w_keyed_list_t<T,LOCK, K>::w_keyed_list_t(LOCK *l)$/;"	f	class:w_keyed_list_t
w_link_t	src/fc/w_list.h	/^class w_link_t {$/;"	c
w_link_t	src/fc/w_list.h	/^w_link_t::w_link_t()$/;"	f	class:w_link_t
w_link_t	src/fc/w_list.h	/^w_link_t::w_link_t(const w_link_t&)$/;"	f	class:w_link_t
w_list_base_t	src/fc/w_list.h	/^class w_list_base_t : public w_vbase_t {$/;"	c
w_list_base_t	src/fc/w_list.h	/^w_list_base_t::w_list_base_t()$/;"	f	class:w_list_base_t
w_list_base_t	src/fc/w_list.h	/^w_list_base_t::w_list_base_t(uint4_t offset)$/;"	f	class:w_list_base_t
w_list_const_i	src/fc/w_list.h	/^    NORET            w_list_const_i()  {};$/;"	f	class:w_list_const_i
w_list_const_i	src/fc/w_list.h	/^    NORET            w_list_const_i(const w_list_t<T,LOCK>& l)$/;"	f	class:w_list_const_i
w_list_const_i	src/fc/w_list.h	/^class w_list_const_i : public w_list_i<T, LOCK> {$/;"	c
w_list_i	src/fc/w_list.h	/^    NORET            w_list_i()$/;"	f	class:w_list_i
w_list_i	src/fc/w_list.h	/^    NORET            w_list_i(const w_list_t<T,LOCK>& l, bool backwards = false)$/;"	f	class:w_list_i
w_list_i	src/fc/w_list.h	/^class w_list_i : public w_base_t {$/;"	c
w_list_t	src/fc/w_list.h	/^    NORET            w_list_t() : lock(NULL) {}$/;"	f	class:w_list_t
w_list_t	src/fc/w_list.h	/^    NORET            w_list_t(uint4_t link_offset, LOCK *l)$/;"	f	class:w_list_t
w_list_t	src/fc/w_list.h	/^class w_list_t : public w_list_base_t {$/;"	c
w_list_t_elem1_t_dummy	src/fc/tests/list1.cpp	/^typedef w_list_t<elem1_t, unsafe_list_dummy_lock_t> w_list_t_elem1_t_dummy;$/;"	t	file:
w_list_t_elem2_t_dummy	src/fc/tests/list2.cpp	/^typedef w_list_t<elem2_t, unsafe_list_dummy_lock_t> w_list_t_elem2_t_dummy;$/;"	t	file:
w_list_t_element_t_dummy	src/fc/tests/hash1.cpp	/^typedef w_list_t<element_t, unsafe_list_dummy_lock_t> w_list_t_element_t_dummy;$/;"	t	file:
w_list_t_element_t_dummy	src/fc/tests/hash2.cpp	/^typedef w_list_t<elem_t, unsafe_list_dummy_lock_t> w_list_t_element_t_dummy;$/;"	t	file:
w_ntohl	src/fc/w_base.cpp	/^w_base_t::uint4_t w_base_t::w_ntohl(w_base_t::uint4_t net)$/;"	f	class:w_base_t
w_ntohs	src/fc/w_base.cpp	/^w_base_t::uint2_t w_base_t::w_ntohs(w_base_t::uint2_t net)$/;"	f	class:w_base_t
w_offsetof	src/fc/w_workaround.h	217;"	d
w_offsetof	src/fc/w_workaround.h	382;"	d
w_ostrstream	src/fc/w_strstream.h	/^    w_ostrstream()$/;"	f	class:w_ostrstream
w_ostrstream	src/fc/w_strstream.h	/^    w_ostrstream(char *s, size_t l)$/;"	f	class:w_ostrstream
w_ostrstream	src/fc/w_strstream.h	/^class w_ostrstream : public ostrstream {$/;"	c
w_ostrstream_buf	src/fc/w_strstream.h	/^    w_ostrstream_buf(size_t len)$/;"	f	class:w_ostrstream_buf
w_ostrstream_buf	src/fc/w_strstream.h	/^class w_ostrstream_buf : public w_ostrstream {$/;"	c
w_ostrstreambuf	src/fc/w_strstream.h	/^    class w_ostrstreambuf : public strstreambuf {$/;"	c	class:w_ostrstream_buf
w_pthread_lock_t	src/sthread/sthread.h	/^    w_pthread_lock_t() :_holder(0) { pthread_mutex_init(&_mutex, 0); }$/;"	f	struct:w_pthread_lock_t
w_pthread_lock_t	src/sthread/sthread.h	/^struct w_pthread_lock_t $/;"	s
w_rand	src/fc/w_rand.cpp	/^w_rand::w_rand()$/;"	f	class:w_rand
w_rand	src/fc/w_rand.h	/^    w_rand(uint32_t const (&w)[N])$/;"	f	struct:w_rand
w_rand	src/fc/w_rand.h	/^    w_rand(uint32_t const *w, size_t n)$/;"	f	struct:w_rand
w_rand	src/fc/w_rand.h	/^struct w_rand {$/;"	s
w_rc_i	src/fc/w_rc.h	/^    w_rc_i(w_rc_t const &x) : _next(x.ptr()) {};$/;"	f	class:w_rc_i
w_rc_i	src/fc/w_rc.h	/^class w_rc_i {$/;"	c
w_rc_t	src/fc/w_rc.cpp	/^w_rc_t::w_rc_t($/;"	f	class:w_rc_t
w_rc_t	src/fc/w_rc.h	/^    w_rc_t(const w_rc_t &other) : _err(other.clone()) { $/;"	f	class:w_rc_t
w_rc_t	src/fc/w_rc.h	/^class w_rc_t $/;"	c
w_rc_t	src/fc/w_rc.h	/^w_rc_t::w_rc_t() $/;"	f	class:w_rc_t
w_rc_t	src/fc/w_rc.h	/^w_rc_t::w_rc_t(w_error_t* e)$/;"	f	class:w_rc_t
w_reset_strstream	src/fc/w_base.h	465;"	d
w_reset_strstream	src/fc/w_base.h	471;"	d
w_stat_t	src/fc/w_stat.h	/^    w_stat_t() { _u.i=0; }$/;"	f	class:w_stat_t
w_stat_t	src/fc/w_stat.h	/^    w_stat_t(int  i) { _u.i=i; }$/;"	f	class:w_stat_t
w_stat_t	src/fc/w_stat.h	/^    w_stat_t(w_base_t::base_float_t i) { _u.f=i; }$/;"	f	class:w_stat_t
w_stat_t	src/fc/w_stat.h	/^class w_stat_t $/;"	c
w_temp_alloc	src/fc/w_temp_alloc.h	/^    explicit w_temp_alloc(size_t sz)$/;"	f	struct:w_temp_alloc
w_temp_alloc	src/fc/w_temp_alloc.h	/^struct w_temp_alloc {$/;"	s
w_temp_alloc_atexit	src/fc/w_temp_alloc.cpp	/^    static void w_temp_alloc_atexit() {$/;"	f	file:
w_temp_alloc_init	src/fc/w_temp_alloc.cpp	/^    static void w_temp_alloc_init() {$/;"	f	file:
w_temp_alloc_new	src/fc/w_temp_alloc.h	/^} w_temp_alloc_new;$/;"	v	typeref:struct:_w_temp_alloc_new
w_temp_alloc_pthread_exit	src/fc/w_temp_alloc.cpp	/^    static void w_temp_alloc_pthread_exit(void* arg __attribute__((unused)) ) {$/;"	f	file:
w_thread_id_t	src/sthread/sthread.h	/^    typedef unsigned int w_thread_id_t; \/\/ TODO REMOVE$/;"	t	class:sthread_base_t
w_vbase_t	src/fc/w_base.h	/^    NORET                w_vbase_t()    {};$/;"	f	class:w_vbase_t
w_vbase_t	src/fc/w_base.h	/^class w_vbase_t : public w_base_t {$/;"	c
wait	src/sm/smsh/tcl_thread.cpp	/^void barrier_t::wait() $/;"	f	class:barrier_t
wait	src/sthread/tests/thread1.cpp	/^void	wait_for_t::wait()$/;"	f	class:wait_for_t
wait_for_all	src/sm/chkpt.cpp	/^    void wait_for_all() {$/;"	f	struct:old_xct_tracker
wait_for_log_space	src/sm/xct.cpp	/^xct_t::wait_for_log_space(fileoff_t amt) {$/;"	f	class:xct_t
wait_for_space	src/sm/log.cpp	/^rc_t log_m::wait_for_space(fileoff_t &, timeout_in_ms ) $/;"	f	class:log_m
wait_for_space	src/sm/log.cpp	/^rc_t log_m::wait_for_space(fileoff_t &amt, timeout_in_ms timeout) $/;"	f	class:log_m
wait_for_space	src/sm/log_core.cpp	/^rc_t log_core::wait_for_space(fileoff_t &amt, timeout_in_ms timeout) $/;"	f	class:log_core
wait_for_t	src/sthread/tests/thread1.cpp	/^	wait_for_t(int expecting) : expected(expecting), have(0) { $/;"	f	class:wait_for_t
wait_for_t	src/sthread/tests/thread1.cpp	/^class wait_for_t {$/;"	c	file:
waiting	src/sm/lock_x.h	/^    bool             waiting;    \/\/ flag indicates$/;"	m	class:lock_head_t
waiting_request	src/sm/lock_x.h	/^    lock_request_t *  waiting_request() const { return _wait_request; }$/;"	f	class:xct_lock_info_t
waiting_request_is_blocking	src/sm/lock_x.h	/^    bool             waiting_request_is_blocking() const { return _blocking; }$/;"	f	class:xct_lock_info_t
waiting_xct	src/sm/log_core.h	/^		NORET waiting_xct(fileoff_t *amt, pthread_cond_t* c)$/;"	f	struct:log_core::waiting_xct
waiting_xct	src/sm/log_core.h	/^	struct waiting_xct {$/;"	s	class:log_core
wakeup	src/sthread/sthread.cpp	/^void sthread_t::wakeup()$/;"	f	class:sthread_t
wakeup_and_take	src/sm/chkpt.cpp	/^chkpt_m::wakeup_and_take()$/;"	f	class:chkpt_m
wakeup_waiters	src/sm/lock_core.cpp	/^lock_core_m::wakeup_waiters(lock_head_t*& lock, lock_request_t* self)$/;"	f	class:lock_core_m
warning_prio	src/fc/errlog.cpp	/^ostream& warning_prio(ostream& o){ return flush_and_setprio(o, log_warning); }$/;"	f
was_returned	src/sm/tests/htab.cpp	/^    bool was_returned(lpid_t &p) $/;"	f	class:htab_tester
way	src/sm/newsort.cpp	/^    int way() const{ return _way; }$/;"	f	class:phase_mgr
where	src/sm/sort_s.h	/^    where_t              where;      $/;"	m	struct:ssm_sort::key_info_t
where_t	src/sm/sort_s.h	/^    enum where_t { t_hdr = 0, t_body };$/;"	g	struct:ssm_sort::key_info_t
white	src/fc/w_input.cpp	/^        exx, JJJJ, eofile, white, sign, no_charclass$/;"	e	enum:charclass	file:
whole_object	src/sm/newsort.cpp	/^    const sm_object_t&       whole_object() const { return _whole_object; }$/;"	f	class:meta_header_t
whole_object_non_const	src/sm/newsort.cpp	/^    sm_object_t&             whole_object_non_const() { return _whole_object; }$/;"	f	class:meta_header_t
wholelength	src/common/w_opaque.h	/^    uint4_t          wholelength() const {$/;"	f	class:opaque_quantity
whoseShot	src/sthread/tests/thread1.cpp	/^	int		    whoseShot;$/;"	m	struct:ping_pong_t	file:
words_overlap	src/fc/w_bitvector.h	/^    int words_overlap(w_bitvector_t &merged, const w_bitvector_t &other)  const$/;"	f	class:w_bitvector_t
work_id	src/sthread/tests/thread1.cpp	/^    int work_id;$/;"	m	class:worker_thread_t	file:
worker	src/sthread/tests/except.cpp	/^sthread_t	**worker;$/;"	v
worker	src/sthread/tests/thread1.cpp	/^worker_thread_t		**worker;$/;"	v
worker	src/sthread/tests/thread3.cpp	/^sthread_t **worker;$/;"	v
worker_thread_t	src/sthread/tests/thread1.cpp	/^class worker_thread_t : public sthread_t {$/;"	c	file:
worker_thread_t	src/sthread/tests/thread1.cpp	/^worker_thread_t::worker_thread_t(int _id)$/;"	f	class:worker_thread_t
wrap_up	src/sm/rtree.cpp	/^rtld_stk_t::wrap_up()$/;"	f	class:rtld_stk_t
write	src/sthread/io.cpp	/^w_rc_t    sthread_t::write(int fd, const void* buf, int n)$/;"	f	class:sthread_t
write	src/sthread/sdisk_unix.cpp	/^w_rc_t    sdisk_unix_t::write(const void *buf, int count, int &done)$/;"	f	class:sdisk_unix_t
write	src/sthread/sthread_stats_struct_gen.h	/^ w_base_t::base_stat_t write;$/;"	v
write_lock	src/sthread/sthread.h	/^    occ_wlock *write_lock() { return &_write_lock; }$/;"	f	struct:occ_rwlock
write_many_pages	src/sm/sm_io.cpp	/^io_m::write_many_pages(const page_s* bufs, int cnt)$/;"	f	class:io_m
write_many_pages	src/sm/vol.cpp	/^vol_t::write_many_pages(shpid_t pnum, const page_s* const pages, int cnt)$/;"	f	class:vol_t
write_page	src/sm/vol.cpp	/^vol_t::write_page(shpid_t pnum, page_s& page)$/;"	f	class:vol_t
write_vhdr	src/sm/vol.cpp	/^vol_t::write_vhdr(int fd, volhdr_t& vhdr, bool raw_device)$/;"	f	class:vol_t
writev	src/sthread/io.cpp	/^w_rc_t    sthread_t::writev(int fd, const iovec_t *iov, size_t iovcnt)$/;"	f	class:sthread_t
writev	src/sthread/sdisk.cpp	/^w_rc_t    sdisk_t::writev(const iovec_t *iov, int iovcnt, int &transfered)$/;"	f	class:sdisk_t
writev	src/sthread/sdisk_unix.cpp	/^w_rc_t    sdisk_unix_t::writev(const iovec_t *iov, int iovcnt, int &done)$/;"	f	class:sdisk_unix_t
writev	src/sthread/sthread_stats_struct_gen.h	/^ w_base_t::base_stat_t writev;$/;"	v
wrk_branch_t	src/sm/rtree_p.h	/^struct wrk_branch_t {$/;"	s
x	src/fc/tests/test_stat_struct_gen.h	/^ w_base_t::base_stat_t x;$/;"	v
x86_64	config/shore-config.h	540;"	d
x_all	src/sthread/tests/except.cpp	/^enum except_action { x_none, x_all, x_alternate };$/;"	e	enum:except_action	file:
x_alternate	src/sthread/tests/except.cpp	/^enum except_action { x_none, x_all, x_alternate };$/;"	e	enum:except_action	file:
x_none	src/sthread/tests/except.cpp	/^enum except_action { x_none, x_all, x_alternate };$/;"	e	enum:except_action	file:
xaction	src/sthread/tests/except.cpp	/^except_action	xaction = x_none;$/;"	v
xct	src/sm/smthread.h	/^        xct_t*   xct;$/;"	m	struct:smthread_t::tcb_t
xct	src/sm/smthread.h	/^    xct_t*             xct() const { return tcb().xct; }$/;"	f	class:smthread_t
xct	src/sm/smthread.h	/^    xct_t*             xct() { return tcb().xct; }$/;"	f	class:smthread_t
xct	src/sm/smthread.h	/^xct() $/;"	f
xct_abort_log	src/sm/logdef_gen.cpp	/^	xct_abort_log (logrec_t*)   {};$/;"	f	class:xct_abort_log
xct_abort_log	src/sm/logdef_gen.cpp	/^    class xct_abort_log : public logrec_t {$/;"	c	file:
xct_abort_log	src/sm/logrec.cpp	/^xct_abort_log::xct_abort_log()$/;"	f	class:xct_abort_log
xct_aborting	src/sm/sm_int_1.h	/^                        xct_aborting = 0x3, $/;"	e	enum:smlevel_1::xct_state_t
xct_active	src/sm/sm_int_1.h	/^                        xct_active = 0x1,  \/\/ active or rolling back in$/;"	e	enum:smlevel_1::xct_state_t
xct_auto_abort_t	src/sm/xct.h	/^    xct_auto_abort_t() : _xct(xct_t::new_xct()) {}$/;"	f	class:xct_auto_abort_t
xct_auto_abort_t	src/sm/xct.h	/^class xct_auto_abort_t : public smlevel_1 {$/;"	c
xct_chaining	src/sm/sm_int_1.h	/^                        xct_chaining = 0x4, $/;"	e	enum:smlevel_1::xct_state_t
xct_collect	src/sm/vtable_sm.cpp	/^ss_m::xct_collect( vtable_t & res, bool names_too) $/;"	f	class:ss_m
xct_committing	src/sm/sm_int_1.h	/^                        xct_committing = 0x5, $/;"	e	enum:smlevel_1::xct_state_t
xct_constraint_t	src/sm/prologue.h	/^    enum xct_constraint_t {$/;"	g	class:prologue_rc_t
xct_coordinator_attr	src/sm/sm_vtable_enum.h	/^    xct_coordinator_attr,$/;"	e	enum:__anon12
xct_core	src/sm/xct.cpp	/^xct_t::xct_core::xct_core()$/;"	f	class:xct_t::xct_core
xct_core	src/sm/xct.h	/^    struct xct_core$/;"	s	class:xct_t
xct_dependent_t	src/sm/xct.cpp	/^xct_dependent_t::xct_dependent_t(xct_t* xd) : _xd(xd), _registered(false)$/;"	f	class:xct_dependent_t
xct_dependent_t	src/sm/xct_dependent.h	/^class xct_dependent_t {$/;"	c
xct_end_abort	src/sm/xct.h	/^    enum xct_end_type { xct_end_nolog, xct_end_commit, xct_end_abort };$/;"	e	enum:xct_t::xct_end_type
xct_end_commit	src/sm/xct.h	/^    enum xct_end_type { xct_end_nolog, xct_end_commit, xct_end_abort };$/;"	e	enum:xct_t::xct_end_type
xct_end_log	src/sm/logdef_gen.cpp	/^	xct_end_log (logrec_t*)   {};$/;"	f	class:xct_end_log
xct_end_log	src/sm/logdef_gen.cpp	/^    class xct_end_log : public logrec_t {$/;"	c	file:
xct_end_log	src/sm/logrec.cpp	/^xct_end_log::xct_end_log()$/;"	f	class:xct_end_log
xct_end_nolog	src/sm/xct.h	/^    enum xct_end_type { xct_end_nolog, xct_end_commit, xct_end_abort };$/;"	e	enum:xct_t::xct_end_type
xct_end_type	src/sm/xct.h	/^    enum xct_end_type { xct_end_nolog, xct_end_commit, xct_end_abort };$/;"	g	class:xct_t
xct_ended	src/sm/sm_int_1.h	/^                        xct_ended = 0x7$/;"	e	enum:smlevel_1::xct_state_t
xct_forced_readonly_attr	src/sm/sm_vtable_enum.h	/^    xct_forced_readonly_attr,$/;"	e	enum:__anon12
xct_freeing_space	src/sm/sm_int_1.h	/^                        xct_freeing_space = 0x6, $/;"	e	enum:smlevel_1::xct_state_t
xct_freeing_space_log	src/sm/logdef_gen.cpp	/^	xct_freeing_space_log (logrec_t*)   {};$/;"	f	class:xct_freeing_space_log
xct_freeing_space_log	src/sm/logdef_gen.cpp	/^    class xct_freeing_space_log : public logrec_t {$/;"	c	file:
xct_freeing_space_log	src/sm/logrec.cpp	/^xct_freeing_space_log::xct_freeing_space_log()$/;"	f	class:xct_freeing_space_log
xct_gtid_attr	src/sm/sm_vtable_enum.h	/^    xct_gtid_attr,$/;"	e	enum:__anon12
xct_i	src/sm/xct.cpp	/^xct_i::xct_i(bool already_locked)$/;"	f	class:xct_i
xct_i	src/sm/xct.h	/^struct xct_i {$/;"	s
xct_last	src/sm/sm_vtable_enum.h	/^    xct_last$/;"	e	enum:__anon12
xct_link	src/sm/xct.cpp	/^    xct_link(xct_t* owner, bool fake=false)$/;"	f	struct:xct_link
xct_link	src/sm/xct.cpp	/^struct xct_link {$/;"	s	file:
xct_list	src/sm/xct.cpp	/^struct xct_list {$/;"	s	file:
xct_list	src/sm/xct.cpp	/^xct_list::xct_list()$/;"	f	class:xct_list
xct_lock_info_t	src/sm/lock_core.cpp	/^xct_lock_info_t::xct_lock_info_t()$/;"	f	class:xct_lock_info_t
xct_lock_info_t	src/sm/lock_x.h	/^class xct_lock_info_t : private lock_base_t {$/;"	c
xct_lock_level	src/sm/sm.cpp	/^smlevel_0::concurrency_t ss_m::xct_lock_level()$/;"	f	class:ss_m
xct_log	src/sm/smthread.h	/^    xct_log_t*       xct_log() { return tcb()._xct_log; }$/;"	f	class:smthread_t
xct_log_is_off	src/sm/xct.h	/^    bool         xct_log_is_off() { return _xct_log_off; }$/;"	f	class:xct_log_t
xct_log_space_needed	src/sm/sm.cpp	/^smlevel_0::fileoff_t ss_m::xct_log_space_needed()$/;"	f	class:ss_m
xct_log_switch_t	src/sm/xct.h	/^    NORET xct_log_switch_t(switch_t s)  : old_state(OFF)$/;"	f	class:xct_log_switch_t
xct_log_switch_t	src/sm/xct.h	/^class xct_log_switch_t : public smlevel_0 {$/;"	c
xct_log_t	src/sm/xct.h	/^    NORET        xct_log_t(): _xct_log_off(false) {};$/;"	f	class:xct_log_t
xct_log_t	src/sm/xct.h	/^class xct_log_t : public smlevel_1 {$/;"	c
xct_log_warn_check_t	src/sm/sm_int_1.h	/^class xct_log_warn_check_t : public smlevel_0 {$/;"	c
xct_nthreads_attr	src/sm/sm_vtable_enum.h	/^    xct_nthreads_attr,$/;"	e	enum:__anon12
xct_pool	src/sm/xct.cpp	/^DECLARE_TLS(PROTECT(object_cache<xct_t, PROTECT(object_cache_initializing_factory<xct_t>)>), xct_pool);$/;"	v
xct_prepare_alk_log	src/sm/logdef_gen.cpp	/^	xct_prepare_alk_log (logrec_t*)   {};$/;"	f	class:xct_prepare_alk_log
xct_prepare_alk_log	src/sm/logdef_gen.cpp	/^    class xct_prepare_alk_log : public logrec_t {$/;"	c	file:
xct_prepare_alk_log	src/sm/logrec.cpp	/^xct_prepare_alk_log::xct_prepare_alk_log(int num, $/;"	f	class:xct_prepare_alk_log
xct_prepare_fi_log	src/sm/logdef_gen.cpp	/^	xct_prepare_fi_log (logrec_t*)   {};$/;"	f	class:xct_prepare_fi_log
xct_prepare_fi_log	src/sm/logdef_gen.cpp	/^    class xct_prepare_fi_log : public logrec_t {$/;"	c	file:
xct_prepare_fi_log	src/sm/logrec.cpp	/^xct_prepare_fi_log::xct_prepare_fi_log(int num_ex, int num_ix, int num_six, int numextent, $/;"	f	class:xct_prepare_fi_log
xct_prepare_lk_log	src/sm/logdef_gen.cpp	/^	xct_prepare_lk_log (logrec_t*)   {};$/;"	f	class:xct_prepare_lk_log
xct_prepare_lk_log	src/sm/logdef_gen.cpp	/^    class xct_prepare_lk_log : public logrec_t {$/;"	c	file:
xct_prepare_lk_log	src/sm/logrec.cpp	/^xct_prepare_lk_log::xct_prepare_lk_log(int num, $/;"	f	class:xct_prepare_lk_log
xct_prepare_st_log	src/sm/logdef_gen.cpp	/^	xct_prepare_st_log (logrec_t*)   {};$/;"	f	class:xct_prepare_st_log
xct_prepare_st_log	src/sm/logdef_gen.cpp	/^    class xct_prepare_st_log : public logrec_t {$/;"	c	file:
xct_prepare_st_log	src/sm/logrec.cpp	/^xct_prepare_st_log::xct_prepare_st_log(const gtid_t *g, $/;"	f	class:xct_prepare_st_log
xct_prepare_stores_log	src/sm/logdef_gen.cpp	/^	xct_prepare_stores_log (logrec_t*)   {};$/;"	f	class:xct_prepare_stores_log
xct_prepare_stores_log	src/sm/logdef_gen.cpp	/^    class xct_prepare_stores_log : public logrec_t {$/;"	c	file:
xct_prepare_stores_log	src/sm/logrec.cpp	/^xct_prepare_stores_log::xct_prepare_stores_log(int num, const stid_t* stids)$/;"	f	class:xct_prepare_stores_log
xct_prepared	src/sm/sm_int_1.h	/^                        xct_prepared = 0x2, $/;"	e	enum:smlevel_1::xct_state_t
xct_reserve_log_space	src/sm/sm.cpp	/^rc_t ss_m::xct_reserve_log_space(fileoff_t amt) {$/;"	f	class:ss_m
xct_rsvd	src/sm/page.h	/^page_p::xct_rsvd() const$/;"	f	class:page_p
xct_rsvd	src/sm/page_s.h	/^        page_bytes_t    xct_rsvd() const { return _xct_rsvd; }$/;"	f	class:page_s::space_t
xct_stale	src/sm/sm_int_1.h	/^    enum xct_state_t {  xct_stale = 0x0,  $/;"	e	enum:smlevel_1::xct_state_t
xct_state_attr	src/sm/sm_vtable_enum.h	/^    xct_state_attr,$/;"	e	enum:__anon12
xct_state_changed	src/sm/chkpt.cpp	/^        virtual void xct_state_changed(smlevel_1::xct_state_t,$/;"	f	struct:old_xct_tracker::dependent
xct_state_changed	src/sm/newsort.cpp	/^run_mgr::xct_state_changed(xct_state_t , xct_state_t new_state)$/;"	f	class:run_mgr
xct_state_changed	src/sm/scan.cpp	/^scan_file_i::xct_state_changed($/;"	f	class:scan_file_i
xct_state_changed	src/sm/scan.cpp	/^scan_index_i::xct_state_changed($/;"	f	class:scan_index_i
xct_state_changed	src/sm/scan.cpp	/^scan_rt_i::xct_state_changed($/;"	f	class:scan_rt_i
xct_state_changed	src/sm/sort.cpp	/^sort_stream_i::xct_state_changed($/;"	f	class:sort_stream_i
xct_state_t	src/sm/prologue.h	/^    enum xct_state_t {$/;"	g	class:prologue_rc_t
xct_state_t	src/sm/sm.h	/^    typedef smlevel_1::xct_state_t xct_state_t;$/;"	t	class:ss_m
xct_state_t	src/sm/sm_int_1.h	/^    enum xct_state_t {  xct_stale = 0x0,  $/;"	g	class:smlevel_1
xct_t	src/sm/xct.cpp	/^xct_t::xct_t()$/;"	f	class:xct_t
xct_t	src/sm/xct.h	/^class xct_t : public smlevel_1 {$/;"	c
xct_tid_attr	src/sm/sm_vtable_enum.h	/^    xct_tid_attr,$/;"	e	enum:__anon12
xct_to_tid	src/sm/sm.cpp	/^tid_t ss_m::xct_to_tid(const xct_t* x)$/;"	f	class:ss_m
xct_vtable_attr_names	src/sm/vtable_xct.cpp	/^const char *xct_vtable_attr_names[] = {$/;"	v
xctstophere	src/sm/xct.cpp	/^void xctstophere(int ) {$/;"	f
xd	src/sm/xct_dependent.h	/^    xct_t*                xd() const { return _xd; }$/;"	f	class:xct_dependent_t
xid	src/sm/scan.h	/^    tid_t            xid() const { return tid; }$/;"	f	class:scan_index_i
xid	src/sm/scan.h	/^    tid_t           xid() const { return tid; }$/;"	f	class:scan_file_i
xlink	src/sm/lock_x.h	/^    w_link_t          xlink;        \/\/ link for xd->_lock.list $/;"	m	class:lock_request_t
xrec	src/sm/logrec.h	/^    xrec_t             xrec[max];$/;"	m	struct:chkpt_xct_tab_t
xrec_t	src/sm/logrec.h	/^    struct xrec_t {$/;"	s	struct:chkpt_xct_tab_t
yield	src/sthread/sthread.cpp	/^void sthread_t::yield()$/;"	f	class:sthread_t
yieldtest	src/sm/crash.cpp	/^yieldtest() $/;"	f	file:
youngest	src/sm/logrec.h	/^    tid_t            youngest;    \/\/ maximum tid in session$/;"	m	struct:chkpt_xct_tab_t
youngest_tid	src/sm/xct.cpp	/^xct_t::youngest_tid()$/;"	f	class:xct_t
zero	src/common/w_opaque.h	/^    zero()$/;"	f	class:opaque_quantity
zero	src/fc/w_bitmap.cpp	/^w_bitmap_t::zero()$/;"	f	class:w_bitmap_t
zero	src/fc/w_input.cpp	/^enum charclass { zero=0, one=1, two=2, three=3, four=4, $/;"	e	enum:charclass	file:
zero	src/sm/lock_s_inline.h	/^lockid_t::zero()$/;"	f	class:lockid_t
zero_location	src/common/vec_t.cpp	/^CADDR_T               cvec_t::zero_location=(CADDR_T)&(cvec_t::neg_inf);$/;"	m	class:cvec_t	file:
zero_location	src/common/vec_t.h	/^    static        CADDR_T  zero_location; \/\/ see zvec_t, which is supposed$/;"	m	class:cvec_t
zero_page	src/sm/sm.cpp	/^char smlevel_0::zero_page[page_sz];$/;"	m	class:smlevel_0	file:
zero_page	src/sm/sm_base.h	/^    static char zero_page[page_sz];$/;"	m	class:smlevel_0
zero_pin_cnt	src/sm/bf_s.h	/^    void                zero_pin_cnt() { _pin_cnt=0; }$/;"	f	class:bfcb_t
zkeyed_p	src/sm/zkeyed.h	/^class zkeyed_p : public page_p {$/;"	c
zombie_count	src/fc/mem_block.h	/^    size_t        zombie_count() const { return _popc(_zombie_chips); }$/;"	f	struct:memory_block::block_bits
zvec_t	src/common/vec_t.h	/^    zvec_t() : vec_t(zero_location,0)        {};$/;"	f	class:zvec_t
zvec_t	src/common/vec_t.h	/^    zvec_t(const zvec_t&) :vec_t(zero_location, 0)  {}$/;"	f	class:zvec_t
zvec_t	src/common/vec_t.h	/^    zvec_t(size_t l) : vec_t(zero_location, l)        {};$/;"	f	class:zvec_t
zvec_t	src/common/vec_t.h	/^class zvec_t : public vec_t {$/;"	c
~AutoTurnOffLogging	src/sm/restart.h	/^        ~AutoTurnOffLogging()$/;"	f	class:AutoTurnOffLogging
~BoxMinder	src/sm/smsh/shell.cpp	/^        ~BoxMinder()$/;"	f	struct:BoxMinder
~ErrLog	src/fc/errlog.cpp	/^ErrLog::~ErrLog() $/;"	f	class:ErrLog
~Heap	src/fc/w_heap.h	/^Heap<T, Cmp>::~Heap()$/;"	f	class:Heap
~LockCoreFunc	src/sm/lock_core.cpp	/^LockCoreFunc::~LockCoreFunc()$/;"	f	class:LockCoreFunc
~PrintBlockedThread	src/sm/smthread.cpp	/^                        ~PrintBlockedThread() {};$/;"	f	class:PrintBlockedThread
~SmthreadFunc	src/sm/smthread.cpp	/^SmthreadFunc::~SmthreadFunc()$/;"	f	class:SmthreadFunc
~ThreadFunc	src/sthread/sthread.h	/^    virtual NORET ~ThreadFunc() {}$/;"	f	class:ThreadFunc
~VolidCnt	src/sm/xct.cpp	/^        ~VolidCnt()$/;"	f	class:VolidCnt
~alloc_file_page_filter_t	src/sm/file.cpp	/^NORET alloc_file_page_filter_t::~alloc_file_page_filter_t() {}$/;"	f	class:alloc_file_page_filter_t
~alloc_page_filter_t	src/sm/page.h	/^    virtual  NORET ~alloc_page_filter_t() {}$/;"	f	class:alloc_page_filter_t
~alloc_page_filter_yes_t	src/sm/page.h	/^    NORET ~alloc_page_filter_yes_t() {}$/;"	f	class:alloc_page_filter_yes_t
~append_file_i	src/sm/scan.cpp	/^append_file_i::~append_file_i() $/;"	f	class:append_file_i
~atomic_container	src/fc/atomic_container.h	/^    ~atomic_container() {  \/\/ for shutdown\/restart purposes:$/;"	f	class:atomic_container
~atomic_preallocated_pool	src/fc/atomic_class_pool.h	/^    ~atomic_preallocated_pool() {$/;"	f	struct:atomic_preallocated_pool
~atomic_thread_map_t	src/sm/smthread.h	/^    ~atomic_thread_map_t () { $/;"	f	class:atomic_thread_map_t
~auto_leave_and_trx_release_t	src/sm/sm_io.cpp	/^    ~auto_leave_and_trx_release_t() {$/;"	f	class:io_m::auto_leave_and_trx_release_t
~auto_leave_t	src/sm/sm_io.h	/^        ~auto_leave_t()               { if(_x) on_leaving(); }$/;"	f	class:io_m::auto_leave_t
~auto_release_anchor_t	src/sm/xct.cpp	/^auto_release_anchor_t::~auto_release_anchor_t() $/;"	f	class:auto_release_anchor_t
~auto_release_r_t	src/sthread/auto_release.h	/^    NORET            ~auto_release_r_t() {$/;"	f	class:auto_release_r_t
~auto_release_t	src/sthread/auto_release.h	/^    NORET                       ~auto_release_t()  {$/;"	f	class:auto_release_t
~auto_release_t	src/sthread/auto_release.h	/^    NORET            ~auto_release_t() { exit(); }$/;"	f	class:auto_release_t
~auto_release_t	src/sthread/auto_release.h	/^    NORET            ~auto_release_t() {$/;"	f	class:auto_release_t
~auto_release_w_t	src/sthread/auto_release.h	/^    NORET            ~auto_release_w_t() {$/;"	f	class:auto_release_w_t
~autoerase_t	src/sm/sm_io.cpp	/^    ~autoerase_t() {$/;"	f	class:autoerase_t
~barrier_t	src/sm/smsh/tcl_thread.cpp	/^NORET barrier_t::~barrier_t() $/;"	f	class:barrier_t
~bf_cleaner_thread_t	src/sm/bf.cpp	/^bf_cleaner_thread_t::~bf_cleaner_thread_t() $/;"	f	class:bf_cleaner_thread_t
~bf_core_m	src/sm/bf_core.cpp	/^bf_core_m::~bf_core_m()$/;"	f	class:bf_core_m
~bf_filter_t	src/sm/bf.cpp	/^bf_filter_t::~bf_filter_t()$/;"	f	class:bf_filter_t
~bf_m	src/sm/bf.cpp	/^bf_m::~bf_m()$/;"	f	class:bf_m
~bf_page_writer_control_t	src/sm/bf.cpp	/^    NORET ~bf_page_writer_control_t() {$/;"	f	struct:bf_page_writer_control_t
~bf_prefetch_thread_t	src/sm/bf_prefetch.cpp	/^bf_prefetch_thread_t:: ~bf_prefetch_thread_t() $/;"	f	class:bf_prefetch_thread_t
~bfcb_t	src/sm/bf_s.h	/^    NORET       ~bfcb_t()   {};$/;"	f	class:bfcb_t
~bfcb_unused_list	src/sm/bf_core.h	/^    ~bfcb_unused_list() {}$/;"	f	class:bfcb_unused_list
~blob	src/sm/newsort.cpp	/^    ~blob() { _p1.unpin(); }$/;"	f	class:blob
~block_list	src/fc/mem_block.cpp	/^block_list::~block_list() {$/;"	f	class:memory_block::block_list
~block_pool	src/fc/mem_block.h	/^    virtual NORET    ~block_pool() { }$/;"	f	struct:memory_block::block_pool
~bt_cursor_t	src/sm/btcursor.h	/^bt_cursor_t::~bt_cursor_t()$/;"	f	class:bt_cursor_t
~btrec_t	src/sm/btree_p.h	/^    NORET            ~btrec_t()        {};$/;"	f	class:btrec_t
~btree_latch_manager	src/sm/btree_latch_manager.cpp	/^btree_latch_manager::~btree_latch_manager() $/;"	f	class:btree_latch_manager
~btree_m	src/sm/btree.h	/^    NORET                        ~btree_m()  {};$/;"	f	class:btree_m
~btsink_t	src/sm/btree_bl.cpp	/^    NORET        ~btsink_t() {};$/;"	f	class:btsink_t
~buf	src/fc/w_temp_alloc.h	/^        ~buf() { clear(); }$/;"	f	struct:w_temp_alloc::buf
~cache_pool	src/fc/block_alloc.h	/^NORET object_cache<T,TF,M>::cache_pool::~cache_pool() {$/;"	f	class:object_cache::cache_pool
~check_compensated_op_nesting	src/sm/sm_base.h	/^    ~check_compensated_op_nesting() {$/;"	f	struct:check_compensated_op_nesting
~chkpt_m	src/sm/chkpt.cpp	/^chkpt_m::~chkpt_m()$/;"	f	class:chkpt_m
~chkpt_thread_t	src/sm/chkpt.cpp	/^chkpt_thread_t::~chkpt_thread_t()$/;"	f	class:chkpt_thread_t
~chunk_mgr_t	src/sm/sort.h	/^    NORET ~chunk_mgr_t() { _free_all(); };$/;"	f	class:chunk_mgr_t
~cpp_char_factory_t	src/sm/newsort.cpp	/^   NORET  ~cpp_char_factory_t() { }$/;"	f	class:cpp_char_factory_t
~cvec_t	src/common/vec_t.cpp	/^cvec_t::~cvec_t()$/;"	f	class:cvec_t
~data_access_histogram	src/sm/data_access_histogram.cpp	/^data_access_histogram::~data_access_histogram()$/;"	f	class:data_access_histogram
~deleter	src/sm/smsh/sort_funcs3.cpp	/^deleter::~deleter() $/;"	f	class:deleter
~device_m	src/sm/device.cpp	/^device_m::~device_m()$/;"	f	class:device_m
~dir_m	src/sm/dir.h	/^dir_m::~dir_m()$/;"	f	class:dir_m
~dir_vol_m	src/sm/dir.h	/^    NORET        ~dir_vol_m()$/;"	f	class:dir_vol_m
~dirty_pages_tab_t	src/sm/restart.cpp	/^dirty_pages_tab_t::~dirty_pages_tab_t()$/;"	f	class:dirty_pages_tab_t
~dummyfile	src/fc/valgrind_help.cpp	/^    ~dummyfile() { close(_fd); _fd=0; }$/;"	f	class:dummyfile
~dynarray_pool	src/fc/w_temp_alloc.h	/^        virtual ~dynarray_pool() {$/;"	f	struct:w_temp_alloc::dynarray_pool
~dynpool	src/fc/block_alloc.cpp	/^dynpool::~dynpool() {$/;"	f	class:dynpool
~el_filler	src/common/vec_t.h	/^    virtual ~el_filler() {}$/;"	f	struct:el_filler
~errlog_dummy	src/fc/errlog.cpp	/^errlog_dummy::~errlog_dummy() {$/;"	f	class:errlog_dummy
~factory_t	src/sm/sort_s.h	/^inline NORET factory_t::~factory_t() {}$/;"	f	class:ssm_sort::factory_t
~fib_t	src/sm/newsort.cpp	/^    NORET ~fib_t() {$/;"	f	class:fib_t
~file_m	src/sm/file.cpp	/^file_m::~file_m()   $/;"	f	class:file_m
~file_sort_key_t	src/sm/sort.cpp	/^    NORET ~file_sort_key_t() {$/;"	f	struct:file_sort_key_t
~foo	src/fc/tests/darray.cpp	/^    ~foo() { std::fprintf(stdout, "~foo#%d\\n", id); }$/;"	f	struct:foo
~foo	src/sm/key_ranges_map.cpp	/^foo::~foo()$/;"	f	class:foo
~form_cleanup	src/fc/w_form.cpp	/^   ~form_cleanup() {$/;"	f	struct:form_cleanup
~frame_info	src/sm/bf_prefetch.h	/^    NORET ~frame_info() {}$/;"	f	struct:bf_prefetch_thread_t::frame_info
~ftstk_t	src/sm/rtree.cpp	/^ftstk_t::~ftstk_t() {$/;"	f	class:ftstk_t
~histo	src/sm/log_core.cpp	/^	~histo() {$/;"	f	struct:histo
~histoid_remove_t	src/sm/histo.h	/^    NORET ~histoid_remove_t() {}$/;"	f	class:histoid_remove_t
~histoid_t	src/sm/histo.cpp	/^histoid_t::~histoid_t () $/;"	f	class:histoid_t
~histoid_update_t	src/sm/histo.cpp	/^histoid_update_t::~histoid_update_t() $/;"	f	class:histoid_update_t
~holder_search	src/common/latch.cpp	/^    ~holder_search() $/;"	f	class:holder_search
~htab	src/sm/bf_htab.h	/^    NORET   ~htab()     { delete[] _table; } $/;"	f	class:bf_core_m::htab
~htab_tester	src/sm/tests/htab.cpp	/^    ~htab_tester() $/;"	f	class:htab_tester
~insert_info_array	src/sm/log_core.cpp	/^	~insert_info_array() $/;"	f	struct:log_core::insert_info_array
~io_m	src/sm/sm_io.cpp	/^io_m::~io_m()$/;"	f	class:io_m
~io_thread_t	src/sthread/tests/ioperf.cpp	/^io_thread_t::~io_thread_t()$/;"	f	class:io_thread_t
~istrstream	src/fc/w_compat_strstream.cpp	/^istrstream::~istrstream() {}$/;"	f	class:shore_compat::istrstream
~key_ranges_map	src/sm/key_ranges_map.cpp	/^key_ranges_map::~key_ranges_map()$/;"	f	class:key_ranges_map
~kvl_t	src/common/kvl_t.h	/^kvl_t::~kvl_t()$/;"	f	class:kvl_t
~latch_t	src/common/latch.cpp	/^latch_t::~latch_t()$/;"	f	class:latch_t
~latch_thread_t	src/common/tests/latch1.cpp	/^    ~latch_thread_t() {$/;"	f	class:latch_thread_t
~lid_m	src/sm/lid.h	/^    NORET            ~lid_m() {};$/;"	f	class:lid_m
~limited_space	src/sm/newsort.cpp	/^    NORET ~limited_space() {$/;"	f	class:limited_space
~lock_core_m	src/sm/lock_core.cpp	/^lock_core_m::~lock_core_m()$/;"	f	class:lock_core_m
~lock_head_t	src/sm/lock_x.h	/^    NORET            ~lock_head_t()   { chain.detach(); }$/;"	f	class:lock_head_t
~lock_info_ptr	src/sm/xct.cpp	/^    ~lock_info_ptr() { delete _ptr; }$/;"	f	struct:lock_info_ptr
~lock_m	src/sm/lock.cpp	/^lock_m::~lock_m()$/;"	f	class:lock_m
~lock_request_t	src/sm/lock_x.h	/^lock_request_t::~lock_request_t() $/;"	f	class:lock_request_t
~log_core	src/sm/log_core.cpp	/^log_core::~log_core() $/;"	f	class:log_core
~log_i	src/sm/log.h	/^log_i::~log_i()$/;"	f	class:log_i
~log_m	src/sm/log.cpp	/^NORET  log_m::~log_m() $/;"	f	class:log_m
~mark	src/fc/w_temp_alloc.cpp	/^w_temp_alloc::mark::~mark() {$/;"	f	class:w_temp_alloc::mark
~maybe_lock	src/sm/xct.cpp	/^xct_i::maybe_lock::~maybe_lock() {$/;"	f	class:xct_i::maybe_lock
~mcs_rwlock	src/sthread/srwlock.h	/^    ~mcs_rwlock() {}$/;"	f	class:mcs_rwlock
~meta_header_t	src/sm/newsort.cpp	/^    NORET ~meta_header_t() { }$/;"	f	class:meta_header_t
~nbox_t	src/fc/nbox.h	/^    virtual ~nbox_t() {}$/;"	f	class:nbox_t
~object_t	src/sm/newsort.cpp	/^NORET object_t::~object_t() $/;"	f	class:object_t
~occ_rwlock	src/sthread/sthread.cpp	/^occ_rwlock::~occ_rwlock()$/;"	f	class:occ_rwlock
~old_xct_tracker	src/sm/chkpt.cpp	/^    ~old_xct_tracker() {$/;"	f	struct:old_xct_tracker
~option_file_scan_t	src/common/option.cpp	/^option_file_scan_t::~option_file_scan_t()$/;"	f	class:option_file_scan_t
~option_group_t	src/common/option.cpp	/^option_group_t::~option_group_t()$/;"	f	class:option_group_t
~option_stream_scan_t	src/common/option.cpp	/^option_stream_scan_t::~option_stream_scan_t()$/;"	f	class:option_stream_scan_t
~option_t	src/common/option.cpp	/^option_t::~option_t()$/;"	f	class:option_t
~ostrstream	src/fc/w_compat_strstream.cpp	/^ostrstream::~ostrstream() {}$/;"	f	class:shore_compat::ostrstream
~page_bucket_info_t	src/sm/page.h	/^        NORET        ~page_bucket_info_t() { w_assert3(_checked==1); }$/;"	f	class:page_p::page_bucket_info_t
~page_p	src/sm/page.cpp	/^page_p::~page_p()$/;"	f	class:page_p
~page_s	src/sm/page_s.h	/^    ~page_s() { }$/;"	f	class:page_s
~page_write_mutex_t	src/sm/bf_core.h	/^    ~page_write_mutex_t() { DO_PTHREAD(pthread_mutex_destroy(*this)); }$/;"	f	class:page_write_mutex_t
~partition_t	src/sm/partition.h	/^                      ~partition_t(){}$/;"	f	class:partition_t
~pginfo_t	src/sm/page_h.h	/^    NORET     ~pginfo_t() { }$/;"	f	class:pginfo_t
~phase_mgr	src/sm/newsort.cpp	/^    NORET ~phase_mgr() {$/;"	f	class:phase_mgr
~pin_i	src/sm/pin.cpp	/^pin_i::~pin_i()$/;"	f	class:pin_i
~pool	src/fc/w_temp_alloc.h	/^        virtual ~pool() { }$/;"	f	struct:w_temp_alloc::pool
~pool_swap	src/fc/w_temp_alloc.cpp	/^w_temp_alloc::pool_swap::~pool_swap() {$/;"	f	class:w_temp_alloc::pool_swap
~prologue_rc_t	src/sm/prologue.h	/^prologue_rc_t::~prologue_rc_t()$/;"	f	class:prologue_rc_t
~ranges_m	src/sm/ranges_p.h	/^    NORET                        ~ranges_m()  {};$/;"	f	class:ranges_m
~restart_m	src/sm/restart.h	/^    NORET                        ~restart_m()        {};$/;"	f	class:restart_m
~rtld_cache_t	src/sm/rtree.cpp	/^    ~rtld_cache_t() { if (last_box) delete last_box; }$/;"	f	class:rtld_cache_t
~rtld_stk_t	src/sm/rtree.cpp	/^    ~rtld_stk_t() { if (layers) delete[] layers; }$/;"	f	class:rtld_stk_t
~rtree_m	src/sm/rtree.h	/^    ~rtree_m()  {};$/;"	f	class:rtree_m
~rtstk_t	src/sm/rtree_p.h	/^rtstk_t::~rtstk_t()$/;"	f	class:rtstk_t
~rtwork_p	src/sm/rtree.cpp	/^    ~rtwork_p() { if (_buf)  delete _buf;  if (mbb) delete mbb; }$/;"	f	class:rtwork_p
~run_mgr	src/sm/newsort.cpp	/^    NORET ~run_mgr() {$/;"	f	class:ssm_sort::run_mgr
~run_scan_t	src/sm/sort.cpp	/^run_scan_t::~run_scan_t()$/;"	f	class:run_scan_t
~s_chunk	src/sm/sort.h	/^    NORET ~s_chunk() { delete [] data; };$/;"	f	struct:s_chunk
~safe_queue_iterator_t	src/sm/lock_x.h	/^        NORET ~safe_queue_iterator_t() {}$/;"	f	struct:lock_head_t::safe_queue_iterator_t
~scan_file_i	src/sm/scan.cpp	/^scan_file_i::~scan_file_i()$/;"	f	class:scan_file_i
~scan_index_i	src/sm/scan.cpp	/^scan_index_i::~scan_index_i()$/;"	f	class:scan_index_i
~scan_rt_i	src/sm/scan.cpp	/^scan_rt_i::~scan_rt_i()$/;"	f	class:scan_rt_i
~sdesc_cache_t	src/sm/dir.cpp	/^sdesc_cache_t::~sdesc_cache_t()$/;"	f	class:sdesc_cache_t
~sdesc_t	src/sm/sdesc.h	/^    NORET ~sdesc_t() { invalidate(); }$/;"	f	class:sdesc_t
~sdisk_t	src/sthread/sdisk.h	/^    virtual    ~sdisk_t() { }$/;"	f	class:sdisk_t
~sdisk_unix_t	src/sthread/sdisk_unix.cpp	/^sdisk_unix_t::~sdisk_unix_t()$/;"	f	class:sdisk_unix_t
~skey_t	src/sm/sort_s.h	/^    NORET   ~skey_t() {}$/;"	f	class:ssm_sort::skey_t
~sli_lock_stats_t	src/sm/lock_core.cpp	/^    ~sli_lock_stats_t() {$/;"	f	struct:sli_lock_stats_t
~sm_escalation_t	src/sm/xct.cpp	/^sm_escalation_t::~sm_escalation_t() $/;"	f	class:sm_escalation_t
~sm_quark_t	src/sm/sm.cpp	/^sm_quark_t::~sm_quark_t()$/;"	f	class:sm_quark_t
~sm_store_info_t	src/sm/sm.h	/^    NORET ~sm_store_info_t() { if (keydescr) delete[] keydescr; }$/;"	f	class:sm_store_info_t
~sm_undo_thread_t	src/sm/restart.cpp	/^    NORET                        ~sm_undo_thread_t()   {};$/;"	f	class:sm_undo_thread_t
~smthread_creator_t	src/sm/tests/file_scan_many.cpp	/^    ~smthread_creator_t() $/;"	f	class:smthread_creator_t
~smthread_creator_t	src/sm/tests/mrbtrees_test.cpp	/^  ~smthread_creator_t() {}$/;"	f	class:smthread_creator_t
~smthread_init_t	src/sm/smthread.cpp	/^smthread_init_t::~smthread_init_t()$/;"	f	class:smthread_init_t
~smthread_main_t	src/sm/tests/file_scan_many.cpp	/^    ~smthread_main_t()  { delete[] key; }$/;"	f	class:smthread_main_t
~smthread_main_t	src/sm/tests/mrbtrees_test.cpp	/^  ~smthread_main_t()  { if(_options) delete _options; }$/;"	f	class:smthread_main_t
~smthread_scanner_t	src/sm/tests/file_scan_many.cpp	/^    ~smthread_scanner_t()  { }$/;"	f	class:smthread_scanner_t
~smthread_scanner_t	src/sm/tests/mrbtrees_test.cpp	/^  ~smthread_scanner_t()  { }$/;"	f	class:smthread_scanner_t
~smthread_t	src/sm/smthread.cpp	/^smthread_t::~smthread_t()$/;"	f	class:smthread_t
~smthread_user_t	src/sm/tests/create_rec.cpp	/^        ~smthread_user_t()  { if(_options) delete _options; }$/;"	f	class:smthread_user_t
~smthread_user_t	src/sm/tests/file_scan.cpp	/^    ~smthread_user_t()  {}$/;"	f	class:smthread_user_t
~smthread_user_t	src/sm/tests/log_exceed.cpp	/^        ~smthread_user_t()  { if(_options) delete _options; }$/;"	f	class:smthread_user_t
~smthread_user_t	src/sm/tests/rtree_example.cpp	/^        ~smthread_user_t()  { if(_options) delete _options; }$/;"	f	class:smthread_user_t
~smthread_user_t	src/sm/tests/sort_stream.cpp	/^        ~smthread_user_t()  { if(_options) delete _options; }$/;"	f	class:smthread_user_t
~smthread_user_t	src/sm/tests/startstop.cpp	/^	~smthread_user_t()  {}$/;"	f	class:smthread_user_t
~smthread_user_t	src/sm/tests/vtable_example.cpp	/^        ~smthread_user_t()  { if(_options) delete _options; }$/;"	f	class:smthread_user_t
~sort_desc_t	src/sm/sort.cpp	/^sort_desc_t::~sort_desc_t() $/;"	f	class:sort_desc_t
~sort_key_t	src/sm/sort.cpp	/^    NORET ~sort_key_t() {$/;"	f	struct:sort_key_t
~sort_keys_t	src/sm/sort_s.h	/^    NORET ~sort_keys_t() {$/;"	f	class:ssm_sort::sort_keys_t
~sort_stream_i	src/sm/sort.cpp	/^sort_stream_i::~sort_stream_i()$/;"	f	class:sort_stream_i
~sortorder	src/sm/lexify.cpp	/^sortorder::~sortorder()$/;"	f	class:sortorder
~space_t	src/sm/page_s.h	/^        ~space_t()    {};$/;"	f	class:page_s::space_t
~ss_m	src/sm/sm.cpp	/^ss_m::~ss_m()$/;"	f	class:ss_m
~sthread_init_t	src/sthread/sthread.cpp	/^sthread_init_t::~sthread_init_t()$/;"	f	class:sthread_init_t
~sthread_name_t	src/sthread/sthread.cpp	/^sthread_name_t::~sthread_name_t()$/;"	f	class:sthread_name_t
~sthread_named_base_t	src/sthread/sthread.cpp	/^sthread_named_base_t::~sthread_named_base_t()$/;"	f	class:sthread_named_base_t
~sthread_priority_list_t	src/sthread/sthread.h	/^    NORET            ~sthread_priority_list_t()   {};$/;"	f	class:sthread_priority_list_t
~sthread_stats	src/sthread/sthread_stats.h	/^    ~sthread_stats(){ }$/;"	f	class:sthread_stats
~sthread_t	src/sthread/sthread.cpp	/^sthread_t::~sthread_t()$/;"	f	class:sthread_t
~stid_list_elem_t	src/sm/xct.h	/^    ~stid_list_elem_t()$/;"	f	class:stid_list_elem_t
~store_latch_manager	src/common/store_latch_manager.cpp	/^store_latch_manager::~store_latch_manager() $/;"	f	class:store_latch_manager
~strstreambuf	src/fc/w_compat_strstream.cpp	/^strstreambuf::~strstreambuf()$/;"	f	class:shore_compat::strstreambuf
~tape_t	src/sm/newsort.cpp	/^    NORET ~tape_t () {$/;"	f	class:tape_t
~tcb_t	src/sm/smthread.h	/^        ~tcb_t() { destroy_TL_stats(); }$/;"	f	struct:smthread_t::tcb_t
~tcl_thread_t	src/sm/smsh/tcl_thread.cpp	/^tcl_thread_t::~tcl_thread_t()$/;"	f	class:tcl_thread_t
~tls_manager_schwarz	src/fc/tls.h	/^    ~tls_manager_schwarz() { tls_manager::global_fini(); }$/;"	f	struct:tls_tricks::tls_manager_schwarz
~transit_bucket_t	src/sm/bf_transit_bucket.h	/^    NORET ~transit_bucket_t() $/;"	f	class:transit_bucket_t
~tree_latch	src/sm/btree_impl.cpp	/^tree_latch::~tree_latch()$/;"	f	class:tree_latch
~uhash	src/fc/w_hashing.h	/^    ~uhash() { }$/;"	f	class:w_hashing::uhash
~unsafe_queue_iterator_t	src/sm/lock_x.h	/^        NORET ~unsafe_queue_iterator_t() {}$/;"	f	struct:lock_head_t::unsafe_queue_iterator_t
~vol_t	src/sm/vol.h	/^inline vol_t::~vol_t() { $/;"	f	class:vol_t
~vtable_func	src/fc/vtable.h	/^    NORET ~vtable_func() { }$/;"	f	class:vtable_func
~vtable_row_t	src/fc/vtable.h	/^    NORET ~vtable_row_t() { }$/;"	f	class:vtable_row_t
~vtable_t	src/fc/vtable.h	/^    NORET ~vtable_t() {$/;"	f	class:vtable_t
~w_ascend_list_t	src/fc/w_list.h	/^    NORET            ~w_ascend_list_t()    {};$/;"	f	class:w_ascend_list_t
~w_auto_delete_array_t	src/fc/w_autodel.h	/^    NORET            ~w_auto_delete_array_t()  {$/;"	f	class:w_auto_delete_array_t
~w_auto_delete_t	src/fc/w_autodel.h	/^    NORET            ~w_auto_delete_t()  {$/;"	f	class:w_auto_delete_t
~w_bitmap_t	src/fc/w_bitmap.h	/^w_bitmap_t::~w_bitmap_t()$/;"	f	class:w_bitmap_t
~w_debug	src/fc/w_debug.cpp	/^w_debug::~w_debug()$/;"	f	class:w_debug
~w_descend_list_t	src/fc/w_list.h	/^    NORET            ~w_descend_list_t()    {};$/;"	f	class:w_descend_list_t
~w_error_t	src/fc/w_error.h	/^w_error_t::~w_error_t()$/;"	f	class:w_error_t
~w_hash_i	src/fc/w_hash.h	/^    NORET           ~w_hash_i()        {};$/;"	f	class:w_hash_i
~w_hash_t	src/fc/w_hash.h	/^w_hash_t<T,LOCK, K>::~w_hash_t()$/;"	f	class:w_hash_t
~w_keyed_list_t	src/fc/w_list.h	/^    NORET            ~w_keyed_list_t()    {};$/;"	f	class:w_keyed_list_t
~w_link_t	src/fc/w_list.h	/^w_link_t::~w_link_t()$/;"	f	class:w_link_t
~w_list_base_t	src/fc/w_list.h	/^w_list_base_t::~w_list_base_t()$/;"	f	class:w_list_base_t
~w_list_const_i	src/fc/w_list.h	/^    NORET            ~w_list_const_i() {};$/;"	f	class:w_list_const_i
~w_list_i	src/fc/w_list.h	/^    NORET            ~w_list_i()    {};$/;"	f	class:w_list_i
~w_list_t	src/fc/w_list.h	/^    NORET            ~w_list_t() {}$/;"	f	class:w_list_t
~w_ostrstream	src/fc/w_strstream.h	/^    ~w_ostrstream()$/;"	f	class:w_ostrstream
~w_ostrstream_buf	src/fc/w_strstream.h	/^    ~w_ostrstream_buf()$/;"	f	class:w_ostrstream_buf
~w_pthread_lock_t	src/sthread/sthread.h	/^    ~w_pthread_lock_t() { w_assert1(!_holder); pthread_mutex_destroy(&_mutex);}$/;"	f	struct:w_pthread_lock_t
~w_rc_t	src/fc/w_rc.h	/^w_rc_t::~w_rc_t()$/;"	f	class:w_rc_t
~w_vbase_t	src/fc/w_base.h	/^    virtual NORET        ~w_vbase_t()    {};$/;"	f	class:w_vbase_t
~xct_auto_abort_t	src/sm/xct.h	/^    ~xct_auto_abort_t() {$/;"	f	class:xct_auto_abort_t
~xct_core	src/sm/xct.cpp	/^xct_t::xct_core::~xct_core()$/;"	f	class:xct_t::xct_core
~xct_dependent_t	src/sm/xct.cpp	/^xct_dependent_t::~xct_dependent_t()$/;"	f	class:xct_dependent_t
~xct_i	src/sm/xct.cpp	/^xct_i::~xct_i() {$/;"	f	class:xct_i
~xct_list	src/sm/xct.cpp	/^xct_list::~xct_list() {$/;"	f	class:xct_list
~xct_lock_info_t	src/sm/lock_core.cpp	/^xct_lock_info_t::~xct_lock_info_t()$/;"	f	class:xct_lock_info_t
~xct_log_switch_t	src/sm/xct.h	/^    ~xct_log_switch_t()  {$/;"	f	class:xct_log_switch_t
~xct_t	src/sm/xct.cpp	/^xct_t::~xct_t()$/;"	f	class:xct_t
